{{fbdoc item="title" value="XOR"}}----
Parameter to the ##[[KeyPgPutgraphics|Put]]## graphics statement which uses a bit-wise ##[[KeyPgOpXor|Xor]]## as the blitting method

{{fbdoc item="syntax"}}##
	**Put** [ //target//, ] [ STEP ] ( //x//,//y// ), //source// [ ,( //x1//,//y1// )-( //x2//,//y2// ) ], **Xor**
##
{{fbdoc item="param"}}
	##**Xor**##
		Required.

{{fbdoc item="desc"}}
	The ##**Xor**## method combines each source pixel with the corresponding destination pixel, using the bit-wise ##[[KeyPgOpXor|Xor]]## function.  The result of this is output as the destination pixel.
	This method works in all graphics modes.  There is no mask color, although color values of ##0## (##[[KeyPgRgba|RGBA]](0, 0, 0, 0)## in full-color modes) will have no effect, because of the behavior of ##[[KeyPgOpXor|Xor]]##.
	
	In full-color modes, each component (red, green, blue and alpha) is kept in a discrete set of bits, so the operation can be made to only affect some of the channels, by making sure the all the values of the other channels are set to ##0##.

{{fbdoc item="ex"}}
{{fbdoc item="filename" value="examples/manual/gfx/put-xor.bas"}}%%(freebasic)
''open a graphics window
ScreenRes 320, 200, 16

''create a sprite containing a circle
Const As Integer r = 32
Dim c As Any Ptr = ImageCreate(r * 2 + 1, r * 2 + 1, 0)
Circle c, (r, r), r, RGBA(255, 255, 255, 0), , , 1, f

''put the three sprites, overlapping each other in the middle
Put (146 - r, 108 - r), c, xor
Put (174 - r, 108 - r), c, xor
Put (160 - r,  84 - r), c, xor

''free the memory used by the sprite
ImageDestroy c

''pause the program before closing
Sleep
%%
{{image class="center" title="Put Xor example output" url="/images/put-xor.png"}}
{{fbdoc item="diff"}}
	- None

{{fbdoc item="see"}}
	- ##[[KeyPgOpXor|Xor]]##
	- ##[[KeyPgPutgraphics|Put (Graphics)]]##

{{fbdoc item="back" value="CatPgGfx2D|2D Drawing Functions"}}