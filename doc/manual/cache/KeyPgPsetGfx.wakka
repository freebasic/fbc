{{fbdoc item="title" value="PSET"}}----
Parameter to the ##[[KeyPgPutgraphics|Put]]## graphics statement which selects ##[[KeyPgPset|PSet]]## as the blitting method

{{fbdoc item="syntax"}}##
	**Put** [ //target//, ] [ STEP ] ( //x//,//y// ), //source// [ ,( //x1//,//y1// )-( //x2//,//y2// ) ], **Pset**
##
{{fbdoc item="param"}}
	##**PSet**##
		Required.

{{fbdoc item="desc"}}
	The ##**PSet**## method copies the source pixel values onto the destination pixels.
	
	This is the simplest ##[[KeyPgPutgraphics|Put]]## method. The pixels in the destination buffer are directly overwritten with the pixels in the source buffer.  No additional operations are done, and there are no color values that are treated as transparent.  It has the same effect as ##[[KeyPgPset|PSet]]ting## each pixel individually.

{{fbdoc item="ex"}}
	{{fbdoc item="filename" value="examples/manual/gfx/put-pset.bas"}}%%(freebasic)
'' set up a screen: 320 * 200, 16 bits per pixel
screenres 320, 200, 16
line (0, 0)-(319, 199), rgb(0, 128, 255), bf

'' set up an image with the mask color as the background.
dim img as any ptr = imagecreate( 33, 33, rgb(255, 0, 255) )
circle img, (16, 16), 15, rgb(255, 255, 0),     ,     , 1, f
circle img, (10, 10), 3,  rgb(  0,   0, 0),     ,     , 2, f
circle img, (23, 10), 3,  rgb(  0,   0, 0),     ,     , 2, f
circle img, (16, 18), 10, rgb(  0,   0, 0), 3.14, 6.28

dim as integer x = 160 - 16, y = 100 - 16

'' Put the image with PSET
put (x, y), img, pset

'' free the image memory
imagedestroy img

'' wait for a keypress
sleep
%%
{{image class="center" title="Put PSet example output" url="/images/putpset.png"}}
{{fbdoc item="diff"}}
	- None

{{fbdoc item="see"}}
	- ##[[KeyPgPset|PSet]]##
	- ##[[KeyPgPutgraphics|Put (Graphics)]]##

{{fbdoc item="back" value="CatPgGfx2D|2D Drawing Functions"}}