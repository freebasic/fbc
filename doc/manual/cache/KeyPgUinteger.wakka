{{fbdoc item="title" value="UINTEGER"}}----
Standard data type: 32-bit or 64-bit unsigned, same size as ##[[KeyPgSizeof|SizeOf]]([[KeyPgAny|Any]] [[KeyPgPtr|Ptr]])##.
Equivalent to ##[[KeyPgUnsigned|Unsigned]] [[KeyPgInteger|Integer]]##.

{{fbdoc item="syntax"}}##
	[[KeyPgDim|dim]] //variable// [[KeyPgAs|as]] **Uinteger**
	[[KeyPgDim|dim]] //variable// [[KeyPgAs|as]] **Uinteger**<//bits//>
##
{{fbdoc item="param"}}
	##//bits//##
		A numeric constant expression indicating the size in bits of unsigned integer desired.  The values allowed are ##8##, ##16##, ##32## or ##64##.

{{fbdoc item="desc"}}
	32-bit or 64-bit unsigned whole-number data type, depending on the platform.
	
	If an explicit bit size is given, a data type is provided that can hold values from ##0## up to ##(1ULL [[KeyPgOpShiftLeft|Shl]] (//bits//)) - 1##. The selected data type is ##[[KeyPgUbyte|UByte]]## for **UInteger<8>**, ##[[KeyPgUshort|UShort]]## for **UInteger<16>**, ##[[KeyPgUlong|ULong]]## for **UInteger<32>** and ##[[KeyPgUlongint|ULongInt]]## for **UInteger<64>**.

{{fbdoc item="ex"}}
{{fbdoc item="filename" value="examples/manual/datatype/uinteger.bas"}}%%(freebasic)
#ifdef __FB_64BIT__
	Dim x As UInteger = 0
	Dim y As UInteger = &HFFFFFFFFFFFFFFFF
	Print "UInteger Range = "; x; " to "; y
#else
	Dim x As UInteger = 0
	Dim y As UInteger = &HFFFFFFFF
	Print "UInteger Range = "; x; " to "; y
#endif%%

{{fbdoc item="lang"}}
	- Not available in the //[[CompilerOptlang|-lang qb]]// dialect unless referenced with the alias ##**""__Uinteger""**##.

{{fbdoc item="diff"}}
	- New to ""FreeBASIC""

{{fbdoc item="see"}}
	- ##[[KeyPgInteger|Integer]]##
	- ##[[KeyPgUnsigned|Unsigned]]##
	- ##[[KeyPgCuint|Cuint]]##
	- ##[[TblVarTypes|Table with variable types overview, limits and suffixes]]##

{{fbdoc item="back" value="CatPgStdDataTypes|Standard Data Types"}}