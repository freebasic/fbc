{{fbdoc item="title" value="MKL"}}----
Does a binary copy from a ##[[KeyPgLong|long]]## variable to a ##[[KeyPgString|string]]##, setting its length to 4 bytes

{{fbdoc item="syntax"}}##
	[[KeyPgDeclare|declare]] [[KeyPgFunction|function]] **Mkl** ( [[KeyPgByval|byval]] //number// [[KeyPgAs|as]] [[KeyPgLong|long]] ) [[KeyPgAs|as]] [[KeyPgString|string]]
##
{{fbdoc item="usage"}}##
	//result// = **Mkl**( //number// )
##
{{fbdoc item="param"}}
	##//number//##
		A ##[[KeyPgLong|long]]## variable to binary copy to a ##[[KeyPgString|string]]##.

{{fbdoc item="ret"}}
	Returns a ##[[KeyPgString|string]]## with a binary copy of the ##[[KeyPgLong|long]]##.

{{fbdoc item="desc"}}
	Does a binary copy from a ##[[KeyPgLong|Long]]## variable to a ##[[KeyPgString|string]]##, setting its length to 4 bytes. The resulting string can be read back to a ##[[KeyPgLong|Long]]## by ##[[KeyPgCvl|Cvl]]##.
	
	This function is useful to write numeric values to buffers without using a ##[[KeyPgType|Type]]## definition.

{{fbdoc item="ex"}}
{{fbdoc item="filename" value="examples/manual/strings/mkl.bas"}}%%(freebasic)
dim a as long, b as string
a = 4534
b = mkl(a)
print a, cvl(b)
sleep
%%

{{fbdoc item="lang"}}
	- The string type suffix "$" is obligatory in the //[[CompilerOptlang|-lang qb]]// dialect.
	- The string type suffix "$" is optional in the //[[CompilerOptlang|-lang fblite]]// dialect.
	- The string type suffix "$" is forbidden in the //[[CompilerOptlang|-lang fb]]// dialect.

{{fbdoc item="diff"}}
	- None

{{fbdoc item="see"}}
	- ##[[KeyPgMkd|Mkd]]##
	- ##[[KeyPgMki|Mki]]##
	- ##[[KeyPgMks|Mks]]##
	- ##[[KeyPgCvd|Cvd]]##
	- ##[[KeyPgCvi|Cvi]]##
	- ##[[KeyPgCvl|Cvl]]##
	- ##[[KeyPgCvs|Cvs]]##

{{fbdoc item="back" value="CatPgString|String Functions"}}