{{fbdoc item="title" value="Operator EQV (Equivalence)"}}----
Returns the bitwise-and (equivalence) of two numeric values

{{fbdoc item="syntax"}}##
	[[KeyPgDeclare|declare]] [[KeyPgOperator|operator]] **Eqv** ( [[KeyPgByref|byref]] //lhs// [[KeyPgAs|as]] //T1//, [[KeyPgByref|byref]] //rhs// [[KeyPgAs|as]] //T2// ) [[KeyPgAs|as]] //Ret//
##
{{fbdoc item="usage"}}##
	//result// = //lhs// **Eqv** //rhs//
##
{{fbdoc item="param"}}
	##//lhs//##
		The left-hand side expression.
	##//T1//##
		Any numeric or boolean type.
	##//rhs//##
		The right-hand side expression.
	##//T2//##
		Any numeric or boolean type.
	##//Ret//##
		A numeric or boolean type (varies with ##//T1//## and ##//T2//##).

{{fbdoc item="ret"}}
	Returns the bitwise-equivalence of the two operands.

{{fbdoc item="desc"}}
	This operator returns the bitwise-equivalence of its operands, a logical operation that results in a value with bits set depending on the bits of the operands (for conversion of a boolean to an integer, false or true boolean value becomes 0 or -1 integer value).
	
	The truth table below demonstrates all combinations of a boolean-equivalence operation:
	
	{{table columns="3" cellpadding="2" cells="Lhs Bit;Rhs Bit;Result;0;0;1;1;0;0;0;1;0;1;1;1"}}
	
	No short-circuiting is performed - both expressions are always evaluated.
	
	The return type depends on the types of values passed. ##[[KeyPgByte|Byte]]##, ##[[KeyPgUbyte|Ubyte]]## and floating-point type values are first converted to ##[[KeyPgInteger|Integer]]##. If the left and right-hand side types differ only in signedness, then the return type is the same as the left-hand side type (##//T1//##), otherwise, the larger of the two types is returned. Only if the left and right-hand side types are both ##[[KeyPgBoolean|Boolean]]##, the return type is also ##[[KeyPgBoolean|Boolean]]##.
	
	This operator can be overloaded for user-defined types.

{{fbdoc item="ex"}}
{{fbdoc item="filename" value="examples/manual/operator/eqv-bitwise.bas"}}%%(freebasic)
dim as ubyte a = &b00110011
dim as ubyte b = &b01010101, c
c = a eqv b '' c = &b10011001
%%

{{fbdoc item="lang"}}
	- In the //[[CompilerOptlang|-lang qb]]// dialect, this operator cannot be overloaded.

{{fbdoc item="diff"}}
	- None

{{fbdoc item="see"}}
	- [[TblTruth|Operator Truth Tables]]

{{fbdoc item="back" value="CatPgOpLogical|Logical Operators"}}{{fbdoc item="back" value="CatPgOperators|Operators"}}