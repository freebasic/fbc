'' FreeBASIC binding for mingw-w64-v4.0.4
''
'' based on the C header files:
''   DISCLAIMER
''   This file has no copyright assigned and is placed in the Public Domain.
''   This file is part of the mingw-w64 runtime package.
''
''   The mingw-w64 runtime package and its code is distributed in the hope that it 
''   will be useful but WITHOUT ANY WARRANTY.  ALL WARRANTIES, EXPRESSED OR 
''   IMPLIED ARE HEREBY DISCLAIMED.  This includes but is not limited to 
''   warranties of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
''
'' translated to FreeBASIC by:
''   FreeBASIC development team

#pragma once

#include once "rpc.bi"
#include once "rpcndr.bi"
#include once "windows.bi"
#include once "ole2.bi"
#include once "ocidl.bi"
#include once "dimm.bi"
#include once "olectl.bi"
#include once "mshtmhst.bi"

extern "Windows"

#define __mshtml_h__
#define __IHTMLFiltersCollection_FWD_DEFINED__
#define __IHTMLEventObj_FWD_DEFINED__
#define __IElementBehaviorSite_FWD_DEFINED__
#define __IElementBehavior_FWD_DEFINED__
#define __IElementBehaviorFactory_FWD_DEFINED__
#define __IElementBehaviorSiteOM_FWD_DEFINED__
#define __IElementBehaviorRender_FWD_DEFINED__
#define __IElementBehaviorSiteRender_FWD_DEFINED__
#define __IHTMLStyle_FWD_DEFINED__
#define __IHTMLStyle2_FWD_DEFINED__
#define __IHTMLStyle3_FWD_DEFINED__
#define __IHTMLStyle4_FWD_DEFINED__
#define __IHTMLRuleStyle_FWD_DEFINED__
#define __IHTMLRuleStyle2_FWD_DEFINED__
#define __IHTMLRuleStyle3_FWD_DEFINED__
#define __IHTMLRuleStyle4_FWD_DEFINED__
#define __DispHTMLStyle_FWD_DEFINED__
#define __HTMLStyle_FWD_DEFINED__
#define __DispHTMLRuleStyle_FWD_DEFINED__
#define __HTMLRuleStyle_FWD_DEFINED__
#define __IHTMLRenderStyle_FWD_DEFINED__
#define __DispHTMLRenderStyle_FWD_DEFINED__
#define __HTMLRenderStyle_FWD_DEFINED__
#define __IHTMLCurrentStyle_FWD_DEFINED__
#define __IHTMLCurrentStyle2_FWD_DEFINED__
#define __IHTMLCurrentStyle3_FWD_DEFINED__
#define __DispHTMLCurrentStyle_FWD_DEFINED__
#define __HTMLCurrentStyle_FWD_DEFINED__
#define __IHTMLElement_FWD_DEFINED__
#define __IHTMLRect_FWD_DEFINED__
#define __IHTMLRectCollection_FWD_DEFINED__
#define __IHTMLDOMNode_FWD_DEFINED__
#define __IHTMLDOMNode2_FWD_DEFINED__
#define __IHTMLDOMAttribute_FWD_DEFINED__
#define __IHTMLDOMAttribute2_FWD_DEFINED__
#define __IHTMLDOMTextNode_FWD_DEFINED__
#define __IHTMLDOMTextNode2_FWD_DEFINED__
#define __IHTMLDOMImplementation_FWD_DEFINED__
#define __DispHTMLDOMAttribute_FWD_DEFINED__
#define __HTMLDOMAttribute_FWD_DEFINED__
#define __DispHTMLDOMTextNode_FWD_DEFINED__
#define __HTMLDOMTextNode_FWD_DEFINED__
#define __DispHTMLDOMImplementation_FWD_DEFINED__
#define __HTMLDOMImplementation_FWD_DEFINED__
#define __IHTMLAttributeCollection_FWD_DEFINED__
#define __IHTMLAttributeCollection2_FWD_DEFINED__
#define __IHTMLDOMChildrenCollection_FWD_DEFINED__
#define __DispHTMLAttributeCollection_FWD_DEFINED__
#define __HTMLAttributeCollection_FWD_DEFINED__
#define __DispDOMChildrenCollection_FWD_DEFINED__
#define __DOMChildrenCollection_FWD_DEFINED__
#define __HTMLElementEvents2_FWD_DEFINED__
#define __HTMLElementEvents_FWD_DEFINED__
#define __IHTMLElementCollection_FWD_DEFINED__
#define __IHTMLElement2_FWD_DEFINED__
#define __IHTMLElement3_FWD_DEFINED__
#define __IHTMLElement4_FWD_DEFINED__
#define __IHTMLElementRender_FWD_DEFINED__
#define __IHTMLUniqueName_FWD_DEFINED__
#define __IHTMLDatabinding_FWD_DEFINED__
#define __IHTMLDocument_FWD_DEFINED__
#define __IHTMLElementDefaults_FWD_DEFINED__
#define __DispHTMLDefaults_FWD_DEFINED__
#define __HTMLDefaults_FWD_DEFINED__
#define __IHTCDefaultDispatch_FWD_DEFINED__
#define __IHTCPropertyBehavior_FWD_DEFINED__
#define __IHTCMethodBehavior_FWD_DEFINED__
#define __IHTCEventBehavior_FWD_DEFINED__
#define __IHTCAttachBehavior_FWD_DEFINED__
#define __IHTCAttachBehavior2_FWD_DEFINED__
#define __IHTCDescBehavior_FWD_DEFINED__
#define __DispHTCDefaultDispatch_FWD_DEFINED__
#define __HTCDefaultDispatch_FWD_DEFINED__
#define __DispHTCPropertyBehavior_FWD_DEFINED__
#define __HTCPropertyBehavior_FWD_DEFINED__
#define __DispHTCMethodBehavior_FWD_DEFINED__
#define __HTCMethodBehavior_FWD_DEFINED__
#define __DispHTCEventBehavior_FWD_DEFINED__
#define __HTCEventBehavior_FWD_DEFINED__
#define __DispHTCAttachBehavior_FWD_DEFINED__
#define __HTCAttachBehavior_FWD_DEFINED__
#define __DispHTCDescBehavior_FWD_DEFINED__
#define __HTCDescBehavior_FWD_DEFINED__
#define __IHTMLUrnCollection_FWD_DEFINED__
#define __HTMLUrnCollection_FWD_DEFINED__
#define __IHTMLGenericElement_FWD_DEFINED__
#define __DispHTMLGenericElement_FWD_DEFINED__
#define __HTMLGenericElement_FWD_DEFINED__
#define __IHTMLStyleSheetRule_FWD_DEFINED__
#define __IHTMLStyleSheetRulesCollection_FWD_DEFINED__
#define __HTMLStyleSheetRule_FWD_DEFINED__
#define __HTMLStyleSheetRulesCollection_FWD_DEFINED__
#define __IHTMLStyleSheetPage_FWD_DEFINED__
#define __IHTMLStyleSheetPagesCollection_FWD_DEFINED__
#define __HTMLStyleSheetPage_FWD_DEFINED__
#define __HTMLStyleSheetPagesCollection_FWD_DEFINED__
#define __IHTMLStyleSheetsCollection_FWD_DEFINED__
#define __IHTMLStyleSheet_FWD_DEFINED__
#define __IHTMLStyleSheet2_FWD_DEFINED__
#define __DispHTMLStyleSheet_FWD_DEFINED__
#define __HTMLStyleSheet_FWD_DEFINED__
#define __HTMLStyleSheetsCollection_FWD_DEFINED__
#define __HTMLLinkElementEvents2_FWD_DEFINED__
#define __HTMLLinkElementEvents_FWD_DEFINED__
#define __IHTMLLinkElement_FWD_DEFINED__
#define __IHTMLLinkElement2_FWD_DEFINED__
#define __IHTMLLinkElement3_FWD_DEFINED__
#define __DispHTMLLinkElement_FWD_DEFINED__
#define __HTMLLinkElement_FWD_DEFINED__
#define __IHTMLTxtRange_FWD_DEFINED__
#define __IHTMLTextRangeMetrics_FWD_DEFINED__
#define __IHTMLTextRangeMetrics2_FWD_DEFINED__
#define __IHTMLTxtRangeCollection_FWD_DEFINED__
#define __HTMLFormElementEvents2_FWD_DEFINED__
#define __HTMLFormElementEvents_FWD_DEFINED__
#define __IHTMLFormElement_FWD_DEFINED__
#define __IHTMLFormElement2_FWD_DEFINED__
#define __IHTMLFormElement3_FWD_DEFINED__
#define __IHTMLSubmitData_FWD_DEFINED__
#define __DispHTMLFormElement_FWD_DEFINED__
#define __HTMLFormElement_FWD_DEFINED__
#define __HTMLControlElementEvents2_FWD_DEFINED__
#define __HTMLControlElementEvents_FWD_DEFINED__
#define __IHTMLControlElement_FWD_DEFINED__
#define __IHTMLTextElement_FWD_DEFINED__
#define __DispHTMLTextElement_FWD_DEFINED__
#define __HTMLTextElement_FWD_DEFINED__
#define __HTMLTextContainerEvents2_FWD_DEFINED__
#define __HTMLTextContainerEvents_FWD_DEFINED__
#define __IHTMLTextContainer_FWD_DEFINED__
#define __IHTMLControlRange_FWD_DEFINED__
#define __IHTMLControlRange2_FWD_DEFINED__
#define __HTMLImgEvents2_FWD_DEFINED__
#define __HTMLImgEvents_FWD_DEFINED__
#define __IHTMLImgElement_FWD_DEFINED__
#define __IHTMLImgElement2_FWD_DEFINED__
#define __IHTMLImageElementFactory_FWD_DEFINED__
#define __DispHTMLImg_FWD_DEFINED__
#define __HTMLImg_FWD_DEFINED__
#define __HTMLImageElementFactory_FWD_DEFINED__
#define __IHTMLBodyElement_FWD_DEFINED__
#define __IHTMLBodyElement2_FWD_DEFINED__
#define __DispHTMLBody_FWD_DEFINED__
#define __HTMLBody_FWD_DEFINED__
#define __IHTMLFontElement_FWD_DEFINED__
#define __DispHTMLFontElement_FWD_DEFINED__
#define __HTMLFontElement_FWD_DEFINED__
#define __HTMLAnchorEvents2_FWD_DEFINED__
#define __HTMLAnchorEvents_FWD_DEFINED__
#define __IHTMLAnchorElement_FWD_DEFINED__
#define __IHTMLAnchorElement2_FWD_DEFINED__
#define __DispHTMLAnchorElement_FWD_DEFINED__
#define __HTMLAnchorElement_FWD_DEFINED__
#define __HTMLLabelEvents2_FWD_DEFINED__
#define __HTMLLabelEvents_FWD_DEFINED__
#define __IHTMLLabelElement_FWD_DEFINED__
#define __IHTMLLabelElement2_FWD_DEFINED__
#define __DispHTMLLabelElement_FWD_DEFINED__
#define __HTMLLabelElement_FWD_DEFINED__
#define __IHTMLListElement_FWD_DEFINED__
#define __IHTMLListElement2_FWD_DEFINED__
#define __DispHTMLListElement_FWD_DEFINED__
#define __HTMLListElement_FWD_DEFINED__
#define __IHTMLUListElement_FWD_DEFINED__
#define __DispHTMLUListElement_FWD_DEFINED__
#define __HTMLUListElement_FWD_DEFINED__
#define __IHTMLOListElement_FWD_DEFINED__
#define __DispHTMLOListElement_FWD_DEFINED__
#define __HTMLOListElement_FWD_DEFINED__
#define __IHTMLLIElement_FWD_DEFINED__
#define __DispHTMLLIElement_FWD_DEFINED__
#define __HTMLLIElement_FWD_DEFINED__
#define __IHTMLBlockElement_FWD_DEFINED__
#define __IHTMLBlockElement2_FWD_DEFINED__
#define __DispHTMLBlockElement_FWD_DEFINED__
#define __HTMLBlockElement_FWD_DEFINED__
#define __IHTMLDivElement_FWD_DEFINED__
#define __DispHTMLDivElement_FWD_DEFINED__
#define __HTMLDivElement_FWD_DEFINED__
#define __IHTMLDDElement_FWD_DEFINED__
#define __DispHTMLDDElement_FWD_DEFINED__
#define __HTMLDDElement_FWD_DEFINED__
#define __IHTMLDTElement_FWD_DEFINED__
#define __DispHTMLDTElement_FWD_DEFINED__
#define __HTMLDTElement_FWD_DEFINED__
#define __IHTMLBRElement_FWD_DEFINED__
#define __DispHTMLBRElement_FWD_DEFINED__
#define __HTMLBRElement_FWD_DEFINED__
#define __IHTMLDListElement_FWD_DEFINED__
#define __DispHTMLDListElement_FWD_DEFINED__
#define __HTMLDListElement_FWD_DEFINED__
#define __IHTMLHRElement_FWD_DEFINED__
#define __DispHTMLHRElement_FWD_DEFINED__
#define __HTMLHRElement_FWD_DEFINED__
#define __IHTMLParaElement_FWD_DEFINED__
#define __DispHTMLParaElement_FWD_DEFINED__
#define __HTMLParaElement_FWD_DEFINED__
#define __IHTMLElementCollection2_FWD_DEFINED__
#define __IHTMLElementCollection3_FWD_DEFINED__
#define __DispHTMLElementCollection_FWD_DEFINED__
#define __HTMLElementCollection_FWD_DEFINED__
#define __IHTMLHeaderElement_FWD_DEFINED__
#define __DispHTMLHeaderElement_FWD_DEFINED__
#define __HTMLHeaderElement_FWD_DEFINED__
#define __HTMLSelectElementEvents2_FWD_DEFINED__
#define __HTMLSelectElementEvents_FWD_DEFINED__
#define __IHTMLSelectElement_FWD_DEFINED__
#define __IHTMLSelectElement2_FWD_DEFINED__
#define __IHTMLSelectElement4_FWD_DEFINED__
#define __DispHTMLSelectElement_FWD_DEFINED__
#define __HTMLSelectElement_FWD_DEFINED__
#define __IHTMLSelectionObject_FWD_DEFINED__
#define __IHTMLSelectionObject2_FWD_DEFINED__
#define __IHTMLOptionElement_FWD_DEFINED__
#define __IHTMLOptionElement3_FWD_DEFINED__
#define __IHTMLOptionElementFactory_FWD_DEFINED__
#define __DispHTMLOptionElement_FWD_DEFINED__
#define __HTMLOptionElement_FWD_DEFINED__
#define __HTMLOptionElementFactory_FWD_DEFINED__
#define __HTMLButtonElementEvents2_FWD_DEFINED__
#define __HTMLButtonElementEvents_FWD_DEFINED__
#define __HTMLInputTextElementEvents2_FWD_DEFINED__
#define __HTMLOptionButtonElementEvents2_FWD_DEFINED__
#define __HTMLInputFileElementEvents2_FWD_DEFINED__
#define __HTMLInputImageEvents2_FWD_DEFINED__
#define __HTMLInputTextElementEvents_FWD_DEFINED__
#define __HTMLOptionButtonElementEvents_FWD_DEFINED__
#define __HTMLInputFileElementEvents_FWD_DEFINED__
#define __HTMLInputImageEvents_FWD_DEFINED__
#define __IHTMLInputElement_FWD_DEFINED__
#define __IHTMLInputElement2_FWD_DEFINED__
#define __IHTMLInputButtonElement_FWD_DEFINED__
#define __IHTMLInputHiddenElement_FWD_DEFINED__
#define __IHTMLInputTextElement_FWD_DEFINED__
#define __IHTMLInputFileElement_FWD_DEFINED__
#define __IHTMLOptionButtonElement_FWD_DEFINED__
#define __IHTMLInputImage_FWD_DEFINED__
#define __DispHTMLInputElement_FWD_DEFINED__
#define __HTMLInputElement_FWD_DEFINED__
#define __IHTMLTextAreaElement_FWD_DEFINED__
#define __DispHTMLTextAreaElement_FWD_DEFINED__
#define __HTMLTextAreaElement_FWD_DEFINED__
#define __DispHTMLRichtextElement_FWD_DEFINED__
#define __HTMLRichtextElement_FWD_DEFINED__
#define __IHTMLButtonElement_FWD_DEFINED__
#define __DispHTMLButtonElement_FWD_DEFINED__
#define __HTMLButtonElement_FWD_DEFINED__
#define __HTMLMarqueeElementEvents2_FWD_DEFINED__
#define __HTMLMarqueeElementEvents_FWD_DEFINED__
#define __IHTMLMarqueeElement_FWD_DEFINED__
#define __DispHTMLMarqueeElement_FWD_DEFINED__
#define __HTMLMarqueeElement_FWD_DEFINED__
#define __IHTMLHtmlElement_FWD_DEFINED__
#define __IHTMLHeadElement_FWD_DEFINED__
#define __IHTMLTitleElement_FWD_DEFINED__
#define __IHTMLMetaElement_FWD_DEFINED__
#define __IHTMLMetaElement2_FWD_DEFINED__
#define __IHTMLBaseElement_FWD_DEFINED__
#define __IHTMLIsIndexElement_FWD_DEFINED__
#define __IHTMLIsIndexElement2_FWD_DEFINED__
#define __IHTMLNextIdElement_FWD_DEFINED__
#define __DispHTMLHtmlElement_FWD_DEFINED__
#define __HTMLHtmlElement_FWD_DEFINED__
#define __DispHTMLHeadElement_FWD_DEFINED__
#define __HTMLHeadElement_FWD_DEFINED__
#define __DispHTMLTitleElement_FWD_DEFINED__
#define __HTMLTitleElement_FWD_DEFINED__
#define __DispHTMLMetaElement_FWD_DEFINED__
#define __HTMLMetaElement_FWD_DEFINED__
#define __DispHTMLBaseElement_FWD_DEFINED__
#define __HTMLBaseElement_FWD_DEFINED__
#define __DispHTMLIsIndexElement_FWD_DEFINED__
#define __HTMLIsIndexElement_FWD_DEFINED__
#define __DispHTMLNextIdElement_FWD_DEFINED__
#define __HTMLNextIdElement_FWD_DEFINED__
#define __IHTMLBaseFontElement_FWD_DEFINED__
#define __DispHTMLBaseFontElement_FWD_DEFINED__
#define __HTMLBaseFontElement_FWD_DEFINED__
#define __IHTMLUnknownElement_FWD_DEFINED__
#define __DispHTMLUnknownElement_FWD_DEFINED__
#define __HTMLUnknownElement_FWD_DEFINED__
#define __IOmHistory_FWD_DEFINED__
#define __IHTMLMimeTypesCollection_FWD_DEFINED__
#define __IHTMLPluginsCollection_FWD_DEFINED__
#define __IHTMLOpsProfile_FWD_DEFINED__
#define __IOmNavigator_FWD_DEFINED__
#define __IHTMLLocation_FWD_DEFINED__
#define __HTMLHistory_FWD_DEFINED__
#define __CMimeTypes_FWD_DEFINED__
#define __CPlugins_FWD_DEFINED__
#define __COpsProfile_FWD_DEFINED__
#define __HTMLNavigator_FWD_DEFINED__
#define __HTMLLocation_FWD_DEFINED__
#define __IHTMLBookmarkCollection_FWD_DEFINED__
#define __IHTMLDataTransfer_FWD_DEFINED__
#define __IHTMLEventObj2_FWD_DEFINED__
#define __IHTMLEventObj3_FWD_DEFINED__
#define __IHTMLEventObj4_FWD_DEFINED__
#define __DispCEventObj_FWD_DEFINED__
#define __CEventObj_FWD_DEFINED__
#define __HTMLWindowEvents2_FWD_DEFINED__
#define __HTMLWindowEvents_FWD_DEFINED__
#define __IHTMLDocument2_FWD_DEFINED__
#define __IHTMLFramesCollection2_FWD_DEFINED__
#define __IHTMLWindow3_FWD_DEFINED__
#define __IHTMLFrameBase_FWD_DEFINED__
#define __IHTMLScreen_FWD_DEFINED__
#define __IHTMLScreen2_FWD_DEFINED__
#define __IHTMLWindow4_FWD_DEFINED__
#define __FramesCollection_FWD_DEFINED__
#define __DispHTMLScreen_FWD_DEFINED__
#define __HTMLScreen_FWD_DEFINED__
#define __DispHTMLWindow2_FWD_DEFINED__
#define __HTMLWindow2_FWD_DEFINED__
#define __DispHTMLWindowProxy_FWD_DEFINED__
#define __HTMLWindowProxy_FWD_DEFINED__
#define __HTMLDocumentEvents2_FWD_DEFINED__
#define __HTMLDocumentEvents_FWD_DEFINED__
#define __IHTMLDocument3_FWD_DEFINED__
#define __IHTMLDocument4_FWD_DEFINED__
#define __IHTMLDocument5_FWD_DEFINED__
#define __DispHTMLDocument_FWD_DEFINED__
#define __HTMLDocument_FWD_DEFINED__
#define __DWebBridgeEvents_FWD_DEFINED__
#define __IWebBridge_FWD_DEFINED__
#define __IWBScriptControl_FWD_DEFINED__
#define __Scriptlet_FWD_DEFINED__
#define __IHTMLEmbedElement_FWD_DEFINED__
#define __DispHTMLEmbed_FWD_DEFINED__
#define __HTMLEmbed_FWD_DEFINED__
#define __HTMLMapEvents2_FWD_DEFINED__
#define __HTMLMapEvents_FWD_DEFINED__
#define __IHTMLAreasCollection_FWD_DEFINED__
#define __IHTMLAreasCollection2_FWD_DEFINED__
#define __IHTMLAreasCollection3_FWD_DEFINED__
#define __IHTMLMapElement_FWD_DEFINED__
#define __DispHTMLAreasCollection_FWD_DEFINED__
#define __HTMLAreasCollection_FWD_DEFINED__
#define __DispHTMLMapElement_FWD_DEFINED__
#define __HTMLMapElement_FWD_DEFINED__
#define __HTMLAreaEvents2_FWD_DEFINED__
#define __HTMLAreaEvents_FWD_DEFINED__
#define __IHTMLAreaElement_FWD_DEFINED__
#define __DispHTMLAreaElement_FWD_DEFINED__
#define __HTMLAreaElement_FWD_DEFINED__
#define __IHTMLTableCaption_FWD_DEFINED__
#define __DispHTMLTableCaption_FWD_DEFINED__
#define __HTMLTableCaption_FWD_DEFINED__
#define __IHTMLCommentElement_FWD_DEFINED__
#define __IHTMLCommentElement2_FWD_DEFINED__
#define __DispHTMLCommentElement_FWD_DEFINED__
#define __HTMLCommentElement_FWD_DEFINED__
#define __IHTMLPhraseElement_FWD_DEFINED__
#define __IHTMLPhraseElement2_FWD_DEFINED__
#define __IHTMLSpanElement_FWD_DEFINED__
#define __DispHTMLPhraseElement_FWD_DEFINED__
#define __HTMLPhraseElement_FWD_DEFINED__
#define __DispHTMLSpanElement_FWD_DEFINED__
#define __HTMLSpanElement_FWD_DEFINED__
#define __HTMLTableEvents2_FWD_DEFINED__
#define __HTMLTableEvents_FWD_DEFINED__
#define __IHTMLTableSection_FWD_DEFINED__
#define __IHTMLTable_FWD_DEFINED__
#define __IHTMLTable2_FWD_DEFINED__
#define __IHTMLTable3_FWD_DEFINED__
#define __IHTMLTableCol_FWD_DEFINED__
#define __IHTMLTableCol2_FWD_DEFINED__
#define __IHTMLTableSection2_FWD_DEFINED__
#define __IHTMLTableSection3_FWD_DEFINED__
#define __IHTMLTableRow_FWD_DEFINED__
#define __IHTMLTableRow2_FWD_DEFINED__
#define __IHTMLTableRow3_FWD_DEFINED__
#define __IHTMLTableRowMetrics_FWD_DEFINED__
#define __IHTMLTableCell_FWD_DEFINED__
#define __IHTMLTableCell2_FWD_DEFINED__
#define __DispHTMLTable_FWD_DEFINED__
#define __HTMLTable_FWD_DEFINED__
#define __DispHTMLTableCol_FWD_DEFINED__
#define __HTMLTableCol_FWD_DEFINED__
#define __DispHTMLTableSection_FWD_DEFINED__
#define __HTMLTableSection_FWD_DEFINED__
#define __DispHTMLTableRow_FWD_DEFINED__
#define __HTMLTableRow_FWD_DEFINED__
#define __DispHTMLTableCell_FWD_DEFINED__
#define __HTMLTableCell_FWD_DEFINED__
#define __HTMLScriptEvents2_FWD_DEFINED__
#define __HTMLScriptEvents_FWD_DEFINED__
#define __IHTMLScriptElement_FWD_DEFINED__
#define __IHTMLScriptElement2_FWD_DEFINED__
#define __DispHTMLScriptElement_FWD_DEFINED__
#define __HTMLScriptElement_FWD_DEFINED__
#define __IHTMLNoShowElement_FWD_DEFINED__
#define __DispHTMLNoShowElement_FWD_DEFINED__
#define __HTMLNoShowElement_FWD_DEFINED__
#define __HTMLObjectElementEvents2_FWD_DEFINED__
#define __HTMLObjectElementEvents_FWD_DEFINED__
#define __IHTMLObjectElement_FWD_DEFINED__
#define __IHTMLObjectElement2_FWD_DEFINED__
#define __IHTMLObjectElement3_FWD_DEFINED__
#define __IHTMLParamElement_FWD_DEFINED__
#define __DispHTMLObjectElement_FWD_DEFINED__
#define __HTMLObjectElement_FWD_DEFINED__
#define __DispHTMLParamElement_FWD_DEFINED__
#define __HTMLParamElement_FWD_DEFINED__
#define __HTMLFrameSiteEvents2_FWD_DEFINED__
#define __HTMLFrameSiteEvents_FWD_DEFINED__
#define __IHTMLFrameBase2_FWD_DEFINED__
#define __IHTMLFrameBase3_FWD_DEFINED__
#define __DispHTMLFrameBase_FWD_DEFINED__
#define __HTMLFrameBase_FWD_DEFINED__
#define __IHTMLFrameElement_FWD_DEFINED__
#define __IHTMLFrameElement2_FWD_DEFINED__
#define __DispHTMLFrameElement_FWD_DEFINED__
#define __HTMLFrameElement_FWD_DEFINED__
#define __IHTMLIFrameElement_FWD_DEFINED__
#define __IHTMLIFrameElement2_FWD_DEFINED__
#define __DispHTMLIFrame_FWD_DEFINED__
#define __HTMLIFrame_FWD_DEFINED__
#define __IHTMLDivPosition_FWD_DEFINED__
#define __IHTMLFieldSetElement_FWD_DEFINED__
#define __IHTMLFieldSetElement2_FWD_DEFINED__
#define __IHTMLLegendElement_FWD_DEFINED__
#define __IHTMLLegendElement2_FWD_DEFINED__
#define __DispHTMLDivPosition_FWD_DEFINED__
#define __HTMLDivPosition_FWD_DEFINED__
#define __DispHTMLFieldSetElement_FWD_DEFINED__
#define __HTMLFieldSetElement_FWD_DEFINED__
#define __DispHTMLLegendElement_FWD_DEFINED__
#define __HTMLLegendElement_FWD_DEFINED__
#define __IHTMLSpanFlow_FWD_DEFINED__
#define __DispHTMLSpanFlow_FWD_DEFINED__
#define __HTMLSpanFlow_FWD_DEFINED__
#define __IHTMLFrameSetElement_FWD_DEFINED__
#define __IHTMLFrameSetElement2_FWD_DEFINED__
#define __DispHTMLFrameSetSite_FWD_DEFINED__
#define __HTMLFrameSetSite_FWD_DEFINED__
#define __IHTMLBGsound_FWD_DEFINED__
#define __DispHTMLBGsound_FWD_DEFINED__
#define __HTMLBGsound_FWD_DEFINED__
#define __IHTMLFontNamesCollection_FWD_DEFINED__
#define __IHTMLFontSizesCollection_FWD_DEFINED__
#define __IHTMLOptionsHolder_FWD_DEFINED__
#define __HTMLStyleElementEvents2_FWD_DEFINED__
#define __HTMLStyleElementEvents_FWD_DEFINED__
#define __IHTMLStyleElement_FWD_DEFINED__
#define __DispHTMLStyleElement_FWD_DEFINED__
#define __HTMLStyleElement_FWD_DEFINED__
#define __IHTMLStyleFontFace_FWD_DEFINED__
#define __HTMLStyleFontFace_FWD_DEFINED__
#define __ICSSFilterSite_FWD_DEFINED__
#define __IMarkupPointer_FWD_DEFINED__
#define __IMarkupContainer_FWD_DEFINED__
#define __IMarkupContainer2_FWD_DEFINED__
#define __IHTMLChangeLog_FWD_DEFINED__
#define __IHTMLChangeSink_FWD_DEFINED__
#define __ISegmentList_FWD_DEFINED__
#define __ISegmentListIterator_FWD_DEFINED__
#define __IHTMLCaret_FWD_DEFINED__
#define __ISegment_FWD_DEFINED__
#define __IElementSegment_FWD_DEFINED__
#define __IHighlightSegment_FWD_DEFINED__
#define __IHighlightRenderingServices_FWD_DEFINED__
#define __ILineInfo_FWD_DEFINED__
#define __IDisplayPointer_FWD_DEFINED__
#define __IDisplayServices_FWD_DEFINED__
#define __IHtmlDlgSafeHelper_FWD_DEFINED__
#define __IBlockFormats_FWD_DEFINED__
#define __IFontNames_FWD_DEFINED__
#define __ICSSFilter_FWD_DEFINED__
#define __ISecureUrlHost_FWD_DEFINED__
#define __IMarkupServices_FWD_DEFINED__
#define __IMarkupServices2_FWD_DEFINED__
#define __IHTMLChangePlayback_FWD_DEFINED__
#define __IMarkupPointer2_FWD_DEFINED__
#define __IMarkupTextFrags_FWD_DEFINED__
#define __IXMLGenericParse_FWD_DEFINED__
#define __IHTMLEditHost_FWD_DEFINED__
#define __IHTMLEditHost2_FWD_DEFINED__
#define __ISequenceNumber_FWD_DEFINED__
#define __IIMEServices_FWD_DEFINED__
#define __ISelectionServicesListener_FWD_DEFINED__
#define __ISelectionServices_FWD_DEFINED__
#define __IHTMLEditDesigner_FWD_DEFINED__
#define __IHTMLEditServices_FWD_DEFINED__
#define __IHTMLEditServices2_FWD_DEFINED__
#define __IHTMLComputedStyle_FWD_DEFINED__
#define __HtmlDlgSafeHelper_FWD_DEFINED__
#define __BlockFormats_FWD_DEFINED__
#define __FontNames_FWD_DEFINED__
#define __HTMLNamespaceEvents_FWD_DEFINED__
#define __IHTMLNamespace_FWD_DEFINED__
#define __IHTMLNamespaceCollection_FWD_DEFINED__
#define __HTMLNamespace_FWD_DEFINED__
#define __HTMLNamespaceCollection_FWD_DEFINED__
#define __IHTMLPainter_FWD_DEFINED__
#define __IHTMLPaintSite_FWD_DEFINED__
#define __IHTMLPainterEventInfo_FWD_DEFINED__
#define __IHTMLPainterOverlay_FWD_DEFINED__
#define __IHTMLIPrintCollection_FWD_DEFINED__
#define __IEnumPrivacyRecords_FWD_DEFINED__
#define __IHTMLDialog_FWD_DEFINED__
#define __IHTMLDialog2_FWD_DEFINED__
#define __IHTMLDialog3_FWD_DEFINED__
#define __IHTMLModelessInit_FWD_DEFINED__
#define __ThreadDialogProcParam_FWD_DEFINED__
#define __HTMLDialog_FWD_DEFINED__
#define __IHTMLPopup_FWD_DEFINED__
#define __DispHTMLPopup_FWD_DEFINED__
#define __HTMLPopup_FWD_DEFINED__
#define __IHTMLAppBehavior_FWD_DEFINED__
#define __IHTMLAppBehavior2_FWD_DEFINED__
#define __IHTMLAppBehavior3_FWD_DEFINED__
#define __DispHTMLAppBehavior_FWD_DEFINED__
#define __HTMLAppBehavior_FWD_DEFINED__
#define __OldHTMLDocument_FWD_DEFINED__
#define __OldHTMLFormElement_FWD_DEFINED__
#define __DispIHTMLInputButtonElement_FWD_DEFINED__
#define __HTMLInputButtonElement_FWD_DEFINED__
#define __DispIHTMLInputTextElement_FWD_DEFINED__
#define __HTMLInputTextElement_FWD_DEFINED__
#define __DispIHTMLInputFileElement_FWD_DEFINED__
#define __HTMLInputFileElement_FWD_DEFINED__
#define __DispIHTMLOptionButtonElement_FWD_DEFINED__
#define __HTMLOptionButtonElement_FWD_DEFINED__
#define __DispIHTMLInputImage_FWD_DEFINED__
#define __HTMLInputImage_FWD_DEFINED__
#define __IElementNamespace_FWD_DEFINED__
#define __IElementNamespaceTable_FWD_DEFINED__
#define __IElementNamespaceFactory_FWD_DEFINED__
#define __IElementNamespaceFactory2_FWD_DEFINED__
#define __IElementNamespaceFactoryCallback_FWD_DEFINED__
#define __IElementBehaviorSiteOM2_FWD_DEFINED__
#define __IElementBehaviorCategory_FWD_DEFINED__
#define __IElementBehaviorSiteCategory_FWD_DEFINED__
#define __IElementBehaviorSubmit_FWD_DEFINED__
#define __IElementBehaviorFocus_FWD_DEFINED__
#define __IElementBehaviorLayout_FWD_DEFINED__
#define __IElementBehaviorLayout2_FWD_DEFINED__
#define __IElementBehaviorSiteLayout_FWD_DEFINED__
#define __IElementBehaviorSiteLayout2_FWD_DEFINED__
#define __IHostBehaviorInit_FWD_DEFINED__

extern CGID_MSHTML as const GUID
extern CLSID_MHTMLDocument as const GUID
extern CLSID_HTADocument as const GUID
extern CLSID_HTMLApplication as const GUID
extern CLSID_HTMLPluginDocument as const GUID
extern SID_SEditCommandTarget as const GUID
extern CGID_EditStateCommands as const GUID
extern SID_SHTMLEditHost as const GUID
extern SID_SHTMLEditServices as const GUID

const COOKIEACTION_NONE = &h00000000
const COOKIEACTION_ACCEPT = &h00000001
const COOKIEACTION_REJECT = &h00000002
const COOKIEACTION_DOWNGRADE = &h00000004
const COOKIEACTION_LEASH = &h00000008
const COOKIEACTION_SUPPRESS = &h00000010
const COOKIEACTION_READ = &h00000020
const PRIVACY_URLISTOPLEVEL = &h00010000
const PRIVACY_URLHASCOMPACTPOLICY = &h00020000
const PRIVACY_URLHASPOSTDATA = &h00080000
const PRIVACY_URLHASPOLICYREFLINK = &h00100000
const PRIVACY_URLHASPOLICYREFHEADER = &h00200000
const PRIVACY_URLHASP3PHEADER = &h00400000
extern __MIDL_itf_mshtml_0000_v0_0_c_ifspec as RPC_IF_HANDLE
extern __MIDL_itf_mshtml_0000_v0_0_s_ifspec as RPC_IF_HANDLE
#define __IHTMLFiltersCollection_INTERFACE_DEFINED__
extern IID_IHTMLFiltersCollection as const IID
type IHTMLFiltersCollection as IHTMLFiltersCollection_

type IHTMLFiltersCollectionVtbl
	QueryInterface as function(byval This as IHTMLFiltersCollection ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLFiltersCollection ptr) as ULONG
	Release as function(byval This as IHTMLFiltersCollection ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLFiltersCollection ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLFiltersCollection ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLFiltersCollection ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLFiltersCollection ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	get_length as function(byval This as IHTMLFiltersCollection ptr, byval p as long ptr) as HRESULT
	get__newEnum as function(byval This as IHTMLFiltersCollection ptr, byval p as IUnknown ptr ptr) as HRESULT
	item as function(byval This as IHTMLFiltersCollection ptr, byval pvarIndex as VARIANT ptr, byval pvarResult as VARIANT ptr) as HRESULT
end type

type IHTMLFiltersCollection_
	lpVtbl as IHTMLFiltersCollectionVtbl ptr
end type

#define IHTMLFiltersCollection_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLFiltersCollection_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLFiltersCollection_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLFiltersCollection_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLFiltersCollection_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLFiltersCollection_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLFiltersCollection_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLFiltersCollection_get_length(This, p) (This)->lpVtbl->get_length(This, p)
#define IHTMLFiltersCollection_get__newEnum(This, p) (This)->lpVtbl->get__newEnum(This, p)
#define IHTMLFiltersCollection_item(This, pvarIndex, pvarResult) (This)->lpVtbl->item(This, pvarIndex, pvarResult)

declare function IHTMLFiltersCollection_get_length_Proxy(byval This as IHTMLFiltersCollection ptr, byval p as long ptr) as HRESULT
declare sub IHTMLFiltersCollection_get_length_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLFiltersCollection_get__newEnum_Proxy(byval This as IHTMLFiltersCollection ptr, byval p as IUnknown ptr ptr) as HRESULT
declare sub IHTMLFiltersCollection_get__newEnum_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLFiltersCollection_item_Proxy(byval This as IHTMLFiltersCollection ptr, byval pvarIndex as VARIANT ptr, byval pvarResult as VARIANT ptr) as HRESULT
declare sub IHTMLFiltersCollection_item_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __MSHTML_LIBRARY_DEFINED__

type _htmlDesignMode as long
enum
	htmlDesignModeInherit = -2
	htmlDesignModeOn = -1
	htmlDesignModeOff = 0
	htmlDesignMode_Max = 2147483647
end enum

type htmlDesignMode as _htmlDesignMode

type _htmlZOrder as long
enum
	htmlZOrderFront = 0
	htmlZOrderBack = 1
	htmlZOrder_Max = 2147483647
end enum

type htmlZOrder as _htmlZOrder

type _htmlClear as long
enum
	htmlClearNotSet = 0
	htmlClearAll = 1
	htmlClearLeft = 2
	htmlClearRight = 3
	htmlClearBoth = 4
	htmlClearNone = 5
	htmlClear_Max = 2147483647
end enum

type htmlClear as _htmlClear

type _htmlControlAlign as long
enum
	htmlControlAlignNotSet = 0
	htmlControlAlignLeft = 1
	htmlControlAlignCenter = 2
	htmlControlAlignRight = 3
	htmlControlAlignTextTop = 4
	htmlControlAlignAbsMiddle = 5
	htmlControlAlignBaseline = 6
	htmlControlAlignAbsBottom = 7
	htmlControlAlignBottom = 8
	htmlControlAlignMiddle = 9
	htmlControlAlignTop = 10
	htmlControlAlign_Max = 2147483647
end enum

type htmlControlAlign as _htmlControlAlign

type _htmlBlockAlign as long
enum
	htmlBlockAlignNotSet = 0
	htmlBlockAlignLeft = 1
	htmlBlockAlignCenter = 2
	htmlBlockAlignRight = 3
	htmlBlockAlignJustify = 4
	htmlBlockAlign_Max = 2147483647
end enum

type htmlBlockAlign as _htmlBlockAlign

type _htmlReadyState as long
enum
	htmlReadyStateuninitialized = 0
	htmlReadyStateloading = 1
	htmlReadyStateloaded = 2
	htmlReadyStateinteractive = 3
	htmlReadyStatecomplete = 4
	htmlReadyState_Max = 2147483647
end enum

type htmlReadyState as _htmlReadyState

type _htmlLoop as long
enum
	htmlLoopLoopInfinite = -1
	htmlLoop_Max = 2147483647
end enum

type htmlLoop as _htmlLoop

type _mediaType as long
enum
	mediaTypeNotSet = 0
	mediaTypeAll = 511
	mediaTypeAural = 1
	mediaTypeBraille = 2
	mediaTypeEmbossed = 4
	mediaTypeHandheld = 8
	mediaTypePrint = 16
	mediaTypeProjection = 32
	mediaTypeScreen = 64
	mediaTypeTty = 128
	mediaTypeTv = 256
	mediaType_Max = 2147483647
end enum

type mediaType as _mediaType

type _styleTextTransform as long
enum
	styleTextTransformNotSet = 0
	styleTextTransformCapitalize = 1
	styleTextTransformLowercase = 2
	styleTextTransformUppercase = 3
	styleTextTransformNone = 4
	styleTextTransform_Max = 2147483647
end enum

type styleTextTransform as _styleTextTransform

type _styleDataRepeat as long
enum
	styleDataRepeatNone = 0
	styleDataRepeatInner = 1
	styleDataRepeat_Max = 2147483647
end enum

type styleDataRepeat as _styleDataRepeat

type _styleOverflow as long
enum
	styleOverflowNotSet = 0
	styleOverflowAuto = 1
	styleOverflowHidden = 2
	styleOverflowVisible = 3
	styleOverflowScroll = 4
	styleOverflow_Max = 2147483647
end enum

type styleOverflow as _styleOverflow

type _styleTableLayout as long
enum
	styleTableLayoutNotSet = 0
	styleTableLayoutAuto = 1
	styleTableLayoutFixed = 2
	styleTableLayout_Max = 2147483647
end enum

type styleTableLayout as _styleTableLayout

type _styleBorderCollapse as long
enum
	styleBorderCollapseNotSet = 0
	styleBorderCollapseSeparate = 1
	styleBorderCollapseCollapse = 2
	styleBorderCollapse_Max = 2147483647
end enum

type styleBorderCollapse as _styleBorderCollapse

type _styleFontStyle as long
enum
	styleFontStyleNotSet = 0
	styleFontStyleItalic = 1
	styleFontStyleOblique = 2
	styleFontStyleNormal = 3
	styleFontStyle_Max = 2147483647
end enum

type styleFontStyle as _styleFontStyle

type _styleFontVariant as long
enum
	styleFontVariantNotSet = 0
	styleFontVariantSmallCaps = 1
	styleFontVariantNormal = 2
	styleFontVariant_Max = 2147483647
end enum

type styleFontVariant as _styleFontVariant

type _styleBackgroundRepeat as long
enum
	styleBackgroundRepeatRepeat = 0
	styleBackgroundRepeatRepeatX = 1
	styleBackgroundRepeatRepeatY = 2
	styleBackgroundRepeatNoRepeat = 3
	styleBackgroundRepeatNotSet = 4
	styleBackgroundRepeat_Max = 2147483647
end enum

type styleBackgroundRepeat as _styleBackgroundRepeat

type _styleBackgroundAttachment as long
enum
	styleBackgroundAttachmentFixed = 0
	styleBackgroundAttachmentScroll = 1
	styleBackgroundAttachmentNotSet = 2
	styleBackgroundAttachment_Max = 2147483647
end enum

type styleBackgroundAttachment as _styleBackgroundAttachment

type _styleVerticalAlign as long
enum
	styleVerticalAlignAuto = 0
	styleVerticalAlignBaseline = 1
	styleVerticalAlignSub = 2
	styleVerticalAlignSuper = 3
	styleVerticalAlignTop = 4
	styleVerticalAlignTextTop = 5
	styleVerticalAlignMiddle = 6
	styleVerticalAlignBottom = 7
	styleVerticalAlignTextBottom = 8
	styleVerticalAlignInherit = 9
	styleVerticalAlignNotSet = 10
	styleVerticalAlign_Max = 2147483647
end enum

type styleVerticalAlign as _styleVerticalAlign

type _styleFontWeight as long
enum
	styleFontWeightNotSet = 0
	styleFontWeight100 = 1
	styleFontWeight200 = 2
	styleFontWeight300 = 3
	styleFontWeight400 = 4
	styleFontWeight500 = 5
	styleFontWeight600 = 6
	styleFontWeight700 = 7
	styleFontWeight800 = 8
	styleFontWeight900 = 9
	styleFontWeightNormal = 10
	styleFontWeightBold = 11
	styleFontWeightBolder = 12
	styleFontWeightLighter = 13
	styleFontWeight_Max = 2147483647
end enum

type styleFontWeight as _styleFontWeight

type _styleBackgroundPositionX as long
enum
	styleBackgroundPositionXNotSet = 0
	styleBackgroundPositionXLeft = 1
	styleBackgroundPositionXCenter = 2
	styleBackgroundPositionXRight = 3
	styleBackgroundPositionX_Max = 2147483647
end enum

type styleBackgroundPositionX as _styleBackgroundPositionX

type _styleBackgroundPositionY as long
enum
	styleBackgroundPositionYNotSet = 0
	styleBackgroundPositionYTop = 1
	styleBackgroundPositionYCenter = 2
	styleBackgroundPositionYBottom = 3
	styleBackgroundPositionY_Max = 2147483647
end enum

type styleBackgroundPositionY as _styleBackgroundPositionY

type _styleFontSize as long
enum
	styleFontSizeXXSmall = 0
	styleFontSizeXSmall = 1
	styleFontSizeSmall = 2
	styleFontSizeMedium = 3
	styleFontSizeLarge = 4
	styleFontSizeXLarge = 5
	styleFontSizeXXLarge = 6
	styleFontSizeSmaller = 7
	styleFontSizeLarger = 8
	styleFontSize_Max = 2147483647
end enum

type styleFontSize as _styleFontSize

type _styleAuto as long
enum
	styleAutoAuto = 0
	styleAuto_Max = 2147483647
end enum

type styleAuto as _styleAuto

type _styleNormal as long
enum
	styleNormalNormal = 0
	styleNormal_Max = 2147483647
end enum

type styleNormal as _styleNormal

type _styleBorderWidth as long
enum
	styleBorderWidthThin = 0
	styleBorderWidthMedium = 1
	styleBorderWidthThick = 2
	styleBorderWidth_Max = 2147483647
end enum

type styleBorderWidth as _styleBorderWidth

type _stylePosition as long
enum
	stylePositionNotSet = 0
	stylePositionstatic = 1
	stylePositionrelative = 2
	stylePositionabsolute = 3
	stylePositionfixed = 4
	stylePosition_Max = 2147483647
end enum

type stylePosition as _stylePosition

type _styleBorderStyle as long
enum
	styleBorderStyleNotSet = 0
	styleBorderStyleDotted = 1
	styleBorderStyleDashed = 2
	styleBorderStyleSolid = 3
	styleBorderStyleDouble = 4
	styleBorderStyleGroove = 5
	styleBorderStyleRidge = 6
	styleBorderStyleInset = 7
	styleBorderStyleOutset = 8
	styleBorderStyleWindowInset = 9
	styleBorderStyleNone = 10
	styleBorderStyle_Max = 2147483647
end enum

type styleBorderStyle as _styleBorderStyle

type _styleStyleFloat as long
enum
	styleStyleFloatNotSet = 0
	styleStyleFloatLeft = 1
	styleStyleFloatRight = 2
	styleStyleFloatNone = 3
	styleStyleFloat_Max = 2147483647
end enum

type styleStyleFloat as _styleStyleFloat

type _styleDisplay as long
enum
	styleDisplayNotSet = 0
	styleDisplayBlock = 1
	styleDisplayInline = 2
	styleDisplayListItem = 3
	styleDisplayNone = 4
	styleDisplayTableHeaderGroup = 5
	styleDisplayTableFooterGroup = 6
	styleDisplayInlineBlock = 7
	styleDisplay_Max = 2147483647
end enum

type styleDisplay as _styleDisplay

type _styleVisibility as long
enum
	styleVisibilityNotSet = 0
	styleVisibilityInherit = 1
	styleVisibilityVisible = 2
	styleVisibilityHidden = 3
	styleVisibility_Max = 2147483647
end enum

type styleVisibility as _styleVisibility

type _styleListStyleType as long
enum
	styleListStyleTypeNotSet = 0
	styleListStyleTypeDisc = 1
	styleListStyleTypeCircle = 2
	styleListStyleTypeSquare = 3
	styleListStyleTypeDecimal = 4
	styleListStyleTypeLowerRoman = 5
	styleListStyleTypeUpperRoman = 6
	styleListStyleTypeLowerAlpha = 7
	styleListStyleTypeUpperAlpha = 8
	styleListStyleTypeNone = 9
	styleListStyleType_Max = 2147483647
end enum

type styleListStyleType as _styleListStyleType

type _styleListStylePosition as long
enum
	styleListStylePositionNotSet = 0
	styleListStylePositionInside = 1
	styleListStylePositionOutSide = 2
	styleListStylePosition_Max = 2147483647
end enum

type styleListStylePosition as _styleListStylePosition

type _styleWhiteSpace as long
enum
	styleWhiteSpaceNotSet = 0
	styleWhiteSpaceNormal = 1
	styleWhiteSpacePre = 2
	styleWhiteSpaceNowrap = 3
	styleWhiteSpace_Max = 2147483647
end enum

type styleWhiteSpace as _styleWhiteSpace

type _stylePageBreak as long
enum
	stylePageBreakNotSet = 0
	stylePageBreakAuto = 1
	stylePageBreakAlways = 2
	stylePageBreakLeft = 3
	stylePageBreakRight = 4
	stylePageBreak_Max = 2147483647
end enum

type stylePageBreak as _stylePageBreak

type _styleCursor as long
enum
	styleCursorAuto = 0
	styleCursorCrosshair = 1
	styleCursorDefault = 2
	styleCursorHand = 3
	styleCursorMove = 4
	styleCursorE_resize = 5
	styleCursorNe_resize = 6
	styleCursorNw_resize = 7
	styleCursorN_resize = 8
	styleCursorSe_resize = 9
	styleCursorSw_resize = 10
	styleCursorS_resize = 11
	styleCursorW_resize = 12
	styleCursorText = 13
	styleCursorWait = 14
	styleCursorHelp = 15
	styleCursorPointer = 16
	styleCursorProgress = 17
	styleCursorNot_allowed = 18
	styleCursorNo_drop = 19
	styleCursorVertical_text = 20
	styleCursorall_scroll = 21
	styleCursorcol_resize = 22
	styleCursorrow_resize = 23
	styleCursorcustom = 24
	styleCursorNotSet = 25
	styleCursor_Max = 2147483647
end enum

type styleCursor as _styleCursor

type _styleDir as long
enum
	styleDirNotSet = 0
	styleDirLeftToRight = 1
	styleDirRightToLeft = 2
	styleDirInherit = 3
	styleDir_Max = 2147483647
end enum

type styleDir as _styleDir

type _styleBidi as long
enum
	styleBidiNotSet = 0
	styleBidiNormal = 1
	styleBidiEmbed = 2
	styleBidiOverride = 3
	styleBidiInherit = 4
	styleBidi_Max = 2147483647
end enum

type styleBidi as _styleBidi

type _styleImeMode as long
enum
	styleImeModeAuto = 0
	styleImeModeActive = 1
	styleImeModeInactive = 2
	styleImeModeDisabled = 3
	styleImeModeNotSet = 4
	styleImeMode_Max = 2147483647
end enum

type styleImeMode as _styleImeMode

type _styleRubyAlign as long
enum
	styleRubyAlignNotSet = 0
	styleRubyAlignAuto = 1
	styleRubyAlignLeft = 2
	styleRubyAlignCenter = 3
	styleRubyAlignRight = 4
	styleRubyAlignDistributeLetter = 5
	styleRubyAlignDistributeSpace = 6
	styleRubyAlignLineEdge = 7
	styleRubyAlign_Max = 2147483647
end enum

type styleRubyAlign as _styleRubyAlign

type _styleRubyPosition as long
enum
	styleRubyPositionNotSet = 0
	styleRubyPositionAbove = 1
	styleRubyPositionInline = 2
	styleRubyPosition_Max = 2147483647
end enum

type styleRubyPosition as _styleRubyPosition

type _styleRubyOverhang as long
enum
	styleRubyOverhangNotSet = 0
	styleRubyOverhangAuto = 1
	styleRubyOverhangWhitespace = 2
	styleRubyOverhangNone = 3
	styleRubyOverhang_Max = 2147483647
end enum

type styleRubyOverhang as _styleRubyOverhang

type _styleLayoutGridChar as long
enum
	styleLayoutGridCharNotSet = 0
	styleLayoutGridCharAuto = 1
	styleLayoutGridCharNone = 2
	styleLayoutGridChar_Max = 2147483647
end enum

type styleLayoutGridChar as _styleLayoutGridChar

type _styleLayoutGridLine as long
enum
	styleLayoutGridLineNotSet = 0
	styleLayoutGridLineAuto = 1
	styleLayoutGridLineNone = 2
	styleLayoutGridLine_Max = 2147483647
end enum

type styleLayoutGridLine as _styleLayoutGridLine

type _styleLayoutGridMode as long
enum
	styleLayoutGridModeNotSet = 0
	styleLayoutGridModeChar = 1
	styleLayoutGridModeLine = 2
	styleLayoutGridModeBoth = 3
	styleLayoutGridModeNone = 4
	styleLayoutGridMode_Max = 2147483647
end enum

type styleLayoutGridMode as _styleLayoutGridMode

type _styleLayoutGridType as long
enum
	styleLayoutGridTypeNotSet = 0
	styleLayoutGridTypeLoose = 1
	styleLayoutGridTypeStrict = 2
	styleLayoutGridTypeFixed = 3
	styleLayoutGridType_Max = 2147483647
end enum

type styleLayoutGridType as _styleLayoutGridType

type _styleLineBreak as long
enum
	styleLineBreakNotSet = 0
	styleLineBreakNormal = 1
	styleLineBreakStrict = 2
	styleLineBreak_Max = 2147483647
end enum

type styleLineBreak as _styleLineBreak

type _styleWordBreak as long
enum
	styleWordBreakNotSet = 0
	styleWordBreakNormal = 1
	styleWordBreakBreakAll = 2
	styleWordBreakKeepAll = 3
	styleWordBreak_Max = 2147483647
end enum

type styleWordBreak as _styleWordBreak

type _styleWordWrap as long
enum
	styleWordWrapNotSet = 0
	styleWordWrapOff = 1
	styleWordWrapOn = 2
	styleWordWrap_Max = 2147483647
end enum

type styleWordWrap as _styleWordWrap

type _styleTextJustify as long
enum
	styleTextJustifyNotSet = 0
	styleTextJustifyInterWord = 1
	styleTextJustifyNewspaper = 2
	styleTextJustifyDistribute = 3
	styleTextJustifyDistributeAllLines = 4
	styleTextJustifyInterIdeograph = 5
	styleTextJustifyInterCluster = 6
	styleTextJustifyKashida = 7
	styleTextJustifyAuto = 8
	styleTextJustify_Max = 2147483647
end enum

type styleTextJustify as _styleTextJustify

type _styleTextAlignLast as long
enum
	styleTextAlignLastNotSet = 0
	styleTextAlignLastLeft = 1
	styleTextAlignLastCenter = 2
	styleTextAlignLastRight = 3
	styleTextAlignLastJustify = 4
	styleTextAlignLastAuto = 5
	styleTextAlignLast_Max = 2147483647
end enum

type styleTextAlignLast as _styleTextAlignLast

type _styleTextJustifyTrim as long
enum
	styleTextJustifyTrimNotSet = 0
	styleTextJustifyTrimNone = 1
	styleTextJustifyTrimPunctuation = 2
	styleTextJustifyTrimPunctAndKana = 3
	styleTextJustifyTrim_Max = 2147483647
end enum

type styleTextJustifyTrim as _styleTextJustifyTrim

type _styleAccelerator as long
enum
	styleAcceleratorFalse = 0
	styleAcceleratorTrue = 1
	styleAccelerator_Max = 2147483647
end enum

type styleAccelerator as _styleAccelerator

type _styleLayoutFlow as long
enum
	styleLayoutFlowHorizontal = 0
	styleLayoutFlowVerticalIdeographic = 1
	styleLayoutFlowNotSet = 2
	styleLayoutFlow_Max = 2147483647
end enum

type styleLayoutFlow as _styleLayoutFlow

type _styleWritingMode as long
enum
	styleWritingModeLrtb = 0
	styleWritingModeTbrl = 1
	styleWritingModeNotSet = 2
	styleWritingMode_Max = 2147483647
end enum

type styleWritingMode as _styleWritingMode

type _styleBool as long
enum
	styleBoolFalse = 0
	styleBoolTrue = 1
	styleBool_Max = 2147483647
end enum

type styleBool as _styleBool

type _styleTextUnderlinePosition as long
enum
	styleTextUnderlinePositionBelow = 0
	styleTextUnderlinePositionAbove = 1
	styleTextUnderlinePositionAuto = 2
	styleTextUnderlinePositionNotSet = 3
	styleTextUnderlinePosition_Max = 2147483647
end enum

type styleTextUnderlinePosition as _styleTextUnderlinePosition

type _styleTextOverflow as long
enum
	styleTextOverflowClip = 0
	styleTextOverflowEllipsis = 1
	styleTextOverflowNotSet = 2
	styleTextOverflow_Max = 2147483647
end enum

type styleTextOverflow as _styleTextOverflow
extern CLSID_CStyle as const GUID
extern CLSID_CRuleStyle as const GUID

type _styleTextLineThroughStyle as long
enum
	styleTextLineThroughStyleUndefined = 0
	styleTextLineThroughStyleSingle = 1
	styleTextLineThroughStyleDouble = 2
	styleTextLineThroughStyle_Max = 2147483647
end enum

type styleTextLineThroughStyle as _styleTextLineThroughStyle

type _styleTextUnderlineStyle as long
enum
	styleTextUnderlineStyleUndefined = 0
	styleTextUnderlineStyleSingle = 1
	styleTextUnderlineStyleDouble = 2
	styleTextUnderlineStyleWords = 3
	styleTextUnderlineStyleDotted = 4
	styleTextUnderlineStyleThick = 5
	styleTextUnderlineStyleDash = 6
	styleTextUnderlineStyleDotDash = 7
	styleTextUnderlineStyleDotDotDash = 8
	styleTextUnderlineStyleWave = 9
	styleTextUnderlineStyleSingleAccounting = 10
	styleTextUnderlineStyleDoubleAccounting = 11
	styleTextUnderlineStyleThickDash = 12
	styleTextUnderlineStyle_Max = 2147483647
end enum

type styleTextUnderlineStyle as _styleTextUnderlineStyle

type _styleTextEffect as long
enum
	styleTextEffectNone = 0
	styleTextEffectEmboss = 1
	styleTextEffectEngrave = 2
	styleTextEffectOutline = 3
	styleTextEffect_Max = 2147483647
end enum

type styleTextEffect as _styleTextEffect

type _styleDefaultTextSelection as long
enum
	styleDefaultTextSelectionFalse = 0
	styleDefaultTextSelectionTrue = 1
	styleDefaultTextSelection_Max = 2147483647
end enum

type styleDefaultTextSelection as _styleDefaultTextSelection

type _styleTextDecoration as long
enum
	styleTextDecorationNone = 0
	styleTextDecorationUnderline = 1
	styleTextDecorationOverline = 2
	styleTextDecorationLineThrough = 3
	styleTextDecorationBlink = 4
	styleTextDecoration_Max = 2147483647
end enum

type styleTextDecoration as _styleTextDecoration
extern CLSID_CRenderStyle as const GUID

type _textDecoration as long
enum
	textDecorationNone = 0
	textDecorationUnderline = 1
	textDecorationOverline = 2
	textDecorationLineThrough = 3
	textDecorationBlink = 4
	textDecoration_Max = 2147483647
end enum

type textDecoration as _textDecoration
extern CLSID_CCurrentStyle as const GUID
extern CLSID_CAttribute as const GUID
extern CLSID_CDOMTextNode as const GUID
extern CLSID_CDOMImplementation as const GUID
extern CLSID_CAttrCollectionator as const GUID
extern CLSID_CDOMChildrenCollection as const GUID

type _htmlListType as long
enum
	htmlListTypeNotSet = 0
	htmlListTypeLargeAlpha = 1
	htmlListTypeSmallAlpha = 2
	htmlListTypeLargeRoman = 3
	htmlListTypeSmallRoman = 4
	htmlListTypeNumbers = 5
	htmlListTypeDisc = 6
	htmlListTypeCircle = 7
	htmlListTypeSquare = 8
	htmlListType_Max = 2147483647
end enum

type htmlListType as _htmlListType

type _htmlMethod as long
enum
	htmlMethodNotSet = 0
	htmlMethodGet = 1
	htmlMethodPost = 2
	htmlMethod_Max = 2147483647
end enum

type htmlMethod as _htmlMethod

type _htmlWrap as long
enum
	htmlWrapOff = 1
	htmlWrapSoft = 2
	htmlWrapHard = 3
	htmlWrap_Max = 2147483647
end enum

type htmlWrap as _htmlWrap

type _htmlDir as long
enum
	htmlDirNotSet = 0
	htmlDirLeftToRight = 1
	htmlDirRightToLeft = 2
	htmlDir_Max = 2147483647
end enum

type htmlDir as _htmlDir

type _htmlEditable as long
enum
	htmlEditableInherit = 0
	htmlEditableTrue = 1
	htmlEditableFalse = 2
	htmlEditable_Max = 2147483647
end enum

type htmlEditable as _htmlEditable

type _htmlInput as long
enum
	htmlInputNotSet = 0
	htmlInputButton = 1
	htmlInputCheckbox = 2
	htmlInputFile = 3
	htmlInputHidden = 4
	htmlInputImage = 5
	htmlInputPassword = 6
	htmlInputRadio = 7
	htmlInputReset = 8
	htmlInputSelectOne = 9
	htmlInputSelectMultiple = 10
	htmlInputSubmit = 11
	htmlInputText = 12
	htmlInputTextarea = 13
	htmlInputRichtext = 14
	htmlInput_Max = 2147483647
end enum

type htmlInput as _htmlInput

type _htmlEncoding as long
enum
	htmlEncodingURL = 0
	htmlEncodingMultipart = 1
	htmlEncodingText = 2
	htmlEncoding_Max = 2147483647
end enum

type htmlEncoding as _htmlEncoding

type _htmlAdjacency as long
enum
	htmlAdjacencyBeforeBegin = 1
	htmlAdjacencyAfterBegin = 2
	htmlAdjacencyBeforeEnd = 3
	htmlAdjacencyAfterEnd = 4
	htmlAdjacency_Max = 2147483647
end enum

type htmlAdjacency as _htmlAdjacency

type _htmlTabIndex as long
enum
	htmlTabIndexNotSet = -32768
	htmlTabIndex_Max = 2147483647
end enum

type htmlTabIndex as _htmlTabIndex

type _htmlComponent as long
enum
	htmlComponentClient = 0
	htmlComponentSbLeft = 1
	htmlComponentSbPageLeft = 2
	htmlComponentSbHThumb = 3
	htmlComponentSbPageRight = 4
	htmlComponentSbRight = 5
	htmlComponentSbUp = 6
	htmlComponentSbPageUp = 7
	htmlComponentSbVThumb = 8
	htmlComponentSbPageDown = 9
	htmlComponentSbDown = 10
	htmlComponentSbLeft2 = 11
	htmlComponentSbPageLeft2 = 12
	htmlComponentSbRight2 = 13
	htmlComponentSbPageRight2 = 14
	htmlComponentSbUp2 = 15
	htmlComponentSbPageUp2 = 16
	htmlComponentSbDown2 = 17
	htmlComponentSbPageDown2 = 18
	htmlComponentSbTop = 19
	htmlComponentSbBottom = 20
	htmlComponentOutside = 21
	htmlComponentGHTopLeft = 22
	htmlComponentGHLeft = 23
	htmlComponentGHTop = 24
	htmlComponentGHBottomLeft = 25
	htmlComponentGHTopRight = 26
	htmlComponentGHBottom = 27
	htmlComponentGHRight = 28
	htmlComponentGHBottomRight = 29
	htmlComponent_Max = 2147483647
end enum

type htmlComponent as _htmlComponent

type _htmlApplyLocation as long
enum
	htmlApplyLocationInside = 0
	htmlApplyLocationOutside = 1
	htmlApplyLocation_Max = 2147483647
end enum

type htmlApplyLocation as _htmlApplyLocation

type _htmlGlyphMode as long
enum
	htmlGlyphModeNone = 0
	htmlGlyphModeBegin = 1
	htmlGlyphModeEnd = 2
	htmlGlyphModeBoth = 3
	htmlGlyphMode_Max = 2147483647
end enum

type htmlGlyphMode as _htmlGlyphMode
extern CLSID_CDefaults as const GUID
extern CLSID_CHtmlComponentDD as const GUID
extern CLSID_CHtmlComponentProperty as const GUID
extern CLSID_CHtmlComponentMethod as const GUID
extern CLSID_CHtmlComponentEvent as const GUID
extern CLSID_CHtmlComponentAttach as const GUID
extern CLSID_CHtmlComponentDesc as const GUID
extern CLSID_CPeerUrnCollection as const GUID
extern CLSID_CGenericElement as const GUID
extern CLSID_CStyleSheetRule as const GUID
extern CLSID_CStyleSheetRuleArray as const GUID
extern CLSID_CStyleSheetPage as const GUID
extern CLSID_CStyleSheetPageArray as const GUID
extern CLSID_CStyleSheet as const GUID
extern CLSID_CStyleSheetArray as const GUID
extern CLSID_CLinkElement as const GUID

type _htmlUnit as long
enum
	htmlUnitCharacter = 1
	htmlUnitWord = 2
	htmlUnitSentence = 3
	htmlUnitTextEdit = 6
	htmlUnit_Max = 2147483647
end enum

type htmlUnit as _htmlUnit

type _htmlEndPoints as long
enum
	htmlEndPointsStartToStart = 1
	htmlEndPointsStartToEnd = 2
	htmlEndPointsEndToStart = 3
	htmlEndPointsEndToEnd = 4
	htmlEndPoints_Max = 2147483647
end enum

type htmlEndPoints as _htmlEndPoints

type _htmlDirection as long
enum
	htmlDirectionForward = 99999
	htmlDirectionBackward = -99999
	htmlDirection_Max = 2147483647
end enum

type htmlDirection as _htmlDirection
extern CLSID_CFormElement as const GUID

type _htmlStart as long
enum
	htmlStartfileopen = 0
	htmlStartmouseover = 1
	htmlStart_Max = 2147483647
end enum

type htmlStart as _htmlStart
extern CLSID_CTextElement as const GUID
extern CLSID_CImgElement as const GUID
extern CLSID_CImageElementFactory as const GUID

type _bodyScroll as long
enum
	bodyScrollyes = 1
	bodyScrollno = 2
	bodyScrollauto = 4
	bodyScrolldefault = 3
	bodyScroll_Max = 2147483647
end enum

type bodyScroll as _bodyScroll
extern CLSID_CBodyElement as const GUID
extern CLSID_CFontElement as const GUID
extern CLSID_CAnchorElement as const GUID
extern CLSID_CLabelElement as const GUID
extern CLSID_CListElement as const GUID
extern CLSID_CUListElement as const GUID
extern CLSID_COListElement as const GUID
extern CLSID_CLIElement as const GUID
extern CLSID_CBlockElement as const GUID
extern CLSID_CDivElement as const GUID
extern CLSID_CDDElement as const GUID
extern CLSID_CDTElement as const GUID
extern CLSID_CBRElement as const GUID
extern CLSID_CDListElement as const GUID
extern CLSID_CHRElement as const GUID
extern CLSID_CParaElement as const GUID
extern CLSID_CElementCollection as const GUID
extern CLSID_CHeaderElement as const GUID

type _htmlSelectType as long
enum
	htmlSelectTypeSelectOne = 1
	htmlSelectTypeSelectMultiple = 2
	htmlSelectType_Max = 2147483647
end enum

type htmlSelectType as _htmlSelectType
extern CLSID_CSelectElement as const GUID

type _htmlSelection as long
enum
	htmlSelectionNone = 0
	htmlSelectionText = 1
	htmlSelectionControl = 2
	htmlSelectionTable = 3
	htmlSelection_Max = 2147483647
end enum

type htmlSelection as _htmlSelection
extern CLSID_COptionElement as const GUID
extern CLSID_COptionElementFactory as const GUID
extern CLSID_CInput as const GUID
extern CLSID_CTextArea as const GUID
extern CLSID_CRichtext as const GUID
extern CLSID_CButton as const GUID

type _htmlMarqueeBehavior as long
enum
	htmlMarqueeBehaviorscroll = 1
	htmlMarqueeBehaviorslide = 2
	htmlMarqueeBehavioralternate = 3
	htmlMarqueeBehavior_Max = 2147483647
end enum

type htmlMarqueeBehavior as _htmlMarqueeBehavior

type _htmlMarqueeDirection as long
enum
	htmlMarqueeDirectionleft = 1
	htmlMarqueeDirectionright = 3
	htmlMarqueeDirectionup = 5
	htmlMarqueeDirectiondown = 7
	htmlMarqueeDirection_Max = 2147483647
end enum

type htmlMarqueeDirection as _htmlMarqueeDirection
extern CLSID_CMarquee as const GUID
extern CLSID_CHtmlElement as const GUID
extern CLSID_CHeadElement as const GUID
extern CLSID_CTitleElement as const GUID
extern CLSID_CMetaElement as const GUID
extern CLSID_CBaseElement as const GUID
extern CLSID_CIsIndexElement as const GUID
extern CLSID_CNextIdElement as const GUID
extern CLSID_CBaseFontElement as const GUID
extern CLSID_CUnknownElement as const GUID
extern CLSID_COmHistory as const GUID
extern CLSID_CMimeTypes as const GUID
extern CLSID_CPlugins as const GUID
extern CLSID_COpsProfile as const GUID
extern CLSID_COmNavigator as const GUID
extern CLSID_COmLocation as const GUID

type _htmlPersistState as long
enum
	htmlPersistStateNormal = 0
	htmlPersistStateFavorite = 1
	htmlPersistStateHistory = 2
	htmlPersistStateSnapshot = 3
	htmlPersistStateUserData = 4
	htmlPersistState_Max = 2147483647
end enum

type htmlPersistState as _htmlPersistState

type _htmlDropEffect as long
enum
	htmlDropEffectCopy = 0
	htmlDropEffectLink = 1
	htmlDropEffectMove = 2
	htmlDropEffectNone = 3
	htmlDropEffect_Max = 2147483647
end enum

type htmlDropEffect as _htmlDropEffect

type _htmlEffectAllowed as long
enum
	htmlEffectAllowedCopy = 0
	htmlEffectAllowedLink = 1
	htmlEffectAllowedMove = 2
	htmlEffectAllowedCopyLink = 3
	htmlEffectAllowedCopyMove = 4
	htmlEffectAllowedLinkMove = 5
	htmlEffectAllowedAll = 6
	htmlEffectAllowedNone = 7
	htmlEffectAllowedUninitialized = 8
	htmlEffectAllowed_Max = 2147483647
end enum

type htmlEffectAllowed as _htmlEffectAllowed
extern CLSID_CEventObj as const GUID
extern CLSID_CFramesCollection as const GUID
extern CLSID_CScreen as const GUID
extern CLSID_CWindow as const GUID
extern CLSID_COmWindowProxy as const GUID

type _htmlCompatMode as long
enum
	htmlCompatModeBackCompat = 0
	htmlCompatModeCSS1Compat = 1
	htmlCompatMode_Max = 2147483647
end enum

type htmlCompatMode as _htmlCompatMode
extern CLSID_CDocument as const GUID
extern CLSID_CScriptlet as const GUID

type _BoolValue as long
enum
	BoolValue_True = 1
	BoolValue_False = 0
	BoolValue_Max = 2147483647
end enum

type BoolValue as _BoolValue
extern CLSID_CPluginSite as const GUID
extern CLSID_CAreasCollection as const GUID
extern CLSID_CMapElement as const GUID
extern CLSID_CAreaElement as const GUID

type _htmlCaptionAlign as long
enum
	htmlCaptionAlignNotSet = 0
	htmlCaptionAlignLeft = 1
	htmlCaptionAlignCenter = 2
	htmlCaptionAlignRight = 3
	htmlCaptionAlignJustify = 4
	htmlCaptionAlignTop = 5
	htmlCaptionAlignBottom = 6
	htmlCaptionAlign_Max = 2147483647
end enum

type htmlCaptionAlign as _htmlCaptionAlign

type _htmlCaptionVAlign as long
enum
	htmlCaptionVAlignNotSet = 0
	htmlCaptionVAlignTop = 1
	htmlCaptionVAlignBottom = 2
	htmlCaptionVAlign_Max = 2147483647
end enum

type htmlCaptionVAlign as _htmlCaptionVAlign
extern CLSID_CTableCaption as const GUID
extern CLSID_CCommentElement as const GUID
extern CLSID_CPhraseElement as const GUID
extern CLSID_CSpanElement as const GUID

type _htmlFrame as long
enum
	htmlFrameNotSet = 0
	htmlFramevoid = 1
	htmlFrameabove = 2
	htmlFramebelow = 3
	htmlFramehsides = 4
	htmlFramelhs = 5
	htmlFramerhs = 6
	htmlFramevsides = 7
	htmlFramebox = 8
	htmlFrameborder = 9
	htmlFrame_Max = 2147483647
end enum

type htmlFrame as _htmlFrame

type _htmlRules as long
enum
	htmlRulesNotSet = 0
	htmlRulesnone = 1
	htmlRulesgroups = 2
	htmlRulesrows = 3
	htmlRulescols = 4
	htmlRulesall = 5
	htmlRules_Max = 2147483647
end enum

type htmlRules as _htmlRules

type _htmlCellAlign as long
enum
	htmlCellAlignNotSet = 0
	htmlCellAlignLeft = 1
	htmlCellAlignCenter = 2
	htmlCellAlignRight = 3
	htmlCellAlignMiddle = htmlCellAlignCenter
	htmlCellAlign_Max = 2147483647
end enum

type htmlCellAlign as _htmlCellAlign

type _htmlCellVAlign as long
enum
	htmlCellVAlignNotSet = 0
	htmlCellVAlignTop = 1
	htmlCellVAlignMiddle = 2
	htmlCellVAlignBottom = 3
	htmlCellVAlignBaseline = 4
	htmlCellVAlignCenter = htmlCellVAlignMiddle
	htmlCellVAlign_Max = 2147483647
end enum

type htmlCellVAlign as _htmlCellVAlign
extern CLSID_CTable as const GUID
extern CLSID_CTableCol as const GUID
extern CLSID_CTableSection as const GUID
extern CLSID_CTableRow as const GUID
extern CLSID_CTableCell as const GUID
extern CLSID_CScriptElement as const GUID
extern CLSID_CNoShowElement as const GUID
extern CLSID_CObjectElement as const GUID
extern CLSID_CParamElement as const GUID

type _frameScrolling as long
enum
	frameScrollingyes = 1
	frameScrollingno = 2
	frameScrollingauto = 4
	frameScrolling_Max = 2147483647
end enum

type frameScrolling as _frameScrolling
extern CLSID_CFrameSite as const GUID
extern CLSID_CFrameElement as const GUID
extern CLSID_CIFrameElement as const GUID
extern CLSID_C1DElement as const GUID
extern CLSID_CFieldSetElement as const GUID
extern CLSID_CLegendElement as const GUID
extern CLSID_CSpanSite as const GUID
extern CLSID_CFrameSetSite as const GUID
extern CLSID_CBGsound as const GUID
extern CLSID_CStyleElement as const GUID
extern CLSID_CFontFace as const GUID

type _ELEMENT_CORNER as long
enum
	ELEMENT_CORNER_NONE = 0
	ELEMENT_CORNER_TOP = 1
	ELEMENT_CORNER_LEFT = 2
	ELEMENT_CORNER_BOTTOM = 3
	ELEMENT_CORNER_RIGHT = 4
	ELEMENT_CORNER_TOPLEFT = 5
	ELEMENT_CORNER_TOPRIGHT = 6
	ELEMENT_CORNER_BOTTOMLEFT = 7
	ELEMENT_CORNER_BOTTOMRIGHT = 8
	ELEMENT_CORNER_Max = 2147483647
end enum

type ELEMENT_CORNER as _ELEMENT_CORNER

type _SECUREURLHOSTVALIDATE_FLAGS as long
enum
	SUHV_PROMPTBEFORENO = &h1
	SUHV_SILENTYES = &h2
	SUHV_UNSECURESOURCE = &h4
	SECUREURLHOSTVALIDATE_FLAGS_Max = 2147483647
end enum

type SECUREURLHOSTVALIDATE_FLAGS as _SECUREURLHOSTVALIDATE_FLAGS

type _POINTER_GRAVITY as long
enum
	POINTER_GRAVITY_Left = 0
	POINTER_GRAVITY_Right = 1
	POINTER_GRAVITY_Max = 2147483647
end enum

type POINTER_GRAVITY as _POINTER_GRAVITY

type _ELEMENT_ADJACENCY as long
enum
	ELEM_ADJ_BeforeBegin = 0
	ELEM_ADJ_AfterBegin = 1
	ELEM_ADJ_BeforeEnd = 2
	ELEM_ADJ_AfterEnd = 3
	ELEMENT_ADJACENCY_Max = 2147483647
end enum

type ELEMENT_ADJACENCY as _ELEMENT_ADJACENCY

type _MARKUP_CONTEXT_TYPE as long
enum
	CONTEXT_TYPE_None = 0
	CONTEXT_TYPE_Text = 1
	CONTEXT_TYPE_EnterScope = 2
	CONTEXT_TYPE_ExitScope = 3
	CONTEXT_TYPE_NoScope = 4
	MARKUP_CONTEXT_TYPE_Max = 2147483647
end enum

type MARKUP_CONTEXT_TYPE as _MARKUP_CONTEXT_TYPE

type _FINDTEXT_FLAGS as long
enum
	FINDTEXT_BACKWARDS = &h1
	FINDTEXT_WHOLEWORD = &h2
	FINDTEXT_MATCHCASE = &h4
	FINDTEXT_RAW = &h20000
	FINDTEXT_MATCHDIAC = &h20000000
	FINDTEXT_MATCHKASHIDA = &h40000000
	FINDTEXT_MATCHALEFHAMZA = &h80000000
	FINDTEXT_FLAGS_Max = 2147483647
end enum

type FINDTEXT_FLAGS as _FINDTEXT_FLAGS

type _MOVEUNIT_ACTION as long
enum
	MOVEUNIT_PREVCHAR = 0
	MOVEUNIT_NEXTCHAR = 1
	MOVEUNIT_PREVCLUSTERBEGIN = 2
	MOVEUNIT_NEXTCLUSTERBEGIN = 3
	MOVEUNIT_PREVCLUSTEREND = 4
	MOVEUNIT_NEXTCLUSTEREND = 5
	MOVEUNIT_PREVWORDBEGIN = 6
	MOVEUNIT_NEXTWORDBEGIN = 7
	MOVEUNIT_PREVWORDEND = 8
	MOVEUNIT_NEXTWORDEND = 9
	MOVEUNIT_PREVPROOFWORD = 10
	MOVEUNIT_NEXTPROOFWORD = 11
	MOVEUNIT_NEXTURLBEGIN = 12
	MOVEUNIT_PREVURLBEGIN = 13
	MOVEUNIT_NEXTURLEND = 14
	MOVEUNIT_PREVURLEND = 15
	MOVEUNIT_PREVSENTENCE = 16
	MOVEUNIT_NEXTSENTENCE = 17
	MOVEUNIT_PREVBLOCK = 18
	MOVEUNIT_NEXTBLOCK = 19
	MOVEUNIT_ACTION_Max = 2147483647
end enum

type MOVEUNIT_ACTION as _MOVEUNIT_ACTION

type _PARSE_FLAGS as long
enum
	PARSE_ABSOLUTIFYIE40URLS = &h1
	PARSE_FLAGS_Max = 2147483647
end enum

type PARSE_FLAGS as _PARSE_FLAGS

type _ELEMENT_TAG_ID as long
enum
	TAGID_NULL = 0
	TAGID_UNKNOWN = 1
	TAGID_A = 2
	TAGID_ACRONYM = 3
	TAGID_ADDRESS = 4
	TAGID_APPLET = 5
	TAGID_AREA = 6
	TAGID_B = 7
	TAGID_BASE = 8
	TAGID_BASEFONT = 9
	TAGID_BDO = 10
	TAGID_BGSOUND = 11
	TAGID_BIG = 12
	TAGID_BLINK = 13
	TAGID_BLOCKQUOTE = 14
	TAGID_BODY = 15
	TAGID_BR = 16
	TAGID_BUTTON = 17
	TAGID_CAPTION = 18
	TAGID_CENTER = 19
	TAGID_CITE = 20
	TAGID_CODE = 21
	TAGID_COL = 22
	TAGID_COLGROUP = 23
	TAGID_COMMENT = 24
	TAGID_COMMENT_RAW = 25
	TAGID_DD = 26
	TAGID_DEL = 27
	TAGID_DFN = 28
	TAGID_DIR = 29
	TAGID_DIV = 30
	TAGID_DL = 31
	TAGID_DT = 32
	TAGID_EM = 33
	TAGID_EMBED = 34
	TAGID_FIELDSET = 35
	TAGID_FONT = 36
	TAGID_FORM = 37
	TAGID_FRAME = 38
	TAGID_FRAMESET = 39
	TAGID_GENERIC = 40
	TAGID_H1 = 41
	TAGID_H2 = 42
	TAGID_H3 = 43
	TAGID_H4 = 44
	TAGID_H5 = 45
	TAGID_H6 = 46
	TAGID_HEAD = 47
	TAGID_HR = 48
	TAGID_HTML = 49
	TAGID_I = 50
	TAGID_IFRAME = 51
	TAGID_IMG = 52
	TAGID_INPUT = 53
	TAGID_INS = 54
	TAGID_KBD = 55
	TAGID_LABEL = 56
	TAGID_LEGEND = 57
	TAGID_LI = 58
	TAGID_LINK = 59
	TAGID_LISTING = 60
	TAGID_MAP = 61
	TAGID_MARQUEE = 62
	TAGID_MENU = 63
	TAGID_META = 64
	TAGID_NEXTID = 65
	TAGID_NOBR = 66
	TAGID_NOEMBED = 67
	TAGID_NOFRAMES = 68
	TAGID_NOSCRIPT = 69
	TAGID_OBJECT = 70
	TAGID_OL = 71
	TAGID_OPTION = 72
	TAGID_P = 73
	TAGID_PARAM = 74
	TAGID_PLAINTEXT = 75
	TAGID_PRE = 76
	TAGID_Q = 77
	TAGID_RP = 78
	TAGID_RT = 79
	TAGID_RUBY = 80
	TAGID_S = 81
	TAGID_SAMP = 82
	TAGID_SCRIPT = 83
	TAGID_SELECT = 84
	TAGID_SMALL = 85
	TAGID_SPAN = 86
	TAGID_STRIKE = 87
	TAGID_STRONG = 88
	TAGID_STYLE = 89
	TAGID_SUB = 90
	TAGID_SUP = 91
	TAGID_TABLE = 92
	TAGID_TBODY = 93
	TAGID_TC = 94
	TAGID_TD = 95
	TAGID_TEXTAREA = 96
	TAGID_TFOOT = 97
	TAGID_TH = 98
	TAGID_THEAD = 99
	TAGID_TITLE = 100
	TAGID_TR = 101
	TAGID_TT = 102
	TAGID_U = 103
	TAGID_UL = 104
	TAGID_VAR = 105
	TAGID_WBR = 106
	TAGID_XMP = 107
	TAGID_ROOT = 108
	TAGID_OPTGROUP = 109
	TAGID_COUNT = 110
	TAGID_LAST_PREDEFINED = 10000
	ELEMENT_TAG_ID_Max = 2147483647
end enum

type ELEMENT_TAG_ID as _ELEMENT_TAG_ID

type _SELECTION_TYPE as long
enum
	SELECTION_TYPE_None = 0
	SELECTION_TYPE_Caret = 1
	SELECTION_TYPE_Text = 2
	SELECTION_TYPE_Control = 3
	SELECTION_TYPE_Max = 2147483647
end enum

type SELECTION_TYPE as _SELECTION_TYPE

type _SAVE_SEGMENTS_FLAGS as long
enum
	SAVE_SEGMENTS_NoIE4SelectionCompat = &h1
	SAVE_SEGMENTS_FLAGS_Max = 2147483647
end enum

type SAVE_SEGMENTS_FLAGS as _SAVE_SEGMENTS_FLAGS

type _CARET_DIRECTION as long
enum
	CARET_DIRECTION_INDETERMINATE = 0
	CARET_DIRECTION_SAME = 1
	CARET_DIRECTION_BACKWARD = 2
	CARET_DIRECTION_FORWARD = 3
	CARET_DIRECTION_Max = 2147483647
end enum

type CARET_DIRECTION as _CARET_DIRECTION

type _LINE_DIRECTION as long
enum
	LINE_DIRECTION_RightToLeft = 1
	LINE_DIRECTION_LeftToRight = 2
	LINE_DIRECTION_Max = 2147483647
end enum

type LINE_DIRECTION as _LINE_DIRECTION

type _HT_OPTIONS as long
enum
	HT_OPT_AllowAfterEOL = &h1
	HT_OPTIONS_Max = 2147483647
end enum

type HT_OPTIONS as _HT_OPTIONS

type _HT_RESULTS as long
enum
	HT_RESULTS_Glyph = &h1
	HT_RESULTS_Max = 2147483647
end enum

type HT_RESULTS as _HT_RESULTS

type _DISPLAY_MOVEUNIT as long
enum
	DISPLAY_MOVEUNIT_PreviousLine = 1
	DISPLAY_MOVEUNIT_NextLine = 2
	DISPLAY_MOVEUNIT_CurrentLineStart = 3
	DISPLAY_MOVEUNIT_CurrentLineEnd = 4
	DISPLAY_MOVEUNIT_TopOfWindow = 5
	DISPLAY_MOVEUNIT_BottomOfWindow = 6
	DISPLAY_MOVEUNIT_Max = 2147483647
end enum

type DISPLAY_MOVEUNIT as _DISPLAY_MOVEUNIT

type _DISPLAY_GRAVITY as long
enum
	DISPLAY_GRAVITY_PreviousLine = 1
	DISPLAY_GRAVITY_NextLine = 2
	DISPLAY_GRAVITY_Max = 2147483647
end enum

type DISPLAY_GRAVITY as _DISPLAY_GRAVITY

type _DISPLAY_BREAK as long
enum
	DISPLAY_BREAK_None = 0
	DISPLAY_BREAK_Block = &h1
	DISPLAY_BREAK_Break = &h2
	DISPLAY_BREAK_Max = 2147483647
end enum

type DISPLAY_BREAK as _DISPLAY_BREAK

type _COORD_SYSTEM as long
enum
	COORD_SYSTEM_GLOBAL = 0
	COORD_SYSTEM_PARENT = 1
	COORD_SYSTEM_CONTAINER = 2
	COORD_SYSTEM_CONTENT = 3
	COORD_SYSTEM_FRAME = 4
	COORD_SYSTEM_Max = 2147483647
end enum

type COORD_SYSTEM as _COORD_SYSTEM
extern CLSID_HtmlDlgSafeHelper as const GUID
extern CLSID_BlockFormats as const GUID
extern CLSID_FontNames as const GUID
extern CLSID_CHTMLNamespace as const GUID
extern CLSID_CHTMLNamespaceCollection as const GUID

type _HTML_PAINTER as long
enum
	HTMLPAINTER_OPAQUE = &h1
	HTMLPAINTER_TRANSPARENT = &h2
	HTMLPAINTER_ALPHA = &h4
	HTMLPAINTER_COMPLEX = &h8
	HTMLPAINTER_OVERLAY = &h10
	HTMLPAINTER_HITTEST = &h20
	HTMLPAINTER_SURFACE = &h100
	HTMLPAINTER_3DSURFACE = &h200
	HTMLPAINTER_NOBAND = &h400
	HTMLPAINTER_NODC = &h1000
	HTMLPAINTER_NOPHYSICALCLIP = &h2000
	HTMLPAINTER_NOSAVEDC = &h4000
	HTMLPAINTER_SUPPORTS_XFORM = &h8000
	HTMLPAINTER_EXPAND = &h10000
	HTMLPAINTER_NOSCROLLBITS = &h20000
	HTML_PAINTER_Max = 2147483647
end enum

type HTML_PAINTER as _HTML_PAINTER

type _HTML_PAINT_ZORDER as long
enum
	HTMLPAINT_ZORDER_NONE = 0
	HTMLPAINT_ZORDER_REPLACE_ALL = 1
	HTMLPAINT_ZORDER_REPLACE_CONTENT = 2
	HTMLPAINT_ZORDER_REPLACE_BACKGROUND = 3
	HTMLPAINT_ZORDER_BELOW_CONTENT = 4
	HTMLPAINT_ZORDER_BELOW_FLOW = 5
	HTMLPAINT_ZORDER_ABOVE_FLOW = 6
	HTMLPAINT_ZORDER_ABOVE_CONTENT = 7
	HTMLPAINT_ZORDER_WINDOW_TOP = 8
	HTML_PAINT_ZORDER_Max = 2147483647
end enum

type HTML_PAINT_ZORDER as _HTML_PAINT_ZORDER

type _HTML_PAINT_DRAW_FLAGS as long
enum
	HTMLPAINT_DRAW_UPDATEREGION = &h1
	HTMLPAINT_DRAW_USE_XFORM = &h2
	HTML_PAINT_DRAW_FLAGS_Max = 2147483647
end enum

type HTML_PAINT_DRAW_FLAGS as _HTML_PAINT_DRAW_FLAGS

type _HTML_PAINT_EVENT_FLAGS as long
enum
	HTMLPAINT_EVENT_TARGET = &h1
	HTMLPAINT_EVENT_SETCURSOR = &h2
	HTML_PAINT_EVENT_FLAGS_Max = 2147483647
end enum

type HTML_PAINT_EVENT_FLAGS as _HTML_PAINT_EVENT_FLAGS

type _HTML_PAINT_DRAW_INFO_FLAGS as long
enum
	HTMLPAINT_DRAWINFO_VIEWPORT = &h1
	HTMLPAINT_DRAWINFO_UPDATEREGION = &h2
	HTMLPAINT_DRAWINFO_XFORM = &h4
	HTML_PAINT_DRAW_INFO_FLAGS_Max = 2147483647
end enum

type HTML_PAINT_DRAW_INFO_FLAGS as _HTML_PAINT_DRAW_INFO_FLAGS

type _HTML_PAINTER_INFO
	lFlags as LONG
	lZOrder as LONG
	iidDrawObject as IID
	rcExpand as RECT
end type

type HTML_PAINTER_INFO as _HTML_PAINTER_INFO

type _HTML_PAINT_XFORM
	eM11 as FLOAT
	eM12 as FLOAT
	eM21 as FLOAT
	eM22 as FLOAT
	eDx as FLOAT
	eDy as FLOAT
end type

type HTML_PAINT_XFORM as _HTML_PAINT_XFORM

type _HTML_PAINT_DRAW_INFO
	rcViewport as RECT
	hrgnUpdate as HRGN
	xform as HTML_PAINT_XFORM
end type

type HTML_PAINT_DRAW_INFO as _HTML_PAINT_DRAW_INFO

type _HTMLDlgFlag as long
enum
	HTMLDlgFlagNo = 0
	HTMLDlgFlagOff = 0
	HTMLDlgFlag0 = 0
	HTMLDlgFlagYes = 1
	HTMLDlgFlagOn = 1
	HTMLDlgFlag1 = 1
	HTMLDlgFlagNotSet = -1
	HTMLDlgFlag_Max = 2147483647
end enum

type HTMLDlgFlag as _HTMLDlgFlag

type _HTMLDlgBorder as long
enum
	HTMLDlgBorderThin = 0
	HTMLDlgBorderThick = &h40000
	HTMLDlgBorder_Max = 2147483647
end enum

type HTMLDlgBorder as _HTMLDlgBorder

type _HTMLDlgEdge as long
enum
	HTMLDlgEdgeSunken = 0
	HTMLDlgEdgeRaised = 16
	HTMLDlgEdge_Max = 2147483647
end enum

type HTMLDlgEdge as _HTMLDlgEdge

type _HTMLDlgCenter as long
enum
	HTMLDlgCenterNo = 0
	HTMLDlgCenterOff = 0
	HTMLDlgCenter0 = 0
	HTMLDlgCenterYes = 1
	HTMLDlgCenterOn = 1
	HTMLDlgCenter1 = 1
	HTMLDlgCenterParent = 1
	HTMLDlgCenterDesktop = 2
	HTMLDlgCenter_Max = 2147483647
end enum

type HTMLDlgCenter as _HTMLDlgCenter
extern CLSID_CThreadDialogProcParam as const GUID
extern CLSID_CHTMLDlg as const GUID
extern CLSID_CHTMLPopup as const GUID

type _HTMLAppFlag as long
enum
	HTMLAppFlagNo = 0
	HTMLAppFlagOff = 0
	HTMLAppFlag0 = 0
	HTMLAppFlagYes = 1
	HTMLAppFlagOn = 1
	HTMLAppFlag1 = 1
	HTMLAppFlag_Max = 2147483647
end enum

type HTMLAppFlag as _HTMLAppFlag

type _HTMLMinimizeFlag as long
enum
	HTMLMinimizeFlagNo = 0
	HTMLMinimizeFlagYes = &h20000
	HTMLMinimizeFlag_Max = 2147483647
end enum

type HTMLMinimizeFlag as _HTMLMinimizeFlag

type _HTMLMaximizeFlag as long
enum
	HTMLMaximizeFlagNo = 0
	HTMLMaximizeFlagYes = &h10000
	HTMLMaximizeFlag_Max = 2147483647
end enum

type HTMLMaximizeFlag as _HTMLMaximizeFlag

type _HTMLCaptionFlag as long
enum
	HTMLCaptionFlagNo = 0
	HTMLCaptionFlagYes = &hc00000
	HTMLCaptionFlag_Max = 2147483647
end enum

type HTMLCaptionFlag as _HTMLCaptionFlag

type _HTMLSysMenuFlag as long
enum
	HTMLSysMenuFlagNo = 0
	HTMLSysMenuFlagYes = &h80000
	HTMLSysMenuFlag_Max = 2147483647
end enum

type HTMLSysMenuFlag as _HTMLSysMenuFlag

type _HTMLBorder as long
enum
	HTMLBorderNone = 0
	HTMLBorderThick = &h40000
	HTMLBorderDialog = &h400000
	HTMLBorderThin = &h800000
	HTMLBorder_Max = 2147483647
end enum

type HTMLBorder as _HTMLBorder

type _HTMLBorderStyle as long
enum
	HTMLBorderStyleNormal = 0
	HTMLBorderStyleRaised = &h100
	HTMLBorderStyleSunken = &h200
	HTMLBorderStylecombined = &h300
	HTMLBorderStyleStatic = &h20000
	HTMLBorderStyle_Max = 2147483647
end enum

type HTMLBorderStyle as _HTMLBorderStyle

type _HTMLWindowState as long
enum
	HTMLWindowStateNormal = 1
	HTMLWindowStateMaximize = 3
	HTMLWindowStateMinimize = 6
	HTMLWindowState_Max = 2147483647
end enum

type HTMLWindowState as _HTMLWindowState
extern CLSID_CAppBehavior as const GUID

type _BEHAVIOR_EVENT as long
enum
	BEHAVIOREVENT_FIRST = 0
	BEHAVIOREVENT_CONTENTREADY = 0
	BEHAVIOREVENT_DOCUMENTREADY = 1
	BEHAVIOREVENT_APPLYSTYLE = 2
	BEHAVIOREVENT_DOCUMENTCONTEXTCHANGE = 3
	BEHAVIOREVENT_CONTENTSAVE = 4
	BEHAVIOREVENT_LAST = 4
	BEHAVIOR_EVENT_Max = 2147483647
end enum

type BEHAVIOR_EVENT as _BEHAVIOR_EVENT

type _BEHAVIOR_EVENT_FLAGS as long
enum
	BEHAVIOREVENTFLAGS_BUBBLE = 1
	BEHAVIOREVENTFLAGS_STANDARDADDITIVE = 2
	BEHAVIOR_EVENT_FLAGS_Max = 2147483647
end enum

type BEHAVIOR_EVENT_FLAGS as _BEHAVIOR_EVENT_FLAGS

type _BEHAVIOR_RENDER_INFO as long
enum
	BEHAVIORRENDERINFO_BEFOREBACKGROUND = &h1
	BEHAVIORRENDERINFO_AFTERBACKGROUND = &h2
	BEHAVIORRENDERINFO_BEFORECONTENT = &h4
	BEHAVIORRENDERINFO_AFTERCONTENT = &h8
	BEHAVIORRENDERINFO_AFTERFOREGROUND = &h20
	BEHAVIORRENDERINFO_ABOVECONTENT = &h28
	BEHAVIORRENDERINFO_ALLLAYERS = &hff
	BEHAVIORRENDERINFO_DISABLEBACKGROUND = &h100
	BEHAVIORRENDERINFO_DISABLENEGATIVEZ = &h200
	BEHAVIORRENDERINFO_DISABLECONTENT = &h400
	BEHAVIORRENDERINFO_DISABLEPOSITIVEZ = &h800
	BEHAVIORRENDERINFO_DISABLEALLLAYERS = &hf00
	BEHAVIORRENDERINFO_HITTESTING = &h1000
	BEHAVIORRENDERINFO_SURFACE = &h100000
	BEHAVIORRENDERINFO_3DSURFACE = &h200000
	BEHAVIOR_RENDER_INFO_Max = 2147483647
end enum

type BEHAVIOR_RENDER_INFO as _BEHAVIOR_RENDER_INFO

type _BEHAVIOR_RELATION as long
enum
	BEHAVIOR_FIRSTRELATION = 0
	BEHAVIOR_SAMEELEMENT = 0
	BEHAVIOR_PARENT = 1
	BEHAVIOR_CHILD = 2
	BEHAVIOR_SIBLING = 3
	BEHAVIOR_LASTRELATION = 3
	BEHAVIOR_RELATION_Max = 2147483647
end enum

type BEHAVIOR_RELATION as _BEHAVIOR_RELATION

type _BEHAVIOR_LAYOUT_INFO as long
enum
	BEHAVIORLAYOUTINFO_FULLDELEGATION = &h1
	BEHAVIORLAYOUTINFO_MODIFYNATURAL = &h2
	BEHAVIORLAYOUTINFO_MAPSIZE = &h4
	BEHAVIOR_LAYOUT_INFO_Max = 2147483647
end enum

type BEHAVIOR_LAYOUT_INFO as _BEHAVIOR_LAYOUT_INFO

type _BEHAVIOR_LAYOUT_MODE as long
enum
	BEHAVIORLAYOUTMODE_NATURAL = &h1
	BEHAVIORLAYOUTMODE_MINWIDTH = &h2
	BEHAVIORLAYOUTMODE_MAXWIDTH = &h4
	BEHAVIORLAYOUTMODE_MEDIA_RESOLUTION = &h4000
	BEHAVIORLAYOUTMODE_FINAL_PERCENT = &h8000
	BEHAVIOR_LAYOUT_MODE_Max = 2147483647
end enum

type BEHAVIOR_LAYOUT_MODE as _BEHAVIOR_LAYOUT_MODE

type _ELEMENTDESCRIPTOR_FLAGS as long
enum
	ELEMENTDESCRIPTORFLAGS_LITERAL = 1
	ELEMENTDESCRIPTORFLAGS_NESTED_LITERAL = 2
	ELEMENTDESCRIPTOR_FLAGS_Max = 2147483647
end enum

type ELEMENTDESCRIPTOR_FLAGS as _ELEMENTDESCRIPTOR_FLAGS

type _ELEMENTNAMESPACE_FLAGS as long
enum
	ELEMENTNAMESPACEFLAGS_ALLOWANYTAG = &h1
	ELEMENTNAMESPACEFLAGS_QUERYFORUNKNOWNTAGS = &h2
	ELEMENTNAMESPACE_FLAGS_Max = 2147483647
end enum

type ELEMENTNAMESPACE_FLAGS as _ELEMENTNAMESPACE_FLAGS
extern LIBID_MSHTML as const IID
#define __IHTMLEventObj_INTERFACE_DEFINED__
extern IID_IHTMLEventObj as const IID
type IHTMLEventObj as IHTMLEventObj_
type IHTMLElement as IHTMLElement_

type IHTMLEventObjVtbl
	QueryInterface as function(byval This as IHTMLEventObj ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLEventObj ptr) as ULONG
	Release as function(byval This as IHTMLEventObj ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLEventObj ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLEventObj ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLEventObj ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLEventObj ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	get_srcElement as function(byval This as IHTMLEventObj ptr, byval p as IHTMLElement ptr ptr) as HRESULT
	get_altKey as function(byval This as IHTMLEventObj ptr, byval p as VARIANT_BOOL ptr) as HRESULT
	get_ctrlKey as function(byval This as IHTMLEventObj ptr, byval p as VARIANT_BOOL ptr) as HRESULT
	get_shiftKey as function(byval This as IHTMLEventObj ptr, byval p as VARIANT_BOOL ptr) as HRESULT
	put_returnValue as function(byval This as IHTMLEventObj ptr, byval v as VARIANT) as HRESULT
	get_returnValue as function(byval This as IHTMLEventObj ptr, byval p as VARIANT ptr) as HRESULT
	put_cancelBubble as function(byval This as IHTMLEventObj ptr, byval v as VARIANT_BOOL) as HRESULT
	get_cancelBubble as function(byval This as IHTMLEventObj ptr, byval p as VARIANT_BOOL ptr) as HRESULT
	get_fromElement as function(byval This as IHTMLEventObj ptr, byval p as IHTMLElement ptr ptr) as HRESULT
	get_toElement as function(byval This as IHTMLEventObj ptr, byval p as IHTMLElement ptr ptr) as HRESULT
	put_keyCode as function(byval This as IHTMLEventObj ptr, byval v as long) as HRESULT
	get_keyCode as function(byval This as IHTMLEventObj ptr, byval p as long ptr) as HRESULT
	get_button as function(byval This as IHTMLEventObj ptr, byval p as long ptr) as HRESULT
	get_type as function(byval This as IHTMLEventObj ptr, byval p as BSTR ptr) as HRESULT
	get_qualifier as function(byval This as IHTMLEventObj ptr, byval p as BSTR ptr) as HRESULT
	get_reason as function(byval This as IHTMLEventObj ptr, byval p as long ptr) as HRESULT
	get_x as function(byval This as IHTMLEventObj ptr, byval p as long ptr) as HRESULT
	get_y as function(byval This as IHTMLEventObj ptr, byval p as long ptr) as HRESULT
	get_clientX as function(byval This as IHTMLEventObj ptr, byval p as long ptr) as HRESULT
	get_clientY as function(byval This as IHTMLEventObj ptr, byval p as long ptr) as HRESULT
	get_offsetX as function(byval This as IHTMLEventObj ptr, byval p as long ptr) as HRESULT
	get_offsetY as function(byval This as IHTMLEventObj ptr, byval p as long ptr) as HRESULT
	get_screenX as function(byval This as IHTMLEventObj ptr, byval p as long ptr) as HRESULT
	get_screenY as function(byval This as IHTMLEventObj ptr, byval p as long ptr) as HRESULT
	get_srcFilter as function(byval This as IHTMLEventObj ptr, byval p as IDispatch ptr ptr) as HRESULT
end type

type IHTMLEventObj_
	lpVtbl as IHTMLEventObjVtbl ptr
end type

#define IHTMLEventObj_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLEventObj_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLEventObj_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLEventObj_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLEventObj_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLEventObj_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLEventObj_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLEventObj_get_srcElement(This, p) (This)->lpVtbl->get_srcElement(This, p)
#define IHTMLEventObj_get_altKey(This, p) (This)->lpVtbl->get_altKey(This, p)
#define IHTMLEventObj_get_ctrlKey(This, p) (This)->lpVtbl->get_ctrlKey(This, p)
#define IHTMLEventObj_get_shiftKey(This, p) (This)->lpVtbl->get_shiftKey(This, p)
#define IHTMLEventObj_put_returnValue(This, v) (This)->lpVtbl->put_returnValue(This, v)
#define IHTMLEventObj_get_returnValue(This, p) (This)->lpVtbl->get_returnValue(This, p)
#define IHTMLEventObj_put_cancelBubble(This, v) (This)->lpVtbl->put_cancelBubble(This, v)
#define IHTMLEventObj_get_cancelBubble(This, p) (This)->lpVtbl->get_cancelBubble(This, p)
#define IHTMLEventObj_get_fromElement(This, p) (This)->lpVtbl->get_fromElement(This, p)
#define IHTMLEventObj_get_toElement(This, p) (This)->lpVtbl->get_toElement(This, p)
#define IHTMLEventObj_put_keyCode(This, v) (This)->lpVtbl->put_keyCode(This, v)
#define IHTMLEventObj_get_keyCode(This, p) (This)->lpVtbl->get_keyCode(This, p)
#define IHTMLEventObj_get_button(This, p) (This)->lpVtbl->get_button(This, p)
#define IHTMLEventObj_get_type(This, p) (This)->lpVtbl->get_type(This, p)
#define IHTMLEventObj_get_qualifier(This, p) (This)->lpVtbl->get_qualifier(This, p)
#define IHTMLEventObj_get_reason(This, p) (This)->lpVtbl->get_reason(This, p)
#define IHTMLEventObj_get_x(This, p) (This)->lpVtbl->get_x(This, p)
#define IHTMLEventObj_get_y(This, p) (This)->lpVtbl->get_y(This, p)
#define IHTMLEventObj_get_clientX(This, p) (This)->lpVtbl->get_clientX(This, p)
#define IHTMLEventObj_get_clientY(This, p) (This)->lpVtbl->get_clientY(This, p)
#define IHTMLEventObj_get_offsetX(This, p) (This)->lpVtbl->get_offsetX(This, p)
#define IHTMLEventObj_get_offsetY(This, p) (This)->lpVtbl->get_offsetY(This, p)
#define IHTMLEventObj_get_screenX(This, p) (This)->lpVtbl->get_screenX(This, p)
#define IHTMLEventObj_get_screenY(This, p) (This)->lpVtbl->get_screenY(This, p)
#define IHTMLEventObj_get_srcFilter(This, p) (This)->lpVtbl->get_srcFilter(This, p)

declare function IHTMLEventObj_get_srcElement_Proxy(byval This as IHTMLEventObj ptr, byval p as IHTMLElement ptr ptr) as HRESULT
declare sub IHTMLEventObj_get_srcElement_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLEventObj_get_altKey_Proxy(byval This as IHTMLEventObj ptr, byval p as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLEventObj_get_altKey_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLEventObj_get_ctrlKey_Proxy(byval This as IHTMLEventObj ptr, byval p as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLEventObj_get_ctrlKey_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLEventObj_get_shiftKey_Proxy(byval This as IHTMLEventObj ptr, byval p as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLEventObj_get_shiftKey_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLEventObj_put_returnValue_Proxy(byval This as IHTMLEventObj ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLEventObj_put_returnValue_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLEventObj_get_returnValue_Proxy(byval This as IHTMLEventObj ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLEventObj_get_returnValue_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLEventObj_put_cancelBubble_Proxy(byval This as IHTMLEventObj ptr, byval v as VARIANT_BOOL) as HRESULT
declare sub IHTMLEventObj_put_cancelBubble_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLEventObj_get_cancelBubble_Proxy(byval This as IHTMLEventObj ptr, byval p as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLEventObj_get_cancelBubble_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLEventObj_get_fromElement_Proxy(byval This as IHTMLEventObj ptr, byval p as IHTMLElement ptr ptr) as HRESULT
declare sub IHTMLEventObj_get_fromElement_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLEventObj_get_toElement_Proxy(byval This as IHTMLEventObj ptr, byval p as IHTMLElement ptr ptr) as HRESULT
declare sub IHTMLEventObj_get_toElement_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLEventObj_put_keyCode_Proxy(byval This as IHTMLEventObj ptr, byval v as long) as HRESULT
declare sub IHTMLEventObj_put_keyCode_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLEventObj_get_keyCode_Proxy(byval This as IHTMLEventObj ptr, byval p as long ptr) as HRESULT
declare sub IHTMLEventObj_get_keyCode_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLEventObj_get_button_Proxy(byval This as IHTMLEventObj ptr, byval p as long ptr) as HRESULT
declare sub IHTMLEventObj_get_button_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLEventObj_get_type_Proxy(byval This as IHTMLEventObj ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLEventObj_get_type_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLEventObj_get_qualifier_Proxy(byval This as IHTMLEventObj ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLEventObj_get_qualifier_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLEventObj_get_reason_Proxy(byval This as IHTMLEventObj ptr, byval p as long ptr) as HRESULT
declare sub IHTMLEventObj_get_reason_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLEventObj_get_x_Proxy(byval This as IHTMLEventObj ptr, byval p as long ptr) as HRESULT
declare sub IHTMLEventObj_get_x_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLEventObj_get_y_Proxy(byval This as IHTMLEventObj ptr, byval p as long ptr) as HRESULT
declare sub IHTMLEventObj_get_y_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLEventObj_get_clientX_Proxy(byval This as IHTMLEventObj ptr, byval p as long ptr) as HRESULT
declare sub IHTMLEventObj_get_clientX_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLEventObj_get_clientY_Proxy(byval This as IHTMLEventObj ptr, byval p as long ptr) as HRESULT
declare sub IHTMLEventObj_get_clientY_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLEventObj_get_offsetX_Proxy(byval This as IHTMLEventObj ptr, byval p as long ptr) as HRESULT
declare sub IHTMLEventObj_get_offsetX_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLEventObj_get_offsetY_Proxy(byval This as IHTMLEventObj ptr, byval p as long ptr) as HRESULT
declare sub IHTMLEventObj_get_offsetY_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLEventObj_get_screenX_Proxy(byval This as IHTMLEventObj ptr, byval p as long ptr) as HRESULT
declare sub IHTMLEventObj_get_screenX_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLEventObj_get_screenY_Proxy(byval This as IHTMLEventObj ptr, byval p as long ptr) as HRESULT
declare sub IHTMLEventObj_get_screenY_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLEventObj_get_srcFilter_Proxy(byval This as IHTMLEventObj ptr, byval p as IDispatch ptr ptr) as HRESULT
declare sub IHTMLEventObj_get_srcFilter_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IElementBehaviorSite_INTERFACE_DEFINED__
extern IID_IElementBehaviorSite as const IID
type IElementBehaviorSite as IElementBehaviorSite_

type IElementBehaviorSiteVtbl
	QueryInterface as function(byval This as IElementBehaviorSite ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IElementBehaviorSite ptr) as ULONG
	Release as function(byval This as IElementBehaviorSite ptr) as ULONG
	GetElement as function(byval This as IElementBehaviorSite ptr, byval ppElement as IHTMLElement ptr ptr) as HRESULT
	RegisterNotification as function(byval This as IElementBehaviorSite ptr, byval lEvent as LONG) as HRESULT
end type

type IElementBehaviorSite_
	lpVtbl as IElementBehaviorSiteVtbl ptr
end type

#define IElementBehaviorSite_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IElementBehaviorSite_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IElementBehaviorSite_Release(This) (This)->lpVtbl->Release(This)
#define IElementBehaviorSite_GetElement(This, ppElement) (This)->lpVtbl->GetElement(This, ppElement)
#define IElementBehaviorSite_RegisterNotification(This, lEvent) (This)->lpVtbl->RegisterNotification(This, lEvent)

declare function IElementBehaviorSite_GetElement_Proxy(byval This as IElementBehaviorSite ptr, byval ppElement as IHTMLElement ptr ptr) as HRESULT
declare sub IElementBehaviorSite_GetElement_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IElementBehaviorSite_RegisterNotification_Proxy(byval This as IElementBehaviorSite ptr, byval lEvent as LONG) as HRESULT
declare sub IElementBehaviorSite_RegisterNotification_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IElementBehavior_INTERFACE_DEFINED__
extern IID_IElementBehavior as const IID
type IElementBehavior as IElementBehavior_

type IElementBehaviorVtbl
	QueryInterface as function(byval This as IElementBehavior ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IElementBehavior ptr) as ULONG
	Release as function(byval This as IElementBehavior ptr) as ULONG
	Init as function(byval This as IElementBehavior ptr, byval pBehaviorSite as IElementBehaviorSite ptr) as HRESULT
	Notify as function(byval This as IElementBehavior ptr, byval lEvent as LONG, byval pVar as VARIANT ptr) as HRESULT
	Detach as function(byval This as IElementBehavior ptr) as HRESULT
end type

type IElementBehavior_
	lpVtbl as IElementBehaviorVtbl ptr
end type

#define IElementBehavior_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IElementBehavior_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IElementBehavior_Release(This) (This)->lpVtbl->Release(This)
#define IElementBehavior_Init(This, pBehaviorSite) (This)->lpVtbl->Init(This, pBehaviorSite)
#define IElementBehavior_Notify(This, lEvent, pVar) (This)->lpVtbl->Notify(This, lEvent, pVar)
#define IElementBehavior_Detach(This) (This)->lpVtbl->Detach(This)

declare function IElementBehavior_Init_Proxy(byval This as IElementBehavior ptr, byval pBehaviorSite as IElementBehaviorSite ptr) as HRESULT
declare sub IElementBehavior_Init_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IElementBehavior_Notify_Proxy(byval This as IElementBehavior ptr, byval lEvent as LONG, byval pVar as VARIANT ptr) as HRESULT
declare sub IElementBehavior_Notify_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IElementBehavior_Detach_Proxy(byval This as IElementBehavior ptr) as HRESULT
declare sub IElementBehavior_Detach_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IElementBehaviorFactory_INTERFACE_DEFINED__
extern IID_IElementBehaviorFactory as const IID
extern SID_SElementBehaviorFactory alias "IID_IElementBehaviorFactory" as const IID
type IElementBehaviorFactory as IElementBehaviorFactory_

type IElementBehaviorFactoryVtbl
	QueryInterface as function(byval This as IElementBehaviorFactory ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IElementBehaviorFactory ptr) as ULONG
	Release as function(byval This as IElementBehaviorFactory ptr) as ULONG
	FindBehavior as function(byval This as IElementBehaviorFactory ptr, byval bstrBehavior as BSTR, byval bstrBehaviorUrl as BSTR, byval pSite as IElementBehaviorSite ptr, byval ppBehavior as IElementBehavior ptr ptr) as HRESULT
end type

type IElementBehaviorFactory_
	lpVtbl as IElementBehaviorFactoryVtbl ptr
end type

#define IElementBehaviorFactory_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IElementBehaviorFactory_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IElementBehaviorFactory_Release(This) (This)->lpVtbl->Release(This)
#define IElementBehaviorFactory_FindBehavior(This, bstrBehavior, bstrBehaviorUrl, pSite, ppBehavior) (This)->lpVtbl->FindBehavior(This, bstrBehavior, bstrBehaviorUrl, pSite, ppBehavior)
declare function IElementBehaviorFactory_FindBehavior_Proxy(byval This as IElementBehaviorFactory ptr, byval bstrBehavior as BSTR, byval bstrBehaviorUrl as BSTR, byval pSite as IElementBehaviorSite ptr, byval ppBehavior as IElementBehavior ptr ptr) as HRESULT
declare sub IElementBehaviorFactory_FindBehavior_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IElementBehaviorSiteOM_INTERFACE_DEFINED__
extern IID_IElementBehaviorSiteOM as const IID
type IElementBehaviorSiteOM as IElementBehaviorSiteOM_

type IElementBehaviorSiteOMVtbl
	QueryInterface as function(byval This as IElementBehaviorSiteOM ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IElementBehaviorSiteOM ptr) as ULONG
	Release as function(byval This as IElementBehaviorSiteOM ptr) as ULONG
	RegisterEvent as function(byval This as IElementBehaviorSiteOM ptr, byval pchEvent as LPOLESTR, byval lFlags as LONG, byval plCookie as LONG ptr) as HRESULT
	GetEventCookie as function(byval This as IElementBehaviorSiteOM ptr, byval pchEvent as LPOLESTR, byval plCookie as LONG ptr) as HRESULT
	FireEvent as function(byval This as IElementBehaviorSiteOM ptr, byval lCookie as LONG, byval pEventObject as IHTMLEventObj ptr) as HRESULT
	CreateEventObject as function(byval This as IElementBehaviorSiteOM ptr, byval ppEventObject as IHTMLEventObj ptr ptr) as HRESULT
	RegisterName as function(byval This as IElementBehaviorSiteOM ptr, byval pchName as LPOLESTR) as HRESULT
	RegisterUrn as function(byval This as IElementBehaviorSiteOM ptr, byval pchUrn as LPOLESTR) as HRESULT
end type

type IElementBehaviorSiteOM_
	lpVtbl as IElementBehaviorSiteOMVtbl ptr
end type

#define IElementBehaviorSiteOM_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IElementBehaviorSiteOM_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IElementBehaviorSiteOM_Release(This) (This)->lpVtbl->Release(This)
#define IElementBehaviorSiteOM_RegisterEvent(This, pchEvent, lFlags, plCookie) (This)->lpVtbl->RegisterEvent(This, pchEvent, lFlags, plCookie)
#define IElementBehaviorSiteOM_GetEventCookie(This, pchEvent, plCookie) (This)->lpVtbl->GetEventCookie(This, pchEvent, plCookie)
#define IElementBehaviorSiteOM_FireEvent(This, lCookie, pEventObject) (This)->lpVtbl->FireEvent(This, lCookie, pEventObject)
#define IElementBehaviorSiteOM_CreateEventObject(This, ppEventObject) (This)->lpVtbl->CreateEventObject(This, ppEventObject)
#define IElementBehaviorSiteOM_RegisterName(This, pchName) (This)->lpVtbl->RegisterName(This, pchName)
#define IElementBehaviorSiteOM_RegisterUrn(This, pchUrn) (This)->lpVtbl->RegisterUrn(This, pchUrn)

declare function IElementBehaviorSiteOM_RegisterEvent_Proxy(byval This as IElementBehaviorSiteOM ptr, byval pchEvent as LPOLESTR, byval lFlags as LONG, byval plCookie as LONG ptr) as HRESULT
declare sub IElementBehaviorSiteOM_RegisterEvent_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IElementBehaviorSiteOM_GetEventCookie_Proxy(byval This as IElementBehaviorSiteOM ptr, byval pchEvent as LPOLESTR, byval plCookie as LONG ptr) as HRESULT
declare sub IElementBehaviorSiteOM_GetEventCookie_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IElementBehaviorSiteOM_FireEvent_Proxy(byval This as IElementBehaviorSiteOM ptr, byval lCookie as LONG, byval pEventObject as IHTMLEventObj ptr) as HRESULT
declare sub IElementBehaviorSiteOM_FireEvent_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IElementBehaviorSiteOM_CreateEventObject_Proxy(byval This as IElementBehaviorSiteOM ptr, byval ppEventObject as IHTMLEventObj ptr ptr) as HRESULT
declare sub IElementBehaviorSiteOM_CreateEventObject_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IElementBehaviorSiteOM_RegisterName_Proxy(byval This as IElementBehaviorSiteOM ptr, byval pchName as LPOLESTR) as HRESULT
declare sub IElementBehaviorSiteOM_RegisterName_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IElementBehaviorSiteOM_RegisterUrn_Proxy(byval This as IElementBehaviorSiteOM ptr, byval pchUrn as LPOLESTR) as HRESULT
declare sub IElementBehaviorSiteOM_RegisterUrn_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IElementBehaviorRender_INTERFACE_DEFINED__
extern IID_IElementBehaviorRender as const IID
type IElementBehaviorRender as IElementBehaviorRender_

type IElementBehaviorRenderVtbl
	QueryInterface as function(byval This as IElementBehaviorRender ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IElementBehaviorRender ptr) as ULONG
	Release as function(byval This as IElementBehaviorRender ptr) as ULONG
	Draw as function(byval This as IElementBehaviorRender ptr, byval hdc as HDC, byval lLayer as LONG, byval pRect as RECT ptr, byval pReserved as IUnknown ptr) as HRESULT
	GetRenderInfo as function(byval This as IElementBehaviorRender ptr, byval plRenderInfo as LONG ptr) as HRESULT
	HitTestPoint as function(byval This as IElementBehaviorRender ptr, byval pPoint as POINT ptr, byval pReserved as IUnknown ptr, byval pbHit as WINBOOL ptr) as HRESULT
end type

type IElementBehaviorRender_
	lpVtbl as IElementBehaviorRenderVtbl ptr
end type

#define IElementBehaviorRender_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IElementBehaviorRender_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IElementBehaviorRender_Release(This) (This)->lpVtbl->Release(This)
#define IElementBehaviorRender_Draw(This, hdc, lLayer, pRect, pReserved) (This)->lpVtbl->Draw(This, hdc, lLayer, pRect, pReserved)
#define IElementBehaviorRender_GetRenderInfo(This, plRenderInfo) (This)->lpVtbl->GetRenderInfo(This, plRenderInfo)
#define IElementBehaviorRender_HitTestPoint(This, pPoint, pReserved, pbHit) (This)->lpVtbl->HitTestPoint(This, pPoint, pReserved, pbHit)

declare function IElementBehaviorRender_Draw_Proxy(byval This as IElementBehaviorRender ptr, byval hdc as HDC, byval lLayer as LONG, byval pRect as RECT ptr, byval pReserved as IUnknown ptr) as HRESULT
declare sub IElementBehaviorRender_Draw_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IElementBehaviorRender_GetRenderInfo_Proxy(byval This as IElementBehaviorRender ptr, byval plRenderInfo as LONG ptr) as HRESULT
declare sub IElementBehaviorRender_GetRenderInfo_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IElementBehaviorRender_HitTestPoint_Proxy(byval This as IElementBehaviorRender ptr, byval pPoint as POINT ptr, byval pReserved as IUnknown ptr, byval pbHit as WINBOOL ptr) as HRESULT
declare sub IElementBehaviorRender_HitTestPoint_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IElementBehaviorSiteRender_INTERFACE_DEFINED__
extern IID_IElementBehaviorSiteRender as const IID
type IElementBehaviorSiteRender as IElementBehaviorSiteRender_

type IElementBehaviorSiteRenderVtbl
	QueryInterface as function(byval This as IElementBehaviorSiteRender ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IElementBehaviorSiteRender ptr) as ULONG
	Release as function(byval This as IElementBehaviorSiteRender ptr) as ULONG
	Invalidate as function(byval This as IElementBehaviorSiteRender ptr, byval pRect as RECT ptr) as HRESULT
	InvalidateRenderInfo as function(byval This as IElementBehaviorSiteRender ptr) as HRESULT
	InvalidateStyle as function(byval This as IElementBehaviorSiteRender ptr) as HRESULT
end type

type IElementBehaviorSiteRender_
	lpVtbl as IElementBehaviorSiteRenderVtbl ptr
end type

#define IElementBehaviorSiteRender_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IElementBehaviorSiteRender_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IElementBehaviorSiteRender_Release(This) (This)->lpVtbl->Release(This)
#define IElementBehaviorSiteRender_Invalidate(This, pRect) (This)->lpVtbl->Invalidate(This, pRect)
#define IElementBehaviorSiteRender_InvalidateRenderInfo(This) (This)->lpVtbl->InvalidateRenderInfo(This)
#define IElementBehaviorSiteRender_InvalidateStyle(This) (This)->lpVtbl->InvalidateStyle(This)

declare function IElementBehaviorSiteRender_Invalidate_Proxy(byval This as IElementBehaviorSiteRender ptr, byval pRect as RECT ptr) as HRESULT
declare sub IElementBehaviorSiteRender_Invalidate_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IElementBehaviorSiteRender_InvalidateRenderInfo_Proxy(byval This as IElementBehaviorSiteRender ptr) as HRESULT
declare sub IElementBehaviorSiteRender_InvalidateRenderInfo_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IElementBehaviorSiteRender_InvalidateStyle_Proxy(byval This as IElementBehaviorSiteRender ptr) as HRESULT
declare sub IElementBehaviorSiteRender_InvalidateStyle_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLStyle_INTERFACE_DEFINED__
extern IID_IHTMLStyle as const IID
type IHTMLStyle as IHTMLStyle_

type IHTMLStyleVtbl
	QueryInterface as function(byval This as IHTMLStyle ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLStyle ptr) as ULONG
	Release as function(byval This as IHTMLStyle ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLStyle ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLStyle ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLStyle ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLStyle ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	put_fontFamily as function(byval This as IHTMLStyle ptr, byval v as BSTR) as HRESULT
	get_fontFamily as function(byval This as IHTMLStyle ptr, byval p as BSTR ptr) as HRESULT
	put_fontStyle as function(byval This as IHTMLStyle ptr, byval v as BSTR) as HRESULT
	get_fontStyle as function(byval This as IHTMLStyle ptr, byval p as BSTR ptr) as HRESULT
	put_fontVariant as function(byval This as IHTMLStyle ptr, byval v as BSTR) as HRESULT
	get_fontVariant as function(byval This as IHTMLStyle ptr, byval p as BSTR ptr) as HRESULT
	put_fontWeight as function(byval This as IHTMLStyle ptr, byval v as BSTR) as HRESULT
	get_fontWeight as function(byval This as IHTMLStyle ptr, byval p as BSTR ptr) as HRESULT
	put_fontSize as function(byval This as IHTMLStyle ptr, byval v as VARIANT) as HRESULT
	get_fontSize as function(byval This as IHTMLStyle ptr, byval p as VARIANT ptr) as HRESULT
	put_font as function(byval This as IHTMLStyle ptr, byval v as BSTR) as HRESULT
	get_font as function(byval This as IHTMLStyle ptr, byval p as BSTR ptr) as HRESULT
	put_color as function(byval This as IHTMLStyle ptr, byval v as VARIANT) as HRESULT
	get_color as function(byval This as IHTMLStyle ptr, byval p as VARIANT ptr) as HRESULT
	put_background as function(byval This as IHTMLStyle ptr, byval v as BSTR) as HRESULT
	get_background as function(byval This as IHTMLStyle ptr, byval p as BSTR ptr) as HRESULT
	put_backgroundColor as function(byval This as IHTMLStyle ptr, byval v as VARIANT) as HRESULT
	get_backgroundColor as function(byval This as IHTMLStyle ptr, byval p as VARIANT ptr) as HRESULT
	put_backgroundImage as function(byval This as IHTMLStyle ptr, byval v as BSTR) as HRESULT
	get_backgroundImage as function(byval This as IHTMLStyle ptr, byval p as BSTR ptr) as HRESULT
	put_backgroundRepeat as function(byval This as IHTMLStyle ptr, byval v as BSTR) as HRESULT
	get_backgroundRepeat as function(byval This as IHTMLStyle ptr, byval p as BSTR ptr) as HRESULT
	put_backgroundAttachment as function(byval This as IHTMLStyle ptr, byval v as BSTR) as HRESULT
	get_backgroundAttachment as function(byval This as IHTMLStyle ptr, byval p as BSTR ptr) as HRESULT
	put_backgroundPosition as function(byval This as IHTMLStyle ptr, byval v as BSTR) as HRESULT
	get_backgroundPosition as function(byval This as IHTMLStyle ptr, byval p as BSTR ptr) as HRESULT
	put_backgroundPositionX as function(byval This as IHTMLStyle ptr, byval v as VARIANT) as HRESULT
	get_backgroundPositionX as function(byval This as IHTMLStyle ptr, byval p as VARIANT ptr) as HRESULT
	put_backgroundPositionY as function(byval This as IHTMLStyle ptr, byval v as VARIANT) as HRESULT
	get_backgroundPositionY as function(byval This as IHTMLStyle ptr, byval p as VARIANT ptr) as HRESULT
	put_wordSpacing as function(byval This as IHTMLStyle ptr, byval v as VARIANT) as HRESULT
	get_wordSpacing as function(byval This as IHTMLStyle ptr, byval p as VARIANT ptr) as HRESULT
	put_letterSpacing as function(byval This as IHTMLStyle ptr, byval v as VARIANT) as HRESULT
	get_letterSpacing as function(byval This as IHTMLStyle ptr, byval p as VARIANT ptr) as HRESULT
	put_textDecoration as function(byval This as IHTMLStyle ptr, byval v as BSTR) as HRESULT
	get_textDecoration as function(byval This as IHTMLStyle ptr, byval p as BSTR ptr) as HRESULT
	put_textDecorationNone as function(byval This as IHTMLStyle ptr, byval v as VARIANT_BOOL) as HRESULT
	get_textDecorationNone as function(byval This as IHTMLStyle ptr, byval p as VARIANT_BOOL ptr) as HRESULT
	put_textDecorationUnderline as function(byval This as IHTMLStyle ptr, byval v as VARIANT_BOOL) as HRESULT
	get_textDecorationUnderline as function(byval This as IHTMLStyle ptr, byval p as VARIANT_BOOL ptr) as HRESULT
	put_textDecorationOverline as function(byval This as IHTMLStyle ptr, byval v as VARIANT_BOOL) as HRESULT
	get_textDecorationOverline as function(byval This as IHTMLStyle ptr, byval p as VARIANT_BOOL ptr) as HRESULT
	put_textDecorationLineThrough as function(byval This as IHTMLStyle ptr, byval v as VARIANT_BOOL) as HRESULT
	get_textDecorationLineThrough as function(byval This as IHTMLStyle ptr, byval p as VARIANT_BOOL ptr) as HRESULT
	put_textDecorationBlink as function(byval This as IHTMLStyle ptr, byval v as VARIANT_BOOL) as HRESULT
	get_textDecorationBlink as function(byval This as IHTMLStyle ptr, byval p as VARIANT_BOOL ptr) as HRESULT
	put_verticalAlign as function(byval This as IHTMLStyle ptr, byval v as VARIANT) as HRESULT
	get_verticalAlign as function(byval This as IHTMLStyle ptr, byval p as VARIANT ptr) as HRESULT
	put_textTransform as function(byval This as IHTMLStyle ptr, byval v as BSTR) as HRESULT
	get_textTransform as function(byval This as IHTMLStyle ptr, byval p as BSTR ptr) as HRESULT
	put_textAlign as function(byval This as IHTMLStyle ptr, byval v as BSTR) as HRESULT
	get_textAlign as function(byval This as IHTMLStyle ptr, byval p as BSTR ptr) as HRESULT
	put_textIndent as function(byval This as IHTMLStyle ptr, byval v as VARIANT) as HRESULT
	get_textIndent as function(byval This as IHTMLStyle ptr, byval p as VARIANT ptr) as HRESULT
	put_lineHeight as function(byval This as IHTMLStyle ptr, byval v as VARIANT) as HRESULT
	get_lineHeight as function(byval This as IHTMLStyle ptr, byval p as VARIANT ptr) as HRESULT
	put_marginTop as function(byval This as IHTMLStyle ptr, byval v as VARIANT) as HRESULT
	get_marginTop as function(byval This as IHTMLStyle ptr, byval p as VARIANT ptr) as HRESULT
	put_marginRight as function(byval This as IHTMLStyle ptr, byval v as VARIANT) as HRESULT
	get_marginRight as function(byval This as IHTMLStyle ptr, byval p as VARIANT ptr) as HRESULT
	put_marginBottom as function(byval This as IHTMLStyle ptr, byval v as VARIANT) as HRESULT
	get_marginBottom as function(byval This as IHTMLStyle ptr, byval p as VARIANT ptr) as HRESULT
	put_marginLeft as function(byval This as IHTMLStyle ptr, byval v as VARIANT) as HRESULT
	get_marginLeft as function(byval This as IHTMLStyle ptr, byval p as VARIANT ptr) as HRESULT
	put_margin as function(byval This as IHTMLStyle ptr, byval v as BSTR) as HRESULT
	get_margin as function(byval This as IHTMLStyle ptr, byval p as BSTR ptr) as HRESULT
	put_paddingTop as function(byval This as IHTMLStyle ptr, byval v as VARIANT) as HRESULT
	get_paddingTop as function(byval This as IHTMLStyle ptr, byval p as VARIANT ptr) as HRESULT
	put_paddingRight as function(byval This as IHTMLStyle ptr, byval v as VARIANT) as HRESULT
	get_paddingRight as function(byval This as IHTMLStyle ptr, byval p as VARIANT ptr) as HRESULT
	put_paddingBottom as function(byval This as IHTMLStyle ptr, byval v as VARIANT) as HRESULT
	get_paddingBottom as function(byval This as IHTMLStyle ptr, byval p as VARIANT ptr) as HRESULT
	put_paddingLeft as function(byval This as IHTMLStyle ptr, byval v as VARIANT) as HRESULT
	get_paddingLeft as function(byval This as IHTMLStyle ptr, byval p as VARIANT ptr) as HRESULT
	put_padding as function(byval This as IHTMLStyle ptr, byval v as BSTR) as HRESULT
	get_padding as function(byval This as IHTMLStyle ptr, byval p as BSTR ptr) as HRESULT
	put_border as function(byval This as IHTMLStyle ptr, byval v as BSTR) as HRESULT
	get_border as function(byval This as IHTMLStyle ptr, byval p as BSTR ptr) as HRESULT
	put_borderTop as function(byval This as IHTMLStyle ptr, byval v as BSTR) as HRESULT
	get_borderTop as function(byval This as IHTMLStyle ptr, byval p as BSTR ptr) as HRESULT
	put_borderRight as function(byval This as IHTMLStyle ptr, byval v as BSTR) as HRESULT
	get_borderRight as function(byval This as IHTMLStyle ptr, byval p as BSTR ptr) as HRESULT
	put_borderBottom as function(byval This as IHTMLStyle ptr, byval v as BSTR) as HRESULT
	get_borderBottom as function(byval This as IHTMLStyle ptr, byval p as BSTR ptr) as HRESULT
	put_borderLeft as function(byval This as IHTMLStyle ptr, byval v as BSTR) as HRESULT
	get_borderLeft as function(byval This as IHTMLStyle ptr, byval p as BSTR ptr) as HRESULT
	put_borderColor as function(byval This as IHTMLStyle ptr, byval v as BSTR) as HRESULT
	get_borderColor as function(byval This as IHTMLStyle ptr, byval p as BSTR ptr) as HRESULT
	put_borderTopColor as function(byval This as IHTMLStyle ptr, byval v as VARIANT) as HRESULT
	get_borderTopColor as function(byval This as IHTMLStyle ptr, byval p as VARIANT ptr) as HRESULT
	put_borderRightColor as function(byval This as IHTMLStyle ptr, byval v as VARIANT) as HRESULT
	get_borderRightColor as function(byval This as IHTMLStyle ptr, byval p as VARIANT ptr) as HRESULT
	put_borderBottomColor as function(byval This as IHTMLStyle ptr, byval v as VARIANT) as HRESULT
	get_borderBottomColor as function(byval This as IHTMLStyle ptr, byval p as VARIANT ptr) as HRESULT
	put_borderLeftColor as function(byval This as IHTMLStyle ptr, byval v as VARIANT) as HRESULT
	get_borderLeftColor as function(byval This as IHTMLStyle ptr, byval p as VARIANT ptr) as HRESULT
	put_borderWidth as function(byval This as IHTMLStyle ptr, byval v as BSTR) as HRESULT
	get_borderWidth as function(byval This as IHTMLStyle ptr, byval p as BSTR ptr) as HRESULT
	put_borderTopWidth as function(byval This as IHTMLStyle ptr, byval v as VARIANT) as HRESULT
	get_borderTopWidth as function(byval This as IHTMLStyle ptr, byval p as VARIANT ptr) as HRESULT
	put_borderRightWidth as function(byval This as IHTMLStyle ptr, byval v as VARIANT) as HRESULT
	get_borderRightWidth as function(byval This as IHTMLStyle ptr, byval p as VARIANT ptr) as HRESULT
	put_borderBottomWidth as function(byval This as IHTMLStyle ptr, byval v as VARIANT) as HRESULT
	get_borderBottomWidth as function(byval This as IHTMLStyle ptr, byval p as VARIANT ptr) as HRESULT
	put_borderLeftWidth as function(byval This as IHTMLStyle ptr, byval v as VARIANT) as HRESULT
	get_borderLeftWidth as function(byval This as IHTMLStyle ptr, byval p as VARIANT ptr) as HRESULT
	put_borderStyle as function(byval This as IHTMLStyle ptr, byval v as BSTR) as HRESULT
	get_borderStyle as function(byval This as IHTMLStyle ptr, byval p as BSTR ptr) as HRESULT
	put_borderTopStyle as function(byval This as IHTMLStyle ptr, byval v as BSTR) as HRESULT
	get_borderTopStyle as function(byval This as IHTMLStyle ptr, byval p as BSTR ptr) as HRESULT
	put_borderRightStyle as function(byval This as IHTMLStyle ptr, byval v as BSTR) as HRESULT
	get_borderRightStyle as function(byval This as IHTMLStyle ptr, byval p as BSTR ptr) as HRESULT
	put_borderBottomStyle as function(byval This as IHTMLStyle ptr, byval v as BSTR) as HRESULT
	get_borderBottomStyle as function(byval This as IHTMLStyle ptr, byval p as BSTR ptr) as HRESULT
	put_borderLeftStyle as function(byval This as IHTMLStyle ptr, byval v as BSTR) as HRESULT
	get_borderLeftStyle as function(byval This as IHTMLStyle ptr, byval p as BSTR ptr) as HRESULT
	put_width as function(byval This as IHTMLStyle ptr, byval v as VARIANT) as HRESULT
	get_width as function(byval This as IHTMLStyle ptr, byval p as VARIANT ptr) as HRESULT
	put_height as function(byval This as IHTMLStyle ptr, byval v as VARIANT) as HRESULT
	get_height as function(byval This as IHTMLStyle ptr, byval p as VARIANT ptr) as HRESULT
	put_styleFloat as function(byval This as IHTMLStyle ptr, byval v as BSTR) as HRESULT
	get_styleFloat as function(byval This as IHTMLStyle ptr, byval p as BSTR ptr) as HRESULT
	put_clear as function(byval This as IHTMLStyle ptr, byval v as BSTR) as HRESULT
	get_clear as function(byval This as IHTMLStyle ptr, byval p as BSTR ptr) as HRESULT
	put_display as function(byval This as IHTMLStyle ptr, byval v as BSTR) as HRESULT
	get_display as function(byval This as IHTMLStyle ptr, byval p as BSTR ptr) as HRESULT
	put_visibility as function(byval This as IHTMLStyle ptr, byval v as BSTR) as HRESULT
	get_visibility as function(byval This as IHTMLStyle ptr, byval p as BSTR ptr) as HRESULT
	put_listStyleType as function(byval This as IHTMLStyle ptr, byval v as BSTR) as HRESULT
	get_listStyleType as function(byval This as IHTMLStyle ptr, byval p as BSTR ptr) as HRESULT
	put_listStylePosition as function(byval This as IHTMLStyle ptr, byval v as BSTR) as HRESULT
	get_listStylePosition as function(byval This as IHTMLStyle ptr, byval p as BSTR ptr) as HRESULT
	put_listStyleImage as function(byval This as IHTMLStyle ptr, byval v as BSTR) as HRESULT
	get_listStyleImage as function(byval This as IHTMLStyle ptr, byval p as BSTR ptr) as HRESULT
	put_listStyle as function(byval This as IHTMLStyle ptr, byval v as BSTR) as HRESULT
	get_listStyle as function(byval This as IHTMLStyle ptr, byval p as BSTR ptr) as HRESULT
	put_whiteSpace as function(byval This as IHTMLStyle ptr, byval v as BSTR) as HRESULT
	get_whiteSpace as function(byval This as IHTMLStyle ptr, byval p as BSTR ptr) as HRESULT
	put_top as function(byval This as IHTMLStyle ptr, byval v as VARIANT) as HRESULT
	get_top as function(byval This as IHTMLStyle ptr, byval p as VARIANT ptr) as HRESULT
	put_left as function(byval This as IHTMLStyle ptr, byval v as VARIANT) as HRESULT
	get_left as function(byval This as IHTMLStyle ptr, byval p as VARIANT ptr) as HRESULT
	get_position as function(byval This as IHTMLStyle ptr, byval p as BSTR ptr) as HRESULT
	put_zIndex as function(byval This as IHTMLStyle ptr, byval v as VARIANT) as HRESULT
	get_zIndex as function(byval This as IHTMLStyle ptr, byval p as VARIANT ptr) as HRESULT
	put_overflow as function(byval This as IHTMLStyle ptr, byval v as BSTR) as HRESULT
	get_overflow as function(byval This as IHTMLStyle ptr, byval p as BSTR ptr) as HRESULT
	put_pageBreakBefore as function(byval This as IHTMLStyle ptr, byval v as BSTR) as HRESULT
	get_pageBreakBefore as function(byval This as IHTMLStyle ptr, byval p as BSTR ptr) as HRESULT
	put_pageBreakAfter as function(byval This as IHTMLStyle ptr, byval v as BSTR) as HRESULT
	get_pageBreakAfter as function(byval This as IHTMLStyle ptr, byval p as BSTR ptr) as HRESULT
	put_cssText as function(byval This as IHTMLStyle ptr, byval v as BSTR) as HRESULT
	get_cssText as function(byval This as IHTMLStyle ptr, byval p as BSTR ptr) as HRESULT
	put_pixelTop as function(byval This as IHTMLStyle ptr, byval v as long) as HRESULT
	get_pixelTop as function(byval This as IHTMLStyle ptr, byval p as long ptr) as HRESULT
	put_pixelLeft as function(byval This as IHTMLStyle ptr, byval v as long) as HRESULT
	get_pixelLeft as function(byval This as IHTMLStyle ptr, byval p as long ptr) as HRESULT
	put_pixelWidth as function(byval This as IHTMLStyle ptr, byval v as long) as HRESULT
	get_pixelWidth as function(byval This as IHTMLStyle ptr, byval p as long ptr) as HRESULT
	put_pixelHeight as function(byval This as IHTMLStyle ptr, byval v as long) as HRESULT
	get_pixelHeight as function(byval This as IHTMLStyle ptr, byval p as long ptr) as HRESULT
	put_posTop as function(byval This as IHTMLStyle ptr, byval v as single) as HRESULT
	get_posTop as function(byval This as IHTMLStyle ptr, byval p as single ptr) as HRESULT
	put_posLeft as function(byval This as IHTMLStyle ptr, byval v as single) as HRESULT
	get_posLeft as function(byval This as IHTMLStyle ptr, byval p as single ptr) as HRESULT
	put_posWidth as function(byval This as IHTMLStyle ptr, byval v as single) as HRESULT
	get_posWidth as function(byval This as IHTMLStyle ptr, byval p as single ptr) as HRESULT
	put_posHeight as function(byval This as IHTMLStyle ptr, byval v as single) as HRESULT
	get_posHeight as function(byval This as IHTMLStyle ptr, byval p as single ptr) as HRESULT
	put_cursor as function(byval This as IHTMLStyle ptr, byval v as BSTR) as HRESULT
	get_cursor as function(byval This as IHTMLStyle ptr, byval p as BSTR ptr) as HRESULT
	put_clip as function(byval This as IHTMLStyle ptr, byval v as BSTR) as HRESULT
	get_clip as function(byval This as IHTMLStyle ptr, byval p as BSTR ptr) as HRESULT
	put_filter as function(byval This as IHTMLStyle ptr, byval v as BSTR) as HRESULT
	get_filter as function(byval This as IHTMLStyle ptr, byval p as BSTR ptr) as HRESULT
	setAttribute as function(byval This as IHTMLStyle ptr, byval strAttributeName as BSTR, byval AttributeValue as VARIANT, byval lFlags as LONG) as HRESULT
	getAttribute as function(byval This as IHTMLStyle ptr, byval strAttributeName as BSTR, byval lFlags as LONG, byval AttributeValue as VARIANT ptr) as HRESULT
	removeAttribute as function(byval This as IHTMLStyle ptr, byval strAttributeName as BSTR, byval lFlags as LONG, byval pfSuccess as VARIANT_BOOL ptr) as HRESULT
	toString as function(byval This as IHTMLStyle ptr, byval String as BSTR ptr) as HRESULT
end type

type IHTMLStyle_
	lpVtbl as IHTMLStyleVtbl ptr
end type

#define IHTMLStyle_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLStyle_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLStyle_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLStyle_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLStyle_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLStyle_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLStyle_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLStyle_put_fontFamily(This, v) (This)->lpVtbl->put_fontFamily(This, v)
#define IHTMLStyle_get_fontFamily(This, p) (This)->lpVtbl->get_fontFamily(This, p)
#define IHTMLStyle_put_fontStyle(This, v) (This)->lpVtbl->put_fontStyle(This, v)
#define IHTMLStyle_get_fontStyle(This, p) (This)->lpVtbl->get_fontStyle(This, p)
#define IHTMLStyle_put_fontVariant(This, v) (This)->lpVtbl->put_fontVariant(This, v)
#define IHTMLStyle_get_fontVariant(This, p) (This)->lpVtbl->get_fontVariant(This, p)
#define IHTMLStyle_put_fontWeight(This, v) (This)->lpVtbl->put_fontWeight(This, v)
#define IHTMLStyle_get_fontWeight(This, p) (This)->lpVtbl->get_fontWeight(This, p)
#define IHTMLStyle_put_fontSize(This, v) (This)->lpVtbl->put_fontSize(This, v)
#define IHTMLStyle_get_fontSize(This, p) (This)->lpVtbl->get_fontSize(This, p)
#define IHTMLStyle_put_font(This, v) (This)->lpVtbl->put_font(This, v)
#define IHTMLStyle_get_font(This, p) (This)->lpVtbl->get_font(This, p)
#define IHTMLStyle_put_color(This, v) (This)->lpVtbl->put_color(This, v)
#define IHTMLStyle_get_color(This, p) (This)->lpVtbl->get_color(This, p)
#define IHTMLStyle_put_background(This, v) (This)->lpVtbl->put_background(This, v)
#define IHTMLStyle_get_background(This, p) (This)->lpVtbl->get_background(This, p)
#define IHTMLStyle_put_backgroundColor(This, v) (This)->lpVtbl->put_backgroundColor(This, v)
#define IHTMLStyle_get_backgroundColor(This, p) (This)->lpVtbl->get_backgroundColor(This, p)
#define IHTMLStyle_put_backgroundImage(This, v) (This)->lpVtbl->put_backgroundImage(This, v)
#define IHTMLStyle_get_backgroundImage(This, p) (This)->lpVtbl->get_backgroundImage(This, p)
#define IHTMLStyle_put_backgroundRepeat(This, v) (This)->lpVtbl->put_backgroundRepeat(This, v)
#define IHTMLStyle_get_backgroundRepeat(This, p) (This)->lpVtbl->get_backgroundRepeat(This, p)
#define IHTMLStyle_put_backgroundAttachment(This, v) (This)->lpVtbl->put_backgroundAttachment(This, v)
#define IHTMLStyle_get_backgroundAttachment(This, p) (This)->lpVtbl->get_backgroundAttachment(This, p)
#define IHTMLStyle_put_backgroundPosition(This, v) (This)->lpVtbl->put_backgroundPosition(This, v)
#define IHTMLStyle_get_backgroundPosition(This, p) (This)->lpVtbl->get_backgroundPosition(This, p)
#define IHTMLStyle_put_backgroundPositionX(This, v) (This)->lpVtbl->put_backgroundPositionX(This, v)
#define IHTMLStyle_get_backgroundPositionX(This, p) (This)->lpVtbl->get_backgroundPositionX(This, p)
#define IHTMLStyle_put_backgroundPositionY(This, v) (This)->lpVtbl->put_backgroundPositionY(This, v)
#define IHTMLStyle_get_backgroundPositionY(This, p) (This)->lpVtbl->get_backgroundPositionY(This, p)
#define IHTMLStyle_put_wordSpacing(This, v) (This)->lpVtbl->put_wordSpacing(This, v)
#define IHTMLStyle_get_wordSpacing(This, p) (This)->lpVtbl->get_wordSpacing(This, p)
#define IHTMLStyle_put_letterSpacing(This, v) (This)->lpVtbl->put_letterSpacing(This, v)
#define IHTMLStyle_get_letterSpacing(This, p) (This)->lpVtbl->get_letterSpacing(This, p)
#define IHTMLStyle_put_textDecoration(This, v) (This)->lpVtbl->put_textDecoration(This, v)
#define IHTMLStyle_get_textDecoration(This, p) (This)->lpVtbl->get_textDecoration(This, p)
#define IHTMLStyle_put_textDecorationNone(This, v) (This)->lpVtbl->put_textDecorationNone(This, v)
#define IHTMLStyle_get_textDecorationNone(This, p) (This)->lpVtbl->get_textDecorationNone(This, p)
#define IHTMLStyle_put_textDecorationUnderline(This, v) (This)->lpVtbl->put_textDecorationUnderline(This, v)
#define IHTMLStyle_get_textDecorationUnderline(This, p) (This)->lpVtbl->get_textDecorationUnderline(This, p)
#define IHTMLStyle_put_textDecorationOverline(This, v) (This)->lpVtbl->put_textDecorationOverline(This, v)
#define IHTMLStyle_get_textDecorationOverline(This, p) (This)->lpVtbl->get_textDecorationOverline(This, p)
#define IHTMLStyle_put_textDecorationLineThrough(This, v) (This)->lpVtbl->put_textDecorationLineThrough(This, v)
#define IHTMLStyle_get_textDecorationLineThrough(This, p) (This)->lpVtbl->get_textDecorationLineThrough(This, p)
#define IHTMLStyle_put_textDecorationBlink(This, v) (This)->lpVtbl->put_textDecorationBlink(This, v)
#define IHTMLStyle_get_textDecorationBlink(This, p) (This)->lpVtbl->get_textDecorationBlink(This, p)
#define IHTMLStyle_put_verticalAlign(This, v) (This)->lpVtbl->put_verticalAlign(This, v)
#define IHTMLStyle_get_verticalAlign(This, p) (This)->lpVtbl->get_verticalAlign(This, p)
#define IHTMLStyle_put_textTransform(This, v) (This)->lpVtbl->put_textTransform(This, v)
#define IHTMLStyle_get_textTransform(This, p) (This)->lpVtbl->get_textTransform(This, p)
#define IHTMLStyle_put_textAlign(This, v) (This)->lpVtbl->put_textAlign(This, v)
#define IHTMLStyle_get_textAlign(This, p) (This)->lpVtbl->get_textAlign(This, p)
#define IHTMLStyle_put_textIndent(This, v) (This)->lpVtbl->put_textIndent(This, v)
#define IHTMLStyle_get_textIndent(This, p) (This)->lpVtbl->get_textIndent(This, p)
#define IHTMLStyle_put_lineHeight(This, v) (This)->lpVtbl->put_lineHeight(This, v)
#define IHTMLStyle_get_lineHeight(This, p) (This)->lpVtbl->get_lineHeight(This, p)
#define IHTMLStyle_put_marginTop(This, v) (This)->lpVtbl->put_marginTop(This, v)
#define IHTMLStyle_get_marginTop(This, p) (This)->lpVtbl->get_marginTop(This, p)
#define IHTMLStyle_put_marginRight(This, v) (This)->lpVtbl->put_marginRight(This, v)
#define IHTMLStyle_get_marginRight(This, p) (This)->lpVtbl->get_marginRight(This, p)
#define IHTMLStyle_put_marginBottom(This, v) (This)->lpVtbl->put_marginBottom(This, v)
#define IHTMLStyle_get_marginBottom(This, p) (This)->lpVtbl->get_marginBottom(This, p)
#define IHTMLStyle_put_marginLeft(This, v) (This)->lpVtbl->put_marginLeft(This, v)
#define IHTMLStyle_get_marginLeft(This, p) (This)->lpVtbl->get_marginLeft(This, p)
#define IHTMLStyle_put_margin(This, v) (This)->lpVtbl->put_margin(This, v)
#define IHTMLStyle_get_margin(This, p) (This)->lpVtbl->get_margin(This, p)
#define IHTMLStyle_put_paddingTop(This, v) (This)->lpVtbl->put_paddingTop(This, v)
#define IHTMLStyle_get_paddingTop(This, p) (This)->lpVtbl->get_paddingTop(This, p)
#define IHTMLStyle_put_paddingRight(This, v) (This)->lpVtbl->put_paddingRight(This, v)
#define IHTMLStyle_get_paddingRight(This, p) (This)->lpVtbl->get_paddingRight(This, p)
#define IHTMLStyle_put_paddingBottom(This, v) (This)->lpVtbl->put_paddingBottom(This, v)
#define IHTMLStyle_get_paddingBottom(This, p) (This)->lpVtbl->get_paddingBottom(This, p)
#define IHTMLStyle_put_paddingLeft(This, v) (This)->lpVtbl->put_paddingLeft(This, v)
#define IHTMLStyle_get_paddingLeft(This, p) (This)->lpVtbl->get_paddingLeft(This, p)
#define IHTMLStyle_put_padding(This, v) (This)->lpVtbl->put_padding(This, v)
#define IHTMLStyle_get_padding(This, p) (This)->lpVtbl->get_padding(This, p)
#define IHTMLStyle_put_border(This, v) (This)->lpVtbl->put_border(This, v)
#define IHTMLStyle_get_border(This, p) (This)->lpVtbl->get_border(This, p)
#define IHTMLStyle_put_borderTop(This, v) (This)->lpVtbl->put_borderTop(This, v)
#define IHTMLStyle_get_borderTop(This, p) (This)->lpVtbl->get_borderTop(This, p)
#define IHTMLStyle_put_borderRight(This, v) (This)->lpVtbl->put_borderRight(This, v)
#define IHTMLStyle_get_borderRight(This, p) (This)->lpVtbl->get_borderRight(This, p)
#define IHTMLStyle_put_borderBottom(This, v) (This)->lpVtbl->put_borderBottom(This, v)
#define IHTMLStyle_get_borderBottom(This, p) (This)->lpVtbl->get_borderBottom(This, p)
#define IHTMLStyle_put_borderLeft(This, v) (This)->lpVtbl->put_borderLeft(This, v)
#define IHTMLStyle_get_borderLeft(This, p) (This)->lpVtbl->get_borderLeft(This, p)
#define IHTMLStyle_put_borderColor(This, v) (This)->lpVtbl->put_borderColor(This, v)
#define IHTMLStyle_get_borderColor(This, p) (This)->lpVtbl->get_borderColor(This, p)
#define IHTMLStyle_put_borderTopColor(This, v) (This)->lpVtbl->put_borderTopColor(This, v)
#define IHTMLStyle_get_borderTopColor(This, p) (This)->lpVtbl->get_borderTopColor(This, p)
#define IHTMLStyle_put_borderRightColor(This, v) (This)->lpVtbl->put_borderRightColor(This, v)
#define IHTMLStyle_get_borderRightColor(This, p) (This)->lpVtbl->get_borderRightColor(This, p)
#define IHTMLStyle_put_borderBottomColor(This, v) (This)->lpVtbl->put_borderBottomColor(This, v)
#define IHTMLStyle_get_borderBottomColor(This, p) (This)->lpVtbl->get_borderBottomColor(This, p)
#define IHTMLStyle_put_borderLeftColor(This, v) (This)->lpVtbl->put_borderLeftColor(This, v)
#define IHTMLStyle_get_borderLeftColor(This, p) (This)->lpVtbl->get_borderLeftColor(This, p)
#define IHTMLStyle_put_borderWidth(This, v) (This)->lpVtbl->put_borderWidth(This, v)
#define IHTMLStyle_get_borderWidth(This, p) (This)->lpVtbl->get_borderWidth(This, p)
#define IHTMLStyle_put_borderTopWidth(This, v) (This)->lpVtbl->put_borderTopWidth(This, v)
#define IHTMLStyle_get_borderTopWidth(This, p) (This)->lpVtbl->get_borderTopWidth(This, p)
#define IHTMLStyle_put_borderRightWidth(This, v) (This)->lpVtbl->put_borderRightWidth(This, v)
#define IHTMLStyle_get_borderRightWidth(This, p) (This)->lpVtbl->get_borderRightWidth(This, p)
#define IHTMLStyle_put_borderBottomWidth(This, v) (This)->lpVtbl->put_borderBottomWidth(This, v)
#define IHTMLStyle_get_borderBottomWidth(This, p) (This)->lpVtbl->get_borderBottomWidth(This, p)
#define IHTMLStyle_put_borderLeftWidth(This, v) (This)->lpVtbl->put_borderLeftWidth(This, v)
#define IHTMLStyle_get_borderLeftWidth(This, p) (This)->lpVtbl->get_borderLeftWidth(This, p)
#define IHTMLStyle_put_borderStyle(This, v) (This)->lpVtbl->put_borderStyle(This, v)
#define IHTMLStyle_get_borderStyle(This, p) (This)->lpVtbl->get_borderStyle(This, p)
#define IHTMLStyle_put_borderTopStyle(This, v) (This)->lpVtbl->put_borderTopStyle(This, v)
#define IHTMLStyle_get_borderTopStyle(This, p) (This)->lpVtbl->get_borderTopStyle(This, p)
#define IHTMLStyle_put_borderRightStyle(This, v) (This)->lpVtbl->put_borderRightStyle(This, v)
#define IHTMLStyle_get_borderRightStyle(This, p) (This)->lpVtbl->get_borderRightStyle(This, p)
#define IHTMLStyle_put_borderBottomStyle(This, v) (This)->lpVtbl->put_borderBottomStyle(This, v)
#define IHTMLStyle_get_borderBottomStyle(This, p) (This)->lpVtbl->get_borderBottomStyle(This, p)
#define IHTMLStyle_put_borderLeftStyle(This, v) (This)->lpVtbl->put_borderLeftStyle(This, v)
#define IHTMLStyle_get_borderLeftStyle(This, p) (This)->lpVtbl->get_borderLeftStyle(This, p)
#define IHTMLStyle_put_width(This, v) (This)->lpVtbl->put_width(This, v)
#define IHTMLStyle_get_width(This, p) (This)->lpVtbl->get_width(This, p)
#define IHTMLStyle_put_height(This, v) (This)->lpVtbl->put_height(This, v)
#define IHTMLStyle_get_height(This, p) (This)->lpVtbl->get_height(This, p)
#define IHTMLStyle_put_styleFloat(This, v) (This)->lpVtbl->put_styleFloat(This, v)
#define IHTMLStyle_get_styleFloat(This, p) (This)->lpVtbl->get_styleFloat(This, p)
#define IHTMLStyle_put_clear(This, v) (This)->lpVtbl->put_clear(This, v)
#define IHTMLStyle_get_clear(This, p) (This)->lpVtbl->get_clear(This, p)
#define IHTMLStyle_put_display(This, v) (This)->lpVtbl->put_display(This, v)
#define IHTMLStyle_get_display(This, p) (This)->lpVtbl->get_display(This, p)
#define IHTMLStyle_put_visibility(This, v) (This)->lpVtbl->put_visibility(This, v)
#define IHTMLStyle_get_visibility(This, p) (This)->lpVtbl->get_visibility(This, p)
#define IHTMLStyle_put_listStyleType(This, v) (This)->lpVtbl->put_listStyleType(This, v)
#define IHTMLStyle_get_listStyleType(This, p) (This)->lpVtbl->get_listStyleType(This, p)
#define IHTMLStyle_put_listStylePosition(This, v) (This)->lpVtbl->put_listStylePosition(This, v)
#define IHTMLStyle_get_listStylePosition(This, p) (This)->lpVtbl->get_listStylePosition(This, p)
#define IHTMLStyle_put_listStyleImage(This, v) (This)->lpVtbl->put_listStyleImage(This, v)
#define IHTMLStyle_get_listStyleImage(This, p) (This)->lpVtbl->get_listStyleImage(This, p)
#define IHTMLStyle_put_listStyle(This, v) (This)->lpVtbl->put_listStyle(This, v)
#define IHTMLStyle_get_listStyle(This, p) (This)->lpVtbl->get_listStyle(This, p)
#define IHTMLStyle_put_whiteSpace(This, v) (This)->lpVtbl->put_whiteSpace(This, v)
#define IHTMLStyle_get_whiteSpace(This, p) (This)->lpVtbl->get_whiteSpace(This, p)
#define IHTMLStyle_put_top(This, v) (This)->lpVtbl->put_top(This, v)
#define IHTMLStyle_get_top(This, p) (This)->lpVtbl->get_top(This, p)
#define IHTMLStyle_put_left(This, v) (This)->lpVtbl->put_left(This, v)
#define IHTMLStyle_get_left(This, p) (This)->lpVtbl->get_left(This, p)
#define IHTMLStyle_get_position(This, p) (This)->lpVtbl->get_position(This, p)
#define IHTMLStyle_put_zIndex(This, v) (This)->lpVtbl->put_zIndex(This, v)
#define IHTMLStyle_get_zIndex(This, p) (This)->lpVtbl->get_zIndex(This, p)
#define IHTMLStyle_put_overflow(This, v) (This)->lpVtbl->put_overflow(This, v)
#define IHTMLStyle_get_overflow(This, p) (This)->lpVtbl->get_overflow(This, p)
#define IHTMLStyle_put_pageBreakBefore(This, v) (This)->lpVtbl->put_pageBreakBefore(This, v)
#define IHTMLStyle_get_pageBreakBefore(This, p) (This)->lpVtbl->get_pageBreakBefore(This, p)
#define IHTMLStyle_put_pageBreakAfter(This, v) (This)->lpVtbl->put_pageBreakAfter(This, v)
#define IHTMLStyle_get_pageBreakAfter(This, p) (This)->lpVtbl->get_pageBreakAfter(This, p)
#define IHTMLStyle_put_cssText(This, v) (This)->lpVtbl->put_cssText(This, v)
#define IHTMLStyle_get_cssText(This, p) (This)->lpVtbl->get_cssText(This, p)
#define IHTMLStyle_put_pixelTop(This, v) (This)->lpVtbl->put_pixelTop(This, v)
#define IHTMLStyle_get_pixelTop(This, p) (This)->lpVtbl->get_pixelTop(This, p)
#define IHTMLStyle_put_pixelLeft(This, v) (This)->lpVtbl->put_pixelLeft(This, v)
#define IHTMLStyle_get_pixelLeft(This, p) (This)->lpVtbl->get_pixelLeft(This, p)
#define IHTMLStyle_put_pixelWidth(This, v) (This)->lpVtbl->put_pixelWidth(This, v)
#define IHTMLStyle_get_pixelWidth(This, p) (This)->lpVtbl->get_pixelWidth(This, p)
#define IHTMLStyle_put_pixelHeight(This, v) (This)->lpVtbl->put_pixelHeight(This, v)
#define IHTMLStyle_get_pixelHeight(This, p) (This)->lpVtbl->get_pixelHeight(This, p)
#define IHTMLStyle_put_posTop(This, v) (This)->lpVtbl->put_posTop(This, v)
#define IHTMLStyle_get_posTop(This, p) (This)->lpVtbl->get_posTop(This, p)
#define IHTMLStyle_put_posLeft(This, v) (This)->lpVtbl->put_posLeft(This, v)
#define IHTMLStyle_get_posLeft(This, p) (This)->lpVtbl->get_posLeft(This, p)
#define IHTMLStyle_put_posWidth(This, v) (This)->lpVtbl->put_posWidth(This, v)
#define IHTMLStyle_get_posWidth(This, p) (This)->lpVtbl->get_posWidth(This, p)
#define IHTMLStyle_put_posHeight(This, v) (This)->lpVtbl->put_posHeight(This, v)
#define IHTMLStyle_get_posHeight(This, p) (This)->lpVtbl->get_posHeight(This, p)
#define IHTMLStyle_put_cursor(This, v) (This)->lpVtbl->put_cursor(This, v)
#define IHTMLStyle_get_cursor(This, p) (This)->lpVtbl->get_cursor(This, p)
#define IHTMLStyle_put_clip(This, v) (This)->lpVtbl->put_clip(This, v)
#define IHTMLStyle_get_clip(This, p) (This)->lpVtbl->get_clip(This, p)
#define IHTMLStyle_put_filter(This, v) (This)->lpVtbl->put_filter(This, v)
#define IHTMLStyle_get_filter(This, p) (This)->lpVtbl->get_filter(This, p)
#define IHTMLStyle_setAttribute(This, strAttributeName, AttributeValue, lFlags) (This)->lpVtbl->setAttribute(This, strAttributeName, AttributeValue, lFlags)
#define IHTMLStyle_getAttribute(This, strAttributeName, lFlags, AttributeValue) (This)->lpVtbl->getAttribute(This, strAttributeName, lFlags, AttributeValue)
#define IHTMLStyle_removeAttribute(This, strAttributeName, lFlags, pfSuccess) (This)->lpVtbl->removeAttribute(This, strAttributeName, lFlags, pfSuccess)
#define IHTMLStyle_toString(This, String) (This)->lpVtbl->toString(This, String)

declare function IHTMLStyle_put_fontFamily_Proxy(byval This as IHTMLStyle ptr, byval v as BSTR) as HRESULT
declare sub IHTMLStyle_put_fontFamily_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_get_fontFamily_Proxy(byval This as IHTMLStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLStyle_get_fontFamily_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_put_fontStyle_Proxy(byval This as IHTMLStyle ptr, byval v as BSTR) as HRESULT
declare sub IHTMLStyle_put_fontStyle_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_get_fontStyle_Proxy(byval This as IHTMLStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLStyle_get_fontStyle_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_put_fontVariant_Proxy(byval This as IHTMLStyle ptr, byval v as BSTR) as HRESULT
declare sub IHTMLStyle_put_fontVariant_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_get_fontVariant_Proxy(byval This as IHTMLStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLStyle_get_fontVariant_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_put_fontWeight_Proxy(byval This as IHTMLStyle ptr, byval v as BSTR) as HRESULT
declare sub IHTMLStyle_put_fontWeight_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_get_fontWeight_Proxy(byval This as IHTMLStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLStyle_get_fontWeight_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_put_fontSize_Proxy(byval This as IHTMLStyle ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLStyle_put_fontSize_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_get_fontSize_Proxy(byval This as IHTMLStyle ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLStyle_get_fontSize_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_put_font_Proxy(byval This as IHTMLStyle ptr, byval v as BSTR) as HRESULT
declare sub IHTMLStyle_put_font_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_get_font_Proxy(byval This as IHTMLStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLStyle_get_font_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_put_color_Proxy(byval This as IHTMLStyle ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLStyle_put_color_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_get_color_Proxy(byval This as IHTMLStyle ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLStyle_get_color_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_put_background_Proxy(byval This as IHTMLStyle ptr, byval v as BSTR) as HRESULT
declare sub IHTMLStyle_put_background_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_get_background_Proxy(byval This as IHTMLStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLStyle_get_background_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_put_backgroundColor_Proxy(byval This as IHTMLStyle ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLStyle_put_backgroundColor_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_get_backgroundColor_Proxy(byval This as IHTMLStyle ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLStyle_get_backgroundColor_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_put_backgroundImage_Proxy(byval This as IHTMLStyle ptr, byval v as BSTR) as HRESULT
declare sub IHTMLStyle_put_backgroundImage_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_get_backgroundImage_Proxy(byval This as IHTMLStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLStyle_get_backgroundImage_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_put_backgroundRepeat_Proxy(byval This as IHTMLStyle ptr, byval v as BSTR) as HRESULT
declare sub IHTMLStyle_put_backgroundRepeat_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_get_backgroundRepeat_Proxy(byval This as IHTMLStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLStyle_get_backgroundRepeat_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_put_backgroundAttachment_Proxy(byval This as IHTMLStyle ptr, byval v as BSTR) as HRESULT
declare sub IHTMLStyle_put_backgroundAttachment_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_get_backgroundAttachment_Proxy(byval This as IHTMLStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLStyle_get_backgroundAttachment_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_put_backgroundPosition_Proxy(byval This as IHTMLStyle ptr, byval v as BSTR) as HRESULT
declare sub IHTMLStyle_put_backgroundPosition_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_get_backgroundPosition_Proxy(byval This as IHTMLStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLStyle_get_backgroundPosition_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_put_backgroundPositionX_Proxy(byval This as IHTMLStyle ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLStyle_put_backgroundPositionX_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_get_backgroundPositionX_Proxy(byval This as IHTMLStyle ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLStyle_get_backgroundPositionX_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_put_backgroundPositionY_Proxy(byval This as IHTMLStyle ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLStyle_put_backgroundPositionY_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_get_backgroundPositionY_Proxy(byval This as IHTMLStyle ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLStyle_get_backgroundPositionY_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_put_wordSpacing_Proxy(byval This as IHTMLStyle ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLStyle_put_wordSpacing_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_get_wordSpacing_Proxy(byval This as IHTMLStyle ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLStyle_get_wordSpacing_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_put_letterSpacing_Proxy(byval This as IHTMLStyle ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLStyle_put_letterSpacing_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_get_letterSpacing_Proxy(byval This as IHTMLStyle ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLStyle_get_letterSpacing_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_put_textDecoration_Proxy(byval This as IHTMLStyle ptr, byval v as BSTR) as HRESULT
declare sub IHTMLStyle_put_textDecoration_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_get_textDecoration_Proxy(byval This as IHTMLStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLStyle_get_textDecoration_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_put_textDecorationNone_Proxy(byval This as IHTMLStyle ptr, byval v as VARIANT_BOOL) as HRESULT
declare sub IHTMLStyle_put_textDecorationNone_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_get_textDecorationNone_Proxy(byval This as IHTMLStyle ptr, byval p as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLStyle_get_textDecorationNone_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_put_textDecorationUnderline_Proxy(byval This as IHTMLStyle ptr, byval v as VARIANT_BOOL) as HRESULT
declare sub IHTMLStyle_put_textDecorationUnderline_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_get_textDecorationUnderline_Proxy(byval This as IHTMLStyle ptr, byval p as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLStyle_get_textDecorationUnderline_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_put_textDecorationOverline_Proxy(byval This as IHTMLStyle ptr, byval v as VARIANT_BOOL) as HRESULT
declare sub IHTMLStyle_put_textDecorationOverline_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_get_textDecorationOverline_Proxy(byval This as IHTMLStyle ptr, byval p as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLStyle_get_textDecorationOverline_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_put_textDecorationLineThrough_Proxy(byval This as IHTMLStyle ptr, byval v as VARIANT_BOOL) as HRESULT
declare sub IHTMLStyle_put_textDecorationLineThrough_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_get_textDecorationLineThrough_Proxy(byval This as IHTMLStyle ptr, byval p as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLStyle_get_textDecorationLineThrough_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_put_textDecorationBlink_Proxy(byval This as IHTMLStyle ptr, byval v as VARIANT_BOOL) as HRESULT
declare sub IHTMLStyle_put_textDecorationBlink_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_get_textDecorationBlink_Proxy(byval This as IHTMLStyle ptr, byval p as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLStyle_get_textDecorationBlink_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_put_verticalAlign_Proxy(byval This as IHTMLStyle ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLStyle_put_verticalAlign_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_get_verticalAlign_Proxy(byval This as IHTMLStyle ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLStyle_get_verticalAlign_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_put_textTransform_Proxy(byval This as IHTMLStyle ptr, byval v as BSTR) as HRESULT
declare sub IHTMLStyle_put_textTransform_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_get_textTransform_Proxy(byval This as IHTMLStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLStyle_get_textTransform_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_put_textAlign_Proxy(byval This as IHTMLStyle ptr, byval v as BSTR) as HRESULT
declare sub IHTMLStyle_put_textAlign_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_get_textAlign_Proxy(byval This as IHTMLStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLStyle_get_textAlign_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_put_textIndent_Proxy(byval This as IHTMLStyle ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLStyle_put_textIndent_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_get_textIndent_Proxy(byval This as IHTMLStyle ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLStyle_get_textIndent_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_put_lineHeight_Proxy(byval This as IHTMLStyle ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLStyle_put_lineHeight_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_get_lineHeight_Proxy(byval This as IHTMLStyle ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLStyle_get_lineHeight_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_put_marginTop_Proxy(byval This as IHTMLStyle ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLStyle_put_marginTop_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_get_marginTop_Proxy(byval This as IHTMLStyle ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLStyle_get_marginTop_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_put_marginRight_Proxy(byval This as IHTMLStyle ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLStyle_put_marginRight_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_get_marginRight_Proxy(byval This as IHTMLStyle ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLStyle_get_marginRight_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_put_marginBottom_Proxy(byval This as IHTMLStyle ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLStyle_put_marginBottom_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_get_marginBottom_Proxy(byval This as IHTMLStyle ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLStyle_get_marginBottom_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_put_marginLeft_Proxy(byval This as IHTMLStyle ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLStyle_put_marginLeft_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_get_marginLeft_Proxy(byval This as IHTMLStyle ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLStyle_get_marginLeft_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_put_margin_Proxy(byval This as IHTMLStyle ptr, byval v as BSTR) as HRESULT
declare sub IHTMLStyle_put_margin_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_get_margin_Proxy(byval This as IHTMLStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLStyle_get_margin_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_put_paddingTop_Proxy(byval This as IHTMLStyle ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLStyle_put_paddingTop_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_get_paddingTop_Proxy(byval This as IHTMLStyle ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLStyle_get_paddingTop_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_put_paddingRight_Proxy(byval This as IHTMLStyle ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLStyle_put_paddingRight_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_get_paddingRight_Proxy(byval This as IHTMLStyle ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLStyle_get_paddingRight_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_put_paddingBottom_Proxy(byval This as IHTMLStyle ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLStyle_put_paddingBottom_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_get_paddingBottom_Proxy(byval This as IHTMLStyle ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLStyle_get_paddingBottom_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_put_paddingLeft_Proxy(byval This as IHTMLStyle ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLStyle_put_paddingLeft_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_get_paddingLeft_Proxy(byval This as IHTMLStyle ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLStyle_get_paddingLeft_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_put_padding_Proxy(byval This as IHTMLStyle ptr, byval v as BSTR) as HRESULT
declare sub IHTMLStyle_put_padding_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_get_padding_Proxy(byval This as IHTMLStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLStyle_get_padding_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_put_border_Proxy(byval This as IHTMLStyle ptr, byval v as BSTR) as HRESULT
declare sub IHTMLStyle_put_border_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_get_border_Proxy(byval This as IHTMLStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLStyle_get_border_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_put_borderTop_Proxy(byval This as IHTMLStyle ptr, byval v as BSTR) as HRESULT
declare sub IHTMLStyle_put_borderTop_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_get_borderTop_Proxy(byval This as IHTMLStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLStyle_get_borderTop_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_put_borderRight_Proxy(byval This as IHTMLStyle ptr, byval v as BSTR) as HRESULT
declare sub IHTMLStyle_put_borderRight_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_get_borderRight_Proxy(byval This as IHTMLStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLStyle_get_borderRight_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_put_borderBottom_Proxy(byval This as IHTMLStyle ptr, byval v as BSTR) as HRESULT
declare sub IHTMLStyle_put_borderBottom_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_get_borderBottom_Proxy(byval This as IHTMLStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLStyle_get_borderBottom_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_put_borderLeft_Proxy(byval This as IHTMLStyle ptr, byval v as BSTR) as HRESULT
declare sub IHTMLStyle_put_borderLeft_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_get_borderLeft_Proxy(byval This as IHTMLStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLStyle_get_borderLeft_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_put_borderColor_Proxy(byval This as IHTMLStyle ptr, byval v as BSTR) as HRESULT
declare sub IHTMLStyle_put_borderColor_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_get_borderColor_Proxy(byval This as IHTMLStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLStyle_get_borderColor_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_put_borderTopColor_Proxy(byval This as IHTMLStyle ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLStyle_put_borderTopColor_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_get_borderTopColor_Proxy(byval This as IHTMLStyle ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLStyle_get_borderTopColor_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_put_borderRightColor_Proxy(byval This as IHTMLStyle ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLStyle_put_borderRightColor_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_get_borderRightColor_Proxy(byval This as IHTMLStyle ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLStyle_get_borderRightColor_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_put_borderBottomColor_Proxy(byval This as IHTMLStyle ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLStyle_put_borderBottomColor_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_get_borderBottomColor_Proxy(byval This as IHTMLStyle ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLStyle_get_borderBottomColor_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_put_borderLeftColor_Proxy(byval This as IHTMLStyle ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLStyle_put_borderLeftColor_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_get_borderLeftColor_Proxy(byval This as IHTMLStyle ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLStyle_get_borderLeftColor_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_put_borderWidth_Proxy(byval This as IHTMLStyle ptr, byval v as BSTR) as HRESULT
declare sub IHTMLStyle_put_borderWidth_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_get_borderWidth_Proxy(byval This as IHTMLStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLStyle_get_borderWidth_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_put_borderTopWidth_Proxy(byval This as IHTMLStyle ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLStyle_put_borderTopWidth_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_get_borderTopWidth_Proxy(byval This as IHTMLStyle ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLStyle_get_borderTopWidth_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_put_borderRightWidth_Proxy(byval This as IHTMLStyle ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLStyle_put_borderRightWidth_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_get_borderRightWidth_Proxy(byval This as IHTMLStyle ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLStyle_get_borderRightWidth_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_put_borderBottomWidth_Proxy(byval This as IHTMLStyle ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLStyle_put_borderBottomWidth_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_get_borderBottomWidth_Proxy(byval This as IHTMLStyle ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLStyle_get_borderBottomWidth_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_put_borderLeftWidth_Proxy(byval This as IHTMLStyle ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLStyle_put_borderLeftWidth_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_get_borderLeftWidth_Proxy(byval This as IHTMLStyle ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLStyle_get_borderLeftWidth_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_put_borderStyle_Proxy(byval This as IHTMLStyle ptr, byval v as BSTR) as HRESULT
declare sub IHTMLStyle_put_borderStyle_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_get_borderStyle_Proxy(byval This as IHTMLStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLStyle_get_borderStyle_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_put_borderTopStyle_Proxy(byval This as IHTMLStyle ptr, byval v as BSTR) as HRESULT
declare sub IHTMLStyle_put_borderTopStyle_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_get_borderTopStyle_Proxy(byval This as IHTMLStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLStyle_get_borderTopStyle_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_put_borderRightStyle_Proxy(byval This as IHTMLStyle ptr, byval v as BSTR) as HRESULT
declare sub IHTMLStyle_put_borderRightStyle_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_get_borderRightStyle_Proxy(byval This as IHTMLStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLStyle_get_borderRightStyle_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_put_borderBottomStyle_Proxy(byval This as IHTMLStyle ptr, byval v as BSTR) as HRESULT
declare sub IHTMLStyle_put_borderBottomStyle_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_get_borderBottomStyle_Proxy(byval This as IHTMLStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLStyle_get_borderBottomStyle_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_put_borderLeftStyle_Proxy(byval This as IHTMLStyle ptr, byval v as BSTR) as HRESULT
declare sub IHTMLStyle_put_borderLeftStyle_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_get_borderLeftStyle_Proxy(byval This as IHTMLStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLStyle_get_borderLeftStyle_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_put_width_Proxy(byval This as IHTMLStyle ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLStyle_put_width_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_get_width_Proxy(byval This as IHTMLStyle ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLStyle_get_width_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_put_height_Proxy(byval This as IHTMLStyle ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLStyle_put_height_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_get_height_Proxy(byval This as IHTMLStyle ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLStyle_get_height_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_put_styleFloat_Proxy(byval This as IHTMLStyle ptr, byval v as BSTR) as HRESULT
declare sub IHTMLStyle_put_styleFloat_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_get_styleFloat_Proxy(byval This as IHTMLStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLStyle_get_styleFloat_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_put_clear_Proxy(byval This as IHTMLStyle ptr, byval v as BSTR) as HRESULT
declare sub IHTMLStyle_put_clear_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_get_clear_Proxy(byval This as IHTMLStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLStyle_get_clear_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_put_display_Proxy(byval This as IHTMLStyle ptr, byval v as BSTR) as HRESULT
declare sub IHTMLStyle_put_display_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_get_display_Proxy(byval This as IHTMLStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLStyle_get_display_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_put_visibility_Proxy(byval This as IHTMLStyle ptr, byval v as BSTR) as HRESULT
declare sub IHTMLStyle_put_visibility_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_get_visibility_Proxy(byval This as IHTMLStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLStyle_get_visibility_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_put_listStyleType_Proxy(byval This as IHTMLStyle ptr, byval v as BSTR) as HRESULT
declare sub IHTMLStyle_put_listStyleType_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_get_listStyleType_Proxy(byval This as IHTMLStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLStyle_get_listStyleType_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_put_listStylePosition_Proxy(byval This as IHTMLStyle ptr, byval v as BSTR) as HRESULT
declare sub IHTMLStyle_put_listStylePosition_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_get_listStylePosition_Proxy(byval This as IHTMLStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLStyle_get_listStylePosition_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_put_listStyleImage_Proxy(byval This as IHTMLStyle ptr, byval v as BSTR) as HRESULT
declare sub IHTMLStyle_put_listStyleImage_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_get_listStyleImage_Proxy(byval This as IHTMLStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLStyle_get_listStyleImage_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_put_listStyle_Proxy(byval This as IHTMLStyle ptr, byval v as BSTR) as HRESULT
declare sub IHTMLStyle_put_listStyle_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_get_listStyle_Proxy(byval This as IHTMLStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLStyle_get_listStyle_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_put_whiteSpace_Proxy(byval This as IHTMLStyle ptr, byval v as BSTR) as HRESULT
declare sub IHTMLStyle_put_whiteSpace_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_get_whiteSpace_Proxy(byval This as IHTMLStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLStyle_get_whiteSpace_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_put_top_Proxy(byval This as IHTMLStyle ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLStyle_put_top_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_get_top_Proxy(byval This as IHTMLStyle ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLStyle_get_top_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_put_left_Proxy(byval This as IHTMLStyle ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLStyle_put_left_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_get_left_Proxy(byval This as IHTMLStyle ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLStyle_get_left_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_get_position_Proxy(byval This as IHTMLStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLStyle_get_position_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_put_zIndex_Proxy(byval This as IHTMLStyle ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLStyle_put_zIndex_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_get_zIndex_Proxy(byval This as IHTMLStyle ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLStyle_get_zIndex_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_put_overflow_Proxy(byval This as IHTMLStyle ptr, byval v as BSTR) as HRESULT
declare sub IHTMLStyle_put_overflow_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_get_overflow_Proxy(byval This as IHTMLStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLStyle_get_overflow_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_put_pageBreakBefore_Proxy(byval This as IHTMLStyle ptr, byval v as BSTR) as HRESULT
declare sub IHTMLStyle_put_pageBreakBefore_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_get_pageBreakBefore_Proxy(byval This as IHTMLStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLStyle_get_pageBreakBefore_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_put_pageBreakAfter_Proxy(byval This as IHTMLStyle ptr, byval v as BSTR) as HRESULT
declare sub IHTMLStyle_put_pageBreakAfter_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_get_pageBreakAfter_Proxy(byval This as IHTMLStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLStyle_get_pageBreakAfter_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_put_cssText_Proxy(byval This as IHTMLStyle ptr, byval v as BSTR) as HRESULT
declare sub IHTMLStyle_put_cssText_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_get_cssText_Proxy(byval This as IHTMLStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLStyle_get_cssText_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_put_pixelTop_Proxy(byval This as IHTMLStyle ptr, byval v as long) as HRESULT
declare sub IHTMLStyle_put_pixelTop_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_get_pixelTop_Proxy(byval This as IHTMLStyle ptr, byval p as long ptr) as HRESULT
declare sub IHTMLStyle_get_pixelTop_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_put_pixelLeft_Proxy(byval This as IHTMLStyle ptr, byval v as long) as HRESULT
declare sub IHTMLStyle_put_pixelLeft_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_get_pixelLeft_Proxy(byval This as IHTMLStyle ptr, byval p as long ptr) as HRESULT
declare sub IHTMLStyle_get_pixelLeft_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_put_pixelWidth_Proxy(byval This as IHTMLStyle ptr, byval v as long) as HRESULT
declare sub IHTMLStyle_put_pixelWidth_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_get_pixelWidth_Proxy(byval This as IHTMLStyle ptr, byval p as long ptr) as HRESULT
declare sub IHTMLStyle_get_pixelWidth_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_put_pixelHeight_Proxy(byval This as IHTMLStyle ptr, byval v as long) as HRESULT
declare sub IHTMLStyle_put_pixelHeight_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_get_pixelHeight_Proxy(byval This as IHTMLStyle ptr, byval p as long ptr) as HRESULT
declare sub IHTMLStyle_get_pixelHeight_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_put_posTop_Proxy(byval This as IHTMLStyle ptr, byval v as single) as HRESULT
declare sub IHTMLStyle_put_posTop_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_get_posTop_Proxy(byval This as IHTMLStyle ptr, byval p as single ptr) as HRESULT
declare sub IHTMLStyle_get_posTop_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_put_posLeft_Proxy(byval This as IHTMLStyle ptr, byval v as single) as HRESULT
declare sub IHTMLStyle_put_posLeft_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_get_posLeft_Proxy(byval This as IHTMLStyle ptr, byval p as single ptr) as HRESULT
declare sub IHTMLStyle_get_posLeft_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_put_posWidth_Proxy(byval This as IHTMLStyle ptr, byval v as single) as HRESULT
declare sub IHTMLStyle_put_posWidth_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_get_posWidth_Proxy(byval This as IHTMLStyle ptr, byval p as single ptr) as HRESULT
declare sub IHTMLStyle_get_posWidth_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_put_posHeight_Proxy(byval This as IHTMLStyle ptr, byval v as single) as HRESULT
declare sub IHTMLStyle_put_posHeight_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_get_posHeight_Proxy(byval This as IHTMLStyle ptr, byval p as single ptr) as HRESULT
declare sub IHTMLStyle_get_posHeight_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_put_cursor_Proxy(byval This as IHTMLStyle ptr, byval v as BSTR) as HRESULT
declare sub IHTMLStyle_put_cursor_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_get_cursor_Proxy(byval This as IHTMLStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLStyle_get_cursor_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_put_clip_Proxy(byval This as IHTMLStyle ptr, byval v as BSTR) as HRESULT
declare sub IHTMLStyle_put_clip_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_get_clip_Proxy(byval This as IHTMLStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLStyle_get_clip_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_put_filter_Proxy(byval This as IHTMLStyle ptr, byval v as BSTR) as HRESULT
declare sub IHTMLStyle_put_filter_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_get_filter_Proxy(byval This as IHTMLStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLStyle_get_filter_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_setAttribute_Proxy(byval This as IHTMLStyle ptr, byval strAttributeName as BSTR, byval AttributeValue as VARIANT, byval lFlags as LONG) as HRESULT
declare sub IHTMLStyle_setAttribute_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_getAttribute_Proxy(byval This as IHTMLStyle ptr, byval strAttributeName as BSTR, byval lFlags as LONG, byval AttributeValue as VARIANT ptr) as HRESULT
declare sub IHTMLStyle_getAttribute_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_removeAttribute_Proxy(byval This as IHTMLStyle ptr, byval strAttributeName as BSTR, byval lFlags as LONG, byval pfSuccess as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLStyle_removeAttribute_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle_toString_Proxy(byval This as IHTMLStyle ptr, byval String as BSTR ptr) as HRESULT
declare sub IHTMLStyle_toString_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLStyle2_INTERFACE_DEFINED__
extern IID_IHTMLStyle2 as const IID
type IHTMLStyle2 as IHTMLStyle2_

type IHTMLStyle2Vtbl
	QueryInterface as function(byval This as IHTMLStyle2 ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLStyle2 ptr) as ULONG
	Release as function(byval This as IHTMLStyle2 ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLStyle2 ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLStyle2 ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLStyle2 ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLStyle2 ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	put_tableLayout as function(byval This as IHTMLStyle2 ptr, byval v as BSTR) as HRESULT
	get_tableLayout as function(byval This as IHTMLStyle2 ptr, byval p as BSTR ptr) as HRESULT
	put_borderCollapse as function(byval This as IHTMLStyle2 ptr, byval v as BSTR) as HRESULT
	get_borderCollapse as function(byval This as IHTMLStyle2 ptr, byval p as BSTR ptr) as HRESULT
	put_direction as function(byval This as IHTMLStyle2 ptr, byval v as BSTR) as HRESULT
	get_direction as function(byval This as IHTMLStyle2 ptr, byval p as BSTR ptr) as HRESULT
	put_behavior as function(byval This as IHTMLStyle2 ptr, byval v as BSTR) as HRESULT
	get_behavior as function(byval This as IHTMLStyle2 ptr, byval p as BSTR ptr) as HRESULT
	setExpression as function(byval This as IHTMLStyle2 ptr, byval propname as BSTR, byval expression as BSTR, byval language as BSTR) as HRESULT
	getExpression as function(byval This as IHTMLStyle2 ptr, byval propname as BSTR, byval expression as VARIANT ptr) as HRESULT
	removeExpression as function(byval This as IHTMLStyle2 ptr, byval propname as BSTR, byval pfSuccess as VARIANT_BOOL ptr) as HRESULT
	put_position as function(byval This as IHTMLStyle2 ptr, byval v as BSTR) as HRESULT
	get_position as function(byval This as IHTMLStyle2 ptr, byval p as BSTR ptr) as HRESULT
	put_unicodeBidi as function(byval This as IHTMLStyle2 ptr, byval v as BSTR) as HRESULT
	get_unicodeBidi as function(byval This as IHTMLStyle2 ptr, byval p as BSTR ptr) as HRESULT
	put_bottom as function(byval This as IHTMLStyle2 ptr, byval v as VARIANT) as HRESULT
	get_bottom as function(byval This as IHTMLStyle2 ptr, byval p as VARIANT ptr) as HRESULT
	put_right as function(byval This as IHTMLStyle2 ptr, byval v as VARIANT) as HRESULT
	get_right as function(byval This as IHTMLStyle2 ptr, byval p as VARIANT ptr) as HRESULT
	put_pixelBottom as function(byval This as IHTMLStyle2 ptr, byval v as long) as HRESULT
	get_pixelBottom as function(byval This as IHTMLStyle2 ptr, byval p as long ptr) as HRESULT
	put_pixelRight as function(byval This as IHTMLStyle2 ptr, byval v as long) as HRESULT
	get_pixelRight as function(byval This as IHTMLStyle2 ptr, byval p as long ptr) as HRESULT
	put_posBottom as function(byval This as IHTMLStyle2 ptr, byval v as single) as HRESULT
	get_posBottom as function(byval This as IHTMLStyle2 ptr, byval p as single ptr) as HRESULT
	put_posRight as function(byval This as IHTMLStyle2 ptr, byval v as single) as HRESULT
	get_posRight as function(byval This as IHTMLStyle2 ptr, byval p as single ptr) as HRESULT
	put_imeMode as function(byval This as IHTMLStyle2 ptr, byval v as BSTR) as HRESULT
	get_imeMode as function(byval This as IHTMLStyle2 ptr, byval p as BSTR ptr) as HRESULT
	put_rubyAlign as function(byval This as IHTMLStyle2 ptr, byval v as BSTR) as HRESULT
	get_rubyAlign as function(byval This as IHTMLStyle2 ptr, byval p as BSTR ptr) as HRESULT
	put_rubyPosition as function(byval This as IHTMLStyle2 ptr, byval v as BSTR) as HRESULT
	get_rubyPosition as function(byval This as IHTMLStyle2 ptr, byval p as BSTR ptr) as HRESULT
	put_rubyOverhang as function(byval This as IHTMLStyle2 ptr, byval v as BSTR) as HRESULT
	get_rubyOverhang as function(byval This as IHTMLStyle2 ptr, byval p as BSTR ptr) as HRESULT
	put_layoutGridChar as function(byval This as IHTMLStyle2 ptr, byval v as VARIANT) as HRESULT
	get_layoutGridChar as function(byval This as IHTMLStyle2 ptr, byval p as VARIANT ptr) as HRESULT
	put_layoutGridLine as function(byval This as IHTMLStyle2 ptr, byval v as VARIANT) as HRESULT
	get_layoutGridLine as function(byval This as IHTMLStyle2 ptr, byval p as VARIANT ptr) as HRESULT
	put_layoutGridMode as function(byval This as IHTMLStyle2 ptr, byval v as BSTR) as HRESULT
	get_layoutGridMode as function(byval This as IHTMLStyle2 ptr, byval p as BSTR ptr) as HRESULT
	put_layoutGridType as function(byval This as IHTMLStyle2 ptr, byval v as BSTR) as HRESULT
	get_layoutGridType as function(byval This as IHTMLStyle2 ptr, byval p as BSTR ptr) as HRESULT
	put_layoutGrid as function(byval This as IHTMLStyle2 ptr, byval v as BSTR) as HRESULT
	get_layoutGrid as function(byval This as IHTMLStyle2 ptr, byval p as BSTR ptr) as HRESULT
	put_wordBreak as function(byval This as IHTMLStyle2 ptr, byval v as BSTR) as HRESULT
	get_wordBreak as function(byval This as IHTMLStyle2 ptr, byval p as BSTR ptr) as HRESULT
	put_lineBreak as function(byval This as IHTMLStyle2 ptr, byval v as BSTR) as HRESULT
	get_lineBreak as function(byval This as IHTMLStyle2 ptr, byval p as BSTR ptr) as HRESULT
	put_textJustify as function(byval This as IHTMLStyle2 ptr, byval v as BSTR) as HRESULT
	get_textJustify as function(byval This as IHTMLStyle2 ptr, byval p as BSTR ptr) as HRESULT
	put_textJustifyTrim as function(byval This as IHTMLStyle2 ptr, byval v as BSTR) as HRESULT
	get_textJustifyTrim as function(byval This as IHTMLStyle2 ptr, byval p as BSTR ptr) as HRESULT
	put_textKashida as function(byval This as IHTMLStyle2 ptr, byval v as VARIANT) as HRESULT
	get_textKashida as function(byval This as IHTMLStyle2 ptr, byval p as VARIANT ptr) as HRESULT
	put_textAutospace as function(byval This as IHTMLStyle2 ptr, byval v as BSTR) as HRESULT
	get_textAutospace as function(byval This as IHTMLStyle2 ptr, byval p as BSTR ptr) as HRESULT
	put_overflowX as function(byval This as IHTMLStyle2 ptr, byval v as BSTR) as HRESULT
	get_overflowX as function(byval This as IHTMLStyle2 ptr, byval p as BSTR ptr) as HRESULT
	put_overflowY as function(byval This as IHTMLStyle2 ptr, byval v as BSTR) as HRESULT
	get_overflowY as function(byval This as IHTMLStyle2 ptr, byval p as BSTR ptr) as HRESULT
	put_accelerator as function(byval This as IHTMLStyle2 ptr, byval v as BSTR) as HRESULT
	get_accelerator as function(byval This as IHTMLStyle2 ptr, byval p as BSTR ptr) as HRESULT
end type

type IHTMLStyle2_
	lpVtbl as IHTMLStyle2Vtbl ptr
end type

#define IHTMLStyle2_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLStyle2_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLStyle2_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLStyle2_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLStyle2_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLStyle2_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLStyle2_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLStyle2_put_tableLayout(This, v) (This)->lpVtbl->put_tableLayout(This, v)
#define IHTMLStyle2_get_tableLayout(This, p) (This)->lpVtbl->get_tableLayout(This, p)
#define IHTMLStyle2_put_borderCollapse(This, v) (This)->lpVtbl->put_borderCollapse(This, v)
#define IHTMLStyle2_get_borderCollapse(This, p) (This)->lpVtbl->get_borderCollapse(This, p)
#define IHTMLStyle2_put_direction(This, v) (This)->lpVtbl->put_direction(This, v)
#define IHTMLStyle2_get_direction(This, p) (This)->lpVtbl->get_direction(This, p)
#define IHTMLStyle2_put_behavior(This, v) (This)->lpVtbl->put_behavior(This, v)
#define IHTMLStyle2_get_behavior(This, p) (This)->lpVtbl->get_behavior(This, p)
#define IHTMLStyle2_setExpression(This, propname, expression, language) (This)->lpVtbl->setExpression(This, propname, expression, language)
#define IHTMLStyle2_getExpression(This, propname, expression) (This)->lpVtbl->getExpression(This, propname, expression)
#define IHTMLStyle2_removeExpression(This, propname, pfSuccess) (This)->lpVtbl->removeExpression(This, propname, pfSuccess)
#define IHTMLStyle2_put_position(This, v) (This)->lpVtbl->put_position(This, v)
#define IHTMLStyle2_get_position(This, p) (This)->lpVtbl->get_position(This, p)
#define IHTMLStyle2_put_unicodeBidi(This, v) (This)->lpVtbl->put_unicodeBidi(This, v)
#define IHTMLStyle2_get_unicodeBidi(This, p) (This)->lpVtbl->get_unicodeBidi(This, p)
#define IHTMLStyle2_put_bottom(This, v) (This)->lpVtbl->put_bottom(This, v)
#define IHTMLStyle2_get_bottom(This, p) (This)->lpVtbl->get_bottom(This, p)
#define IHTMLStyle2_put_right(This, v) (This)->lpVtbl->put_right(This, v)
#define IHTMLStyle2_get_right(This, p) (This)->lpVtbl->get_right(This, p)
#define IHTMLStyle2_put_pixelBottom(This, v) (This)->lpVtbl->put_pixelBottom(This, v)
#define IHTMLStyle2_get_pixelBottom(This, p) (This)->lpVtbl->get_pixelBottom(This, p)
#define IHTMLStyle2_put_pixelRight(This, v) (This)->lpVtbl->put_pixelRight(This, v)
#define IHTMLStyle2_get_pixelRight(This, p) (This)->lpVtbl->get_pixelRight(This, p)
#define IHTMLStyle2_put_posBottom(This, v) (This)->lpVtbl->put_posBottom(This, v)
#define IHTMLStyle2_get_posBottom(This, p) (This)->lpVtbl->get_posBottom(This, p)
#define IHTMLStyle2_put_posRight(This, v) (This)->lpVtbl->put_posRight(This, v)
#define IHTMLStyle2_get_posRight(This, p) (This)->lpVtbl->get_posRight(This, p)
#define IHTMLStyle2_put_imeMode(This, v) (This)->lpVtbl->put_imeMode(This, v)
#define IHTMLStyle2_get_imeMode(This, p) (This)->lpVtbl->get_imeMode(This, p)
#define IHTMLStyle2_put_rubyAlign(This, v) (This)->lpVtbl->put_rubyAlign(This, v)
#define IHTMLStyle2_get_rubyAlign(This, p) (This)->lpVtbl->get_rubyAlign(This, p)
#define IHTMLStyle2_put_rubyPosition(This, v) (This)->lpVtbl->put_rubyPosition(This, v)
#define IHTMLStyle2_get_rubyPosition(This, p) (This)->lpVtbl->get_rubyPosition(This, p)
#define IHTMLStyle2_put_rubyOverhang(This, v) (This)->lpVtbl->put_rubyOverhang(This, v)
#define IHTMLStyle2_get_rubyOverhang(This, p) (This)->lpVtbl->get_rubyOverhang(This, p)
#define IHTMLStyle2_put_layoutGridChar(This, v) (This)->lpVtbl->put_layoutGridChar(This, v)
#define IHTMLStyle2_get_layoutGridChar(This, p) (This)->lpVtbl->get_layoutGridChar(This, p)
#define IHTMLStyle2_put_layoutGridLine(This, v) (This)->lpVtbl->put_layoutGridLine(This, v)
#define IHTMLStyle2_get_layoutGridLine(This, p) (This)->lpVtbl->get_layoutGridLine(This, p)
#define IHTMLStyle2_put_layoutGridMode(This, v) (This)->lpVtbl->put_layoutGridMode(This, v)
#define IHTMLStyle2_get_layoutGridMode(This, p) (This)->lpVtbl->get_layoutGridMode(This, p)
#define IHTMLStyle2_put_layoutGridType(This, v) (This)->lpVtbl->put_layoutGridType(This, v)
#define IHTMLStyle2_get_layoutGridType(This, p) (This)->lpVtbl->get_layoutGridType(This, p)
#define IHTMLStyle2_put_layoutGrid(This, v) (This)->lpVtbl->put_layoutGrid(This, v)
#define IHTMLStyle2_get_layoutGrid(This, p) (This)->lpVtbl->get_layoutGrid(This, p)
#define IHTMLStyle2_put_wordBreak(This, v) (This)->lpVtbl->put_wordBreak(This, v)
#define IHTMLStyle2_get_wordBreak(This, p) (This)->lpVtbl->get_wordBreak(This, p)
#define IHTMLStyle2_put_lineBreak(This, v) (This)->lpVtbl->put_lineBreak(This, v)
#define IHTMLStyle2_get_lineBreak(This, p) (This)->lpVtbl->get_lineBreak(This, p)
#define IHTMLStyle2_put_textJustify(This, v) (This)->lpVtbl->put_textJustify(This, v)
#define IHTMLStyle2_get_textJustify(This, p) (This)->lpVtbl->get_textJustify(This, p)
#define IHTMLStyle2_put_textJustifyTrim(This, v) (This)->lpVtbl->put_textJustifyTrim(This, v)
#define IHTMLStyle2_get_textJustifyTrim(This, p) (This)->lpVtbl->get_textJustifyTrim(This, p)
#define IHTMLStyle2_put_textKashida(This, v) (This)->lpVtbl->put_textKashida(This, v)
#define IHTMLStyle2_get_textKashida(This, p) (This)->lpVtbl->get_textKashida(This, p)
#define IHTMLStyle2_put_textAutospace(This, v) (This)->lpVtbl->put_textAutospace(This, v)
#define IHTMLStyle2_get_textAutospace(This, p) (This)->lpVtbl->get_textAutospace(This, p)
#define IHTMLStyle2_put_overflowX(This, v) (This)->lpVtbl->put_overflowX(This, v)
#define IHTMLStyle2_get_overflowX(This, p) (This)->lpVtbl->get_overflowX(This, p)
#define IHTMLStyle2_put_overflowY(This, v) (This)->lpVtbl->put_overflowY(This, v)
#define IHTMLStyle2_get_overflowY(This, p) (This)->lpVtbl->get_overflowY(This, p)
#define IHTMLStyle2_put_accelerator(This, v) (This)->lpVtbl->put_accelerator(This, v)
#define IHTMLStyle2_get_accelerator(This, p) (This)->lpVtbl->get_accelerator(This, p)

declare function IHTMLStyle2_put_tableLayout_Proxy(byval This as IHTMLStyle2 ptr, byval v as BSTR) as HRESULT
declare sub IHTMLStyle2_put_tableLayout_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle2_get_tableLayout_Proxy(byval This as IHTMLStyle2 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLStyle2_get_tableLayout_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle2_put_borderCollapse_Proxy(byval This as IHTMLStyle2 ptr, byval v as BSTR) as HRESULT
declare sub IHTMLStyle2_put_borderCollapse_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle2_get_borderCollapse_Proxy(byval This as IHTMLStyle2 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLStyle2_get_borderCollapse_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle2_put_direction_Proxy(byval This as IHTMLStyle2 ptr, byval v as BSTR) as HRESULT
declare sub IHTMLStyle2_put_direction_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle2_get_direction_Proxy(byval This as IHTMLStyle2 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLStyle2_get_direction_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle2_put_behavior_Proxy(byval This as IHTMLStyle2 ptr, byval v as BSTR) as HRESULT
declare sub IHTMLStyle2_put_behavior_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle2_get_behavior_Proxy(byval This as IHTMLStyle2 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLStyle2_get_behavior_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle2_setExpression_Proxy(byval This as IHTMLStyle2 ptr, byval propname as BSTR, byval expression as BSTR, byval language as BSTR) as HRESULT
declare sub IHTMLStyle2_setExpression_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle2_getExpression_Proxy(byval This as IHTMLStyle2 ptr, byval propname as BSTR, byval expression as VARIANT ptr) as HRESULT
declare sub IHTMLStyle2_getExpression_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle2_removeExpression_Proxy(byval This as IHTMLStyle2 ptr, byval propname as BSTR, byval pfSuccess as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLStyle2_removeExpression_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle2_put_position_Proxy(byval This as IHTMLStyle2 ptr, byval v as BSTR) as HRESULT
declare sub IHTMLStyle2_put_position_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle2_get_position_Proxy(byval This as IHTMLStyle2 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLStyle2_get_position_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle2_put_unicodeBidi_Proxy(byval This as IHTMLStyle2 ptr, byval v as BSTR) as HRESULT
declare sub IHTMLStyle2_put_unicodeBidi_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle2_get_unicodeBidi_Proxy(byval This as IHTMLStyle2 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLStyle2_get_unicodeBidi_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle2_put_bottom_Proxy(byval This as IHTMLStyle2 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLStyle2_put_bottom_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle2_get_bottom_Proxy(byval This as IHTMLStyle2 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLStyle2_get_bottom_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle2_put_right_Proxy(byval This as IHTMLStyle2 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLStyle2_put_right_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle2_get_right_Proxy(byval This as IHTMLStyle2 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLStyle2_get_right_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle2_put_pixelBottom_Proxy(byval This as IHTMLStyle2 ptr, byval v as long) as HRESULT
declare sub IHTMLStyle2_put_pixelBottom_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle2_get_pixelBottom_Proxy(byval This as IHTMLStyle2 ptr, byval p as long ptr) as HRESULT
declare sub IHTMLStyle2_get_pixelBottom_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle2_put_pixelRight_Proxy(byval This as IHTMLStyle2 ptr, byval v as long) as HRESULT
declare sub IHTMLStyle2_put_pixelRight_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle2_get_pixelRight_Proxy(byval This as IHTMLStyle2 ptr, byval p as long ptr) as HRESULT
declare sub IHTMLStyle2_get_pixelRight_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle2_put_posBottom_Proxy(byval This as IHTMLStyle2 ptr, byval v as single) as HRESULT
declare sub IHTMLStyle2_put_posBottom_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle2_get_posBottom_Proxy(byval This as IHTMLStyle2 ptr, byval p as single ptr) as HRESULT
declare sub IHTMLStyle2_get_posBottom_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle2_put_posRight_Proxy(byval This as IHTMLStyle2 ptr, byval v as single) as HRESULT
declare sub IHTMLStyle2_put_posRight_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle2_get_posRight_Proxy(byval This as IHTMLStyle2 ptr, byval p as single ptr) as HRESULT
declare sub IHTMLStyle2_get_posRight_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle2_put_imeMode_Proxy(byval This as IHTMLStyle2 ptr, byval v as BSTR) as HRESULT
declare sub IHTMLStyle2_put_imeMode_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle2_get_imeMode_Proxy(byval This as IHTMLStyle2 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLStyle2_get_imeMode_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle2_put_rubyAlign_Proxy(byval This as IHTMLStyle2 ptr, byval v as BSTR) as HRESULT
declare sub IHTMLStyle2_put_rubyAlign_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle2_get_rubyAlign_Proxy(byval This as IHTMLStyle2 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLStyle2_get_rubyAlign_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle2_put_rubyPosition_Proxy(byval This as IHTMLStyle2 ptr, byval v as BSTR) as HRESULT
declare sub IHTMLStyle2_put_rubyPosition_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle2_get_rubyPosition_Proxy(byval This as IHTMLStyle2 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLStyle2_get_rubyPosition_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle2_put_rubyOverhang_Proxy(byval This as IHTMLStyle2 ptr, byval v as BSTR) as HRESULT
declare sub IHTMLStyle2_put_rubyOverhang_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle2_get_rubyOverhang_Proxy(byval This as IHTMLStyle2 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLStyle2_get_rubyOverhang_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle2_put_layoutGridChar_Proxy(byval This as IHTMLStyle2 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLStyle2_put_layoutGridChar_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle2_get_layoutGridChar_Proxy(byval This as IHTMLStyle2 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLStyle2_get_layoutGridChar_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle2_put_layoutGridLine_Proxy(byval This as IHTMLStyle2 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLStyle2_put_layoutGridLine_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle2_get_layoutGridLine_Proxy(byval This as IHTMLStyle2 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLStyle2_get_layoutGridLine_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle2_put_layoutGridMode_Proxy(byval This as IHTMLStyle2 ptr, byval v as BSTR) as HRESULT
declare sub IHTMLStyle2_put_layoutGridMode_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle2_get_layoutGridMode_Proxy(byval This as IHTMLStyle2 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLStyle2_get_layoutGridMode_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle2_put_layoutGridType_Proxy(byval This as IHTMLStyle2 ptr, byval v as BSTR) as HRESULT
declare sub IHTMLStyle2_put_layoutGridType_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle2_get_layoutGridType_Proxy(byval This as IHTMLStyle2 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLStyle2_get_layoutGridType_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle2_put_layoutGrid_Proxy(byval This as IHTMLStyle2 ptr, byval v as BSTR) as HRESULT
declare sub IHTMLStyle2_put_layoutGrid_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle2_get_layoutGrid_Proxy(byval This as IHTMLStyle2 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLStyle2_get_layoutGrid_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle2_put_wordBreak_Proxy(byval This as IHTMLStyle2 ptr, byval v as BSTR) as HRESULT
declare sub IHTMLStyle2_put_wordBreak_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle2_get_wordBreak_Proxy(byval This as IHTMLStyle2 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLStyle2_get_wordBreak_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle2_put_lineBreak_Proxy(byval This as IHTMLStyle2 ptr, byval v as BSTR) as HRESULT
declare sub IHTMLStyle2_put_lineBreak_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle2_get_lineBreak_Proxy(byval This as IHTMLStyle2 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLStyle2_get_lineBreak_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle2_put_textJustify_Proxy(byval This as IHTMLStyle2 ptr, byval v as BSTR) as HRESULT
declare sub IHTMLStyle2_put_textJustify_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle2_get_textJustify_Proxy(byval This as IHTMLStyle2 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLStyle2_get_textJustify_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle2_put_textJustifyTrim_Proxy(byval This as IHTMLStyle2 ptr, byval v as BSTR) as HRESULT
declare sub IHTMLStyle2_put_textJustifyTrim_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle2_get_textJustifyTrim_Proxy(byval This as IHTMLStyle2 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLStyle2_get_textJustifyTrim_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle2_put_textKashida_Proxy(byval This as IHTMLStyle2 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLStyle2_put_textKashida_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle2_get_textKashida_Proxy(byval This as IHTMLStyle2 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLStyle2_get_textKashida_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle2_put_textAutospace_Proxy(byval This as IHTMLStyle2 ptr, byval v as BSTR) as HRESULT
declare sub IHTMLStyle2_put_textAutospace_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle2_get_textAutospace_Proxy(byval This as IHTMLStyle2 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLStyle2_get_textAutospace_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle2_put_overflowX_Proxy(byval This as IHTMLStyle2 ptr, byval v as BSTR) as HRESULT
declare sub IHTMLStyle2_put_overflowX_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle2_get_overflowX_Proxy(byval This as IHTMLStyle2 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLStyle2_get_overflowX_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle2_put_overflowY_Proxy(byval This as IHTMLStyle2 ptr, byval v as BSTR) as HRESULT
declare sub IHTMLStyle2_put_overflowY_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle2_get_overflowY_Proxy(byval This as IHTMLStyle2 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLStyle2_get_overflowY_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle2_put_accelerator_Proxy(byval This as IHTMLStyle2 ptr, byval v as BSTR) as HRESULT
declare sub IHTMLStyle2_put_accelerator_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle2_get_accelerator_Proxy(byval This as IHTMLStyle2 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLStyle2_get_accelerator_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLStyle3_INTERFACE_DEFINED__
extern IID_IHTMLStyle3 as const IID
type IHTMLStyle3 as IHTMLStyle3_

type IHTMLStyle3Vtbl
	QueryInterface as function(byval This as IHTMLStyle3 ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLStyle3 ptr) as ULONG
	Release as function(byval This as IHTMLStyle3 ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLStyle3 ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLStyle3 ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLStyle3 ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLStyle3 ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	put_layoutFlow as function(byval This as IHTMLStyle3 ptr, byval v as BSTR) as HRESULT
	get_layoutFlow as function(byval This as IHTMLStyle3 ptr, byval p as BSTR ptr) as HRESULT
	put_zoom as function(byval This as IHTMLStyle3 ptr, byval v as VARIANT) as HRESULT
	get_zoom as function(byval This as IHTMLStyle3 ptr, byval p as VARIANT ptr) as HRESULT
	put_wordWrap as function(byval This as IHTMLStyle3 ptr, byval v as BSTR) as HRESULT
	get_wordWrap as function(byval This as IHTMLStyle3 ptr, byval p as BSTR ptr) as HRESULT
	put_textUnderlinePosition as function(byval This as IHTMLStyle3 ptr, byval v as BSTR) as HRESULT
	get_textUnderlinePosition as function(byval This as IHTMLStyle3 ptr, byval p as BSTR ptr) as HRESULT
	put_scrollbarBaseColor as function(byval This as IHTMLStyle3 ptr, byval v as VARIANT) as HRESULT
	get_scrollbarBaseColor as function(byval This as IHTMLStyle3 ptr, byval p as VARIANT ptr) as HRESULT
	put_scrollbarFaceColor as function(byval This as IHTMLStyle3 ptr, byval v as VARIANT) as HRESULT
	get_scrollbarFaceColor as function(byval This as IHTMLStyle3 ptr, byval p as VARIANT ptr) as HRESULT
	put_scrollbar3dLightColor as function(byval This as IHTMLStyle3 ptr, byval v as VARIANT) as HRESULT
	get_scrollbar3dLightColor as function(byval This as IHTMLStyle3 ptr, byval p as VARIANT ptr) as HRESULT
	put_scrollbarShadowColor as function(byval This as IHTMLStyle3 ptr, byval v as VARIANT) as HRESULT
	get_scrollbarShadowColor as function(byval This as IHTMLStyle3 ptr, byval p as VARIANT ptr) as HRESULT
	put_scrollbarHighlightColor as function(byval This as IHTMLStyle3 ptr, byval v as VARIANT) as HRESULT
	get_scrollbarHighlightColor as function(byval This as IHTMLStyle3 ptr, byval p as VARIANT ptr) as HRESULT
	put_scrollbarDarkShadowColor as function(byval This as IHTMLStyle3 ptr, byval v as VARIANT) as HRESULT
	get_scrollbarDarkShadowColor as function(byval This as IHTMLStyle3 ptr, byval p as VARIANT ptr) as HRESULT
	put_scrollbarArrowColor as function(byval This as IHTMLStyle3 ptr, byval v as VARIANT) as HRESULT
	get_scrollbarArrowColor as function(byval This as IHTMLStyle3 ptr, byval p as VARIANT ptr) as HRESULT
	put_scrollbarTrackColor as function(byval This as IHTMLStyle3 ptr, byval v as VARIANT) as HRESULT
	get_scrollbarTrackColor as function(byval This as IHTMLStyle3 ptr, byval p as VARIANT ptr) as HRESULT
	put_writingMode as function(byval This as IHTMLStyle3 ptr, byval v as BSTR) as HRESULT
	get_writingMode as function(byval This as IHTMLStyle3 ptr, byval p as BSTR ptr) as HRESULT
	put_textAlignLast as function(byval This as IHTMLStyle3 ptr, byval v as BSTR) as HRESULT
	get_textAlignLast as function(byval This as IHTMLStyle3 ptr, byval p as BSTR ptr) as HRESULT
	put_textKashidaSpace as function(byval This as IHTMLStyle3 ptr, byval v as VARIANT) as HRESULT
	get_textKashidaSpace as function(byval This as IHTMLStyle3 ptr, byval p as VARIANT ptr) as HRESULT
end type

type IHTMLStyle3_
	lpVtbl as IHTMLStyle3Vtbl ptr
end type

#define IHTMLStyle3_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLStyle3_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLStyle3_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLStyle3_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLStyle3_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLStyle3_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLStyle3_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLStyle3_put_layoutFlow(This, v) (This)->lpVtbl->put_layoutFlow(This, v)
#define IHTMLStyle3_get_layoutFlow(This, p) (This)->lpVtbl->get_layoutFlow(This, p)
#define IHTMLStyle3_put_zoom(This, v) (This)->lpVtbl->put_zoom(This, v)
#define IHTMLStyle3_get_zoom(This, p) (This)->lpVtbl->get_zoom(This, p)
#define IHTMLStyle3_put_wordWrap(This, v) (This)->lpVtbl->put_wordWrap(This, v)
#define IHTMLStyle3_get_wordWrap(This, p) (This)->lpVtbl->get_wordWrap(This, p)
#define IHTMLStyle3_put_textUnderlinePosition(This, v) (This)->lpVtbl->put_textUnderlinePosition(This, v)
#define IHTMLStyle3_get_textUnderlinePosition(This, p) (This)->lpVtbl->get_textUnderlinePosition(This, p)
#define IHTMLStyle3_put_scrollbarBaseColor(This, v) (This)->lpVtbl->put_scrollbarBaseColor(This, v)
#define IHTMLStyle3_get_scrollbarBaseColor(This, p) (This)->lpVtbl->get_scrollbarBaseColor(This, p)
#define IHTMLStyle3_put_scrollbarFaceColor(This, v) (This)->lpVtbl->put_scrollbarFaceColor(This, v)
#define IHTMLStyle3_get_scrollbarFaceColor(This, p) (This)->lpVtbl->get_scrollbarFaceColor(This, p)
#define IHTMLStyle3_put_scrollbar3dLightColor(This, v) (This)->lpVtbl->put_scrollbar3dLightColor(This, v)
#define IHTMLStyle3_get_scrollbar3dLightColor(This, p) (This)->lpVtbl->get_scrollbar3dLightColor(This, p)
#define IHTMLStyle3_put_scrollbarShadowColor(This, v) (This)->lpVtbl->put_scrollbarShadowColor(This, v)
#define IHTMLStyle3_get_scrollbarShadowColor(This, p) (This)->lpVtbl->get_scrollbarShadowColor(This, p)
#define IHTMLStyle3_put_scrollbarHighlightColor(This, v) (This)->lpVtbl->put_scrollbarHighlightColor(This, v)
#define IHTMLStyle3_get_scrollbarHighlightColor(This, p) (This)->lpVtbl->get_scrollbarHighlightColor(This, p)
#define IHTMLStyle3_put_scrollbarDarkShadowColor(This, v) (This)->lpVtbl->put_scrollbarDarkShadowColor(This, v)
#define IHTMLStyle3_get_scrollbarDarkShadowColor(This, p) (This)->lpVtbl->get_scrollbarDarkShadowColor(This, p)
#define IHTMLStyle3_put_scrollbarArrowColor(This, v) (This)->lpVtbl->put_scrollbarArrowColor(This, v)
#define IHTMLStyle3_get_scrollbarArrowColor(This, p) (This)->lpVtbl->get_scrollbarArrowColor(This, p)
#define IHTMLStyle3_put_scrollbarTrackColor(This, v) (This)->lpVtbl->put_scrollbarTrackColor(This, v)
#define IHTMLStyle3_get_scrollbarTrackColor(This, p) (This)->lpVtbl->get_scrollbarTrackColor(This, p)
#define IHTMLStyle3_put_writingMode(This, v) (This)->lpVtbl->put_writingMode(This, v)
#define IHTMLStyle3_get_writingMode(This, p) (This)->lpVtbl->get_writingMode(This, p)
#define IHTMLStyle3_put_textAlignLast(This, v) (This)->lpVtbl->put_textAlignLast(This, v)
#define IHTMLStyle3_get_textAlignLast(This, p) (This)->lpVtbl->get_textAlignLast(This, p)
#define IHTMLStyle3_put_textKashidaSpace(This, v) (This)->lpVtbl->put_textKashidaSpace(This, v)
#define IHTMLStyle3_get_textKashidaSpace(This, p) (This)->lpVtbl->get_textKashidaSpace(This, p)

declare function IHTMLStyle3_put_layoutFlow_Proxy(byval This as IHTMLStyle3 ptr, byval v as BSTR) as HRESULT
declare sub IHTMLStyle3_put_layoutFlow_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle3_get_layoutFlow_Proxy(byval This as IHTMLStyle3 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLStyle3_get_layoutFlow_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle3_put_zoom_Proxy(byval This as IHTMLStyle3 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLStyle3_put_zoom_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle3_get_zoom_Proxy(byval This as IHTMLStyle3 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLStyle3_get_zoom_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle3_put_wordWrap_Proxy(byval This as IHTMLStyle3 ptr, byval v as BSTR) as HRESULT
declare sub IHTMLStyle3_put_wordWrap_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle3_get_wordWrap_Proxy(byval This as IHTMLStyle3 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLStyle3_get_wordWrap_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle3_put_textUnderlinePosition_Proxy(byval This as IHTMLStyle3 ptr, byval v as BSTR) as HRESULT
declare sub IHTMLStyle3_put_textUnderlinePosition_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle3_get_textUnderlinePosition_Proxy(byval This as IHTMLStyle3 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLStyle3_get_textUnderlinePosition_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle3_put_scrollbarBaseColor_Proxy(byval This as IHTMLStyle3 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLStyle3_put_scrollbarBaseColor_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle3_get_scrollbarBaseColor_Proxy(byval This as IHTMLStyle3 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLStyle3_get_scrollbarBaseColor_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle3_put_scrollbarFaceColor_Proxy(byval This as IHTMLStyle3 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLStyle3_put_scrollbarFaceColor_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle3_get_scrollbarFaceColor_Proxy(byval This as IHTMLStyle3 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLStyle3_get_scrollbarFaceColor_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle3_put_scrollbar3dLightColor_Proxy(byval This as IHTMLStyle3 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLStyle3_put_scrollbar3dLightColor_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle3_get_scrollbar3dLightColor_Proxy(byval This as IHTMLStyle3 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLStyle3_get_scrollbar3dLightColor_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle3_put_scrollbarShadowColor_Proxy(byval This as IHTMLStyle3 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLStyle3_put_scrollbarShadowColor_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle3_get_scrollbarShadowColor_Proxy(byval This as IHTMLStyle3 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLStyle3_get_scrollbarShadowColor_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle3_put_scrollbarHighlightColor_Proxy(byval This as IHTMLStyle3 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLStyle3_put_scrollbarHighlightColor_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle3_get_scrollbarHighlightColor_Proxy(byval This as IHTMLStyle3 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLStyle3_get_scrollbarHighlightColor_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle3_put_scrollbarDarkShadowColor_Proxy(byval This as IHTMLStyle3 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLStyle3_put_scrollbarDarkShadowColor_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle3_get_scrollbarDarkShadowColor_Proxy(byval This as IHTMLStyle3 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLStyle3_get_scrollbarDarkShadowColor_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle3_put_scrollbarArrowColor_Proxy(byval This as IHTMLStyle3 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLStyle3_put_scrollbarArrowColor_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle3_get_scrollbarArrowColor_Proxy(byval This as IHTMLStyle3 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLStyle3_get_scrollbarArrowColor_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle3_put_scrollbarTrackColor_Proxy(byval This as IHTMLStyle3 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLStyle3_put_scrollbarTrackColor_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle3_get_scrollbarTrackColor_Proxy(byval This as IHTMLStyle3 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLStyle3_get_scrollbarTrackColor_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle3_put_writingMode_Proxy(byval This as IHTMLStyle3 ptr, byval v as BSTR) as HRESULT
declare sub IHTMLStyle3_put_writingMode_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle3_get_writingMode_Proxy(byval This as IHTMLStyle3 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLStyle3_get_writingMode_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle3_put_textAlignLast_Proxy(byval This as IHTMLStyle3 ptr, byval v as BSTR) as HRESULT
declare sub IHTMLStyle3_put_textAlignLast_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle3_get_textAlignLast_Proxy(byval This as IHTMLStyle3 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLStyle3_get_textAlignLast_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle3_put_textKashidaSpace_Proxy(byval This as IHTMLStyle3 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLStyle3_put_textKashidaSpace_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle3_get_textKashidaSpace_Proxy(byval This as IHTMLStyle3 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLStyle3_get_textKashidaSpace_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLStyle4_INTERFACE_DEFINED__
extern IID_IHTMLStyle4 as const IID
type IHTMLStyle4 as IHTMLStyle4_

type IHTMLStyle4Vtbl
	QueryInterface as function(byval This as IHTMLStyle4 ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLStyle4 ptr) as ULONG
	Release as function(byval This as IHTMLStyle4 ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLStyle4 ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLStyle4 ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLStyle4 ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLStyle4 ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	put_textOverflow as function(byval This as IHTMLStyle4 ptr, byval v as BSTR) as HRESULT
	get_textOverflow as function(byval This as IHTMLStyle4 ptr, byval p as BSTR ptr) as HRESULT
	put_minHeight as function(byval This as IHTMLStyle4 ptr, byval v as VARIANT) as HRESULT
	get_minHeight as function(byval This as IHTMLStyle4 ptr, byval p as VARIANT ptr) as HRESULT
end type

type IHTMLStyle4_
	lpVtbl as IHTMLStyle4Vtbl ptr
end type

#define IHTMLStyle4_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLStyle4_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLStyle4_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLStyle4_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLStyle4_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLStyle4_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLStyle4_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLStyle4_put_textOverflow(This, v) (This)->lpVtbl->put_textOverflow(This, v)
#define IHTMLStyle4_get_textOverflow(This, p) (This)->lpVtbl->get_textOverflow(This, p)
#define IHTMLStyle4_put_minHeight(This, v) (This)->lpVtbl->put_minHeight(This, v)
#define IHTMLStyle4_get_minHeight(This, p) (This)->lpVtbl->get_minHeight(This, p)

declare function IHTMLStyle4_put_textOverflow_Proxy(byval This as IHTMLStyle4 ptr, byval v as BSTR) as HRESULT
declare sub IHTMLStyle4_put_textOverflow_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle4_get_textOverflow_Proxy(byval This as IHTMLStyle4 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLStyle4_get_textOverflow_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle4_put_minHeight_Proxy(byval This as IHTMLStyle4 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLStyle4_put_minHeight_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyle4_get_minHeight_Proxy(byval This as IHTMLStyle4 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLStyle4_get_minHeight_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLRuleStyle_INTERFACE_DEFINED__
extern IID_IHTMLRuleStyle as const IID
type IHTMLRuleStyle as IHTMLRuleStyle_

type IHTMLRuleStyleVtbl
	QueryInterface as function(byval This as IHTMLRuleStyle ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLRuleStyle ptr) as ULONG
	Release as function(byval This as IHTMLRuleStyle ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLRuleStyle ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLRuleStyle ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLRuleStyle ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLRuleStyle ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	put_fontFamily as function(byval This as IHTMLRuleStyle ptr, byval v as BSTR) as HRESULT
	get_fontFamily as function(byval This as IHTMLRuleStyle ptr, byval p as BSTR ptr) as HRESULT
	put_fontStyle as function(byval This as IHTMLRuleStyle ptr, byval v as BSTR) as HRESULT
	get_fontStyle as function(byval This as IHTMLRuleStyle ptr, byval p as BSTR ptr) as HRESULT
	put_fontVariant as function(byval This as IHTMLRuleStyle ptr, byval v as BSTR) as HRESULT
	get_fontVariant as function(byval This as IHTMLRuleStyle ptr, byval p as BSTR ptr) as HRESULT
	put_fontWeight as function(byval This as IHTMLRuleStyle ptr, byval v as BSTR) as HRESULT
	get_fontWeight as function(byval This as IHTMLRuleStyle ptr, byval p as BSTR ptr) as HRESULT
	put_fontSize as function(byval This as IHTMLRuleStyle ptr, byval v as VARIANT) as HRESULT
	get_fontSize as function(byval This as IHTMLRuleStyle ptr, byval p as VARIANT ptr) as HRESULT
	put_font as function(byval This as IHTMLRuleStyle ptr, byval v as BSTR) as HRESULT
	get_font as function(byval This as IHTMLRuleStyle ptr, byval p as BSTR ptr) as HRESULT
	put_color as function(byval This as IHTMLRuleStyle ptr, byval v as VARIANT) as HRESULT
	get_color as function(byval This as IHTMLRuleStyle ptr, byval p as VARIANT ptr) as HRESULT
	put_background as function(byval This as IHTMLRuleStyle ptr, byval v as BSTR) as HRESULT
	get_background as function(byval This as IHTMLRuleStyle ptr, byval p as BSTR ptr) as HRESULT
	put_backgroundColor as function(byval This as IHTMLRuleStyle ptr, byval v as VARIANT) as HRESULT
	get_backgroundColor as function(byval This as IHTMLRuleStyle ptr, byval p as VARIANT ptr) as HRESULT
	put_backgroundImage as function(byval This as IHTMLRuleStyle ptr, byval v as BSTR) as HRESULT
	get_backgroundImage as function(byval This as IHTMLRuleStyle ptr, byval p as BSTR ptr) as HRESULT
	put_backgroundRepeat as function(byval This as IHTMLRuleStyle ptr, byval v as BSTR) as HRESULT
	get_backgroundRepeat as function(byval This as IHTMLRuleStyle ptr, byval p as BSTR ptr) as HRESULT
	put_backgroundAttachment as function(byval This as IHTMLRuleStyle ptr, byval v as BSTR) as HRESULT
	get_backgroundAttachment as function(byval This as IHTMLRuleStyle ptr, byval p as BSTR ptr) as HRESULT
	put_backgroundPosition as function(byval This as IHTMLRuleStyle ptr, byval v as BSTR) as HRESULT
	get_backgroundPosition as function(byval This as IHTMLRuleStyle ptr, byval p as BSTR ptr) as HRESULT
	put_backgroundPositionX as function(byval This as IHTMLRuleStyle ptr, byval v as VARIANT) as HRESULT
	get_backgroundPositionX as function(byval This as IHTMLRuleStyle ptr, byval p as VARIANT ptr) as HRESULT
	put_backgroundPositionY as function(byval This as IHTMLRuleStyle ptr, byval v as VARIANT) as HRESULT
	get_backgroundPositionY as function(byval This as IHTMLRuleStyle ptr, byval p as VARIANT ptr) as HRESULT
	put_wordSpacing as function(byval This as IHTMLRuleStyle ptr, byval v as VARIANT) as HRESULT
	get_wordSpacing as function(byval This as IHTMLRuleStyle ptr, byval p as VARIANT ptr) as HRESULT
	put_letterSpacing as function(byval This as IHTMLRuleStyle ptr, byval v as VARIANT) as HRESULT
	get_letterSpacing as function(byval This as IHTMLRuleStyle ptr, byval p as VARIANT ptr) as HRESULT
	put_textDecoration as function(byval This as IHTMLRuleStyle ptr, byval v as BSTR) as HRESULT
	get_textDecoration as function(byval This as IHTMLRuleStyle ptr, byval p as BSTR ptr) as HRESULT
	put_textDecorationNone as function(byval This as IHTMLRuleStyle ptr, byval v as VARIANT_BOOL) as HRESULT
	get_textDecorationNone as function(byval This as IHTMLRuleStyle ptr, byval p as VARIANT_BOOL ptr) as HRESULT
	put_textDecorationUnderline as function(byval This as IHTMLRuleStyle ptr, byval v as VARIANT_BOOL) as HRESULT
	get_textDecorationUnderline as function(byval This as IHTMLRuleStyle ptr, byval p as VARIANT_BOOL ptr) as HRESULT
	put_textDecorationOverline as function(byval This as IHTMLRuleStyle ptr, byval v as VARIANT_BOOL) as HRESULT
	get_textDecorationOverline as function(byval This as IHTMLRuleStyle ptr, byval p as VARIANT_BOOL ptr) as HRESULT
	put_textDecorationLineThrough as function(byval This as IHTMLRuleStyle ptr, byval v as VARIANT_BOOL) as HRESULT
	get_textDecorationLineThrough as function(byval This as IHTMLRuleStyle ptr, byval p as VARIANT_BOOL ptr) as HRESULT
	put_textDecorationBlink as function(byval This as IHTMLRuleStyle ptr, byval v as VARIANT_BOOL) as HRESULT
	get_textDecorationBlink as function(byval This as IHTMLRuleStyle ptr, byval p as VARIANT_BOOL ptr) as HRESULT
	put_verticalAlign as function(byval This as IHTMLRuleStyle ptr, byval v as VARIANT) as HRESULT
	get_verticalAlign as function(byval This as IHTMLRuleStyle ptr, byval p as VARIANT ptr) as HRESULT
	put_textTransform as function(byval This as IHTMLRuleStyle ptr, byval v as BSTR) as HRESULT
	get_textTransform as function(byval This as IHTMLRuleStyle ptr, byval p as BSTR ptr) as HRESULT
	put_textAlign as function(byval This as IHTMLRuleStyle ptr, byval v as BSTR) as HRESULT
	get_textAlign as function(byval This as IHTMLRuleStyle ptr, byval p as BSTR ptr) as HRESULT
	put_textIndent as function(byval This as IHTMLRuleStyle ptr, byval v as VARIANT) as HRESULT
	get_textIndent as function(byval This as IHTMLRuleStyle ptr, byval p as VARIANT ptr) as HRESULT
	put_lineHeight as function(byval This as IHTMLRuleStyle ptr, byval v as VARIANT) as HRESULT
	get_lineHeight as function(byval This as IHTMLRuleStyle ptr, byval p as VARIANT ptr) as HRESULT
	put_marginTop as function(byval This as IHTMLRuleStyle ptr, byval v as VARIANT) as HRESULT
	get_marginTop as function(byval This as IHTMLRuleStyle ptr, byval p as VARIANT ptr) as HRESULT
	put_marginRight as function(byval This as IHTMLRuleStyle ptr, byval v as VARIANT) as HRESULT
	get_marginRight as function(byval This as IHTMLRuleStyle ptr, byval p as VARIANT ptr) as HRESULT
	put_marginBottom as function(byval This as IHTMLRuleStyle ptr, byval v as VARIANT) as HRESULT
	get_marginBottom as function(byval This as IHTMLRuleStyle ptr, byval p as VARIANT ptr) as HRESULT
	put_marginLeft as function(byval This as IHTMLRuleStyle ptr, byval v as VARIANT) as HRESULT
	get_marginLeft as function(byval This as IHTMLRuleStyle ptr, byval p as VARIANT ptr) as HRESULT
	put_margin as function(byval This as IHTMLRuleStyle ptr, byval v as BSTR) as HRESULT
	get_margin as function(byval This as IHTMLRuleStyle ptr, byval p as BSTR ptr) as HRESULT
	put_paddingTop as function(byval This as IHTMLRuleStyle ptr, byval v as VARIANT) as HRESULT
	get_paddingTop as function(byval This as IHTMLRuleStyle ptr, byval p as VARIANT ptr) as HRESULT
	put_paddingRight as function(byval This as IHTMLRuleStyle ptr, byval v as VARIANT) as HRESULT
	get_paddingRight as function(byval This as IHTMLRuleStyle ptr, byval p as VARIANT ptr) as HRESULT
	put_paddingBottom as function(byval This as IHTMLRuleStyle ptr, byval v as VARIANT) as HRESULT
	get_paddingBottom as function(byval This as IHTMLRuleStyle ptr, byval p as VARIANT ptr) as HRESULT
	put_paddingLeft as function(byval This as IHTMLRuleStyle ptr, byval v as VARIANT) as HRESULT
	get_paddingLeft as function(byval This as IHTMLRuleStyle ptr, byval p as VARIANT ptr) as HRESULT
	put_padding as function(byval This as IHTMLRuleStyle ptr, byval v as BSTR) as HRESULT
	get_padding as function(byval This as IHTMLRuleStyle ptr, byval p as BSTR ptr) as HRESULT
	put_border as function(byval This as IHTMLRuleStyle ptr, byval v as BSTR) as HRESULT
	get_border as function(byval This as IHTMLRuleStyle ptr, byval p as BSTR ptr) as HRESULT
	put_borderTop as function(byval This as IHTMLRuleStyle ptr, byval v as BSTR) as HRESULT
	get_borderTop as function(byval This as IHTMLRuleStyle ptr, byval p as BSTR ptr) as HRESULT
	put_borderRight as function(byval This as IHTMLRuleStyle ptr, byval v as BSTR) as HRESULT
	get_borderRight as function(byval This as IHTMLRuleStyle ptr, byval p as BSTR ptr) as HRESULT
	put_borderBottom as function(byval This as IHTMLRuleStyle ptr, byval v as BSTR) as HRESULT
	get_borderBottom as function(byval This as IHTMLRuleStyle ptr, byval p as BSTR ptr) as HRESULT
	put_borderLeft as function(byval This as IHTMLRuleStyle ptr, byval v as BSTR) as HRESULT
	get_borderLeft as function(byval This as IHTMLRuleStyle ptr, byval p as BSTR ptr) as HRESULT
	put_borderColor as function(byval This as IHTMLRuleStyle ptr, byval v as BSTR) as HRESULT
	get_borderColor as function(byval This as IHTMLRuleStyle ptr, byval p as BSTR ptr) as HRESULT
	put_borderTopColor as function(byval This as IHTMLRuleStyle ptr, byval v as VARIANT) as HRESULT
	get_borderTopColor as function(byval This as IHTMLRuleStyle ptr, byval p as VARIANT ptr) as HRESULT
	put_borderRightColor as function(byval This as IHTMLRuleStyle ptr, byval v as VARIANT) as HRESULT
	get_borderRightColor as function(byval This as IHTMLRuleStyle ptr, byval p as VARIANT ptr) as HRESULT
	put_borderBottomColor as function(byval This as IHTMLRuleStyle ptr, byval v as VARIANT) as HRESULT
	get_borderBottomColor as function(byval This as IHTMLRuleStyle ptr, byval p as VARIANT ptr) as HRESULT
	put_borderLeftColor as function(byval This as IHTMLRuleStyle ptr, byval v as VARIANT) as HRESULT
	get_borderLeftColor as function(byval This as IHTMLRuleStyle ptr, byval p as VARIANT ptr) as HRESULT
	put_borderWidth as function(byval This as IHTMLRuleStyle ptr, byval v as BSTR) as HRESULT
	get_borderWidth as function(byval This as IHTMLRuleStyle ptr, byval p as BSTR ptr) as HRESULT
	put_borderTopWidth as function(byval This as IHTMLRuleStyle ptr, byval v as VARIANT) as HRESULT
	get_borderTopWidth as function(byval This as IHTMLRuleStyle ptr, byval p as VARIANT ptr) as HRESULT
	put_borderRightWidth as function(byval This as IHTMLRuleStyle ptr, byval v as VARIANT) as HRESULT
	get_borderRightWidth as function(byval This as IHTMLRuleStyle ptr, byval p as VARIANT ptr) as HRESULT
	put_borderBottomWidth as function(byval This as IHTMLRuleStyle ptr, byval v as VARIANT) as HRESULT
	get_borderBottomWidth as function(byval This as IHTMLRuleStyle ptr, byval p as VARIANT ptr) as HRESULT
	put_borderLeftWidth as function(byval This as IHTMLRuleStyle ptr, byval v as VARIANT) as HRESULT
	get_borderLeftWidth as function(byval This as IHTMLRuleStyle ptr, byval p as VARIANT ptr) as HRESULT
	put_borderStyle as function(byval This as IHTMLRuleStyle ptr, byval v as BSTR) as HRESULT
	get_borderStyle as function(byval This as IHTMLRuleStyle ptr, byval p as BSTR ptr) as HRESULT
	put_borderTopStyle as function(byval This as IHTMLRuleStyle ptr, byval v as BSTR) as HRESULT
	get_borderTopStyle as function(byval This as IHTMLRuleStyle ptr, byval p as BSTR ptr) as HRESULT
	put_borderRightStyle as function(byval This as IHTMLRuleStyle ptr, byval v as BSTR) as HRESULT
	get_borderRightStyle as function(byval This as IHTMLRuleStyle ptr, byval p as BSTR ptr) as HRESULT
	put_borderBottomStyle as function(byval This as IHTMLRuleStyle ptr, byval v as BSTR) as HRESULT
	get_borderBottomStyle as function(byval This as IHTMLRuleStyle ptr, byval p as BSTR ptr) as HRESULT
	put_borderLeftStyle as function(byval This as IHTMLRuleStyle ptr, byval v as BSTR) as HRESULT
	get_borderLeftStyle as function(byval This as IHTMLRuleStyle ptr, byval p as BSTR ptr) as HRESULT
	put_width as function(byval This as IHTMLRuleStyle ptr, byval v as VARIANT) as HRESULT
	get_width as function(byval This as IHTMLRuleStyle ptr, byval p as VARIANT ptr) as HRESULT
	put_height as function(byval This as IHTMLRuleStyle ptr, byval v as VARIANT) as HRESULT
	get_height as function(byval This as IHTMLRuleStyle ptr, byval p as VARIANT ptr) as HRESULT
	put_styleFloat as function(byval This as IHTMLRuleStyle ptr, byval v as BSTR) as HRESULT
	get_styleFloat as function(byval This as IHTMLRuleStyle ptr, byval p as BSTR ptr) as HRESULT
	put_clear as function(byval This as IHTMLRuleStyle ptr, byval v as BSTR) as HRESULT
	get_clear as function(byval This as IHTMLRuleStyle ptr, byval p as BSTR ptr) as HRESULT
	put_display as function(byval This as IHTMLRuleStyle ptr, byval v as BSTR) as HRESULT
	get_display as function(byval This as IHTMLRuleStyle ptr, byval p as BSTR ptr) as HRESULT
	put_visibility as function(byval This as IHTMLRuleStyle ptr, byval v as BSTR) as HRESULT
	get_visibility as function(byval This as IHTMLRuleStyle ptr, byval p as BSTR ptr) as HRESULT
	put_listStyleType as function(byval This as IHTMLRuleStyle ptr, byval v as BSTR) as HRESULT
	get_listStyleType as function(byval This as IHTMLRuleStyle ptr, byval p as BSTR ptr) as HRESULT
	put_listStylePosition as function(byval This as IHTMLRuleStyle ptr, byval v as BSTR) as HRESULT
	get_listStylePosition as function(byval This as IHTMLRuleStyle ptr, byval p as BSTR ptr) as HRESULT
	put_listStyleImage as function(byval This as IHTMLRuleStyle ptr, byval v as BSTR) as HRESULT
	get_listStyleImage as function(byval This as IHTMLRuleStyle ptr, byval p as BSTR ptr) as HRESULT
	put_listStyle as function(byval This as IHTMLRuleStyle ptr, byval v as BSTR) as HRESULT
	get_listStyle as function(byval This as IHTMLRuleStyle ptr, byval p as BSTR ptr) as HRESULT
	put_whiteSpace as function(byval This as IHTMLRuleStyle ptr, byval v as BSTR) as HRESULT
	get_whiteSpace as function(byval This as IHTMLRuleStyle ptr, byval p as BSTR ptr) as HRESULT
	put_top as function(byval This as IHTMLRuleStyle ptr, byval v as VARIANT) as HRESULT
	get_top as function(byval This as IHTMLRuleStyle ptr, byval p as VARIANT ptr) as HRESULT
	put_left as function(byval This as IHTMLRuleStyle ptr, byval v as VARIANT) as HRESULT
	get_left as function(byval This as IHTMLRuleStyle ptr, byval p as VARIANT ptr) as HRESULT
	get_position as function(byval This as IHTMLRuleStyle ptr, byval p as BSTR ptr) as HRESULT
	put_zIndex as function(byval This as IHTMLRuleStyle ptr, byval v as VARIANT) as HRESULT
	get_zIndex as function(byval This as IHTMLRuleStyle ptr, byval p as VARIANT ptr) as HRESULT
	put_overflow as function(byval This as IHTMLRuleStyle ptr, byval v as BSTR) as HRESULT
	get_overflow as function(byval This as IHTMLRuleStyle ptr, byval p as BSTR ptr) as HRESULT
	put_pageBreakBefore as function(byval This as IHTMLRuleStyle ptr, byval v as BSTR) as HRESULT
	get_pageBreakBefore as function(byval This as IHTMLRuleStyle ptr, byval p as BSTR ptr) as HRESULT
	put_pageBreakAfter as function(byval This as IHTMLRuleStyle ptr, byval v as BSTR) as HRESULT
	get_pageBreakAfter as function(byval This as IHTMLRuleStyle ptr, byval p as BSTR ptr) as HRESULT
	put_cssText as function(byval This as IHTMLRuleStyle ptr, byval v as BSTR) as HRESULT
	get_cssText as function(byval This as IHTMLRuleStyle ptr, byval p as BSTR ptr) as HRESULT
	put_cursor as function(byval This as IHTMLRuleStyle ptr, byval v as BSTR) as HRESULT
	get_cursor as function(byval This as IHTMLRuleStyle ptr, byval p as BSTR ptr) as HRESULT
	put_clip as function(byval This as IHTMLRuleStyle ptr, byval v as BSTR) as HRESULT
	get_clip as function(byval This as IHTMLRuleStyle ptr, byval p as BSTR ptr) as HRESULT
	put_filter as function(byval This as IHTMLRuleStyle ptr, byval v as BSTR) as HRESULT
	get_filter as function(byval This as IHTMLRuleStyle ptr, byval p as BSTR ptr) as HRESULT
	setAttribute as function(byval This as IHTMLRuleStyle ptr, byval strAttributeName as BSTR, byval AttributeValue as VARIANT, byval lFlags as LONG) as HRESULT
	getAttribute as function(byval This as IHTMLRuleStyle ptr, byval strAttributeName as BSTR, byval lFlags as LONG, byval AttributeValue as VARIANT ptr) as HRESULT
	removeAttribute as function(byval This as IHTMLRuleStyle ptr, byval strAttributeName as BSTR, byval lFlags as LONG, byval pfSuccess as VARIANT_BOOL ptr) as HRESULT
end type

type IHTMLRuleStyle_
	lpVtbl as IHTMLRuleStyleVtbl ptr
end type

#define IHTMLRuleStyle_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLRuleStyle_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLRuleStyle_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLRuleStyle_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLRuleStyle_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLRuleStyle_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLRuleStyle_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLRuleStyle_put_fontFamily(This, v) (This)->lpVtbl->put_fontFamily(This, v)
#define IHTMLRuleStyle_get_fontFamily(This, p) (This)->lpVtbl->get_fontFamily(This, p)
#define IHTMLRuleStyle_put_fontStyle(This, v) (This)->lpVtbl->put_fontStyle(This, v)
#define IHTMLRuleStyle_get_fontStyle(This, p) (This)->lpVtbl->get_fontStyle(This, p)
#define IHTMLRuleStyle_put_fontVariant(This, v) (This)->lpVtbl->put_fontVariant(This, v)
#define IHTMLRuleStyle_get_fontVariant(This, p) (This)->lpVtbl->get_fontVariant(This, p)
#define IHTMLRuleStyle_put_fontWeight(This, v) (This)->lpVtbl->put_fontWeight(This, v)
#define IHTMLRuleStyle_get_fontWeight(This, p) (This)->lpVtbl->get_fontWeight(This, p)
#define IHTMLRuleStyle_put_fontSize(This, v) (This)->lpVtbl->put_fontSize(This, v)
#define IHTMLRuleStyle_get_fontSize(This, p) (This)->lpVtbl->get_fontSize(This, p)
#define IHTMLRuleStyle_put_font(This, v) (This)->lpVtbl->put_font(This, v)
#define IHTMLRuleStyle_get_font(This, p) (This)->lpVtbl->get_font(This, p)
#define IHTMLRuleStyle_put_color(This, v) (This)->lpVtbl->put_color(This, v)
#define IHTMLRuleStyle_get_color(This, p) (This)->lpVtbl->get_color(This, p)
#define IHTMLRuleStyle_put_background(This, v) (This)->lpVtbl->put_background(This, v)
#define IHTMLRuleStyle_get_background(This, p) (This)->lpVtbl->get_background(This, p)
#define IHTMLRuleStyle_put_backgroundColor(This, v) (This)->lpVtbl->put_backgroundColor(This, v)
#define IHTMLRuleStyle_get_backgroundColor(This, p) (This)->lpVtbl->get_backgroundColor(This, p)
#define IHTMLRuleStyle_put_backgroundImage(This, v) (This)->lpVtbl->put_backgroundImage(This, v)
#define IHTMLRuleStyle_get_backgroundImage(This, p) (This)->lpVtbl->get_backgroundImage(This, p)
#define IHTMLRuleStyle_put_backgroundRepeat(This, v) (This)->lpVtbl->put_backgroundRepeat(This, v)
#define IHTMLRuleStyle_get_backgroundRepeat(This, p) (This)->lpVtbl->get_backgroundRepeat(This, p)
#define IHTMLRuleStyle_put_backgroundAttachment(This, v) (This)->lpVtbl->put_backgroundAttachment(This, v)
#define IHTMLRuleStyle_get_backgroundAttachment(This, p) (This)->lpVtbl->get_backgroundAttachment(This, p)
#define IHTMLRuleStyle_put_backgroundPosition(This, v) (This)->lpVtbl->put_backgroundPosition(This, v)
#define IHTMLRuleStyle_get_backgroundPosition(This, p) (This)->lpVtbl->get_backgroundPosition(This, p)
#define IHTMLRuleStyle_put_backgroundPositionX(This, v) (This)->lpVtbl->put_backgroundPositionX(This, v)
#define IHTMLRuleStyle_get_backgroundPositionX(This, p) (This)->lpVtbl->get_backgroundPositionX(This, p)
#define IHTMLRuleStyle_put_backgroundPositionY(This, v) (This)->lpVtbl->put_backgroundPositionY(This, v)
#define IHTMLRuleStyle_get_backgroundPositionY(This, p) (This)->lpVtbl->get_backgroundPositionY(This, p)
#define IHTMLRuleStyle_put_wordSpacing(This, v) (This)->lpVtbl->put_wordSpacing(This, v)
#define IHTMLRuleStyle_get_wordSpacing(This, p) (This)->lpVtbl->get_wordSpacing(This, p)
#define IHTMLRuleStyle_put_letterSpacing(This, v) (This)->lpVtbl->put_letterSpacing(This, v)
#define IHTMLRuleStyle_get_letterSpacing(This, p) (This)->lpVtbl->get_letterSpacing(This, p)
#define IHTMLRuleStyle_put_textDecoration(This, v) (This)->lpVtbl->put_textDecoration(This, v)
#define IHTMLRuleStyle_get_textDecoration(This, p) (This)->lpVtbl->get_textDecoration(This, p)
#define IHTMLRuleStyle_put_textDecorationNone(This, v) (This)->lpVtbl->put_textDecorationNone(This, v)
#define IHTMLRuleStyle_get_textDecorationNone(This, p) (This)->lpVtbl->get_textDecorationNone(This, p)
#define IHTMLRuleStyle_put_textDecorationUnderline(This, v) (This)->lpVtbl->put_textDecorationUnderline(This, v)
#define IHTMLRuleStyle_get_textDecorationUnderline(This, p) (This)->lpVtbl->get_textDecorationUnderline(This, p)
#define IHTMLRuleStyle_put_textDecorationOverline(This, v) (This)->lpVtbl->put_textDecorationOverline(This, v)
#define IHTMLRuleStyle_get_textDecorationOverline(This, p) (This)->lpVtbl->get_textDecorationOverline(This, p)
#define IHTMLRuleStyle_put_textDecorationLineThrough(This, v) (This)->lpVtbl->put_textDecorationLineThrough(This, v)
#define IHTMLRuleStyle_get_textDecorationLineThrough(This, p) (This)->lpVtbl->get_textDecorationLineThrough(This, p)
#define IHTMLRuleStyle_put_textDecorationBlink(This, v) (This)->lpVtbl->put_textDecorationBlink(This, v)
#define IHTMLRuleStyle_get_textDecorationBlink(This, p) (This)->lpVtbl->get_textDecorationBlink(This, p)
#define IHTMLRuleStyle_put_verticalAlign(This, v) (This)->lpVtbl->put_verticalAlign(This, v)
#define IHTMLRuleStyle_get_verticalAlign(This, p) (This)->lpVtbl->get_verticalAlign(This, p)
#define IHTMLRuleStyle_put_textTransform(This, v) (This)->lpVtbl->put_textTransform(This, v)
#define IHTMLRuleStyle_get_textTransform(This, p) (This)->lpVtbl->get_textTransform(This, p)
#define IHTMLRuleStyle_put_textAlign(This, v) (This)->lpVtbl->put_textAlign(This, v)
#define IHTMLRuleStyle_get_textAlign(This, p) (This)->lpVtbl->get_textAlign(This, p)
#define IHTMLRuleStyle_put_textIndent(This, v) (This)->lpVtbl->put_textIndent(This, v)
#define IHTMLRuleStyle_get_textIndent(This, p) (This)->lpVtbl->get_textIndent(This, p)
#define IHTMLRuleStyle_put_lineHeight(This, v) (This)->lpVtbl->put_lineHeight(This, v)
#define IHTMLRuleStyle_get_lineHeight(This, p) (This)->lpVtbl->get_lineHeight(This, p)
#define IHTMLRuleStyle_put_marginTop(This, v) (This)->lpVtbl->put_marginTop(This, v)
#define IHTMLRuleStyle_get_marginTop(This, p) (This)->lpVtbl->get_marginTop(This, p)
#define IHTMLRuleStyle_put_marginRight(This, v) (This)->lpVtbl->put_marginRight(This, v)
#define IHTMLRuleStyle_get_marginRight(This, p) (This)->lpVtbl->get_marginRight(This, p)
#define IHTMLRuleStyle_put_marginBottom(This, v) (This)->lpVtbl->put_marginBottom(This, v)
#define IHTMLRuleStyle_get_marginBottom(This, p) (This)->lpVtbl->get_marginBottom(This, p)
#define IHTMLRuleStyle_put_marginLeft(This, v) (This)->lpVtbl->put_marginLeft(This, v)
#define IHTMLRuleStyle_get_marginLeft(This, p) (This)->lpVtbl->get_marginLeft(This, p)
#define IHTMLRuleStyle_put_margin(This, v) (This)->lpVtbl->put_margin(This, v)
#define IHTMLRuleStyle_get_margin(This, p) (This)->lpVtbl->get_margin(This, p)
#define IHTMLRuleStyle_put_paddingTop(This, v) (This)->lpVtbl->put_paddingTop(This, v)
#define IHTMLRuleStyle_get_paddingTop(This, p) (This)->lpVtbl->get_paddingTop(This, p)
#define IHTMLRuleStyle_put_paddingRight(This, v) (This)->lpVtbl->put_paddingRight(This, v)
#define IHTMLRuleStyle_get_paddingRight(This, p) (This)->lpVtbl->get_paddingRight(This, p)
#define IHTMLRuleStyle_put_paddingBottom(This, v) (This)->lpVtbl->put_paddingBottom(This, v)
#define IHTMLRuleStyle_get_paddingBottom(This, p) (This)->lpVtbl->get_paddingBottom(This, p)
#define IHTMLRuleStyle_put_paddingLeft(This, v) (This)->lpVtbl->put_paddingLeft(This, v)
#define IHTMLRuleStyle_get_paddingLeft(This, p) (This)->lpVtbl->get_paddingLeft(This, p)
#define IHTMLRuleStyle_put_padding(This, v) (This)->lpVtbl->put_padding(This, v)
#define IHTMLRuleStyle_get_padding(This, p) (This)->lpVtbl->get_padding(This, p)
#define IHTMLRuleStyle_put_border(This, v) (This)->lpVtbl->put_border(This, v)
#define IHTMLRuleStyle_get_border(This, p) (This)->lpVtbl->get_border(This, p)
#define IHTMLRuleStyle_put_borderTop(This, v) (This)->lpVtbl->put_borderTop(This, v)
#define IHTMLRuleStyle_get_borderTop(This, p) (This)->lpVtbl->get_borderTop(This, p)
#define IHTMLRuleStyle_put_borderRight(This, v) (This)->lpVtbl->put_borderRight(This, v)
#define IHTMLRuleStyle_get_borderRight(This, p) (This)->lpVtbl->get_borderRight(This, p)
#define IHTMLRuleStyle_put_borderBottom(This, v) (This)->lpVtbl->put_borderBottom(This, v)
#define IHTMLRuleStyle_get_borderBottom(This, p) (This)->lpVtbl->get_borderBottom(This, p)
#define IHTMLRuleStyle_put_borderLeft(This, v) (This)->lpVtbl->put_borderLeft(This, v)
#define IHTMLRuleStyle_get_borderLeft(This, p) (This)->lpVtbl->get_borderLeft(This, p)
#define IHTMLRuleStyle_put_borderColor(This, v) (This)->lpVtbl->put_borderColor(This, v)
#define IHTMLRuleStyle_get_borderColor(This, p) (This)->lpVtbl->get_borderColor(This, p)
#define IHTMLRuleStyle_put_borderTopColor(This, v) (This)->lpVtbl->put_borderTopColor(This, v)
#define IHTMLRuleStyle_get_borderTopColor(This, p) (This)->lpVtbl->get_borderTopColor(This, p)
#define IHTMLRuleStyle_put_borderRightColor(This, v) (This)->lpVtbl->put_borderRightColor(This, v)
#define IHTMLRuleStyle_get_borderRightColor(This, p) (This)->lpVtbl->get_borderRightColor(This, p)
#define IHTMLRuleStyle_put_borderBottomColor(This, v) (This)->lpVtbl->put_borderBottomColor(This, v)
#define IHTMLRuleStyle_get_borderBottomColor(This, p) (This)->lpVtbl->get_borderBottomColor(This, p)
#define IHTMLRuleStyle_put_borderLeftColor(This, v) (This)->lpVtbl->put_borderLeftColor(This, v)
#define IHTMLRuleStyle_get_borderLeftColor(This, p) (This)->lpVtbl->get_borderLeftColor(This, p)
#define IHTMLRuleStyle_put_borderWidth(This, v) (This)->lpVtbl->put_borderWidth(This, v)
#define IHTMLRuleStyle_get_borderWidth(This, p) (This)->lpVtbl->get_borderWidth(This, p)
#define IHTMLRuleStyle_put_borderTopWidth(This, v) (This)->lpVtbl->put_borderTopWidth(This, v)
#define IHTMLRuleStyle_get_borderTopWidth(This, p) (This)->lpVtbl->get_borderTopWidth(This, p)
#define IHTMLRuleStyle_put_borderRightWidth(This, v) (This)->lpVtbl->put_borderRightWidth(This, v)
#define IHTMLRuleStyle_get_borderRightWidth(This, p) (This)->lpVtbl->get_borderRightWidth(This, p)
#define IHTMLRuleStyle_put_borderBottomWidth(This, v) (This)->lpVtbl->put_borderBottomWidth(This, v)
#define IHTMLRuleStyle_get_borderBottomWidth(This, p) (This)->lpVtbl->get_borderBottomWidth(This, p)
#define IHTMLRuleStyle_put_borderLeftWidth(This, v) (This)->lpVtbl->put_borderLeftWidth(This, v)
#define IHTMLRuleStyle_get_borderLeftWidth(This, p) (This)->lpVtbl->get_borderLeftWidth(This, p)
#define IHTMLRuleStyle_put_borderStyle(This, v) (This)->lpVtbl->put_borderStyle(This, v)
#define IHTMLRuleStyle_get_borderStyle(This, p) (This)->lpVtbl->get_borderStyle(This, p)
#define IHTMLRuleStyle_put_borderTopStyle(This, v) (This)->lpVtbl->put_borderTopStyle(This, v)
#define IHTMLRuleStyle_get_borderTopStyle(This, p) (This)->lpVtbl->get_borderTopStyle(This, p)
#define IHTMLRuleStyle_put_borderRightStyle(This, v) (This)->lpVtbl->put_borderRightStyle(This, v)
#define IHTMLRuleStyle_get_borderRightStyle(This, p) (This)->lpVtbl->get_borderRightStyle(This, p)
#define IHTMLRuleStyle_put_borderBottomStyle(This, v) (This)->lpVtbl->put_borderBottomStyle(This, v)
#define IHTMLRuleStyle_get_borderBottomStyle(This, p) (This)->lpVtbl->get_borderBottomStyle(This, p)
#define IHTMLRuleStyle_put_borderLeftStyle(This, v) (This)->lpVtbl->put_borderLeftStyle(This, v)
#define IHTMLRuleStyle_get_borderLeftStyle(This, p) (This)->lpVtbl->get_borderLeftStyle(This, p)
#define IHTMLRuleStyle_put_width(This, v) (This)->lpVtbl->put_width(This, v)
#define IHTMLRuleStyle_get_width(This, p) (This)->lpVtbl->get_width(This, p)
#define IHTMLRuleStyle_put_height(This, v) (This)->lpVtbl->put_height(This, v)
#define IHTMLRuleStyle_get_height(This, p) (This)->lpVtbl->get_height(This, p)
#define IHTMLRuleStyle_put_styleFloat(This, v) (This)->lpVtbl->put_styleFloat(This, v)
#define IHTMLRuleStyle_get_styleFloat(This, p) (This)->lpVtbl->get_styleFloat(This, p)
#define IHTMLRuleStyle_put_clear(This, v) (This)->lpVtbl->put_clear(This, v)
#define IHTMLRuleStyle_get_clear(This, p) (This)->lpVtbl->get_clear(This, p)
#define IHTMLRuleStyle_put_display(This, v) (This)->lpVtbl->put_display(This, v)
#define IHTMLRuleStyle_get_display(This, p) (This)->lpVtbl->get_display(This, p)
#define IHTMLRuleStyle_put_visibility(This, v) (This)->lpVtbl->put_visibility(This, v)
#define IHTMLRuleStyle_get_visibility(This, p) (This)->lpVtbl->get_visibility(This, p)
#define IHTMLRuleStyle_put_listStyleType(This, v) (This)->lpVtbl->put_listStyleType(This, v)
#define IHTMLRuleStyle_get_listStyleType(This, p) (This)->lpVtbl->get_listStyleType(This, p)
#define IHTMLRuleStyle_put_listStylePosition(This, v) (This)->lpVtbl->put_listStylePosition(This, v)
#define IHTMLRuleStyle_get_listStylePosition(This, p) (This)->lpVtbl->get_listStylePosition(This, p)
#define IHTMLRuleStyle_put_listStyleImage(This, v) (This)->lpVtbl->put_listStyleImage(This, v)
#define IHTMLRuleStyle_get_listStyleImage(This, p) (This)->lpVtbl->get_listStyleImage(This, p)
#define IHTMLRuleStyle_put_listStyle(This, v) (This)->lpVtbl->put_listStyle(This, v)
#define IHTMLRuleStyle_get_listStyle(This, p) (This)->lpVtbl->get_listStyle(This, p)
#define IHTMLRuleStyle_put_whiteSpace(This, v) (This)->lpVtbl->put_whiteSpace(This, v)
#define IHTMLRuleStyle_get_whiteSpace(This, p) (This)->lpVtbl->get_whiteSpace(This, p)
#define IHTMLRuleStyle_put_top(This, v) (This)->lpVtbl->put_top(This, v)
#define IHTMLRuleStyle_get_top(This, p) (This)->lpVtbl->get_top(This, p)
#define IHTMLRuleStyle_put_left(This, v) (This)->lpVtbl->put_left(This, v)
#define IHTMLRuleStyle_get_left(This, p) (This)->lpVtbl->get_left(This, p)
#define IHTMLRuleStyle_get_position(This, p) (This)->lpVtbl->get_position(This, p)
#define IHTMLRuleStyle_put_zIndex(This, v) (This)->lpVtbl->put_zIndex(This, v)
#define IHTMLRuleStyle_get_zIndex(This, p) (This)->lpVtbl->get_zIndex(This, p)
#define IHTMLRuleStyle_put_overflow(This, v) (This)->lpVtbl->put_overflow(This, v)
#define IHTMLRuleStyle_get_overflow(This, p) (This)->lpVtbl->get_overflow(This, p)
#define IHTMLRuleStyle_put_pageBreakBefore(This, v) (This)->lpVtbl->put_pageBreakBefore(This, v)
#define IHTMLRuleStyle_get_pageBreakBefore(This, p) (This)->lpVtbl->get_pageBreakBefore(This, p)
#define IHTMLRuleStyle_put_pageBreakAfter(This, v) (This)->lpVtbl->put_pageBreakAfter(This, v)
#define IHTMLRuleStyle_get_pageBreakAfter(This, p) (This)->lpVtbl->get_pageBreakAfter(This, p)
#define IHTMLRuleStyle_put_cssText(This, v) (This)->lpVtbl->put_cssText(This, v)
#define IHTMLRuleStyle_get_cssText(This, p) (This)->lpVtbl->get_cssText(This, p)
#define IHTMLRuleStyle_put_cursor(This, v) (This)->lpVtbl->put_cursor(This, v)
#define IHTMLRuleStyle_get_cursor(This, p) (This)->lpVtbl->get_cursor(This, p)
#define IHTMLRuleStyle_put_clip(This, v) (This)->lpVtbl->put_clip(This, v)
#define IHTMLRuleStyle_get_clip(This, p) (This)->lpVtbl->get_clip(This, p)
#define IHTMLRuleStyle_put_filter(This, v) (This)->lpVtbl->put_filter(This, v)
#define IHTMLRuleStyle_get_filter(This, p) (This)->lpVtbl->get_filter(This, p)
#define IHTMLRuleStyle_setAttribute(This, strAttributeName, AttributeValue, lFlags) (This)->lpVtbl->setAttribute(This, strAttributeName, AttributeValue, lFlags)
#define IHTMLRuleStyle_getAttribute(This, strAttributeName, lFlags, AttributeValue) (This)->lpVtbl->getAttribute(This, strAttributeName, lFlags, AttributeValue)
#define IHTMLRuleStyle_removeAttribute(This, strAttributeName, lFlags, pfSuccess) (This)->lpVtbl->removeAttribute(This, strAttributeName, lFlags, pfSuccess)

declare function IHTMLRuleStyle_put_fontFamily_Proxy(byval This as IHTMLRuleStyle ptr, byval v as BSTR) as HRESULT
declare sub IHTMLRuleStyle_put_fontFamily_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_get_fontFamily_Proxy(byval This as IHTMLRuleStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLRuleStyle_get_fontFamily_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_put_fontStyle_Proxy(byval This as IHTMLRuleStyle ptr, byval v as BSTR) as HRESULT
declare sub IHTMLRuleStyle_put_fontStyle_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_get_fontStyle_Proxy(byval This as IHTMLRuleStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLRuleStyle_get_fontStyle_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_put_fontVariant_Proxy(byval This as IHTMLRuleStyle ptr, byval v as BSTR) as HRESULT
declare sub IHTMLRuleStyle_put_fontVariant_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_get_fontVariant_Proxy(byval This as IHTMLRuleStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLRuleStyle_get_fontVariant_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_put_fontWeight_Proxy(byval This as IHTMLRuleStyle ptr, byval v as BSTR) as HRESULT
declare sub IHTMLRuleStyle_put_fontWeight_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_get_fontWeight_Proxy(byval This as IHTMLRuleStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLRuleStyle_get_fontWeight_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_put_fontSize_Proxy(byval This as IHTMLRuleStyle ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLRuleStyle_put_fontSize_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_get_fontSize_Proxy(byval This as IHTMLRuleStyle ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLRuleStyle_get_fontSize_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_put_font_Proxy(byval This as IHTMLRuleStyle ptr, byval v as BSTR) as HRESULT
declare sub IHTMLRuleStyle_put_font_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_get_font_Proxy(byval This as IHTMLRuleStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLRuleStyle_get_font_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_put_color_Proxy(byval This as IHTMLRuleStyle ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLRuleStyle_put_color_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_get_color_Proxy(byval This as IHTMLRuleStyle ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLRuleStyle_get_color_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_put_background_Proxy(byval This as IHTMLRuleStyle ptr, byval v as BSTR) as HRESULT
declare sub IHTMLRuleStyle_put_background_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_get_background_Proxy(byval This as IHTMLRuleStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLRuleStyle_get_background_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_put_backgroundColor_Proxy(byval This as IHTMLRuleStyle ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLRuleStyle_put_backgroundColor_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_get_backgroundColor_Proxy(byval This as IHTMLRuleStyle ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLRuleStyle_get_backgroundColor_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_put_backgroundImage_Proxy(byval This as IHTMLRuleStyle ptr, byval v as BSTR) as HRESULT
declare sub IHTMLRuleStyle_put_backgroundImage_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_get_backgroundImage_Proxy(byval This as IHTMLRuleStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLRuleStyle_get_backgroundImage_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_put_backgroundRepeat_Proxy(byval This as IHTMLRuleStyle ptr, byval v as BSTR) as HRESULT
declare sub IHTMLRuleStyle_put_backgroundRepeat_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_get_backgroundRepeat_Proxy(byval This as IHTMLRuleStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLRuleStyle_get_backgroundRepeat_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_put_backgroundAttachment_Proxy(byval This as IHTMLRuleStyle ptr, byval v as BSTR) as HRESULT
declare sub IHTMLRuleStyle_put_backgroundAttachment_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_get_backgroundAttachment_Proxy(byval This as IHTMLRuleStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLRuleStyle_get_backgroundAttachment_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_put_backgroundPosition_Proxy(byval This as IHTMLRuleStyle ptr, byval v as BSTR) as HRESULT
declare sub IHTMLRuleStyle_put_backgroundPosition_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_get_backgroundPosition_Proxy(byval This as IHTMLRuleStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLRuleStyle_get_backgroundPosition_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_put_backgroundPositionX_Proxy(byval This as IHTMLRuleStyle ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLRuleStyle_put_backgroundPositionX_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_get_backgroundPositionX_Proxy(byval This as IHTMLRuleStyle ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLRuleStyle_get_backgroundPositionX_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_put_backgroundPositionY_Proxy(byval This as IHTMLRuleStyle ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLRuleStyle_put_backgroundPositionY_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_get_backgroundPositionY_Proxy(byval This as IHTMLRuleStyle ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLRuleStyle_get_backgroundPositionY_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_put_wordSpacing_Proxy(byval This as IHTMLRuleStyle ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLRuleStyle_put_wordSpacing_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_get_wordSpacing_Proxy(byval This as IHTMLRuleStyle ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLRuleStyle_get_wordSpacing_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_put_letterSpacing_Proxy(byval This as IHTMLRuleStyle ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLRuleStyle_put_letterSpacing_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_get_letterSpacing_Proxy(byval This as IHTMLRuleStyle ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLRuleStyle_get_letterSpacing_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_put_textDecoration_Proxy(byval This as IHTMLRuleStyle ptr, byval v as BSTR) as HRESULT
declare sub IHTMLRuleStyle_put_textDecoration_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_get_textDecoration_Proxy(byval This as IHTMLRuleStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLRuleStyle_get_textDecoration_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_put_textDecorationNone_Proxy(byval This as IHTMLRuleStyle ptr, byval v as VARIANT_BOOL) as HRESULT
declare sub IHTMLRuleStyle_put_textDecorationNone_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_get_textDecorationNone_Proxy(byval This as IHTMLRuleStyle ptr, byval p as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLRuleStyle_get_textDecorationNone_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_put_textDecorationUnderline_Proxy(byval This as IHTMLRuleStyle ptr, byval v as VARIANT_BOOL) as HRESULT
declare sub IHTMLRuleStyle_put_textDecorationUnderline_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_get_textDecorationUnderline_Proxy(byval This as IHTMLRuleStyle ptr, byval p as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLRuleStyle_get_textDecorationUnderline_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_put_textDecorationOverline_Proxy(byval This as IHTMLRuleStyle ptr, byval v as VARIANT_BOOL) as HRESULT
declare sub IHTMLRuleStyle_put_textDecorationOverline_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_get_textDecorationOverline_Proxy(byval This as IHTMLRuleStyle ptr, byval p as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLRuleStyle_get_textDecorationOverline_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_put_textDecorationLineThrough_Proxy(byval This as IHTMLRuleStyle ptr, byval v as VARIANT_BOOL) as HRESULT
declare sub IHTMLRuleStyle_put_textDecorationLineThrough_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_get_textDecorationLineThrough_Proxy(byval This as IHTMLRuleStyle ptr, byval p as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLRuleStyle_get_textDecorationLineThrough_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_put_textDecorationBlink_Proxy(byval This as IHTMLRuleStyle ptr, byval v as VARIANT_BOOL) as HRESULT
declare sub IHTMLRuleStyle_put_textDecorationBlink_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_get_textDecorationBlink_Proxy(byval This as IHTMLRuleStyle ptr, byval p as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLRuleStyle_get_textDecorationBlink_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_put_verticalAlign_Proxy(byval This as IHTMLRuleStyle ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLRuleStyle_put_verticalAlign_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_get_verticalAlign_Proxy(byval This as IHTMLRuleStyle ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLRuleStyle_get_verticalAlign_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_put_textTransform_Proxy(byval This as IHTMLRuleStyle ptr, byval v as BSTR) as HRESULT
declare sub IHTMLRuleStyle_put_textTransform_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_get_textTransform_Proxy(byval This as IHTMLRuleStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLRuleStyle_get_textTransform_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_put_textAlign_Proxy(byval This as IHTMLRuleStyle ptr, byval v as BSTR) as HRESULT
declare sub IHTMLRuleStyle_put_textAlign_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_get_textAlign_Proxy(byval This as IHTMLRuleStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLRuleStyle_get_textAlign_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_put_textIndent_Proxy(byval This as IHTMLRuleStyle ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLRuleStyle_put_textIndent_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_get_textIndent_Proxy(byval This as IHTMLRuleStyle ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLRuleStyle_get_textIndent_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_put_lineHeight_Proxy(byval This as IHTMLRuleStyle ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLRuleStyle_put_lineHeight_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_get_lineHeight_Proxy(byval This as IHTMLRuleStyle ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLRuleStyle_get_lineHeight_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_put_marginTop_Proxy(byval This as IHTMLRuleStyle ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLRuleStyle_put_marginTop_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_get_marginTop_Proxy(byval This as IHTMLRuleStyle ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLRuleStyle_get_marginTop_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_put_marginRight_Proxy(byval This as IHTMLRuleStyle ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLRuleStyle_put_marginRight_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_get_marginRight_Proxy(byval This as IHTMLRuleStyle ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLRuleStyle_get_marginRight_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_put_marginBottom_Proxy(byval This as IHTMLRuleStyle ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLRuleStyle_put_marginBottom_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_get_marginBottom_Proxy(byval This as IHTMLRuleStyle ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLRuleStyle_get_marginBottom_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_put_marginLeft_Proxy(byval This as IHTMLRuleStyle ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLRuleStyle_put_marginLeft_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_get_marginLeft_Proxy(byval This as IHTMLRuleStyle ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLRuleStyle_get_marginLeft_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_put_margin_Proxy(byval This as IHTMLRuleStyle ptr, byval v as BSTR) as HRESULT
declare sub IHTMLRuleStyle_put_margin_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_get_margin_Proxy(byval This as IHTMLRuleStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLRuleStyle_get_margin_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_put_paddingTop_Proxy(byval This as IHTMLRuleStyle ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLRuleStyle_put_paddingTop_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_get_paddingTop_Proxy(byval This as IHTMLRuleStyle ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLRuleStyle_get_paddingTop_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_put_paddingRight_Proxy(byval This as IHTMLRuleStyle ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLRuleStyle_put_paddingRight_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_get_paddingRight_Proxy(byval This as IHTMLRuleStyle ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLRuleStyle_get_paddingRight_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_put_paddingBottom_Proxy(byval This as IHTMLRuleStyle ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLRuleStyle_put_paddingBottom_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_get_paddingBottom_Proxy(byval This as IHTMLRuleStyle ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLRuleStyle_get_paddingBottom_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_put_paddingLeft_Proxy(byval This as IHTMLRuleStyle ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLRuleStyle_put_paddingLeft_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_get_paddingLeft_Proxy(byval This as IHTMLRuleStyle ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLRuleStyle_get_paddingLeft_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_put_padding_Proxy(byval This as IHTMLRuleStyle ptr, byval v as BSTR) as HRESULT
declare sub IHTMLRuleStyle_put_padding_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_get_padding_Proxy(byval This as IHTMLRuleStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLRuleStyle_get_padding_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_put_border_Proxy(byval This as IHTMLRuleStyle ptr, byval v as BSTR) as HRESULT
declare sub IHTMLRuleStyle_put_border_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_get_border_Proxy(byval This as IHTMLRuleStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLRuleStyle_get_border_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_put_borderTop_Proxy(byval This as IHTMLRuleStyle ptr, byval v as BSTR) as HRESULT
declare sub IHTMLRuleStyle_put_borderTop_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_get_borderTop_Proxy(byval This as IHTMLRuleStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLRuleStyle_get_borderTop_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_put_borderRight_Proxy(byval This as IHTMLRuleStyle ptr, byval v as BSTR) as HRESULT
declare sub IHTMLRuleStyle_put_borderRight_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_get_borderRight_Proxy(byval This as IHTMLRuleStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLRuleStyle_get_borderRight_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_put_borderBottom_Proxy(byval This as IHTMLRuleStyle ptr, byval v as BSTR) as HRESULT
declare sub IHTMLRuleStyle_put_borderBottom_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_get_borderBottom_Proxy(byval This as IHTMLRuleStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLRuleStyle_get_borderBottom_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_put_borderLeft_Proxy(byval This as IHTMLRuleStyle ptr, byval v as BSTR) as HRESULT
declare sub IHTMLRuleStyle_put_borderLeft_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_get_borderLeft_Proxy(byval This as IHTMLRuleStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLRuleStyle_get_borderLeft_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_put_borderColor_Proxy(byval This as IHTMLRuleStyle ptr, byval v as BSTR) as HRESULT
declare sub IHTMLRuleStyle_put_borderColor_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_get_borderColor_Proxy(byval This as IHTMLRuleStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLRuleStyle_get_borderColor_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_put_borderTopColor_Proxy(byval This as IHTMLRuleStyle ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLRuleStyle_put_borderTopColor_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_get_borderTopColor_Proxy(byval This as IHTMLRuleStyle ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLRuleStyle_get_borderTopColor_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_put_borderRightColor_Proxy(byval This as IHTMLRuleStyle ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLRuleStyle_put_borderRightColor_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_get_borderRightColor_Proxy(byval This as IHTMLRuleStyle ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLRuleStyle_get_borderRightColor_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_put_borderBottomColor_Proxy(byval This as IHTMLRuleStyle ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLRuleStyle_put_borderBottomColor_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_get_borderBottomColor_Proxy(byval This as IHTMLRuleStyle ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLRuleStyle_get_borderBottomColor_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_put_borderLeftColor_Proxy(byval This as IHTMLRuleStyle ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLRuleStyle_put_borderLeftColor_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_get_borderLeftColor_Proxy(byval This as IHTMLRuleStyle ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLRuleStyle_get_borderLeftColor_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_put_borderWidth_Proxy(byval This as IHTMLRuleStyle ptr, byval v as BSTR) as HRESULT
declare sub IHTMLRuleStyle_put_borderWidth_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_get_borderWidth_Proxy(byval This as IHTMLRuleStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLRuleStyle_get_borderWidth_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_put_borderTopWidth_Proxy(byval This as IHTMLRuleStyle ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLRuleStyle_put_borderTopWidth_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_get_borderTopWidth_Proxy(byval This as IHTMLRuleStyle ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLRuleStyle_get_borderTopWidth_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_put_borderRightWidth_Proxy(byval This as IHTMLRuleStyle ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLRuleStyle_put_borderRightWidth_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_get_borderRightWidth_Proxy(byval This as IHTMLRuleStyle ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLRuleStyle_get_borderRightWidth_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_put_borderBottomWidth_Proxy(byval This as IHTMLRuleStyle ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLRuleStyle_put_borderBottomWidth_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_get_borderBottomWidth_Proxy(byval This as IHTMLRuleStyle ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLRuleStyle_get_borderBottomWidth_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_put_borderLeftWidth_Proxy(byval This as IHTMLRuleStyle ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLRuleStyle_put_borderLeftWidth_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_get_borderLeftWidth_Proxy(byval This as IHTMLRuleStyle ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLRuleStyle_get_borderLeftWidth_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_put_borderStyle_Proxy(byval This as IHTMLRuleStyle ptr, byval v as BSTR) as HRESULT
declare sub IHTMLRuleStyle_put_borderStyle_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_get_borderStyle_Proxy(byval This as IHTMLRuleStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLRuleStyle_get_borderStyle_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_put_borderTopStyle_Proxy(byval This as IHTMLRuleStyle ptr, byval v as BSTR) as HRESULT
declare sub IHTMLRuleStyle_put_borderTopStyle_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_get_borderTopStyle_Proxy(byval This as IHTMLRuleStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLRuleStyle_get_borderTopStyle_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_put_borderRightStyle_Proxy(byval This as IHTMLRuleStyle ptr, byval v as BSTR) as HRESULT
declare sub IHTMLRuleStyle_put_borderRightStyle_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_get_borderRightStyle_Proxy(byval This as IHTMLRuleStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLRuleStyle_get_borderRightStyle_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_put_borderBottomStyle_Proxy(byval This as IHTMLRuleStyle ptr, byval v as BSTR) as HRESULT
declare sub IHTMLRuleStyle_put_borderBottomStyle_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_get_borderBottomStyle_Proxy(byval This as IHTMLRuleStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLRuleStyle_get_borderBottomStyle_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_put_borderLeftStyle_Proxy(byval This as IHTMLRuleStyle ptr, byval v as BSTR) as HRESULT
declare sub IHTMLRuleStyle_put_borderLeftStyle_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_get_borderLeftStyle_Proxy(byval This as IHTMLRuleStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLRuleStyle_get_borderLeftStyle_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_put_width_Proxy(byval This as IHTMLRuleStyle ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLRuleStyle_put_width_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_get_width_Proxy(byval This as IHTMLRuleStyle ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLRuleStyle_get_width_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_put_height_Proxy(byval This as IHTMLRuleStyle ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLRuleStyle_put_height_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_get_height_Proxy(byval This as IHTMLRuleStyle ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLRuleStyle_get_height_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_put_styleFloat_Proxy(byval This as IHTMLRuleStyle ptr, byval v as BSTR) as HRESULT
declare sub IHTMLRuleStyle_put_styleFloat_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_get_styleFloat_Proxy(byval This as IHTMLRuleStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLRuleStyle_get_styleFloat_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_put_clear_Proxy(byval This as IHTMLRuleStyle ptr, byval v as BSTR) as HRESULT
declare sub IHTMLRuleStyle_put_clear_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_get_clear_Proxy(byval This as IHTMLRuleStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLRuleStyle_get_clear_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_put_display_Proxy(byval This as IHTMLRuleStyle ptr, byval v as BSTR) as HRESULT
declare sub IHTMLRuleStyle_put_display_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_get_display_Proxy(byval This as IHTMLRuleStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLRuleStyle_get_display_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_put_visibility_Proxy(byval This as IHTMLRuleStyle ptr, byval v as BSTR) as HRESULT
declare sub IHTMLRuleStyle_put_visibility_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_get_visibility_Proxy(byval This as IHTMLRuleStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLRuleStyle_get_visibility_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_put_listStyleType_Proxy(byval This as IHTMLRuleStyle ptr, byval v as BSTR) as HRESULT
declare sub IHTMLRuleStyle_put_listStyleType_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_get_listStyleType_Proxy(byval This as IHTMLRuleStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLRuleStyle_get_listStyleType_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_put_listStylePosition_Proxy(byval This as IHTMLRuleStyle ptr, byval v as BSTR) as HRESULT
declare sub IHTMLRuleStyle_put_listStylePosition_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_get_listStylePosition_Proxy(byval This as IHTMLRuleStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLRuleStyle_get_listStylePosition_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_put_listStyleImage_Proxy(byval This as IHTMLRuleStyle ptr, byval v as BSTR) as HRESULT
declare sub IHTMLRuleStyle_put_listStyleImage_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_get_listStyleImage_Proxy(byval This as IHTMLRuleStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLRuleStyle_get_listStyleImage_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_put_listStyle_Proxy(byval This as IHTMLRuleStyle ptr, byval v as BSTR) as HRESULT
declare sub IHTMLRuleStyle_put_listStyle_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_get_listStyle_Proxy(byval This as IHTMLRuleStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLRuleStyle_get_listStyle_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_put_whiteSpace_Proxy(byval This as IHTMLRuleStyle ptr, byval v as BSTR) as HRESULT
declare sub IHTMLRuleStyle_put_whiteSpace_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_get_whiteSpace_Proxy(byval This as IHTMLRuleStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLRuleStyle_get_whiteSpace_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_put_top_Proxy(byval This as IHTMLRuleStyle ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLRuleStyle_put_top_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_get_top_Proxy(byval This as IHTMLRuleStyle ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLRuleStyle_get_top_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_put_left_Proxy(byval This as IHTMLRuleStyle ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLRuleStyle_put_left_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_get_left_Proxy(byval This as IHTMLRuleStyle ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLRuleStyle_get_left_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_get_position_Proxy(byval This as IHTMLRuleStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLRuleStyle_get_position_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_put_zIndex_Proxy(byval This as IHTMLRuleStyle ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLRuleStyle_put_zIndex_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_get_zIndex_Proxy(byval This as IHTMLRuleStyle ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLRuleStyle_get_zIndex_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_put_overflow_Proxy(byval This as IHTMLRuleStyle ptr, byval v as BSTR) as HRESULT
declare sub IHTMLRuleStyle_put_overflow_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_get_overflow_Proxy(byval This as IHTMLRuleStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLRuleStyle_get_overflow_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_put_pageBreakBefore_Proxy(byval This as IHTMLRuleStyle ptr, byval v as BSTR) as HRESULT
declare sub IHTMLRuleStyle_put_pageBreakBefore_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_get_pageBreakBefore_Proxy(byval This as IHTMLRuleStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLRuleStyle_get_pageBreakBefore_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_put_pageBreakAfter_Proxy(byval This as IHTMLRuleStyle ptr, byval v as BSTR) as HRESULT
declare sub IHTMLRuleStyle_put_pageBreakAfter_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_get_pageBreakAfter_Proxy(byval This as IHTMLRuleStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLRuleStyle_get_pageBreakAfter_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_put_cssText_Proxy(byval This as IHTMLRuleStyle ptr, byval v as BSTR) as HRESULT
declare sub IHTMLRuleStyle_put_cssText_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_get_cssText_Proxy(byval This as IHTMLRuleStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLRuleStyle_get_cssText_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_put_cursor_Proxy(byval This as IHTMLRuleStyle ptr, byval v as BSTR) as HRESULT
declare sub IHTMLRuleStyle_put_cursor_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_get_cursor_Proxy(byval This as IHTMLRuleStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLRuleStyle_get_cursor_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_put_clip_Proxy(byval This as IHTMLRuleStyle ptr, byval v as BSTR) as HRESULT
declare sub IHTMLRuleStyle_put_clip_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_get_clip_Proxy(byval This as IHTMLRuleStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLRuleStyle_get_clip_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_put_filter_Proxy(byval This as IHTMLRuleStyle ptr, byval v as BSTR) as HRESULT
declare sub IHTMLRuleStyle_put_filter_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_get_filter_Proxy(byval This as IHTMLRuleStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLRuleStyle_get_filter_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_setAttribute_Proxy(byval This as IHTMLRuleStyle ptr, byval strAttributeName as BSTR, byval AttributeValue as VARIANT, byval lFlags as LONG) as HRESULT
declare sub IHTMLRuleStyle_setAttribute_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_getAttribute_Proxy(byval This as IHTMLRuleStyle ptr, byval strAttributeName as BSTR, byval lFlags as LONG, byval AttributeValue as VARIANT ptr) as HRESULT
declare sub IHTMLRuleStyle_getAttribute_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle_removeAttribute_Proxy(byval This as IHTMLRuleStyle ptr, byval strAttributeName as BSTR, byval lFlags as LONG, byval pfSuccess as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLRuleStyle_removeAttribute_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLRuleStyle2_INTERFACE_DEFINED__
extern IID_IHTMLRuleStyle2 as const IID
type IHTMLRuleStyle2 as IHTMLRuleStyle2_

type IHTMLRuleStyle2Vtbl
	QueryInterface as function(byval This as IHTMLRuleStyle2 ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLRuleStyle2 ptr) as ULONG
	Release as function(byval This as IHTMLRuleStyle2 ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLRuleStyle2 ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLRuleStyle2 ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLRuleStyle2 ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLRuleStyle2 ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	put_tableLayout as function(byval This as IHTMLRuleStyle2 ptr, byval v as BSTR) as HRESULT
	get_tableLayout as function(byval This as IHTMLRuleStyle2 ptr, byval p as BSTR ptr) as HRESULT
	put_borderCollapse as function(byval This as IHTMLRuleStyle2 ptr, byval v as BSTR) as HRESULT
	get_borderCollapse as function(byval This as IHTMLRuleStyle2 ptr, byval p as BSTR ptr) as HRESULT
	put_direction as function(byval This as IHTMLRuleStyle2 ptr, byval v as BSTR) as HRESULT
	get_direction as function(byval This as IHTMLRuleStyle2 ptr, byval p as BSTR ptr) as HRESULT
	put_behavior as function(byval This as IHTMLRuleStyle2 ptr, byval v as BSTR) as HRESULT
	get_behavior as function(byval This as IHTMLRuleStyle2 ptr, byval p as BSTR ptr) as HRESULT
	put_position as function(byval This as IHTMLRuleStyle2 ptr, byval v as BSTR) as HRESULT
	get_position as function(byval This as IHTMLRuleStyle2 ptr, byval p as BSTR ptr) as HRESULT
	put_unicodeBidi as function(byval This as IHTMLRuleStyle2 ptr, byval v as BSTR) as HRESULT
	get_unicodeBidi as function(byval This as IHTMLRuleStyle2 ptr, byval p as BSTR ptr) as HRESULT
	put_bottom as function(byval This as IHTMLRuleStyle2 ptr, byval v as VARIANT) as HRESULT
	get_bottom as function(byval This as IHTMLRuleStyle2 ptr, byval p as VARIANT ptr) as HRESULT
	put_right as function(byval This as IHTMLRuleStyle2 ptr, byval v as VARIANT) as HRESULT
	get_right as function(byval This as IHTMLRuleStyle2 ptr, byval p as VARIANT ptr) as HRESULT
	put_pixelBottom as function(byval This as IHTMLRuleStyle2 ptr, byval v as long) as HRESULT
	get_pixelBottom as function(byval This as IHTMLRuleStyle2 ptr, byval p as long ptr) as HRESULT
	put_pixelRight as function(byval This as IHTMLRuleStyle2 ptr, byval v as long) as HRESULT
	get_pixelRight as function(byval This as IHTMLRuleStyle2 ptr, byval p as long ptr) as HRESULT
	put_posBottom as function(byval This as IHTMLRuleStyle2 ptr, byval v as single) as HRESULT
	get_posBottom as function(byval This as IHTMLRuleStyle2 ptr, byval p as single ptr) as HRESULT
	put_posRight as function(byval This as IHTMLRuleStyle2 ptr, byval v as single) as HRESULT
	get_posRight as function(byval This as IHTMLRuleStyle2 ptr, byval p as single ptr) as HRESULT
	put_imeMode as function(byval This as IHTMLRuleStyle2 ptr, byval v as BSTR) as HRESULT
	get_imeMode as function(byval This as IHTMLRuleStyle2 ptr, byval p as BSTR ptr) as HRESULT
	put_rubyAlign as function(byval This as IHTMLRuleStyle2 ptr, byval v as BSTR) as HRESULT
	get_rubyAlign as function(byval This as IHTMLRuleStyle2 ptr, byval p as BSTR ptr) as HRESULT
	put_rubyPosition as function(byval This as IHTMLRuleStyle2 ptr, byval v as BSTR) as HRESULT
	get_rubyPosition as function(byval This as IHTMLRuleStyle2 ptr, byval p as BSTR ptr) as HRESULT
	put_rubyOverhang as function(byval This as IHTMLRuleStyle2 ptr, byval v as BSTR) as HRESULT
	get_rubyOverhang as function(byval This as IHTMLRuleStyle2 ptr, byval p as BSTR ptr) as HRESULT
	put_layoutGridChar as function(byval This as IHTMLRuleStyle2 ptr, byval v as VARIANT) as HRESULT
	get_layoutGridChar as function(byval This as IHTMLRuleStyle2 ptr, byval p as VARIANT ptr) as HRESULT
	put_layoutGridLine as function(byval This as IHTMLRuleStyle2 ptr, byval v as VARIANT) as HRESULT
	get_layoutGridLine as function(byval This as IHTMLRuleStyle2 ptr, byval p as VARIANT ptr) as HRESULT
	put_layoutGridMode as function(byval This as IHTMLRuleStyle2 ptr, byval v as BSTR) as HRESULT
	get_layoutGridMode as function(byval This as IHTMLRuleStyle2 ptr, byval p as BSTR ptr) as HRESULT
	put_layoutGridType as function(byval This as IHTMLRuleStyle2 ptr, byval v as BSTR) as HRESULT
	get_layoutGridType as function(byval This as IHTMLRuleStyle2 ptr, byval p as BSTR ptr) as HRESULT
	put_layoutGrid as function(byval This as IHTMLRuleStyle2 ptr, byval v as BSTR) as HRESULT
	get_layoutGrid as function(byval This as IHTMLRuleStyle2 ptr, byval p as BSTR ptr) as HRESULT
	put_textAutospace as function(byval This as IHTMLRuleStyle2 ptr, byval v as BSTR) as HRESULT
	get_textAutospace as function(byval This as IHTMLRuleStyle2 ptr, byval p as BSTR ptr) as HRESULT
	put_wordBreak as function(byval This as IHTMLRuleStyle2 ptr, byval v as BSTR) as HRESULT
	get_wordBreak as function(byval This as IHTMLRuleStyle2 ptr, byval p as BSTR ptr) as HRESULT
	put_lineBreak as function(byval This as IHTMLRuleStyle2 ptr, byval v as BSTR) as HRESULT
	get_lineBreak as function(byval This as IHTMLRuleStyle2 ptr, byval p as BSTR ptr) as HRESULT
	put_textJustify as function(byval This as IHTMLRuleStyle2 ptr, byval v as BSTR) as HRESULT
	get_textJustify as function(byval This as IHTMLRuleStyle2 ptr, byval p as BSTR ptr) as HRESULT
	put_textJustifyTrim as function(byval This as IHTMLRuleStyle2 ptr, byval v as BSTR) as HRESULT
	get_textJustifyTrim as function(byval This as IHTMLRuleStyle2 ptr, byval p as BSTR ptr) as HRESULT
	put_textKashida as function(byval This as IHTMLRuleStyle2 ptr, byval v as VARIANT) as HRESULT
	get_textKashida as function(byval This as IHTMLRuleStyle2 ptr, byval p as VARIANT ptr) as HRESULT
	put_overflowX as function(byval This as IHTMLRuleStyle2 ptr, byval v as BSTR) as HRESULT
	get_overflowX as function(byval This as IHTMLRuleStyle2 ptr, byval p as BSTR ptr) as HRESULT
	put_overflowY as function(byval This as IHTMLRuleStyle2 ptr, byval v as BSTR) as HRESULT
	get_overflowY as function(byval This as IHTMLRuleStyle2 ptr, byval p as BSTR ptr) as HRESULT
	put_accelerator as function(byval This as IHTMLRuleStyle2 ptr, byval v as BSTR) as HRESULT
	get_accelerator as function(byval This as IHTMLRuleStyle2 ptr, byval p as BSTR ptr) as HRESULT
end type

type IHTMLRuleStyle2_
	lpVtbl as IHTMLRuleStyle2Vtbl ptr
end type

#define IHTMLRuleStyle2_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLRuleStyle2_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLRuleStyle2_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLRuleStyle2_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLRuleStyle2_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLRuleStyle2_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLRuleStyle2_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLRuleStyle2_put_tableLayout(This, v) (This)->lpVtbl->put_tableLayout(This, v)
#define IHTMLRuleStyle2_get_tableLayout(This, p) (This)->lpVtbl->get_tableLayout(This, p)
#define IHTMLRuleStyle2_put_borderCollapse(This, v) (This)->lpVtbl->put_borderCollapse(This, v)
#define IHTMLRuleStyle2_get_borderCollapse(This, p) (This)->lpVtbl->get_borderCollapse(This, p)
#define IHTMLRuleStyle2_put_direction(This, v) (This)->lpVtbl->put_direction(This, v)
#define IHTMLRuleStyle2_get_direction(This, p) (This)->lpVtbl->get_direction(This, p)
#define IHTMLRuleStyle2_put_behavior(This, v) (This)->lpVtbl->put_behavior(This, v)
#define IHTMLRuleStyle2_get_behavior(This, p) (This)->lpVtbl->get_behavior(This, p)
#define IHTMLRuleStyle2_put_position(This, v) (This)->lpVtbl->put_position(This, v)
#define IHTMLRuleStyle2_get_position(This, p) (This)->lpVtbl->get_position(This, p)
#define IHTMLRuleStyle2_put_unicodeBidi(This, v) (This)->lpVtbl->put_unicodeBidi(This, v)
#define IHTMLRuleStyle2_get_unicodeBidi(This, p) (This)->lpVtbl->get_unicodeBidi(This, p)
#define IHTMLRuleStyle2_put_bottom(This, v) (This)->lpVtbl->put_bottom(This, v)
#define IHTMLRuleStyle2_get_bottom(This, p) (This)->lpVtbl->get_bottom(This, p)
#define IHTMLRuleStyle2_put_right(This, v) (This)->lpVtbl->put_right(This, v)
#define IHTMLRuleStyle2_get_right(This, p) (This)->lpVtbl->get_right(This, p)
#define IHTMLRuleStyle2_put_pixelBottom(This, v) (This)->lpVtbl->put_pixelBottom(This, v)
#define IHTMLRuleStyle2_get_pixelBottom(This, p) (This)->lpVtbl->get_pixelBottom(This, p)
#define IHTMLRuleStyle2_put_pixelRight(This, v) (This)->lpVtbl->put_pixelRight(This, v)
#define IHTMLRuleStyle2_get_pixelRight(This, p) (This)->lpVtbl->get_pixelRight(This, p)
#define IHTMLRuleStyle2_put_posBottom(This, v) (This)->lpVtbl->put_posBottom(This, v)
#define IHTMLRuleStyle2_get_posBottom(This, p) (This)->lpVtbl->get_posBottom(This, p)
#define IHTMLRuleStyle2_put_posRight(This, v) (This)->lpVtbl->put_posRight(This, v)
#define IHTMLRuleStyle2_get_posRight(This, p) (This)->lpVtbl->get_posRight(This, p)
#define IHTMLRuleStyle2_put_imeMode(This, v) (This)->lpVtbl->put_imeMode(This, v)
#define IHTMLRuleStyle2_get_imeMode(This, p) (This)->lpVtbl->get_imeMode(This, p)
#define IHTMLRuleStyle2_put_rubyAlign(This, v) (This)->lpVtbl->put_rubyAlign(This, v)
#define IHTMLRuleStyle2_get_rubyAlign(This, p) (This)->lpVtbl->get_rubyAlign(This, p)
#define IHTMLRuleStyle2_put_rubyPosition(This, v) (This)->lpVtbl->put_rubyPosition(This, v)
#define IHTMLRuleStyle2_get_rubyPosition(This, p) (This)->lpVtbl->get_rubyPosition(This, p)
#define IHTMLRuleStyle2_put_rubyOverhang(This, v) (This)->lpVtbl->put_rubyOverhang(This, v)
#define IHTMLRuleStyle2_get_rubyOverhang(This, p) (This)->lpVtbl->get_rubyOverhang(This, p)
#define IHTMLRuleStyle2_put_layoutGridChar(This, v) (This)->lpVtbl->put_layoutGridChar(This, v)
#define IHTMLRuleStyle2_get_layoutGridChar(This, p) (This)->lpVtbl->get_layoutGridChar(This, p)
#define IHTMLRuleStyle2_put_layoutGridLine(This, v) (This)->lpVtbl->put_layoutGridLine(This, v)
#define IHTMLRuleStyle2_get_layoutGridLine(This, p) (This)->lpVtbl->get_layoutGridLine(This, p)
#define IHTMLRuleStyle2_put_layoutGridMode(This, v) (This)->lpVtbl->put_layoutGridMode(This, v)
#define IHTMLRuleStyle2_get_layoutGridMode(This, p) (This)->lpVtbl->get_layoutGridMode(This, p)
#define IHTMLRuleStyle2_put_layoutGridType(This, v) (This)->lpVtbl->put_layoutGridType(This, v)
#define IHTMLRuleStyle2_get_layoutGridType(This, p) (This)->lpVtbl->get_layoutGridType(This, p)
#define IHTMLRuleStyle2_put_layoutGrid(This, v) (This)->lpVtbl->put_layoutGrid(This, v)
#define IHTMLRuleStyle2_get_layoutGrid(This, p) (This)->lpVtbl->get_layoutGrid(This, p)
#define IHTMLRuleStyle2_put_textAutospace(This, v) (This)->lpVtbl->put_textAutospace(This, v)
#define IHTMLRuleStyle2_get_textAutospace(This, p) (This)->lpVtbl->get_textAutospace(This, p)
#define IHTMLRuleStyle2_put_wordBreak(This, v) (This)->lpVtbl->put_wordBreak(This, v)
#define IHTMLRuleStyle2_get_wordBreak(This, p) (This)->lpVtbl->get_wordBreak(This, p)
#define IHTMLRuleStyle2_put_lineBreak(This, v) (This)->lpVtbl->put_lineBreak(This, v)
#define IHTMLRuleStyle2_get_lineBreak(This, p) (This)->lpVtbl->get_lineBreak(This, p)
#define IHTMLRuleStyle2_put_textJustify(This, v) (This)->lpVtbl->put_textJustify(This, v)
#define IHTMLRuleStyle2_get_textJustify(This, p) (This)->lpVtbl->get_textJustify(This, p)
#define IHTMLRuleStyle2_put_textJustifyTrim(This, v) (This)->lpVtbl->put_textJustifyTrim(This, v)
#define IHTMLRuleStyle2_get_textJustifyTrim(This, p) (This)->lpVtbl->get_textJustifyTrim(This, p)
#define IHTMLRuleStyle2_put_textKashida(This, v) (This)->lpVtbl->put_textKashida(This, v)
#define IHTMLRuleStyle2_get_textKashida(This, p) (This)->lpVtbl->get_textKashida(This, p)
#define IHTMLRuleStyle2_put_overflowX(This, v) (This)->lpVtbl->put_overflowX(This, v)
#define IHTMLRuleStyle2_get_overflowX(This, p) (This)->lpVtbl->get_overflowX(This, p)
#define IHTMLRuleStyle2_put_overflowY(This, v) (This)->lpVtbl->put_overflowY(This, v)
#define IHTMLRuleStyle2_get_overflowY(This, p) (This)->lpVtbl->get_overflowY(This, p)
#define IHTMLRuleStyle2_put_accelerator(This, v) (This)->lpVtbl->put_accelerator(This, v)
#define IHTMLRuleStyle2_get_accelerator(This, p) (This)->lpVtbl->get_accelerator(This, p)

declare function IHTMLRuleStyle2_put_tableLayout_Proxy(byval This as IHTMLRuleStyle2 ptr, byval v as BSTR) as HRESULT
declare sub IHTMLRuleStyle2_put_tableLayout_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle2_get_tableLayout_Proxy(byval This as IHTMLRuleStyle2 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLRuleStyle2_get_tableLayout_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle2_put_borderCollapse_Proxy(byval This as IHTMLRuleStyle2 ptr, byval v as BSTR) as HRESULT
declare sub IHTMLRuleStyle2_put_borderCollapse_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle2_get_borderCollapse_Proxy(byval This as IHTMLRuleStyle2 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLRuleStyle2_get_borderCollapse_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle2_put_direction_Proxy(byval This as IHTMLRuleStyle2 ptr, byval v as BSTR) as HRESULT
declare sub IHTMLRuleStyle2_put_direction_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle2_get_direction_Proxy(byval This as IHTMLRuleStyle2 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLRuleStyle2_get_direction_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle2_put_behavior_Proxy(byval This as IHTMLRuleStyle2 ptr, byval v as BSTR) as HRESULT
declare sub IHTMLRuleStyle2_put_behavior_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle2_get_behavior_Proxy(byval This as IHTMLRuleStyle2 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLRuleStyle2_get_behavior_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle2_put_position_Proxy(byval This as IHTMLRuleStyle2 ptr, byval v as BSTR) as HRESULT
declare sub IHTMLRuleStyle2_put_position_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle2_get_position_Proxy(byval This as IHTMLRuleStyle2 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLRuleStyle2_get_position_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle2_put_unicodeBidi_Proxy(byval This as IHTMLRuleStyle2 ptr, byval v as BSTR) as HRESULT
declare sub IHTMLRuleStyle2_put_unicodeBidi_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle2_get_unicodeBidi_Proxy(byval This as IHTMLRuleStyle2 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLRuleStyle2_get_unicodeBidi_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle2_put_bottom_Proxy(byval This as IHTMLRuleStyle2 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLRuleStyle2_put_bottom_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle2_get_bottom_Proxy(byval This as IHTMLRuleStyle2 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLRuleStyle2_get_bottom_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle2_put_right_Proxy(byval This as IHTMLRuleStyle2 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLRuleStyle2_put_right_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle2_get_right_Proxy(byval This as IHTMLRuleStyle2 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLRuleStyle2_get_right_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle2_put_pixelBottom_Proxy(byval This as IHTMLRuleStyle2 ptr, byval v as long) as HRESULT
declare sub IHTMLRuleStyle2_put_pixelBottom_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle2_get_pixelBottom_Proxy(byval This as IHTMLRuleStyle2 ptr, byval p as long ptr) as HRESULT
declare sub IHTMLRuleStyle2_get_pixelBottom_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle2_put_pixelRight_Proxy(byval This as IHTMLRuleStyle2 ptr, byval v as long) as HRESULT
declare sub IHTMLRuleStyle2_put_pixelRight_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle2_get_pixelRight_Proxy(byval This as IHTMLRuleStyle2 ptr, byval p as long ptr) as HRESULT
declare sub IHTMLRuleStyle2_get_pixelRight_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle2_put_posBottom_Proxy(byval This as IHTMLRuleStyle2 ptr, byval v as single) as HRESULT
declare sub IHTMLRuleStyle2_put_posBottom_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle2_get_posBottom_Proxy(byval This as IHTMLRuleStyle2 ptr, byval p as single ptr) as HRESULT
declare sub IHTMLRuleStyle2_get_posBottom_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle2_put_posRight_Proxy(byval This as IHTMLRuleStyle2 ptr, byval v as single) as HRESULT
declare sub IHTMLRuleStyle2_put_posRight_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle2_get_posRight_Proxy(byval This as IHTMLRuleStyle2 ptr, byval p as single ptr) as HRESULT
declare sub IHTMLRuleStyle2_get_posRight_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle2_put_imeMode_Proxy(byval This as IHTMLRuleStyle2 ptr, byval v as BSTR) as HRESULT
declare sub IHTMLRuleStyle2_put_imeMode_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle2_get_imeMode_Proxy(byval This as IHTMLRuleStyle2 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLRuleStyle2_get_imeMode_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle2_put_rubyAlign_Proxy(byval This as IHTMLRuleStyle2 ptr, byval v as BSTR) as HRESULT
declare sub IHTMLRuleStyle2_put_rubyAlign_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle2_get_rubyAlign_Proxy(byval This as IHTMLRuleStyle2 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLRuleStyle2_get_rubyAlign_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle2_put_rubyPosition_Proxy(byval This as IHTMLRuleStyle2 ptr, byval v as BSTR) as HRESULT
declare sub IHTMLRuleStyle2_put_rubyPosition_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle2_get_rubyPosition_Proxy(byval This as IHTMLRuleStyle2 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLRuleStyle2_get_rubyPosition_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle2_put_rubyOverhang_Proxy(byval This as IHTMLRuleStyle2 ptr, byval v as BSTR) as HRESULT
declare sub IHTMLRuleStyle2_put_rubyOverhang_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle2_get_rubyOverhang_Proxy(byval This as IHTMLRuleStyle2 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLRuleStyle2_get_rubyOverhang_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle2_put_layoutGridChar_Proxy(byval This as IHTMLRuleStyle2 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLRuleStyle2_put_layoutGridChar_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle2_get_layoutGridChar_Proxy(byval This as IHTMLRuleStyle2 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLRuleStyle2_get_layoutGridChar_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle2_put_layoutGridLine_Proxy(byval This as IHTMLRuleStyle2 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLRuleStyle2_put_layoutGridLine_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle2_get_layoutGridLine_Proxy(byval This as IHTMLRuleStyle2 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLRuleStyle2_get_layoutGridLine_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle2_put_layoutGridMode_Proxy(byval This as IHTMLRuleStyle2 ptr, byval v as BSTR) as HRESULT
declare sub IHTMLRuleStyle2_put_layoutGridMode_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle2_get_layoutGridMode_Proxy(byval This as IHTMLRuleStyle2 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLRuleStyle2_get_layoutGridMode_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle2_put_layoutGridType_Proxy(byval This as IHTMLRuleStyle2 ptr, byval v as BSTR) as HRESULT
declare sub IHTMLRuleStyle2_put_layoutGridType_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle2_get_layoutGridType_Proxy(byval This as IHTMLRuleStyle2 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLRuleStyle2_get_layoutGridType_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle2_put_layoutGrid_Proxy(byval This as IHTMLRuleStyle2 ptr, byval v as BSTR) as HRESULT
declare sub IHTMLRuleStyle2_put_layoutGrid_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle2_get_layoutGrid_Proxy(byval This as IHTMLRuleStyle2 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLRuleStyle2_get_layoutGrid_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle2_put_textAutospace_Proxy(byval This as IHTMLRuleStyle2 ptr, byval v as BSTR) as HRESULT
declare sub IHTMLRuleStyle2_put_textAutospace_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle2_get_textAutospace_Proxy(byval This as IHTMLRuleStyle2 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLRuleStyle2_get_textAutospace_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle2_put_wordBreak_Proxy(byval This as IHTMLRuleStyle2 ptr, byval v as BSTR) as HRESULT
declare sub IHTMLRuleStyle2_put_wordBreak_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle2_get_wordBreak_Proxy(byval This as IHTMLRuleStyle2 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLRuleStyle2_get_wordBreak_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle2_put_lineBreak_Proxy(byval This as IHTMLRuleStyle2 ptr, byval v as BSTR) as HRESULT
declare sub IHTMLRuleStyle2_put_lineBreak_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle2_get_lineBreak_Proxy(byval This as IHTMLRuleStyle2 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLRuleStyle2_get_lineBreak_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle2_put_textJustify_Proxy(byval This as IHTMLRuleStyle2 ptr, byval v as BSTR) as HRESULT
declare sub IHTMLRuleStyle2_put_textJustify_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle2_get_textJustify_Proxy(byval This as IHTMLRuleStyle2 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLRuleStyle2_get_textJustify_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle2_put_textJustifyTrim_Proxy(byval This as IHTMLRuleStyle2 ptr, byval v as BSTR) as HRESULT
declare sub IHTMLRuleStyle2_put_textJustifyTrim_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle2_get_textJustifyTrim_Proxy(byval This as IHTMLRuleStyle2 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLRuleStyle2_get_textJustifyTrim_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle2_put_textKashida_Proxy(byval This as IHTMLRuleStyle2 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLRuleStyle2_put_textKashida_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle2_get_textKashida_Proxy(byval This as IHTMLRuleStyle2 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLRuleStyle2_get_textKashida_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle2_put_overflowX_Proxy(byval This as IHTMLRuleStyle2 ptr, byval v as BSTR) as HRESULT
declare sub IHTMLRuleStyle2_put_overflowX_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle2_get_overflowX_Proxy(byval This as IHTMLRuleStyle2 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLRuleStyle2_get_overflowX_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle2_put_overflowY_Proxy(byval This as IHTMLRuleStyle2 ptr, byval v as BSTR) as HRESULT
declare sub IHTMLRuleStyle2_put_overflowY_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle2_get_overflowY_Proxy(byval This as IHTMLRuleStyle2 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLRuleStyle2_get_overflowY_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle2_put_accelerator_Proxy(byval This as IHTMLRuleStyle2 ptr, byval v as BSTR) as HRESULT
declare sub IHTMLRuleStyle2_put_accelerator_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle2_get_accelerator_Proxy(byval This as IHTMLRuleStyle2 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLRuleStyle2_get_accelerator_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLRuleStyle3_INTERFACE_DEFINED__
extern IID_IHTMLRuleStyle3 as const IID
type IHTMLRuleStyle3 as IHTMLRuleStyle3_

type IHTMLRuleStyle3Vtbl
	QueryInterface as function(byval This as IHTMLRuleStyle3 ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLRuleStyle3 ptr) as ULONG
	Release as function(byval This as IHTMLRuleStyle3 ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLRuleStyle3 ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLRuleStyle3 ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLRuleStyle3 ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLRuleStyle3 ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	put_layoutFlow as function(byval This as IHTMLRuleStyle3 ptr, byval v as BSTR) as HRESULT
	get_layoutFlow as function(byval This as IHTMLRuleStyle3 ptr, byval p as BSTR ptr) as HRESULT
	put_zoom as function(byval This as IHTMLRuleStyle3 ptr, byval v as VARIANT) as HRESULT
	get_zoom as function(byval This as IHTMLRuleStyle3 ptr, byval p as VARIANT ptr) as HRESULT
	put_wordWrap as function(byval This as IHTMLRuleStyle3 ptr, byval v as BSTR) as HRESULT
	get_wordWrap as function(byval This as IHTMLRuleStyle3 ptr, byval p as BSTR ptr) as HRESULT
	put_textUnderlinePosition as function(byval This as IHTMLRuleStyle3 ptr, byval v as BSTR) as HRESULT
	get_textUnderlinePosition as function(byval This as IHTMLRuleStyle3 ptr, byval p as BSTR ptr) as HRESULT
	put_scrollbarBaseColor as function(byval This as IHTMLRuleStyle3 ptr, byval v as VARIANT) as HRESULT
	get_scrollbarBaseColor as function(byval This as IHTMLRuleStyle3 ptr, byval p as VARIANT ptr) as HRESULT
	put_scrollbarFaceColor as function(byval This as IHTMLRuleStyle3 ptr, byval v as VARIANT) as HRESULT
	get_scrollbarFaceColor as function(byval This as IHTMLRuleStyle3 ptr, byval p as VARIANT ptr) as HRESULT
	put_scrollbar3dLightColor as function(byval This as IHTMLRuleStyle3 ptr, byval v as VARIANT) as HRESULT
	get_scrollbar3dLightColor as function(byval This as IHTMLRuleStyle3 ptr, byval p as VARIANT ptr) as HRESULT
	put_scrollbarShadowColor as function(byval This as IHTMLRuleStyle3 ptr, byval v as VARIANT) as HRESULT
	get_scrollbarShadowColor as function(byval This as IHTMLRuleStyle3 ptr, byval p as VARIANT ptr) as HRESULT
	put_scrollbarHighlightColor as function(byval This as IHTMLRuleStyle3 ptr, byval v as VARIANT) as HRESULT
	get_scrollbarHighlightColor as function(byval This as IHTMLRuleStyle3 ptr, byval p as VARIANT ptr) as HRESULT
	put_scrollbarDarkShadowColor as function(byval This as IHTMLRuleStyle3 ptr, byval v as VARIANT) as HRESULT
	get_scrollbarDarkShadowColor as function(byval This as IHTMLRuleStyle3 ptr, byval p as VARIANT ptr) as HRESULT
	put_scrollbarArrowColor as function(byval This as IHTMLRuleStyle3 ptr, byval v as VARIANT) as HRESULT
	get_scrollbarArrowColor as function(byval This as IHTMLRuleStyle3 ptr, byval p as VARIANT ptr) as HRESULT
	put_scrollbarTrackColor as function(byval This as IHTMLRuleStyle3 ptr, byval v as VARIANT) as HRESULT
	get_scrollbarTrackColor as function(byval This as IHTMLRuleStyle3 ptr, byval p as VARIANT ptr) as HRESULT
	put_writingMode as function(byval This as IHTMLRuleStyle3 ptr, byval v as BSTR) as HRESULT
	get_writingMode as function(byval This as IHTMLRuleStyle3 ptr, byval p as BSTR ptr) as HRESULT
	put_textAlignLast as function(byval This as IHTMLRuleStyle3 ptr, byval v as BSTR) as HRESULT
	get_textAlignLast as function(byval This as IHTMLRuleStyle3 ptr, byval p as BSTR ptr) as HRESULT
	put_textKashidaSpace as function(byval This as IHTMLRuleStyle3 ptr, byval v as VARIANT) as HRESULT
	get_textKashidaSpace as function(byval This as IHTMLRuleStyle3 ptr, byval p as VARIANT ptr) as HRESULT
end type

type IHTMLRuleStyle3_
	lpVtbl as IHTMLRuleStyle3Vtbl ptr
end type

#define IHTMLRuleStyle3_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLRuleStyle3_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLRuleStyle3_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLRuleStyle3_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLRuleStyle3_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLRuleStyle3_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLRuleStyle3_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLRuleStyle3_put_layoutFlow(This, v) (This)->lpVtbl->put_layoutFlow(This, v)
#define IHTMLRuleStyle3_get_layoutFlow(This, p) (This)->lpVtbl->get_layoutFlow(This, p)
#define IHTMLRuleStyle3_put_zoom(This, v) (This)->lpVtbl->put_zoom(This, v)
#define IHTMLRuleStyle3_get_zoom(This, p) (This)->lpVtbl->get_zoom(This, p)
#define IHTMLRuleStyle3_put_wordWrap(This, v) (This)->lpVtbl->put_wordWrap(This, v)
#define IHTMLRuleStyle3_get_wordWrap(This, p) (This)->lpVtbl->get_wordWrap(This, p)
#define IHTMLRuleStyle3_put_textUnderlinePosition(This, v) (This)->lpVtbl->put_textUnderlinePosition(This, v)
#define IHTMLRuleStyle3_get_textUnderlinePosition(This, p) (This)->lpVtbl->get_textUnderlinePosition(This, p)
#define IHTMLRuleStyle3_put_scrollbarBaseColor(This, v) (This)->lpVtbl->put_scrollbarBaseColor(This, v)
#define IHTMLRuleStyle3_get_scrollbarBaseColor(This, p) (This)->lpVtbl->get_scrollbarBaseColor(This, p)
#define IHTMLRuleStyle3_put_scrollbarFaceColor(This, v) (This)->lpVtbl->put_scrollbarFaceColor(This, v)
#define IHTMLRuleStyle3_get_scrollbarFaceColor(This, p) (This)->lpVtbl->get_scrollbarFaceColor(This, p)
#define IHTMLRuleStyle3_put_scrollbar3dLightColor(This, v) (This)->lpVtbl->put_scrollbar3dLightColor(This, v)
#define IHTMLRuleStyle3_get_scrollbar3dLightColor(This, p) (This)->lpVtbl->get_scrollbar3dLightColor(This, p)
#define IHTMLRuleStyle3_put_scrollbarShadowColor(This, v) (This)->lpVtbl->put_scrollbarShadowColor(This, v)
#define IHTMLRuleStyle3_get_scrollbarShadowColor(This, p) (This)->lpVtbl->get_scrollbarShadowColor(This, p)
#define IHTMLRuleStyle3_put_scrollbarHighlightColor(This, v) (This)->lpVtbl->put_scrollbarHighlightColor(This, v)
#define IHTMLRuleStyle3_get_scrollbarHighlightColor(This, p) (This)->lpVtbl->get_scrollbarHighlightColor(This, p)
#define IHTMLRuleStyle3_put_scrollbarDarkShadowColor(This, v) (This)->lpVtbl->put_scrollbarDarkShadowColor(This, v)
#define IHTMLRuleStyle3_get_scrollbarDarkShadowColor(This, p) (This)->lpVtbl->get_scrollbarDarkShadowColor(This, p)
#define IHTMLRuleStyle3_put_scrollbarArrowColor(This, v) (This)->lpVtbl->put_scrollbarArrowColor(This, v)
#define IHTMLRuleStyle3_get_scrollbarArrowColor(This, p) (This)->lpVtbl->get_scrollbarArrowColor(This, p)
#define IHTMLRuleStyle3_put_scrollbarTrackColor(This, v) (This)->lpVtbl->put_scrollbarTrackColor(This, v)
#define IHTMLRuleStyle3_get_scrollbarTrackColor(This, p) (This)->lpVtbl->get_scrollbarTrackColor(This, p)
#define IHTMLRuleStyle3_put_writingMode(This, v) (This)->lpVtbl->put_writingMode(This, v)
#define IHTMLRuleStyle3_get_writingMode(This, p) (This)->lpVtbl->get_writingMode(This, p)
#define IHTMLRuleStyle3_put_textAlignLast(This, v) (This)->lpVtbl->put_textAlignLast(This, v)
#define IHTMLRuleStyle3_get_textAlignLast(This, p) (This)->lpVtbl->get_textAlignLast(This, p)
#define IHTMLRuleStyle3_put_textKashidaSpace(This, v) (This)->lpVtbl->put_textKashidaSpace(This, v)
#define IHTMLRuleStyle3_get_textKashidaSpace(This, p) (This)->lpVtbl->get_textKashidaSpace(This, p)

declare function IHTMLRuleStyle3_put_layoutFlow_Proxy(byval This as IHTMLRuleStyle3 ptr, byval v as BSTR) as HRESULT
declare sub IHTMLRuleStyle3_put_layoutFlow_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle3_get_layoutFlow_Proxy(byval This as IHTMLRuleStyle3 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLRuleStyle3_get_layoutFlow_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle3_put_zoom_Proxy(byval This as IHTMLRuleStyle3 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLRuleStyle3_put_zoom_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle3_get_zoom_Proxy(byval This as IHTMLRuleStyle3 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLRuleStyle3_get_zoom_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle3_put_wordWrap_Proxy(byval This as IHTMLRuleStyle3 ptr, byval v as BSTR) as HRESULT
declare sub IHTMLRuleStyle3_put_wordWrap_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle3_get_wordWrap_Proxy(byval This as IHTMLRuleStyle3 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLRuleStyle3_get_wordWrap_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle3_put_textUnderlinePosition_Proxy(byval This as IHTMLRuleStyle3 ptr, byval v as BSTR) as HRESULT
declare sub IHTMLRuleStyle3_put_textUnderlinePosition_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle3_get_textUnderlinePosition_Proxy(byval This as IHTMLRuleStyle3 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLRuleStyle3_get_textUnderlinePosition_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle3_put_scrollbarBaseColor_Proxy(byval This as IHTMLRuleStyle3 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLRuleStyle3_put_scrollbarBaseColor_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle3_get_scrollbarBaseColor_Proxy(byval This as IHTMLRuleStyle3 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLRuleStyle3_get_scrollbarBaseColor_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle3_put_scrollbarFaceColor_Proxy(byval This as IHTMLRuleStyle3 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLRuleStyle3_put_scrollbarFaceColor_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle3_get_scrollbarFaceColor_Proxy(byval This as IHTMLRuleStyle3 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLRuleStyle3_get_scrollbarFaceColor_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle3_put_scrollbar3dLightColor_Proxy(byval This as IHTMLRuleStyle3 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLRuleStyle3_put_scrollbar3dLightColor_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle3_get_scrollbar3dLightColor_Proxy(byval This as IHTMLRuleStyle3 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLRuleStyle3_get_scrollbar3dLightColor_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle3_put_scrollbarShadowColor_Proxy(byval This as IHTMLRuleStyle3 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLRuleStyle3_put_scrollbarShadowColor_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle3_get_scrollbarShadowColor_Proxy(byval This as IHTMLRuleStyle3 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLRuleStyle3_get_scrollbarShadowColor_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle3_put_scrollbarHighlightColor_Proxy(byval This as IHTMLRuleStyle3 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLRuleStyle3_put_scrollbarHighlightColor_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle3_get_scrollbarHighlightColor_Proxy(byval This as IHTMLRuleStyle3 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLRuleStyle3_get_scrollbarHighlightColor_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle3_put_scrollbarDarkShadowColor_Proxy(byval This as IHTMLRuleStyle3 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLRuleStyle3_put_scrollbarDarkShadowColor_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle3_get_scrollbarDarkShadowColor_Proxy(byval This as IHTMLRuleStyle3 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLRuleStyle3_get_scrollbarDarkShadowColor_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle3_put_scrollbarArrowColor_Proxy(byval This as IHTMLRuleStyle3 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLRuleStyle3_put_scrollbarArrowColor_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle3_get_scrollbarArrowColor_Proxy(byval This as IHTMLRuleStyle3 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLRuleStyle3_get_scrollbarArrowColor_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle3_put_scrollbarTrackColor_Proxy(byval This as IHTMLRuleStyle3 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLRuleStyle3_put_scrollbarTrackColor_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle3_get_scrollbarTrackColor_Proxy(byval This as IHTMLRuleStyle3 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLRuleStyle3_get_scrollbarTrackColor_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle3_put_writingMode_Proxy(byval This as IHTMLRuleStyle3 ptr, byval v as BSTR) as HRESULT
declare sub IHTMLRuleStyle3_put_writingMode_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle3_get_writingMode_Proxy(byval This as IHTMLRuleStyle3 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLRuleStyle3_get_writingMode_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle3_put_textAlignLast_Proxy(byval This as IHTMLRuleStyle3 ptr, byval v as BSTR) as HRESULT
declare sub IHTMLRuleStyle3_put_textAlignLast_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle3_get_textAlignLast_Proxy(byval This as IHTMLRuleStyle3 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLRuleStyle3_get_textAlignLast_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle3_put_textKashidaSpace_Proxy(byval This as IHTMLRuleStyle3 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLRuleStyle3_put_textKashidaSpace_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle3_get_textKashidaSpace_Proxy(byval This as IHTMLRuleStyle3 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLRuleStyle3_get_textKashidaSpace_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLRuleStyle4_INTERFACE_DEFINED__
extern IID_IHTMLRuleStyle4 as const IID
type IHTMLRuleStyle4 as IHTMLRuleStyle4_

type IHTMLRuleStyle4Vtbl
	QueryInterface as function(byval This as IHTMLRuleStyle4 ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLRuleStyle4 ptr) as ULONG
	Release as function(byval This as IHTMLRuleStyle4 ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLRuleStyle4 ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLRuleStyle4 ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLRuleStyle4 ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLRuleStyle4 ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	put_textOverflow as function(byval This as IHTMLRuleStyle4 ptr, byval v as BSTR) as HRESULT
	get_textOverflow as function(byval This as IHTMLRuleStyle4 ptr, byval p as BSTR ptr) as HRESULT
	put_minHeight as function(byval This as IHTMLRuleStyle4 ptr, byval v as VARIANT) as HRESULT
	get_minHeight as function(byval This as IHTMLRuleStyle4 ptr, byval p as VARIANT ptr) as HRESULT
end type

type IHTMLRuleStyle4_
	lpVtbl as IHTMLRuleStyle4Vtbl ptr
end type

#define IHTMLRuleStyle4_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLRuleStyle4_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLRuleStyle4_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLRuleStyle4_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLRuleStyle4_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLRuleStyle4_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLRuleStyle4_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLRuleStyle4_put_textOverflow(This, v) (This)->lpVtbl->put_textOverflow(This, v)
#define IHTMLRuleStyle4_get_textOverflow(This, p) (This)->lpVtbl->get_textOverflow(This, p)
#define IHTMLRuleStyle4_put_minHeight(This, v) (This)->lpVtbl->put_minHeight(This, v)
#define IHTMLRuleStyle4_get_minHeight(This, p) (This)->lpVtbl->get_minHeight(This, p)

declare function IHTMLRuleStyle4_put_textOverflow_Proxy(byval This as IHTMLRuleStyle4 ptr, byval v as BSTR) as HRESULT
declare sub IHTMLRuleStyle4_put_textOverflow_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle4_get_textOverflow_Proxy(byval This as IHTMLRuleStyle4 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLRuleStyle4_get_textOverflow_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle4_put_minHeight_Proxy(byval This as IHTMLRuleStyle4 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLRuleStyle4_put_minHeight_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRuleStyle4_get_minHeight_Proxy(byval This as IHTMLRuleStyle4 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLRuleStyle4_get_minHeight_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __DispHTMLStyle_DISPINTERFACE_DEFINED__
extern DIID_DispHTMLStyle as const IID
type DispHTMLStyle as DispHTMLStyle_

type DispHTMLStyleVtbl
	QueryInterface as function(byval This as DispHTMLStyle ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as DispHTMLStyle ptr) as ULONG
	Release as function(byval This as DispHTMLStyle ptr) as ULONG
	GetTypeInfoCount as function(byval This as DispHTMLStyle ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as DispHTMLStyle ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as DispHTMLStyle ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as DispHTMLStyle ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type DispHTMLStyle_
	lpVtbl as DispHTMLStyleVtbl ptr
end type

#define DispHTMLStyle_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define DispHTMLStyle_AddRef(This) (This)->lpVtbl->AddRef(This)
#define DispHTMLStyle_Release(This) (This)->lpVtbl->Release(This)
#define DispHTMLStyle_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define DispHTMLStyle_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define DispHTMLStyle_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define DispHTMLStyle_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
extern CLSID_HTMLStyle as const CLSID
#define __DispHTMLRuleStyle_DISPINTERFACE_DEFINED__
extern DIID_DispHTMLRuleStyle as const IID
type DispHTMLRuleStyle as DispHTMLRuleStyle_

type DispHTMLRuleStyleVtbl
	QueryInterface as function(byval This as DispHTMLRuleStyle ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as DispHTMLRuleStyle ptr) as ULONG
	Release as function(byval This as DispHTMLRuleStyle ptr) as ULONG
	GetTypeInfoCount as function(byval This as DispHTMLRuleStyle ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as DispHTMLRuleStyle ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as DispHTMLRuleStyle ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as DispHTMLRuleStyle ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type DispHTMLRuleStyle_
	lpVtbl as DispHTMLRuleStyleVtbl ptr
end type

#define DispHTMLRuleStyle_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define DispHTMLRuleStyle_AddRef(This) (This)->lpVtbl->AddRef(This)
#define DispHTMLRuleStyle_Release(This) (This)->lpVtbl->Release(This)
#define DispHTMLRuleStyle_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define DispHTMLRuleStyle_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define DispHTMLRuleStyle_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define DispHTMLRuleStyle_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
extern CLSID_HTMLRuleStyle as const CLSID
#define __IHTMLRenderStyle_INTERFACE_DEFINED__
extern IID_IHTMLRenderStyle as const IID
type IHTMLRenderStyle as IHTMLRenderStyle_

type IHTMLRenderStyleVtbl
	QueryInterface as function(byval This as IHTMLRenderStyle ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLRenderStyle ptr) as ULONG
	Release as function(byval This as IHTMLRenderStyle ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLRenderStyle ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLRenderStyle ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLRenderStyle ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLRenderStyle ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	put_textLineThroughStyle as function(byval This as IHTMLRenderStyle ptr, byval v as BSTR) as HRESULT
	get_textLineThroughStyle as function(byval This as IHTMLRenderStyle ptr, byval p as BSTR ptr) as HRESULT
	put_textUnderlineStyle as function(byval This as IHTMLRenderStyle ptr, byval v as BSTR) as HRESULT
	get_textUnderlineStyle as function(byval This as IHTMLRenderStyle ptr, byval p as BSTR ptr) as HRESULT
	put_textEffect as function(byval This as IHTMLRenderStyle ptr, byval v as BSTR) as HRESULT
	get_textEffect as function(byval This as IHTMLRenderStyle ptr, byval p as BSTR ptr) as HRESULT
	put_textColor as function(byval This as IHTMLRenderStyle ptr, byval v as VARIANT) as HRESULT
	get_textColor as function(byval This as IHTMLRenderStyle ptr, byval p as VARIANT ptr) as HRESULT
	put_textBackgroundColor as function(byval This as IHTMLRenderStyle ptr, byval v as VARIANT) as HRESULT
	get_textBackgroundColor as function(byval This as IHTMLRenderStyle ptr, byval p as VARIANT ptr) as HRESULT
	put_textDecorationColor as function(byval This as IHTMLRenderStyle ptr, byval v as VARIANT) as HRESULT
	get_textDecorationColor as function(byval This as IHTMLRenderStyle ptr, byval p as VARIANT ptr) as HRESULT
	put_renderingPriority as function(byval This as IHTMLRenderStyle ptr, byval v as long) as HRESULT
	get_renderingPriority as function(byval This as IHTMLRenderStyle ptr, byval p as long ptr) as HRESULT
	put_defaultTextSelection as function(byval This as IHTMLRenderStyle ptr, byval v as BSTR) as HRESULT
	get_defaultTextSelection as function(byval This as IHTMLRenderStyle ptr, byval p as BSTR ptr) as HRESULT
	put_textDecoration as function(byval This as IHTMLRenderStyle ptr, byval v as BSTR) as HRESULT
	get_textDecoration as function(byval This as IHTMLRenderStyle ptr, byval p as BSTR ptr) as HRESULT
end type

type IHTMLRenderStyle_
	lpVtbl as IHTMLRenderStyleVtbl ptr
end type

#define IHTMLRenderStyle_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLRenderStyle_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLRenderStyle_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLRenderStyle_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLRenderStyle_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLRenderStyle_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLRenderStyle_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLRenderStyle_put_textLineThroughStyle(This, v) (This)->lpVtbl->put_textLineThroughStyle(This, v)
#define IHTMLRenderStyle_get_textLineThroughStyle(This, p) (This)->lpVtbl->get_textLineThroughStyle(This, p)
#define IHTMLRenderStyle_put_textUnderlineStyle(This, v) (This)->lpVtbl->put_textUnderlineStyle(This, v)
#define IHTMLRenderStyle_get_textUnderlineStyle(This, p) (This)->lpVtbl->get_textUnderlineStyle(This, p)
#define IHTMLRenderStyle_put_textEffect(This, v) (This)->lpVtbl->put_textEffect(This, v)
#define IHTMLRenderStyle_get_textEffect(This, p) (This)->lpVtbl->get_textEffect(This, p)
#define IHTMLRenderStyle_put_textColor(This, v) (This)->lpVtbl->put_textColor(This, v)
#define IHTMLRenderStyle_get_textColor(This, p) (This)->lpVtbl->get_textColor(This, p)
#define IHTMLRenderStyle_put_textBackgroundColor(This, v) (This)->lpVtbl->put_textBackgroundColor(This, v)
#define IHTMLRenderStyle_get_textBackgroundColor(This, p) (This)->lpVtbl->get_textBackgroundColor(This, p)
#define IHTMLRenderStyle_put_textDecorationColor(This, v) (This)->lpVtbl->put_textDecorationColor(This, v)
#define IHTMLRenderStyle_get_textDecorationColor(This, p) (This)->lpVtbl->get_textDecorationColor(This, p)
#define IHTMLRenderStyle_put_renderingPriority(This, v) (This)->lpVtbl->put_renderingPriority(This, v)
#define IHTMLRenderStyle_get_renderingPriority(This, p) (This)->lpVtbl->get_renderingPriority(This, p)
#define IHTMLRenderStyle_put_defaultTextSelection(This, v) (This)->lpVtbl->put_defaultTextSelection(This, v)
#define IHTMLRenderStyle_get_defaultTextSelection(This, p) (This)->lpVtbl->get_defaultTextSelection(This, p)
#define IHTMLRenderStyle_put_textDecoration(This, v) (This)->lpVtbl->put_textDecoration(This, v)
#define IHTMLRenderStyle_get_textDecoration(This, p) (This)->lpVtbl->get_textDecoration(This, p)

declare function IHTMLRenderStyle_put_textLineThroughStyle_Proxy(byval This as IHTMLRenderStyle ptr, byval v as BSTR) as HRESULT
declare sub IHTMLRenderStyle_put_textLineThroughStyle_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRenderStyle_get_textLineThroughStyle_Proxy(byval This as IHTMLRenderStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLRenderStyle_get_textLineThroughStyle_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRenderStyle_put_textUnderlineStyle_Proxy(byval This as IHTMLRenderStyle ptr, byval v as BSTR) as HRESULT
declare sub IHTMLRenderStyle_put_textUnderlineStyle_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRenderStyle_get_textUnderlineStyle_Proxy(byval This as IHTMLRenderStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLRenderStyle_get_textUnderlineStyle_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRenderStyle_put_textEffect_Proxy(byval This as IHTMLRenderStyle ptr, byval v as BSTR) as HRESULT
declare sub IHTMLRenderStyle_put_textEffect_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRenderStyle_get_textEffect_Proxy(byval This as IHTMLRenderStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLRenderStyle_get_textEffect_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRenderStyle_put_textColor_Proxy(byval This as IHTMLRenderStyle ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLRenderStyle_put_textColor_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRenderStyle_get_textColor_Proxy(byval This as IHTMLRenderStyle ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLRenderStyle_get_textColor_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRenderStyle_put_textBackgroundColor_Proxy(byval This as IHTMLRenderStyle ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLRenderStyle_put_textBackgroundColor_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRenderStyle_get_textBackgroundColor_Proxy(byval This as IHTMLRenderStyle ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLRenderStyle_get_textBackgroundColor_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRenderStyle_put_textDecorationColor_Proxy(byval This as IHTMLRenderStyle ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLRenderStyle_put_textDecorationColor_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRenderStyle_get_textDecorationColor_Proxy(byval This as IHTMLRenderStyle ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLRenderStyle_get_textDecorationColor_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRenderStyle_put_renderingPriority_Proxy(byval This as IHTMLRenderStyle ptr, byval v as long) as HRESULT
declare sub IHTMLRenderStyle_put_renderingPriority_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRenderStyle_get_renderingPriority_Proxy(byval This as IHTMLRenderStyle ptr, byval p as long ptr) as HRESULT
declare sub IHTMLRenderStyle_get_renderingPriority_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRenderStyle_put_defaultTextSelection_Proxy(byval This as IHTMLRenderStyle ptr, byval v as BSTR) as HRESULT
declare sub IHTMLRenderStyle_put_defaultTextSelection_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRenderStyle_get_defaultTextSelection_Proxy(byval This as IHTMLRenderStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLRenderStyle_get_defaultTextSelection_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRenderStyle_put_textDecoration_Proxy(byval This as IHTMLRenderStyle ptr, byval v as BSTR) as HRESULT
declare sub IHTMLRenderStyle_put_textDecoration_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRenderStyle_get_textDecoration_Proxy(byval This as IHTMLRenderStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLRenderStyle_get_textDecoration_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __DispHTMLRenderStyle_DISPINTERFACE_DEFINED__
extern DIID_DispHTMLRenderStyle as const IID
type DispHTMLRenderStyle as DispHTMLRenderStyle_

type DispHTMLRenderStyleVtbl
	QueryInterface as function(byval This as DispHTMLRenderStyle ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as DispHTMLRenderStyle ptr) as ULONG
	Release as function(byval This as DispHTMLRenderStyle ptr) as ULONG
	GetTypeInfoCount as function(byval This as DispHTMLRenderStyle ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as DispHTMLRenderStyle ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as DispHTMLRenderStyle ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as DispHTMLRenderStyle ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type DispHTMLRenderStyle_
	lpVtbl as DispHTMLRenderStyleVtbl ptr
end type

#define DispHTMLRenderStyle_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define DispHTMLRenderStyle_AddRef(This) (This)->lpVtbl->AddRef(This)
#define DispHTMLRenderStyle_Release(This) (This)->lpVtbl->Release(This)
#define DispHTMLRenderStyle_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define DispHTMLRenderStyle_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define DispHTMLRenderStyle_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define DispHTMLRenderStyle_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
extern CLSID_HTMLRenderStyle as const CLSID
#define __IHTMLCurrentStyle_INTERFACE_DEFINED__
extern IID_IHTMLCurrentStyle as const IID
type IHTMLCurrentStyle as IHTMLCurrentStyle_

type IHTMLCurrentStyleVtbl
	QueryInterface as function(byval This as IHTMLCurrentStyle ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLCurrentStyle ptr) as ULONG
	Release as function(byval This as IHTMLCurrentStyle ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLCurrentStyle ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLCurrentStyle ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLCurrentStyle ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLCurrentStyle ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	get_position as function(byval This as IHTMLCurrentStyle ptr, byval p as BSTR ptr) as HRESULT
	get_styleFloat as function(byval This as IHTMLCurrentStyle ptr, byval p as BSTR ptr) as HRESULT
	get_color as function(byval This as IHTMLCurrentStyle ptr, byval p as VARIANT ptr) as HRESULT
	get_backgroundColor as function(byval This as IHTMLCurrentStyle ptr, byval p as VARIANT ptr) as HRESULT
	get_fontFamily as function(byval This as IHTMLCurrentStyle ptr, byval p as BSTR ptr) as HRESULT
	get_fontStyle as function(byval This as IHTMLCurrentStyle ptr, byval p as BSTR ptr) as HRESULT
	get_fontVariant as function(byval This as IHTMLCurrentStyle ptr, byval p as BSTR ptr) as HRESULT
	get_fontWeight as function(byval This as IHTMLCurrentStyle ptr, byval p as VARIANT ptr) as HRESULT
	get_fontSize as function(byval This as IHTMLCurrentStyle ptr, byval p as VARIANT ptr) as HRESULT
	get_backgroundImage as function(byval This as IHTMLCurrentStyle ptr, byval p as BSTR ptr) as HRESULT
	get_backgroundPositionX as function(byval This as IHTMLCurrentStyle ptr, byval p as VARIANT ptr) as HRESULT
	get_backgroundPositionY as function(byval This as IHTMLCurrentStyle ptr, byval p as VARIANT ptr) as HRESULT
	get_backgroundRepeat as function(byval This as IHTMLCurrentStyle ptr, byval p as BSTR ptr) as HRESULT
	get_borderLeftColor as function(byval This as IHTMLCurrentStyle ptr, byval p as VARIANT ptr) as HRESULT
	get_borderTopColor as function(byval This as IHTMLCurrentStyle ptr, byval p as VARIANT ptr) as HRESULT
	get_borderRightColor as function(byval This as IHTMLCurrentStyle ptr, byval p as VARIANT ptr) as HRESULT
	get_borderBottomColor as function(byval This as IHTMLCurrentStyle ptr, byval p as VARIANT ptr) as HRESULT
	get_borderTopStyle as function(byval This as IHTMLCurrentStyle ptr, byval p as BSTR ptr) as HRESULT
	get_borderRightStyle as function(byval This as IHTMLCurrentStyle ptr, byval p as BSTR ptr) as HRESULT
	get_borderBottomStyle as function(byval This as IHTMLCurrentStyle ptr, byval p as BSTR ptr) as HRESULT
	get_borderLeftStyle as function(byval This as IHTMLCurrentStyle ptr, byval p as BSTR ptr) as HRESULT
	get_borderTopWidth as function(byval This as IHTMLCurrentStyle ptr, byval p as VARIANT ptr) as HRESULT
	get_borderRightWidth as function(byval This as IHTMLCurrentStyle ptr, byval p as VARIANT ptr) as HRESULT
	get_borderBottomWidth as function(byval This as IHTMLCurrentStyle ptr, byval p as VARIANT ptr) as HRESULT
	get_borderLeftWidth as function(byval This as IHTMLCurrentStyle ptr, byval p as VARIANT ptr) as HRESULT
	get_left as function(byval This as IHTMLCurrentStyle ptr, byval p as VARIANT ptr) as HRESULT
	get_top as function(byval This as IHTMLCurrentStyle ptr, byval p as VARIANT ptr) as HRESULT
	get_width as function(byval This as IHTMLCurrentStyle ptr, byval p as VARIANT ptr) as HRESULT
	get_height as function(byval This as IHTMLCurrentStyle ptr, byval p as VARIANT ptr) as HRESULT
	get_paddingLeft as function(byval This as IHTMLCurrentStyle ptr, byval p as VARIANT ptr) as HRESULT
	get_paddingTop as function(byval This as IHTMLCurrentStyle ptr, byval p as VARIANT ptr) as HRESULT
	get_paddingRight as function(byval This as IHTMLCurrentStyle ptr, byval p as VARIANT ptr) as HRESULT
	get_paddingBottom as function(byval This as IHTMLCurrentStyle ptr, byval p as VARIANT ptr) as HRESULT
	get_textAlign as function(byval This as IHTMLCurrentStyle ptr, byval p as BSTR ptr) as HRESULT
	get_textDecoration as function(byval This as IHTMLCurrentStyle ptr, byval p as BSTR ptr) as HRESULT
	get_display as function(byval This as IHTMLCurrentStyle ptr, byval p as BSTR ptr) as HRESULT
	get_visibility as function(byval This as IHTMLCurrentStyle ptr, byval p as BSTR ptr) as HRESULT
	get_zIndex as function(byval This as IHTMLCurrentStyle ptr, byval p as VARIANT ptr) as HRESULT
	get_letterSpacing as function(byval This as IHTMLCurrentStyle ptr, byval p as VARIANT ptr) as HRESULT
	get_lineHeight as function(byval This as IHTMLCurrentStyle ptr, byval p as VARIANT ptr) as HRESULT
	get_textIndent as function(byval This as IHTMLCurrentStyle ptr, byval p as VARIANT ptr) as HRESULT
	get_verticalAlign as function(byval This as IHTMLCurrentStyle ptr, byval p as VARIANT ptr) as HRESULT
	get_backgroundAttachment as function(byval This as IHTMLCurrentStyle ptr, byval p as BSTR ptr) as HRESULT
	get_marginTop as function(byval This as IHTMLCurrentStyle ptr, byval p as VARIANT ptr) as HRESULT
	get_marginRight as function(byval This as IHTMLCurrentStyle ptr, byval p as VARIANT ptr) as HRESULT
	get_marginBottom as function(byval This as IHTMLCurrentStyle ptr, byval p as VARIANT ptr) as HRESULT
	get_marginLeft as function(byval This as IHTMLCurrentStyle ptr, byval p as VARIANT ptr) as HRESULT
	get_clear as function(byval This as IHTMLCurrentStyle ptr, byval p as BSTR ptr) as HRESULT
	get_listStyleType as function(byval This as IHTMLCurrentStyle ptr, byval p as BSTR ptr) as HRESULT
	get_listStylePosition as function(byval This as IHTMLCurrentStyle ptr, byval p as BSTR ptr) as HRESULT
	get_listStyleImage as function(byval This as IHTMLCurrentStyle ptr, byval p as BSTR ptr) as HRESULT
	get_clipTop as function(byval This as IHTMLCurrentStyle ptr, byval p as VARIANT ptr) as HRESULT
	get_clipRight as function(byval This as IHTMLCurrentStyle ptr, byval p as VARIANT ptr) as HRESULT
	get_clipBottom as function(byval This as IHTMLCurrentStyle ptr, byval p as VARIANT ptr) as HRESULT
	get_clipLeft as function(byval This as IHTMLCurrentStyle ptr, byval p as VARIANT ptr) as HRESULT
	get_overflow as function(byval This as IHTMLCurrentStyle ptr, byval p as BSTR ptr) as HRESULT
	get_pageBreakBefore as function(byval This as IHTMLCurrentStyle ptr, byval p as BSTR ptr) as HRESULT
	get_pageBreakAfter as function(byval This as IHTMLCurrentStyle ptr, byval p as BSTR ptr) as HRESULT
	get_cursor as function(byval This as IHTMLCurrentStyle ptr, byval p as BSTR ptr) as HRESULT
	get_tableLayout as function(byval This as IHTMLCurrentStyle ptr, byval p as BSTR ptr) as HRESULT
	get_borderCollapse as function(byval This as IHTMLCurrentStyle ptr, byval p as BSTR ptr) as HRESULT
	get_direction as function(byval This as IHTMLCurrentStyle ptr, byval p as BSTR ptr) as HRESULT
	get_behavior as function(byval This as IHTMLCurrentStyle ptr, byval p as BSTR ptr) as HRESULT
	getAttribute as function(byval This as IHTMLCurrentStyle ptr, byval strAttributeName as BSTR, byval lFlags as LONG, byval AttributeValue as VARIANT ptr) as HRESULT
	get_unicodeBidi as function(byval This as IHTMLCurrentStyle ptr, byval p as BSTR ptr) as HRESULT
	get_right as function(byval This as IHTMLCurrentStyle ptr, byval p as VARIANT ptr) as HRESULT
	get_bottom as function(byval This as IHTMLCurrentStyle ptr, byval p as VARIANT ptr) as HRESULT
	get_imeMode as function(byval This as IHTMLCurrentStyle ptr, byval p as BSTR ptr) as HRESULT
	get_rubyAlign as function(byval This as IHTMLCurrentStyle ptr, byval p as BSTR ptr) as HRESULT
	get_rubyPosition as function(byval This as IHTMLCurrentStyle ptr, byval p as BSTR ptr) as HRESULT
	get_rubyOverhang as function(byval This as IHTMLCurrentStyle ptr, byval p as BSTR ptr) as HRESULT
	get_textAutospace as function(byval This as IHTMLCurrentStyle ptr, byval p as BSTR ptr) as HRESULT
	get_lineBreak as function(byval This as IHTMLCurrentStyle ptr, byval p as BSTR ptr) as HRESULT
	get_wordBreak as function(byval This as IHTMLCurrentStyle ptr, byval p as BSTR ptr) as HRESULT
	get_textJustify as function(byval This as IHTMLCurrentStyle ptr, byval p as BSTR ptr) as HRESULT
	get_textJustifyTrim as function(byval This as IHTMLCurrentStyle ptr, byval p as BSTR ptr) as HRESULT
	get_textKashida as function(byval This as IHTMLCurrentStyle ptr, byval p as VARIANT ptr) as HRESULT
	get_blockDirection as function(byval This as IHTMLCurrentStyle ptr, byval p as BSTR ptr) as HRESULT
	get_layoutGridChar as function(byval This as IHTMLCurrentStyle ptr, byval p as VARIANT ptr) as HRESULT
	get_layoutGridLine as function(byval This as IHTMLCurrentStyle ptr, byval p as VARIANT ptr) as HRESULT
	get_layoutGridMode as function(byval This as IHTMLCurrentStyle ptr, byval p as BSTR ptr) as HRESULT
	get_layoutGridType as function(byval This as IHTMLCurrentStyle ptr, byval p as BSTR ptr) as HRESULT
	get_borderStyle as function(byval This as IHTMLCurrentStyle ptr, byval p as BSTR ptr) as HRESULT
	get_borderColor as function(byval This as IHTMLCurrentStyle ptr, byval p as BSTR ptr) as HRESULT
	get_borderWidth as function(byval This as IHTMLCurrentStyle ptr, byval p as BSTR ptr) as HRESULT
	get_padding as function(byval This as IHTMLCurrentStyle ptr, byval p as BSTR ptr) as HRESULT
	get_margin as function(byval This as IHTMLCurrentStyle ptr, byval p as BSTR ptr) as HRESULT
	get_accelerator as function(byval This as IHTMLCurrentStyle ptr, byval p as BSTR ptr) as HRESULT
	get_overflowX as function(byval This as IHTMLCurrentStyle ptr, byval p as BSTR ptr) as HRESULT
	get_overflowY as function(byval This as IHTMLCurrentStyle ptr, byval p as BSTR ptr) as HRESULT
	get_textTransform as function(byval This as IHTMLCurrentStyle ptr, byval p as BSTR ptr) as HRESULT
end type

type IHTMLCurrentStyle_
	lpVtbl as IHTMLCurrentStyleVtbl ptr
end type

#define IHTMLCurrentStyle_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLCurrentStyle_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLCurrentStyle_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLCurrentStyle_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLCurrentStyle_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLCurrentStyle_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLCurrentStyle_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLCurrentStyle_get_position(This, p) (This)->lpVtbl->get_position(This, p)
#define IHTMLCurrentStyle_get_styleFloat(This, p) (This)->lpVtbl->get_styleFloat(This, p)
#define IHTMLCurrentStyle_get_color(This, p) (This)->lpVtbl->get_color(This, p)
#define IHTMLCurrentStyle_get_backgroundColor(This, p) (This)->lpVtbl->get_backgroundColor(This, p)
#define IHTMLCurrentStyle_get_fontFamily(This, p) (This)->lpVtbl->get_fontFamily(This, p)
#define IHTMLCurrentStyle_get_fontStyle(This, p) (This)->lpVtbl->get_fontStyle(This, p)
#define IHTMLCurrentStyle_get_fontVariant(This, p) (This)->lpVtbl->get_fontVariant(This, p)
#define IHTMLCurrentStyle_get_fontWeight(This, p) (This)->lpVtbl->get_fontWeight(This, p)
#define IHTMLCurrentStyle_get_fontSize(This, p) (This)->lpVtbl->get_fontSize(This, p)
#define IHTMLCurrentStyle_get_backgroundImage(This, p) (This)->lpVtbl->get_backgroundImage(This, p)
#define IHTMLCurrentStyle_get_backgroundPositionX(This, p) (This)->lpVtbl->get_backgroundPositionX(This, p)
#define IHTMLCurrentStyle_get_backgroundPositionY(This, p) (This)->lpVtbl->get_backgroundPositionY(This, p)
#define IHTMLCurrentStyle_get_backgroundRepeat(This, p) (This)->lpVtbl->get_backgroundRepeat(This, p)
#define IHTMLCurrentStyle_get_borderLeftColor(This, p) (This)->lpVtbl->get_borderLeftColor(This, p)
#define IHTMLCurrentStyle_get_borderTopColor(This, p) (This)->lpVtbl->get_borderTopColor(This, p)
#define IHTMLCurrentStyle_get_borderRightColor(This, p) (This)->lpVtbl->get_borderRightColor(This, p)
#define IHTMLCurrentStyle_get_borderBottomColor(This, p) (This)->lpVtbl->get_borderBottomColor(This, p)
#define IHTMLCurrentStyle_get_borderTopStyle(This, p) (This)->lpVtbl->get_borderTopStyle(This, p)
#define IHTMLCurrentStyle_get_borderRightStyle(This, p) (This)->lpVtbl->get_borderRightStyle(This, p)
#define IHTMLCurrentStyle_get_borderBottomStyle(This, p) (This)->lpVtbl->get_borderBottomStyle(This, p)
#define IHTMLCurrentStyle_get_borderLeftStyle(This, p) (This)->lpVtbl->get_borderLeftStyle(This, p)
#define IHTMLCurrentStyle_get_borderTopWidth(This, p) (This)->lpVtbl->get_borderTopWidth(This, p)
#define IHTMLCurrentStyle_get_borderRightWidth(This, p) (This)->lpVtbl->get_borderRightWidth(This, p)
#define IHTMLCurrentStyle_get_borderBottomWidth(This, p) (This)->lpVtbl->get_borderBottomWidth(This, p)
#define IHTMLCurrentStyle_get_borderLeftWidth(This, p) (This)->lpVtbl->get_borderLeftWidth(This, p)
#define IHTMLCurrentStyle_get_left(This, p) (This)->lpVtbl->get_left(This, p)
#define IHTMLCurrentStyle_get_top(This, p) (This)->lpVtbl->get_top(This, p)
#define IHTMLCurrentStyle_get_width(This, p) (This)->lpVtbl->get_width(This, p)
#define IHTMLCurrentStyle_get_height(This, p) (This)->lpVtbl->get_height(This, p)
#define IHTMLCurrentStyle_get_paddingLeft(This, p) (This)->lpVtbl->get_paddingLeft(This, p)
#define IHTMLCurrentStyle_get_paddingTop(This, p) (This)->lpVtbl->get_paddingTop(This, p)
#define IHTMLCurrentStyle_get_paddingRight(This, p) (This)->lpVtbl->get_paddingRight(This, p)
#define IHTMLCurrentStyle_get_paddingBottom(This, p) (This)->lpVtbl->get_paddingBottom(This, p)
#define IHTMLCurrentStyle_get_textAlign(This, p) (This)->lpVtbl->get_textAlign(This, p)
#define IHTMLCurrentStyle_get_textDecoration(This, p) (This)->lpVtbl->get_textDecoration(This, p)
#define IHTMLCurrentStyle_get_display(This, p) (This)->lpVtbl->get_display(This, p)
#define IHTMLCurrentStyle_get_visibility(This, p) (This)->lpVtbl->get_visibility(This, p)
#define IHTMLCurrentStyle_get_zIndex(This, p) (This)->lpVtbl->get_zIndex(This, p)
#define IHTMLCurrentStyle_get_letterSpacing(This, p) (This)->lpVtbl->get_letterSpacing(This, p)
#define IHTMLCurrentStyle_get_lineHeight(This, p) (This)->lpVtbl->get_lineHeight(This, p)
#define IHTMLCurrentStyle_get_textIndent(This, p) (This)->lpVtbl->get_textIndent(This, p)
#define IHTMLCurrentStyle_get_verticalAlign(This, p) (This)->lpVtbl->get_verticalAlign(This, p)
#define IHTMLCurrentStyle_get_backgroundAttachment(This, p) (This)->lpVtbl->get_backgroundAttachment(This, p)
#define IHTMLCurrentStyle_get_marginTop(This, p) (This)->lpVtbl->get_marginTop(This, p)
#define IHTMLCurrentStyle_get_marginRight(This, p) (This)->lpVtbl->get_marginRight(This, p)
#define IHTMLCurrentStyle_get_marginBottom(This, p) (This)->lpVtbl->get_marginBottom(This, p)
#define IHTMLCurrentStyle_get_marginLeft(This, p) (This)->lpVtbl->get_marginLeft(This, p)
#define IHTMLCurrentStyle_get_clear(This, p) (This)->lpVtbl->get_clear(This, p)
#define IHTMLCurrentStyle_get_listStyleType(This, p) (This)->lpVtbl->get_listStyleType(This, p)
#define IHTMLCurrentStyle_get_listStylePosition(This, p) (This)->lpVtbl->get_listStylePosition(This, p)
#define IHTMLCurrentStyle_get_listStyleImage(This, p) (This)->lpVtbl->get_listStyleImage(This, p)
#define IHTMLCurrentStyle_get_clipTop(This, p) (This)->lpVtbl->get_clipTop(This, p)
#define IHTMLCurrentStyle_get_clipRight(This, p) (This)->lpVtbl->get_clipRight(This, p)
#define IHTMLCurrentStyle_get_clipBottom(This, p) (This)->lpVtbl->get_clipBottom(This, p)
#define IHTMLCurrentStyle_get_clipLeft(This, p) (This)->lpVtbl->get_clipLeft(This, p)
#define IHTMLCurrentStyle_get_overflow(This, p) (This)->lpVtbl->get_overflow(This, p)
#define IHTMLCurrentStyle_get_pageBreakBefore(This, p) (This)->lpVtbl->get_pageBreakBefore(This, p)
#define IHTMLCurrentStyle_get_pageBreakAfter(This, p) (This)->lpVtbl->get_pageBreakAfter(This, p)
#define IHTMLCurrentStyle_get_cursor(This, p) (This)->lpVtbl->get_cursor(This, p)
#define IHTMLCurrentStyle_get_tableLayout(This, p) (This)->lpVtbl->get_tableLayout(This, p)
#define IHTMLCurrentStyle_get_borderCollapse(This, p) (This)->lpVtbl->get_borderCollapse(This, p)
#define IHTMLCurrentStyle_get_direction(This, p) (This)->lpVtbl->get_direction(This, p)
#define IHTMLCurrentStyle_get_behavior(This, p) (This)->lpVtbl->get_behavior(This, p)
#define IHTMLCurrentStyle_getAttribute(This, strAttributeName, lFlags, AttributeValue) (This)->lpVtbl->getAttribute(This, strAttributeName, lFlags, AttributeValue)
#define IHTMLCurrentStyle_get_unicodeBidi(This, p) (This)->lpVtbl->get_unicodeBidi(This, p)
#define IHTMLCurrentStyle_get_right(This, p) (This)->lpVtbl->get_right(This, p)
#define IHTMLCurrentStyle_get_bottom(This, p) (This)->lpVtbl->get_bottom(This, p)
#define IHTMLCurrentStyle_get_imeMode(This, p) (This)->lpVtbl->get_imeMode(This, p)
#define IHTMLCurrentStyle_get_rubyAlign(This, p) (This)->lpVtbl->get_rubyAlign(This, p)
#define IHTMLCurrentStyle_get_rubyPosition(This, p) (This)->lpVtbl->get_rubyPosition(This, p)
#define IHTMLCurrentStyle_get_rubyOverhang(This, p) (This)->lpVtbl->get_rubyOverhang(This, p)
#define IHTMLCurrentStyle_get_textAutospace(This, p) (This)->lpVtbl->get_textAutospace(This, p)
#define IHTMLCurrentStyle_get_lineBreak(This, p) (This)->lpVtbl->get_lineBreak(This, p)
#define IHTMLCurrentStyle_get_wordBreak(This, p) (This)->lpVtbl->get_wordBreak(This, p)
#define IHTMLCurrentStyle_get_textJustify(This, p) (This)->lpVtbl->get_textJustify(This, p)
#define IHTMLCurrentStyle_get_textJustifyTrim(This, p) (This)->lpVtbl->get_textJustifyTrim(This, p)
#define IHTMLCurrentStyle_get_textKashida(This, p) (This)->lpVtbl->get_textKashida(This, p)
#define IHTMLCurrentStyle_get_blockDirection(This, p) (This)->lpVtbl->get_blockDirection(This, p)
#define IHTMLCurrentStyle_get_layoutGridChar(This, p) (This)->lpVtbl->get_layoutGridChar(This, p)
#define IHTMLCurrentStyle_get_layoutGridLine(This, p) (This)->lpVtbl->get_layoutGridLine(This, p)
#define IHTMLCurrentStyle_get_layoutGridMode(This, p) (This)->lpVtbl->get_layoutGridMode(This, p)
#define IHTMLCurrentStyle_get_layoutGridType(This, p) (This)->lpVtbl->get_layoutGridType(This, p)
#define IHTMLCurrentStyle_get_borderStyle(This, p) (This)->lpVtbl->get_borderStyle(This, p)
#define IHTMLCurrentStyle_get_borderColor(This, p) (This)->lpVtbl->get_borderColor(This, p)
#define IHTMLCurrentStyle_get_borderWidth(This, p) (This)->lpVtbl->get_borderWidth(This, p)
#define IHTMLCurrentStyle_get_padding(This, p) (This)->lpVtbl->get_padding(This, p)
#define IHTMLCurrentStyle_get_margin(This, p) (This)->lpVtbl->get_margin(This, p)
#define IHTMLCurrentStyle_get_accelerator(This, p) (This)->lpVtbl->get_accelerator(This, p)
#define IHTMLCurrentStyle_get_overflowX(This, p) (This)->lpVtbl->get_overflowX(This, p)
#define IHTMLCurrentStyle_get_overflowY(This, p) (This)->lpVtbl->get_overflowY(This, p)
#define IHTMLCurrentStyle_get_textTransform(This, p) (This)->lpVtbl->get_textTransform(This, p)

declare function IHTMLCurrentStyle_get_position_Proxy(byval This as IHTMLCurrentStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLCurrentStyle_get_position_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLCurrentStyle_get_styleFloat_Proxy(byval This as IHTMLCurrentStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLCurrentStyle_get_styleFloat_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLCurrentStyle_get_color_Proxy(byval This as IHTMLCurrentStyle ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLCurrentStyle_get_color_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLCurrentStyle_get_backgroundColor_Proxy(byval This as IHTMLCurrentStyle ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLCurrentStyle_get_backgroundColor_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLCurrentStyle_get_fontFamily_Proxy(byval This as IHTMLCurrentStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLCurrentStyle_get_fontFamily_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLCurrentStyle_get_fontStyle_Proxy(byval This as IHTMLCurrentStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLCurrentStyle_get_fontStyle_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLCurrentStyle_get_fontVariant_Proxy(byval This as IHTMLCurrentStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLCurrentStyle_get_fontVariant_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLCurrentStyle_get_fontWeight_Proxy(byval This as IHTMLCurrentStyle ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLCurrentStyle_get_fontWeight_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLCurrentStyle_get_fontSize_Proxy(byval This as IHTMLCurrentStyle ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLCurrentStyle_get_fontSize_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLCurrentStyle_get_backgroundImage_Proxy(byval This as IHTMLCurrentStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLCurrentStyle_get_backgroundImage_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLCurrentStyle_get_backgroundPositionX_Proxy(byval This as IHTMLCurrentStyle ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLCurrentStyle_get_backgroundPositionX_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLCurrentStyle_get_backgroundPositionY_Proxy(byval This as IHTMLCurrentStyle ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLCurrentStyle_get_backgroundPositionY_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLCurrentStyle_get_backgroundRepeat_Proxy(byval This as IHTMLCurrentStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLCurrentStyle_get_backgroundRepeat_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLCurrentStyle_get_borderLeftColor_Proxy(byval This as IHTMLCurrentStyle ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLCurrentStyle_get_borderLeftColor_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLCurrentStyle_get_borderTopColor_Proxy(byval This as IHTMLCurrentStyle ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLCurrentStyle_get_borderTopColor_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLCurrentStyle_get_borderRightColor_Proxy(byval This as IHTMLCurrentStyle ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLCurrentStyle_get_borderRightColor_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLCurrentStyle_get_borderBottomColor_Proxy(byval This as IHTMLCurrentStyle ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLCurrentStyle_get_borderBottomColor_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLCurrentStyle_get_borderTopStyle_Proxy(byval This as IHTMLCurrentStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLCurrentStyle_get_borderTopStyle_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLCurrentStyle_get_borderRightStyle_Proxy(byval This as IHTMLCurrentStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLCurrentStyle_get_borderRightStyle_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLCurrentStyle_get_borderBottomStyle_Proxy(byval This as IHTMLCurrentStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLCurrentStyle_get_borderBottomStyle_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLCurrentStyle_get_borderLeftStyle_Proxy(byval This as IHTMLCurrentStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLCurrentStyle_get_borderLeftStyle_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLCurrentStyle_get_borderTopWidth_Proxy(byval This as IHTMLCurrentStyle ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLCurrentStyle_get_borderTopWidth_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLCurrentStyle_get_borderRightWidth_Proxy(byval This as IHTMLCurrentStyle ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLCurrentStyle_get_borderRightWidth_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLCurrentStyle_get_borderBottomWidth_Proxy(byval This as IHTMLCurrentStyle ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLCurrentStyle_get_borderBottomWidth_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLCurrentStyle_get_borderLeftWidth_Proxy(byval This as IHTMLCurrentStyle ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLCurrentStyle_get_borderLeftWidth_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLCurrentStyle_get_left_Proxy(byval This as IHTMLCurrentStyle ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLCurrentStyle_get_left_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLCurrentStyle_get_top_Proxy(byval This as IHTMLCurrentStyle ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLCurrentStyle_get_top_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLCurrentStyle_get_width_Proxy(byval This as IHTMLCurrentStyle ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLCurrentStyle_get_width_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLCurrentStyle_get_height_Proxy(byval This as IHTMLCurrentStyle ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLCurrentStyle_get_height_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLCurrentStyle_get_paddingLeft_Proxy(byval This as IHTMLCurrentStyle ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLCurrentStyle_get_paddingLeft_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLCurrentStyle_get_paddingTop_Proxy(byval This as IHTMLCurrentStyle ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLCurrentStyle_get_paddingTop_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLCurrentStyle_get_paddingRight_Proxy(byval This as IHTMLCurrentStyle ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLCurrentStyle_get_paddingRight_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLCurrentStyle_get_paddingBottom_Proxy(byval This as IHTMLCurrentStyle ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLCurrentStyle_get_paddingBottom_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLCurrentStyle_get_textAlign_Proxy(byval This as IHTMLCurrentStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLCurrentStyle_get_textAlign_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLCurrentStyle_get_textDecoration_Proxy(byval This as IHTMLCurrentStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLCurrentStyle_get_textDecoration_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLCurrentStyle_get_display_Proxy(byval This as IHTMLCurrentStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLCurrentStyle_get_display_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLCurrentStyle_get_visibility_Proxy(byval This as IHTMLCurrentStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLCurrentStyle_get_visibility_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLCurrentStyle_get_zIndex_Proxy(byval This as IHTMLCurrentStyle ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLCurrentStyle_get_zIndex_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLCurrentStyle_get_letterSpacing_Proxy(byval This as IHTMLCurrentStyle ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLCurrentStyle_get_letterSpacing_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLCurrentStyle_get_lineHeight_Proxy(byval This as IHTMLCurrentStyle ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLCurrentStyle_get_lineHeight_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLCurrentStyle_get_textIndent_Proxy(byval This as IHTMLCurrentStyle ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLCurrentStyle_get_textIndent_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLCurrentStyle_get_verticalAlign_Proxy(byval This as IHTMLCurrentStyle ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLCurrentStyle_get_verticalAlign_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLCurrentStyle_get_backgroundAttachment_Proxy(byval This as IHTMLCurrentStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLCurrentStyle_get_backgroundAttachment_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLCurrentStyle_get_marginTop_Proxy(byval This as IHTMLCurrentStyle ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLCurrentStyle_get_marginTop_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLCurrentStyle_get_marginRight_Proxy(byval This as IHTMLCurrentStyle ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLCurrentStyle_get_marginRight_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLCurrentStyle_get_marginBottom_Proxy(byval This as IHTMLCurrentStyle ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLCurrentStyle_get_marginBottom_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLCurrentStyle_get_marginLeft_Proxy(byval This as IHTMLCurrentStyle ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLCurrentStyle_get_marginLeft_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLCurrentStyle_get_clear_Proxy(byval This as IHTMLCurrentStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLCurrentStyle_get_clear_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLCurrentStyle_get_listStyleType_Proxy(byval This as IHTMLCurrentStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLCurrentStyle_get_listStyleType_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLCurrentStyle_get_listStylePosition_Proxy(byval This as IHTMLCurrentStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLCurrentStyle_get_listStylePosition_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLCurrentStyle_get_listStyleImage_Proxy(byval This as IHTMLCurrentStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLCurrentStyle_get_listStyleImage_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLCurrentStyle_get_clipTop_Proxy(byval This as IHTMLCurrentStyle ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLCurrentStyle_get_clipTop_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLCurrentStyle_get_clipRight_Proxy(byval This as IHTMLCurrentStyle ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLCurrentStyle_get_clipRight_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLCurrentStyle_get_clipBottom_Proxy(byval This as IHTMLCurrentStyle ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLCurrentStyle_get_clipBottom_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLCurrentStyle_get_clipLeft_Proxy(byval This as IHTMLCurrentStyle ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLCurrentStyle_get_clipLeft_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLCurrentStyle_get_overflow_Proxy(byval This as IHTMLCurrentStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLCurrentStyle_get_overflow_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLCurrentStyle_get_pageBreakBefore_Proxy(byval This as IHTMLCurrentStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLCurrentStyle_get_pageBreakBefore_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLCurrentStyle_get_pageBreakAfter_Proxy(byval This as IHTMLCurrentStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLCurrentStyle_get_pageBreakAfter_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLCurrentStyle_get_cursor_Proxy(byval This as IHTMLCurrentStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLCurrentStyle_get_cursor_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLCurrentStyle_get_tableLayout_Proxy(byval This as IHTMLCurrentStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLCurrentStyle_get_tableLayout_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLCurrentStyle_get_borderCollapse_Proxy(byval This as IHTMLCurrentStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLCurrentStyle_get_borderCollapse_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLCurrentStyle_get_direction_Proxy(byval This as IHTMLCurrentStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLCurrentStyle_get_direction_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLCurrentStyle_get_behavior_Proxy(byval This as IHTMLCurrentStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLCurrentStyle_get_behavior_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLCurrentStyle_getAttribute_Proxy(byval This as IHTMLCurrentStyle ptr, byval strAttributeName as BSTR, byval lFlags as LONG, byval AttributeValue as VARIANT ptr) as HRESULT
declare sub IHTMLCurrentStyle_getAttribute_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLCurrentStyle_get_unicodeBidi_Proxy(byval This as IHTMLCurrentStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLCurrentStyle_get_unicodeBidi_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLCurrentStyle_get_right_Proxy(byval This as IHTMLCurrentStyle ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLCurrentStyle_get_right_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLCurrentStyle_get_bottom_Proxy(byval This as IHTMLCurrentStyle ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLCurrentStyle_get_bottom_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLCurrentStyle_get_imeMode_Proxy(byval This as IHTMLCurrentStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLCurrentStyle_get_imeMode_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLCurrentStyle_get_rubyAlign_Proxy(byval This as IHTMLCurrentStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLCurrentStyle_get_rubyAlign_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLCurrentStyle_get_rubyPosition_Proxy(byval This as IHTMLCurrentStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLCurrentStyle_get_rubyPosition_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLCurrentStyle_get_rubyOverhang_Proxy(byval This as IHTMLCurrentStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLCurrentStyle_get_rubyOverhang_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLCurrentStyle_get_textAutospace_Proxy(byval This as IHTMLCurrentStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLCurrentStyle_get_textAutospace_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLCurrentStyle_get_lineBreak_Proxy(byval This as IHTMLCurrentStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLCurrentStyle_get_lineBreak_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLCurrentStyle_get_wordBreak_Proxy(byval This as IHTMLCurrentStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLCurrentStyle_get_wordBreak_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLCurrentStyle_get_textJustify_Proxy(byval This as IHTMLCurrentStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLCurrentStyle_get_textJustify_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLCurrentStyle_get_textJustifyTrim_Proxy(byval This as IHTMLCurrentStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLCurrentStyle_get_textJustifyTrim_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLCurrentStyle_get_textKashida_Proxy(byval This as IHTMLCurrentStyle ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLCurrentStyle_get_textKashida_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLCurrentStyle_get_blockDirection_Proxy(byval This as IHTMLCurrentStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLCurrentStyle_get_blockDirection_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLCurrentStyle_get_layoutGridChar_Proxy(byval This as IHTMLCurrentStyle ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLCurrentStyle_get_layoutGridChar_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLCurrentStyle_get_layoutGridLine_Proxy(byval This as IHTMLCurrentStyle ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLCurrentStyle_get_layoutGridLine_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLCurrentStyle_get_layoutGridMode_Proxy(byval This as IHTMLCurrentStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLCurrentStyle_get_layoutGridMode_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLCurrentStyle_get_layoutGridType_Proxy(byval This as IHTMLCurrentStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLCurrentStyle_get_layoutGridType_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLCurrentStyle_get_borderStyle_Proxy(byval This as IHTMLCurrentStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLCurrentStyle_get_borderStyle_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLCurrentStyle_get_borderColor_Proxy(byval This as IHTMLCurrentStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLCurrentStyle_get_borderColor_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLCurrentStyle_get_borderWidth_Proxy(byval This as IHTMLCurrentStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLCurrentStyle_get_borderWidth_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLCurrentStyle_get_padding_Proxy(byval This as IHTMLCurrentStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLCurrentStyle_get_padding_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLCurrentStyle_get_margin_Proxy(byval This as IHTMLCurrentStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLCurrentStyle_get_margin_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLCurrentStyle_get_accelerator_Proxy(byval This as IHTMLCurrentStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLCurrentStyle_get_accelerator_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLCurrentStyle_get_overflowX_Proxy(byval This as IHTMLCurrentStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLCurrentStyle_get_overflowX_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLCurrentStyle_get_overflowY_Proxy(byval This as IHTMLCurrentStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLCurrentStyle_get_overflowY_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLCurrentStyle_get_textTransform_Proxy(byval This as IHTMLCurrentStyle ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLCurrentStyle_get_textTransform_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLCurrentStyle2_INTERFACE_DEFINED__
extern IID_IHTMLCurrentStyle2 as const IID
type IHTMLCurrentStyle2 as IHTMLCurrentStyle2_

type IHTMLCurrentStyle2Vtbl
	QueryInterface as function(byval This as IHTMLCurrentStyle2 ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLCurrentStyle2 ptr) as ULONG
	Release as function(byval This as IHTMLCurrentStyle2 ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLCurrentStyle2 ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLCurrentStyle2 ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLCurrentStyle2 ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLCurrentStyle2 ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	get_layoutFlow as function(byval This as IHTMLCurrentStyle2 ptr, byval p as BSTR ptr) as HRESULT
	get_wordWrap as function(byval This as IHTMLCurrentStyle2 ptr, byval p as BSTR ptr) as HRESULT
	get_textUnderlinePosition as function(byval This as IHTMLCurrentStyle2 ptr, byval p as BSTR ptr) as HRESULT
	get_hasLayout as function(byval This as IHTMLCurrentStyle2 ptr, byval p as VARIANT_BOOL ptr) as HRESULT
	get_scrollbarBaseColor as function(byval This as IHTMLCurrentStyle2 ptr, byval p as VARIANT ptr) as HRESULT
	get_scrollbarFaceColor as function(byval This as IHTMLCurrentStyle2 ptr, byval p as VARIANT ptr) as HRESULT
	get_scrollbar3dLightColor as function(byval This as IHTMLCurrentStyle2 ptr, byval p as VARIANT ptr) as HRESULT
	get_scrollbarShadowColor as function(byval This as IHTMLCurrentStyle2 ptr, byval p as VARIANT ptr) as HRESULT
	get_scrollbarHighlightColor as function(byval This as IHTMLCurrentStyle2 ptr, byval p as VARIANT ptr) as HRESULT
	get_scrollbarDarkShadowColor as function(byval This as IHTMLCurrentStyle2 ptr, byval p as VARIANT ptr) as HRESULT
	get_scrollbarArrowColor as function(byval This as IHTMLCurrentStyle2 ptr, byval p as VARIANT ptr) as HRESULT
	get_scrollbarTrackColor as function(byval This as IHTMLCurrentStyle2 ptr, byval p as VARIANT ptr) as HRESULT
	get_writingMode as function(byval This as IHTMLCurrentStyle2 ptr, byval p as BSTR ptr) as HRESULT
	get_zoom as function(byval This as IHTMLCurrentStyle2 ptr, byval p as VARIANT ptr) as HRESULT
	get_filter as function(byval This as IHTMLCurrentStyle2 ptr, byval p as BSTR ptr) as HRESULT
	get_textAlignLast as function(byval This as IHTMLCurrentStyle2 ptr, byval p as BSTR ptr) as HRESULT
	get_textKashidaSpace as function(byval This as IHTMLCurrentStyle2 ptr, byval p as VARIANT ptr) as HRESULT
	get_isBlock as function(byval This as IHTMLCurrentStyle2 ptr, byval p as VARIANT_BOOL ptr) as HRESULT
end type

type IHTMLCurrentStyle2_
	lpVtbl as IHTMLCurrentStyle2Vtbl ptr
end type

#define IHTMLCurrentStyle2_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLCurrentStyle2_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLCurrentStyle2_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLCurrentStyle2_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLCurrentStyle2_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLCurrentStyle2_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLCurrentStyle2_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLCurrentStyle2_get_layoutFlow(This, p) (This)->lpVtbl->get_layoutFlow(This, p)
#define IHTMLCurrentStyle2_get_wordWrap(This, p) (This)->lpVtbl->get_wordWrap(This, p)
#define IHTMLCurrentStyle2_get_textUnderlinePosition(This, p) (This)->lpVtbl->get_textUnderlinePosition(This, p)
#define IHTMLCurrentStyle2_get_hasLayout(This, p) (This)->lpVtbl->get_hasLayout(This, p)
#define IHTMLCurrentStyle2_get_scrollbarBaseColor(This, p) (This)->lpVtbl->get_scrollbarBaseColor(This, p)
#define IHTMLCurrentStyle2_get_scrollbarFaceColor(This, p) (This)->lpVtbl->get_scrollbarFaceColor(This, p)
#define IHTMLCurrentStyle2_get_scrollbar3dLightColor(This, p) (This)->lpVtbl->get_scrollbar3dLightColor(This, p)
#define IHTMLCurrentStyle2_get_scrollbarShadowColor(This, p) (This)->lpVtbl->get_scrollbarShadowColor(This, p)
#define IHTMLCurrentStyle2_get_scrollbarHighlightColor(This, p) (This)->lpVtbl->get_scrollbarHighlightColor(This, p)
#define IHTMLCurrentStyle2_get_scrollbarDarkShadowColor(This, p) (This)->lpVtbl->get_scrollbarDarkShadowColor(This, p)
#define IHTMLCurrentStyle2_get_scrollbarArrowColor(This, p) (This)->lpVtbl->get_scrollbarArrowColor(This, p)
#define IHTMLCurrentStyle2_get_scrollbarTrackColor(This, p) (This)->lpVtbl->get_scrollbarTrackColor(This, p)
#define IHTMLCurrentStyle2_get_writingMode(This, p) (This)->lpVtbl->get_writingMode(This, p)
#define IHTMLCurrentStyle2_get_zoom(This, p) (This)->lpVtbl->get_zoom(This, p)
#define IHTMLCurrentStyle2_get_filter(This, p) (This)->lpVtbl->get_filter(This, p)
#define IHTMLCurrentStyle2_get_textAlignLast(This, p) (This)->lpVtbl->get_textAlignLast(This, p)
#define IHTMLCurrentStyle2_get_textKashidaSpace(This, p) (This)->lpVtbl->get_textKashidaSpace(This, p)
#define IHTMLCurrentStyle2_get_isBlock(This, p) (This)->lpVtbl->get_isBlock(This, p)

declare function IHTMLCurrentStyle2_get_layoutFlow_Proxy(byval This as IHTMLCurrentStyle2 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLCurrentStyle2_get_layoutFlow_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLCurrentStyle2_get_wordWrap_Proxy(byval This as IHTMLCurrentStyle2 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLCurrentStyle2_get_wordWrap_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLCurrentStyle2_get_textUnderlinePosition_Proxy(byval This as IHTMLCurrentStyle2 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLCurrentStyle2_get_textUnderlinePosition_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLCurrentStyle2_get_hasLayout_Proxy(byval This as IHTMLCurrentStyle2 ptr, byval p as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLCurrentStyle2_get_hasLayout_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLCurrentStyle2_get_scrollbarBaseColor_Proxy(byval This as IHTMLCurrentStyle2 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLCurrentStyle2_get_scrollbarBaseColor_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLCurrentStyle2_get_scrollbarFaceColor_Proxy(byval This as IHTMLCurrentStyle2 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLCurrentStyle2_get_scrollbarFaceColor_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLCurrentStyle2_get_scrollbar3dLightColor_Proxy(byval This as IHTMLCurrentStyle2 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLCurrentStyle2_get_scrollbar3dLightColor_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLCurrentStyle2_get_scrollbarShadowColor_Proxy(byval This as IHTMLCurrentStyle2 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLCurrentStyle2_get_scrollbarShadowColor_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLCurrentStyle2_get_scrollbarHighlightColor_Proxy(byval This as IHTMLCurrentStyle2 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLCurrentStyle2_get_scrollbarHighlightColor_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLCurrentStyle2_get_scrollbarDarkShadowColor_Proxy(byval This as IHTMLCurrentStyle2 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLCurrentStyle2_get_scrollbarDarkShadowColor_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLCurrentStyle2_get_scrollbarArrowColor_Proxy(byval This as IHTMLCurrentStyle2 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLCurrentStyle2_get_scrollbarArrowColor_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLCurrentStyle2_get_scrollbarTrackColor_Proxy(byval This as IHTMLCurrentStyle2 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLCurrentStyle2_get_scrollbarTrackColor_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLCurrentStyle2_get_writingMode_Proxy(byval This as IHTMLCurrentStyle2 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLCurrentStyle2_get_writingMode_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLCurrentStyle2_get_zoom_Proxy(byval This as IHTMLCurrentStyle2 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLCurrentStyle2_get_zoom_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLCurrentStyle2_get_filter_Proxy(byval This as IHTMLCurrentStyle2 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLCurrentStyle2_get_filter_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLCurrentStyle2_get_textAlignLast_Proxy(byval This as IHTMLCurrentStyle2 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLCurrentStyle2_get_textAlignLast_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLCurrentStyle2_get_textKashidaSpace_Proxy(byval This as IHTMLCurrentStyle2 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLCurrentStyle2_get_textKashidaSpace_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLCurrentStyle2_get_isBlock_Proxy(byval This as IHTMLCurrentStyle2 ptr, byval p as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLCurrentStyle2_get_isBlock_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLCurrentStyle3_INTERFACE_DEFINED__
extern IID_IHTMLCurrentStyle3 as const IID
type IHTMLCurrentStyle3 as IHTMLCurrentStyle3_

type IHTMLCurrentStyle3Vtbl
	QueryInterface as function(byval This as IHTMLCurrentStyle3 ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLCurrentStyle3 ptr) as ULONG
	Release as function(byval This as IHTMLCurrentStyle3 ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLCurrentStyle3 ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLCurrentStyle3 ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLCurrentStyle3 ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLCurrentStyle3 ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	get_textOverflow as function(byval This as IHTMLCurrentStyle3 ptr, byval p as BSTR ptr) as HRESULT
	get_minHeight as function(byval This as IHTMLCurrentStyle3 ptr, byval p as VARIANT ptr) as HRESULT
	get_wordSpacing as function(byval This as IHTMLCurrentStyle3 ptr, byval p as VARIANT ptr) as HRESULT
	get_whiteSpace as function(byval This as IHTMLCurrentStyle3 ptr, byval p as BSTR ptr) as HRESULT
end type

type IHTMLCurrentStyle3_
	lpVtbl as IHTMLCurrentStyle3Vtbl ptr
end type

#define IHTMLCurrentStyle3_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLCurrentStyle3_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLCurrentStyle3_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLCurrentStyle3_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLCurrentStyle3_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLCurrentStyle3_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLCurrentStyle3_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLCurrentStyle3_get_textOverflow(This, p) (This)->lpVtbl->get_textOverflow(This, p)
#define IHTMLCurrentStyle3_get_minHeight(This, p) (This)->lpVtbl->get_minHeight(This, p)
#define IHTMLCurrentStyle3_get_wordSpacing(This, p) (This)->lpVtbl->get_wordSpacing(This, p)
#define IHTMLCurrentStyle3_get_whiteSpace(This, p) (This)->lpVtbl->get_whiteSpace(This, p)

declare function IHTMLCurrentStyle3_get_textOverflow_Proxy(byval This as IHTMLCurrentStyle3 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLCurrentStyle3_get_textOverflow_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLCurrentStyle3_get_minHeight_Proxy(byval This as IHTMLCurrentStyle3 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLCurrentStyle3_get_minHeight_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLCurrentStyle3_get_wordSpacing_Proxy(byval This as IHTMLCurrentStyle3 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLCurrentStyle3_get_wordSpacing_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLCurrentStyle3_get_whiteSpace_Proxy(byval This as IHTMLCurrentStyle3 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLCurrentStyle3_get_whiteSpace_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __DispHTMLCurrentStyle_DISPINTERFACE_DEFINED__
extern DIID_DispHTMLCurrentStyle as const IID
type DispHTMLCurrentStyle as DispHTMLCurrentStyle_

type DispHTMLCurrentStyleVtbl
	QueryInterface as function(byval This as DispHTMLCurrentStyle ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as DispHTMLCurrentStyle ptr) as ULONG
	Release as function(byval This as DispHTMLCurrentStyle ptr) as ULONG
	GetTypeInfoCount as function(byval This as DispHTMLCurrentStyle ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as DispHTMLCurrentStyle ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as DispHTMLCurrentStyle ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as DispHTMLCurrentStyle ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type DispHTMLCurrentStyle_
	lpVtbl as DispHTMLCurrentStyleVtbl ptr
end type

#define DispHTMLCurrentStyle_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define DispHTMLCurrentStyle_AddRef(This) (This)->lpVtbl->AddRef(This)
#define DispHTMLCurrentStyle_Release(This) (This)->lpVtbl->Release(This)
#define DispHTMLCurrentStyle_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define DispHTMLCurrentStyle_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define DispHTMLCurrentStyle_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define DispHTMLCurrentStyle_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
extern CLSID_HTMLCurrentStyle as const CLSID
#define __IHTMLElement_INTERFACE_DEFINED__
extern IID_IHTMLElement as const IID

type IHTMLElementVtbl
	QueryInterface as function(byval This as IHTMLElement ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLElement ptr) as ULONG
	Release as function(byval This as IHTMLElement ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLElement ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLElement ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLElement ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLElement ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	setAttribute as function(byval This as IHTMLElement ptr, byval strAttributeName as BSTR, byval AttributeValue as VARIANT, byval lFlags as LONG) as HRESULT
	getAttribute as function(byval This as IHTMLElement ptr, byval strAttributeName as BSTR, byval lFlags as LONG, byval AttributeValue as VARIANT ptr) as HRESULT
	removeAttribute as function(byval This as IHTMLElement ptr, byval strAttributeName as BSTR, byval lFlags as LONG, byval pfSuccess as VARIANT_BOOL ptr) as HRESULT
	put_className as function(byval This as IHTMLElement ptr, byval v as BSTR) as HRESULT
	get_className as function(byval This as IHTMLElement ptr, byval p as BSTR ptr) as HRESULT
	put_id as function(byval This as IHTMLElement ptr, byval v as BSTR) as HRESULT
	get_id as function(byval This as IHTMLElement ptr, byval p as BSTR ptr) as HRESULT
	get_tagName as function(byval This as IHTMLElement ptr, byval p as BSTR ptr) as HRESULT
	get_parentElement as function(byval This as IHTMLElement ptr, byval p as IHTMLElement ptr ptr) as HRESULT
	get_style as function(byval This as IHTMLElement ptr, byval p as IHTMLStyle ptr ptr) as HRESULT
	put_onhelp as function(byval This as IHTMLElement ptr, byval v as VARIANT) as HRESULT
	get_onhelp as function(byval This as IHTMLElement ptr, byval p as VARIANT ptr) as HRESULT
	put_onclick as function(byval This as IHTMLElement ptr, byval v as VARIANT) as HRESULT
	get_onclick as function(byval This as IHTMLElement ptr, byval p as VARIANT ptr) as HRESULT
	put_ondblclick as function(byval This as IHTMLElement ptr, byval v as VARIANT) as HRESULT
	get_ondblclick as function(byval This as IHTMLElement ptr, byval p as VARIANT ptr) as HRESULT
	put_onkeydown as function(byval This as IHTMLElement ptr, byval v as VARIANT) as HRESULT
	get_onkeydown as function(byval This as IHTMLElement ptr, byval p as VARIANT ptr) as HRESULT
	put_onkeyup as function(byval This as IHTMLElement ptr, byval v as VARIANT) as HRESULT
	get_onkeyup as function(byval This as IHTMLElement ptr, byval p as VARIANT ptr) as HRESULT
	put_onkeypress as function(byval This as IHTMLElement ptr, byval v as VARIANT) as HRESULT
	get_onkeypress as function(byval This as IHTMLElement ptr, byval p as VARIANT ptr) as HRESULT
	put_onmouseout as function(byval This as IHTMLElement ptr, byval v as VARIANT) as HRESULT
	get_onmouseout as function(byval This as IHTMLElement ptr, byval p as VARIANT ptr) as HRESULT
	put_onmouseover as function(byval This as IHTMLElement ptr, byval v as VARIANT) as HRESULT
	get_onmouseover as function(byval This as IHTMLElement ptr, byval p as VARIANT ptr) as HRESULT
	put_onmousemove as function(byval This as IHTMLElement ptr, byval v as VARIANT) as HRESULT
	get_onmousemove as function(byval This as IHTMLElement ptr, byval p as VARIANT ptr) as HRESULT
	put_onmousedown as function(byval This as IHTMLElement ptr, byval v as VARIANT) as HRESULT
	get_onmousedown as function(byval This as IHTMLElement ptr, byval p as VARIANT ptr) as HRESULT
	put_onmouseup as function(byval This as IHTMLElement ptr, byval v as VARIANT) as HRESULT
	get_onmouseup as function(byval This as IHTMLElement ptr, byval p as VARIANT ptr) as HRESULT
	get_document as function(byval This as IHTMLElement ptr, byval p as IDispatch ptr ptr) as HRESULT
	put_title as function(byval This as IHTMLElement ptr, byval v as BSTR) as HRESULT
	get_title as function(byval This as IHTMLElement ptr, byval p as BSTR ptr) as HRESULT
	put_language as function(byval This as IHTMLElement ptr, byval v as BSTR) as HRESULT
	get_language as function(byval This as IHTMLElement ptr, byval p as BSTR ptr) as HRESULT
	put_onselectstart as function(byval This as IHTMLElement ptr, byval v as VARIANT) as HRESULT
	get_onselectstart as function(byval This as IHTMLElement ptr, byval p as VARIANT ptr) as HRESULT
	scrollIntoView as function(byval This as IHTMLElement ptr, byval varargStart as VARIANT) as HRESULT
	contains as function(byval This as IHTMLElement ptr, byval pChild as IHTMLElement ptr, byval pfResult as VARIANT_BOOL ptr) as HRESULT
	get_sourceIndex as function(byval This as IHTMLElement ptr, byval p as long ptr) as HRESULT
	get_recordNumber as function(byval This as IHTMLElement ptr, byval p as VARIANT ptr) as HRESULT
	put_lang as function(byval This as IHTMLElement ptr, byval v as BSTR) as HRESULT
	get_lang as function(byval This as IHTMLElement ptr, byval p as BSTR ptr) as HRESULT
	get_offsetLeft as function(byval This as IHTMLElement ptr, byval p as long ptr) as HRESULT
	get_offsetTop as function(byval This as IHTMLElement ptr, byval p as long ptr) as HRESULT
	get_offsetWidth as function(byval This as IHTMLElement ptr, byval p as long ptr) as HRESULT
	get_offsetHeight as function(byval This as IHTMLElement ptr, byval p as long ptr) as HRESULT
	get_offsetParent as function(byval This as IHTMLElement ptr, byval p as IHTMLElement ptr ptr) as HRESULT
	put_innerHTML as function(byval This as IHTMLElement ptr, byval v as BSTR) as HRESULT
	get_innerHTML as function(byval This as IHTMLElement ptr, byval p as BSTR ptr) as HRESULT
	put_innerText as function(byval This as IHTMLElement ptr, byval v as BSTR) as HRESULT
	get_innerText as function(byval This as IHTMLElement ptr, byval p as BSTR ptr) as HRESULT
	put_outerHTML as function(byval This as IHTMLElement ptr, byval v as BSTR) as HRESULT
	get_outerHTML as function(byval This as IHTMLElement ptr, byval p as BSTR ptr) as HRESULT
	put_outerText as function(byval This as IHTMLElement ptr, byval v as BSTR) as HRESULT
	get_outerText as function(byval This as IHTMLElement ptr, byval p as BSTR ptr) as HRESULT
	insertAdjacentHTML as function(byval This as IHTMLElement ptr, byval where as BSTR, byval html as BSTR) as HRESULT
	insertAdjacentText as function(byval This as IHTMLElement ptr, byval where as BSTR, byval text as BSTR) as HRESULT
	get_parentTextEdit as function(byval This as IHTMLElement ptr, byval p as IHTMLElement ptr ptr) as HRESULT
	get_isTextEdit as function(byval This as IHTMLElement ptr, byval p as VARIANT_BOOL ptr) as HRESULT
	click as function(byval This as IHTMLElement ptr) as HRESULT
	get_filters as function(byval This as IHTMLElement ptr, byval p as IHTMLFiltersCollection ptr ptr) as HRESULT
	put_ondragstart as function(byval This as IHTMLElement ptr, byval v as VARIANT) as HRESULT
	get_ondragstart as function(byval This as IHTMLElement ptr, byval p as VARIANT ptr) as HRESULT
	toString as function(byval This as IHTMLElement ptr, byval String as BSTR ptr) as HRESULT
	put_onbeforeupdate as function(byval This as IHTMLElement ptr, byval v as VARIANT) as HRESULT
	get_onbeforeupdate as function(byval This as IHTMLElement ptr, byval p as VARIANT ptr) as HRESULT
	put_onafterupdate as function(byval This as IHTMLElement ptr, byval v as VARIANT) as HRESULT
	get_onafterupdate as function(byval This as IHTMLElement ptr, byval p as VARIANT ptr) as HRESULT
	put_onerrorupdate as function(byval This as IHTMLElement ptr, byval v as VARIANT) as HRESULT
	get_onerrorupdate as function(byval This as IHTMLElement ptr, byval p as VARIANT ptr) as HRESULT
	put_onrowexit as function(byval This as IHTMLElement ptr, byval v as VARIANT) as HRESULT
	get_onrowexit as function(byval This as IHTMLElement ptr, byval p as VARIANT ptr) as HRESULT
	put_onrowenter as function(byval This as IHTMLElement ptr, byval v as VARIANT) as HRESULT
	get_onrowenter as function(byval This as IHTMLElement ptr, byval p as VARIANT ptr) as HRESULT
	put_ondatasetchanged as function(byval This as IHTMLElement ptr, byval v as VARIANT) as HRESULT
	get_ondatasetchanged as function(byval This as IHTMLElement ptr, byval p as VARIANT ptr) as HRESULT
	put_ondataavailable as function(byval This as IHTMLElement ptr, byval v as VARIANT) as HRESULT
	get_ondataavailable as function(byval This as IHTMLElement ptr, byval p as VARIANT ptr) as HRESULT
	put_ondatasetcomplete as function(byval This as IHTMLElement ptr, byval v as VARIANT) as HRESULT
	get_ondatasetcomplete as function(byval This as IHTMLElement ptr, byval p as VARIANT ptr) as HRESULT
	put_onfilterchange as function(byval This as IHTMLElement ptr, byval v as VARIANT) as HRESULT
	get_onfilterchange as function(byval This as IHTMLElement ptr, byval p as VARIANT ptr) as HRESULT
	get_children as function(byval This as IHTMLElement ptr, byval p as IDispatch ptr ptr) as HRESULT
	get_all as function(byval This as IHTMLElement ptr, byval p as IDispatch ptr ptr) as HRESULT
end type

type IHTMLElement_
	lpVtbl as IHTMLElementVtbl ptr
end type

#define IHTMLElement_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLElement_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLElement_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLElement_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLElement_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLElement_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLElement_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLElement_setAttribute(This, strAttributeName, AttributeValue, lFlags) (This)->lpVtbl->setAttribute(This, strAttributeName, AttributeValue, lFlags)
#define IHTMLElement_getAttribute(This, strAttributeName, lFlags, AttributeValue) (This)->lpVtbl->getAttribute(This, strAttributeName, lFlags, AttributeValue)
#define IHTMLElement_removeAttribute(This, strAttributeName, lFlags, pfSuccess) (This)->lpVtbl->removeAttribute(This, strAttributeName, lFlags, pfSuccess)
#define IHTMLElement_put_className(This, v) (This)->lpVtbl->put_className(This, v)
#define IHTMLElement_get_className(This, p) (This)->lpVtbl->get_className(This, p)
#define IHTMLElement_put_id(This, v) (This)->lpVtbl->put_id(This, v)
#define IHTMLElement_get_id(This, p) (This)->lpVtbl->get_id(This, p)
#define IHTMLElement_get_tagName(This, p) (This)->lpVtbl->get_tagName(This, p)
#define IHTMLElement_get_parentElement(This, p) (This)->lpVtbl->get_parentElement(This, p)
#define IHTMLElement_get_style(This, p) (This)->lpVtbl->get_style(This, p)
#define IHTMLElement_put_onhelp(This, v) (This)->lpVtbl->put_onhelp(This, v)
#define IHTMLElement_get_onhelp(This, p) (This)->lpVtbl->get_onhelp(This, p)
#define IHTMLElement_put_onclick(This, v) (This)->lpVtbl->put_onclick(This, v)
#define IHTMLElement_get_onclick(This, p) (This)->lpVtbl->get_onclick(This, p)
#define IHTMLElement_put_ondblclick(This, v) (This)->lpVtbl->put_ondblclick(This, v)
#define IHTMLElement_get_ondblclick(This, p) (This)->lpVtbl->get_ondblclick(This, p)
#define IHTMLElement_put_onkeydown(This, v) (This)->lpVtbl->put_onkeydown(This, v)
#define IHTMLElement_get_onkeydown(This, p) (This)->lpVtbl->get_onkeydown(This, p)
#define IHTMLElement_put_onkeyup(This, v) (This)->lpVtbl->put_onkeyup(This, v)
#define IHTMLElement_get_onkeyup(This, p) (This)->lpVtbl->get_onkeyup(This, p)
#define IHTMLElement_put_onkeypress(This, v) (This)->lpVtbl->put_onkeypress(This, v)
#define IHTMLElement_get_onkeypress(This, p) (This)->lpVtbl->get_onkeypress(This, p)
#define IHTMLElement_put_onmouseout(This, v) (This)->lpVtbl->put_onmouseout(This, v)
#define IHTMLElement_get_onmouseout(This, p) (This)->lpVtbl->get_onmouseout(This, p)
#define IHTMLElement_put_onmouseover(This, v) (This)->lpVtbl->put_onmouseover(This, v)
#define IHTMLElement_get_onmouseover(This, p) (This)->lpVtbl->get_onmouseover(This, p)
#define IHTMLElement_put_onmousemove(This, v) (This)->lpVtbl->put_onmousemove(This, v)
#define IHTMLElement_get_onmousemove(This, p) (This)->lpVtbl->get_onmousemove(This, p)
#define IHTMLElement_put_onmousedown(This, v) (This)->lpVtbl->put_onmousedown(This, v)
#define IHTMLElement_get_onmousedown(This, p) (This)->lpVtbl->get_onmousedown(This, p)
#define IHTMLElement_put_onmouseup(This, v) (This)->lpVtbl->put_onmouseup(This, v)
#define IHTMLElement_get_onmouseup(This, p) (This)->lpVtbl->get_onmouseup(This, p)
#define IHTMLElement_get_document(This, p) (This)->lpVtbl->get_document(This, p)
#define IHTMLElement_put_title(This, v) (This)->lpVtbl->put_title(This, v)
#define IHTMLElement_get_title(This, p) (This)->lpVtbl->get_title(This, p)
#define IHTMLElement_put_language(This, v) (This)->lpVtbl->put_language(This, v)
#define IHTMLElement_get_language(This, p) (This)->lpVtbl->get_language(This, p)
#define IHTMLElement_put_onselectstart(This, v) (This)->lpVtbl->put_onselectstart(This, v)
#define IHTMLElement_get_onselectstart(This, p) (This)->lpVtbl->get_onselectstart(This, p)
#define IHTMLElement_scrollIntoView(This, varargStart) (This)->lpVtbl->scrollIntoView(This, varargStart)
#define IHTMLElement_contains(This, pChild, pfResult) (This)->lpVtbl->contains(This, pChild, pfResult)
#define IHTMLElement_get_sourceIndex(This, p) (This)->lpVtbl->get_sourceIndex(This, p)
#define IHTMLElement_get_recordNumber(This, p) (This)->lpVtbl->get_recordNumber(This, p)
#define IHTMLElement_put_lang(This, v) (This)->lpVtbl->put_lang(This, v)
#define IHTMLElement_get_lang(This, p) (This)->lpVtbl->get_lang(This, p)
#define IHTMLElement_get_offsetLeft(This, p) (This)->lpVtbl->get_offsetLeft(This, p)
#define IHTMLElement_get_offsetTop(This, p) (This)->lpVtbl->get_offsetTop(This, p)
#define IHTMLElement_get_offsetWidth(This, p) (This)->lpVtbl->get_offsetWidth(This, p)
#define IHTMLElement_get_offsetHeight(This, p) (This)->lpVtbl->get_offsetHeight(This, p)
#define IHTMLElement_get_offsetParent(This, p) (This)->lpVtbl->get_offsetParent(This, p)
#define IHTMLElement_put_innerHTML(This, v) (This)->lpVtbl->put_innerHTML(This, v)
#define IHTMLElement_get_innerHTML(This, p) (This)->lpVtbl->get_innerHTML(This, p)
#define IHTMLElement_put_innerText(This, v) (This)->lpVtbl->put_innerText(This, v)
#define IHTMLElement_get_innerText(This, p) (This)->lpVtbl->get_innerText(This, p)
#define IHTMLElement_put_outerHTML(This, v) (This)->lpVtbl->put_outerHTML(This, v)
#define IHTMLElement_get_outerHTML(This, p) (This)->lpVtbl->get_outerHTML(This, p)
#define IHTMLElement_put_outerText(This, v) (This)->lpVtbl->put_outerText(This, v)
#define IHTMLElement_get_outerText(This, p) (This)->lpVtbl->get_outerText(This, p)
#define IHTMLElement_insertAdjacentHTML(This, where, html) (This)->lpVtbl->insertAdjacentHTML(This, where, html)
#define IHTMLElement_insertAdjacentText(This, where, text) (This)->lpVtbl->insertAdjacentText(This, where, text)
#define IHTMLElement_get_parentTextEdit(This, p) (This)->lpVtbl->get_parentTextEdit(This, p)
#define IHTMLElement_get_isTextEdit(This, p) (This)->lpVtbl->get_isTextEdit(This, p)
#define IHTMLElement_click(This) (This)->lpVtbl->click(This)
#define IHTMLElement_get_filters(This, p) (This)->lpVtbl->get_filters(This, p)
#define IHTMLElement_put_ondragstart(This, v) (This)->lpVtbl->put_ondragstart(This, v)
#define IHTMLElement_get_ondragstart(This, p) (This)->lpVtbl->get_ondragstart(This, p)
#define IHTMLElement_toString(This, String) (This)->lpVtbl->toString(This, String)
#define IHTMLElement_put_onbeforeupdate(This, v) (This)->lpVtbl->put_onbeforeupdate(This, v)
#define IHTMLElement_get_onbeforeupdate(This, p) (This)->lpVtbl->get_onbeforeupdate(This, p)
#define IHTMLElement_put_onafterupdate(This, v) (This)->lpVtbl->put_onafterupdate(This, v)
#define IHTMLElement_get_onafterupdate(This, p) (This)->lpVtbl->get_onafterupdate(This, p)
#define IHTMLElement_put_onerrorupdate(This, v) (This)->lpVtbl->put_onerrorupdate(This, v)
#define IHTMLElement_get_onerrorupdate(This, p) (This)->lpVtbl->get_onerrorupdate(This, p)
#define IHTMLElement_put_onrowexit(This, v) (This)->lpVtbl->put_onrowexit(This, v)
#define IHTMLElement_get_onrowexit(This, p) (This)->lpVtbl->get_onrowexit(This, p)
#define IHTMLElement_put_onrowenter(This, v) (This)->lpVtbl->put_onrowenter(This, v)
#define IHTMLElement_get_onrowenter(This, p) (This)->lpVtbl->get_onrowenter(This, p)
#define IHTMLElement_put_ondatasetchanged(This, v) (This)->lpVtbl->put_ondatasetchanged(This, v)
#define IHTMLElement_get_ondatasetchanged(This, p) (This)->lpVtbl->get_ondatasetchanged(This, p)
#define IHTMLElement_put_ondataavailable(This, v) (This)->lpVtbl->put_ondataavailable(This, v)
#define IHTMLElement_get_ondataavailable(This, p) (This)->lpVtbl->get_ondataavailable(This, p)
#define IHTMLElement_put_ondatasetcomplete(This, v) (This)->lpVtbl->put_ondatasetcomplete(This, v)
#define IHTMLElement_get_ondatasetcomplete(This, p) (This)->lpVtbl->get_ondatasetcomplete(This, p)
#define IHTMLElement_put_onfilterchange(This, v) (This)->lpVtbl->put_onfilterchange(This, v)
#define IHTMLElement_get_onfilterchange(This, p) (This)->lpVtbl->get_onfilterchange(This, p)
#define IHTMLElement_get_children(This, p) (This)->lpVtbl->get_children(This, p)
#define IHTMLElement_get_all(This, p) (This)->lpVtbl->get_all(This, p)

declare function IHTMLElement_setAttribute_Proxy(byval This as IHTMLElement ptr, byval strAttributeName as BSTR, byval AttributeValue as VARIANT, byval lFlags as LONG) as HRESULT
declare sub IHTMLElement_setAttribute_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement_getAttribute_Proxy(byval This as IHTMLElement ptr, byval strAttributeName as BSTR, byval lFlags as LONG, byval AttributeValue as VARIANT ptr) as HRESULT
declare sub IHTMLElement_getAttribute_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement_removeAttribute_Proxy(byval This as IHTMLElement ptr, byval strAttributeName as BSTR, byval lFlags as LONG, byval pfSuccess as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLElement_removeAttribute_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement_put_className_Proxy(byval This as IHTMLElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLElement_put_className_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement_get_className_Proxy(byval This as IHTMLElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLElement_get_className_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement_put_id_Proxy(byval This as IHTMLElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLElement_put_id_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement_get_id_Proxy(byval This as IHTMLElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLElement_get_id_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement_get_tagName_Proxy(byval This as IHTMLElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLElement_get_tagName_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement_get_parentElement_Proxy(byval This as IHTMLElement ptr, byval p as IHTMLElement ptr ptr) as HRESULT
declare sub IHTMLElement_get_parentElement_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement_get_style_Proxy(byval This as IHTMLElement ptr, byval p as IHTMLStyle ptr ptr) as HRESULT
declare sub IHTMLElement_get_style_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement_put_onhelp_Proxy(byval This as IHTMLElement ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLElement_put_onhelp_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement_get_onhelp_Proxy(byval This as IHTMLElement ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLElement_get_onhelp_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement_put_onclick_Proxy(byval This as IHTMLElement ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLElement_put_onclick_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement_get_onclick_Proxy(byval This as IHTMLElement ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLElement_get_onclick_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement_put_ondblclick_Proxy(byval This as IHTMLElement ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLElement_put_ondblclick_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement_get_ondblclick_Proxy(byval This as IHTMLElement ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLElement_get_ondblclick_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement_put_onkeydown_Proxy(byval This as IHTMLElement ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLElement_put_onkeydown_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement_get_onkeydown_Proxy(byval This as IHTMLElement ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLElement_get_onkeydown_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement_put_onkeyup_Proxy(byval This as IHTMLElement ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLElement_put_onkeyup_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement_get_onkeyup_Proxy(byval This as IHTMLElement ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLElement_get_onkeyup_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement_put_onkeypress_Proxy(byval This as IHTMLElement ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLElement_put_onkeypress_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement_get_onkeypress_Proxy(byval This as IHTMLElement ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLElement_get_onkeypress_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement_put_onmouseout_Proxy(byval This as IHTMLElement ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLElement_put_onmouseout_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement_get_onmouseout_Proxy(byval This as IHTMLElement ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLElement_get_onmouseout_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement_put_onmouseover_Proxy(byval This as IHTMLElement ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLElement_put_onmouseover_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement_get_onmouseover_Proxy(byval This as IHTMLElement ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLElement_get_onmouseover_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement_put_onmousemove_Proxy(byval This as IHTMLElement ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLElement_put_onmousemove_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement_get_onmousemove_Proxy(byval This as IHTMLElement ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLElement_get_onmousemove_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement_put_onmousedown_Proxy(byval This as IHTMLElement ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLElement_put_onmousedown_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement_get_onmousedown_Proxy(byval This as IHTMLElement ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLElement_get_onmousedown_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement_put_onmouseup_Proxy(byval This as IHTMLElement ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLElement_put_onmouseup_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement_get_onmouseup_Proxy(byval This as IHTMLElement ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLElement_get_onmouseup_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement_get_document_Proxy(byval This as IHTMLElement ptr, byval p as IDispatch ptr ptr) as HRESULT
declare sub IHTMLElement_get_document_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement_put_title_Proxy(byval This as IHTMLElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLElement_put_title_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement_get_title_Proxy(byval This as IHTMLElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLElement_get_title_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement_put_language_Proxy(byval This as IHTMLElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLElement_put_language_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement_get_language_Proxy(byval This as IHTMLElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLElement_get_language_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement_put_onselectstart_Proxy(byval This as IHTMLElement ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLElement_put_onselectstart_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement_get_onselectstart_Proxy(byval This as IHTMLElement ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLElement_get_onselectstart_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement_scrollIntoView_Proxy(byval This as IHTMLElement ptr, byval varargStart as VARIANT) as HRESULT
declare sub IHTMLElement_scrollIntoView_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement_contains_Proxy(byval This as IHTMLElement ptr, byval pChild as IHTMLElement ptr, byval pfResult as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLElement_contains_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement_get_sourceIndex_Proxy(byval This as IHTMLElement ptr, byval p as long ptr) as HRESULT
declare sub IHTMLElement_get_sourceIndex_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement_get_recordNumber_Proxy(byval This as IHTMLElement ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLElement_get_recordNumber_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement_put_lang_Proxy(byval This as IHTMLElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLElement_put_lang_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement_get_lang_Proxy(byval This as IHTMLElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLElement_get_lang_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement_get_offsetLeft_Proxy(byval This as IHTMLElement ptr, byval p as long ptr) as HRESULT
declare sub IHTMLElement_get_offsetLeft_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement_get_offsetTop_Proxy(byval This as IHTMLElement ptr, byval p as long ptr) as HRESULT
declare sub IHTMLElement_get_offsetTop_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement_get_offsetWidth_Proxy(byval This as IHTMLElement ptr, byval p as long ptr) as HRESULT
declare sub IHTMLElement_get_offsetWidth_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement_get_offsetHeight_Proxy(byval This as IHTMLElement ptr, byval p as long ptr) as HRESULT
declare sub IHTMLElement_get_offsetHeight_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement_get_offsetParent_Proxy(byval This as IHTMLElement ptr, byval p as IHTMLElement ptr ptr) as HRESULT
declare sub IHTMLElement_get_offsetParent_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement_put_innerHTML_Proxy(byval This as IHTMLElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLElement_put_innerHTML_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement_get_innerHTML_Proxy(byval This as IHTMLElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLElement_get_innerHTML_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement_put_innerText_Proxy(byval This as IHTMLElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLElement_put_innerText_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement_get_innerText_Proxy(byval This as IHTMLElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLElement_get_innerText_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement_put_outerHTML_Proxy(byval This as IHTMLElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLElement_put_outerHTML_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement_get_outerHTML_Proxy(byval This as IHTMLElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLElement_get_outerHTML_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement_put_outerText_Proxy(byval This as IHTMLElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLElement_put_outerText_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement_get_outerText_Proxy(byval This as IHTMLElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLElement_get_outerText_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement_insertAdjacentHTML_Proxy(byval This as IHTMLElement ptr, byval where as BSTR, byval html as BSTR) as HRESULT
declare sub IHTMLElement_insertAdjacentHTML_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement_insertAdjacentText_Proxy(byval This as IHTMLElement ptr, byval where as BSTR, byval text as BSTR) as HRESULT
declare sub IHTMLElement_insertAdjacentText_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement_get_parentTextEdit_Proxy(byval This as IHTMLElement ptr, byval p as IHTMLElement ptr ptr) as HRESULT
declare sub IHTMLElement_get_parentTextEdit_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement_get_isTextEdit_Proxy(byval This as IHTMLElement ptr, byval p as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLElement_get_isTextEdit_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement_click_Proxy(byval This as IHTMLElement ptr) as HRESULT
declare sub IHTMLElement_click_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement_get_filters_Proxy(byval This as IHTMLElement ptr, byval p as IHTMLFiltersCollection ptr ptr) as HRESULT
declare sub IHTMLElement_get_filters_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement_put_ondragstart_Proxy(byval This as IHTMLElement ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLElement_put_ondragstart_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement_get_ondragstart_Proxy(byval This as IHTMLElement ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLElement_get_ondragstart_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement_toString_Proxy(byval This as IHTMLElement ptr, byval String as BSTR ptr) as HRESULT
declare sub IHTMLElement_toString_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement_put_onbeforeupdate_Proxy(byval This as IHTMLElement ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLElement_put_onbeforeupdate_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement_get_onbeforeupdate_Proxy(byval This as IHTMLElement ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLElement_get_onbeforeupdate_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement_put_onafterupdate_Proxy(byval This as IHTMLElement ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLElement_put_onafterupdate_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement_get_onafterupdate_Proxy(byval This as IHTMLElement ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLElement_get_onafterupdate_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement_put_onerrorupdate_Proxy(byval This as IHTMLElement ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLElement_put_onerrorupdate_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement_get_onerrorupdate_Proxy(byval This as IHTMLElement ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLElement_get_onerrorupdate_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement_put_onrowexit_Proxy(byval This as IHTMLElement ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLElement_put_onrowexit_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement_get_onrowexit_Proxy(byval This as IHTMLElement ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLElement_get_onrowexit_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement_put_onrowenter_Proxy(byval This as IHTMLElement ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLElement_put_onrowenter_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement_get_onrowenter_Proxy(byval This as IHTMLElement ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLElement_get_onrowenter_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement_put_ondatasetchanged_Proxy(byval This as IHTMLElement ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLElement_put_ondatasetchanged_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement_get_ondatasetchanged_Proxy(byval This as IHTMLElement ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLElement_get_ondatasetchanged_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement_put_ondataavailable_Proxy(byval This as IHTMLElement ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLElement_put_ondataavailable_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement_get_ondataavailable_Proxy(byval This as IHTMLElement ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLElement_get_ondataavailable_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement_put_ondatasetcomplete_Proxy(byval This as IHTMLElement ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLElement_put_ondatasetcomplete_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement_get_ondatasetcomplete_Proxy(byval This as IHTMLElement ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLElement_get_ondatasetcomplete_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement_put_onfilterchange_Proxy(byval This as IHTMLElement ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLElement_put_onfilterchange_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement_get_onfilterchange_Proxy(byval This as IHTMLElement ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLElement_get_onfilterchange_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement_get_children_Proxy(byval This as IHTMLElement ptr, byval p as IDispatch ptr ptr) as HRESULT
declare sub IHTMLElement_get_children_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement_get_all_Proxy(byval This as IHTMLElement ptr, byval p as IDispatch ptr ptr) as HRESULT
declare sub IHTMLElement_get_all_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLRect_INTERFACE_DEFINED__
extern IID_IHTMLRect as const IID
type IHTMLRect as IHTMLRect_

type IHTMLRectVtbl
	QueryInterface as function(byval This as IHTMLRect ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLRect ptr) as ULONG
	Release as function(byval This as IHTMLRect ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLRect ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLRect ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLRect ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLRect ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	put_left as function(byval This as IHTMLRect ptr, byval v as long) as HRESULT
	get_left as function(byval This as IHTMLRect ptr, byval p as long ptr) as HRESULT
	put_top as function(byval This as IHTMLRect ptr, byval v as long) as HRESULT
	get_top as function(byval This as IHTMLRect ptr, byval p as long ptr) as HRESULT
	put_right as function(byval This as IHTMLRect ptr, byval v as long) as HRESULT
	get_right as function(byval This as IHTMLRect ptr, byval p as long ptr) as HRESULT
	put_bottom as function(byval This as IHTMLRect ptr, byval v as long) as HRESULT
	get_bottom as function(byval This as IHTMLRect ptr, byval p as long ptr) as HRESULT
end type

type IHTMLRect_
	lpVtbl as IHTMLRectVtbl ptr
end type

#define IHTMLRect_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLRect_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLRect_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLRect_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLRect_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLRect_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLRect_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLRect_put_left(This, v) (This)->lpVtbl->put_left(This, v)
#define IHTMLRect_get_left(This, p) (This)->lpVtbl->get_left(This, p)
#define IHTMLRect_put_top(This, v) (This)->lpVtbl->put_top(This, v)
#define IHTMLRect_get_top(This, p) (This)->lpVtbl->get_top(This, p)
#define IHTMLRect_put_right(This, v) (This)->lpVtbl->put_right(This, v)
#define IHTMLRect_get_right(This, p) (This)->lpVtbl->get_right(This, p)
#define IHTMLRect_put_bottom(This, v) (This)->lpVtbl->put_bottom(This, v)
#define IHTMLRect_get_bottom(This, p) (This)->lpVtbl->get_bottom(This, p)

declare function IHTMLRect_put_left_Proxy(byval This as IHTMLRect ptr, byval v as long) as HRESULT
declare sub IHTMLRect_put_left_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRect_get_left_Proxy(byval This as IHTMLRect ptr, byval p as long ptr) as HRESULT
declare sub IHTMLRect_get_left_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRect_put_top_Proxy(byval This as IHTMLRect ptr, byval v as long) as HRESULT
declare sub IHTMLRect_put_top_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRect_get_top_Proxy(byval This as IHTMLRect ptr, byval p as long ptr) as HRESULT
declare sub IHTMLRect_get_top_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRect_put_right_Proxy(byval This as IHTMLRect ptr, byval v as long) as HRESULT
declare sub IHTMLRect_put_right_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRect_get_right_Proxy(byval This as IHTMLRect ptr, byval p as long ptr) as HRESULT
declare sub IHTMLRect_get_right_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRect_put_bottom_Proxy(byval This as IHTMLRect ptr, byval v as long) as HRESULT
declare sub IHTMLRect_put_bottom_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRect_get_bottom_Proxy(byval This as IHTMLRect ptr, byval p as long ptr) as HRESULT
declare sub IHTMLRect_get_bottom_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLRectCollection_INTERFACE_DEFINED__
extern IID_IHTMLRectCollection as const IID
type IHTMLRectCollection as IHTMLRectCollection_

type IHTMLRectCollectionVtbl
	QueryInterface as function(byval This as IHTMLRectCollection ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLRectCollection ptr) as ULONG
	Release as function(byval This as IHTMLRectCollection ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLRectCollection ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLRectCollection ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLRectCollection ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLRectCollection ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	get_length as function(byval This as IHTMLRectCollection ptr, byval p as long ptr) as HRESULT
	get__newEnum as function(byval This as IHTMLRectCollection ptr, byval p as IUnknown ptr ptr) as HRESULT
	item as function(byval This as IHTMLRectCollection ptr, byval pvarIndex as VARIANT ptr, byval pvarResult as VARIANT ptr) as HRESULT
end type

type IHTMLRectCollection_
	lpVtbl as IHTMLRectCollectionVtbl ptr
end type

#define IHTMLRectCollection_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLRectCollection_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLRectCollection_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLRectCollection_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLRectCollection_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLRectCollection_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLRectCollection_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLRectCollection_get_length(This, p) (This)->lpVtbl->get_length(This, p)
#define IHTMLRectCollection_get__newEnum(This, p) (This)->lpVtbl->get__newEnum(This, p)
#define IHTMLRectCollection_item(This, pvarIndex, pvarResult) (This)->lpVtbl->item(This, pvarIndex, pvarResult)

declare function IHTMLRectCollection_get_length_Proxy(byval This as IHTMLRectCollection ptr, byval p as long ptr) as HRESULT
declare sub IHTMLRectCollection_get_length_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRectCollection_get__newEnum_Proxy(byval This as IHTMLRectCollection ptr, byval p as IUnknown ptr ptr) as HRESULT
declare sub IHTMLRectCollection_get__newEnum_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLRectCollection_item_Proxy(byval This as IHTMLRectCollection ptr, byval pvarIndex as VARIANT ptr, byval pvarResult as VARIANT ptr) as HRESULT
declare sub IHTMLRectCollection_item_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLDOMNode_INTERFACE_DEFINED__
extern IID_IHTMLDOMNode as const IID
type IHTMLDOMNode as IHTMLDOMNode_

type IHTMLDOMNodeVtbl
	QueryInterface as function(byval This as IHTMLDOMNode ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLDOMNode ptr) as ULONG
	Release as function(byval This as IHTMLDOMNode ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLDOMNode ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLDOMNode ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLDOMNode ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLDOMNode ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	get_nodeType as function(byval This as IHTMLDOMNode ptr, byval p as long ptr) as HRESULT
	get_parentNode as function(byval This as IHTMLDOMNode ptr, byval p as IHTMLDOMNode ptr ptr) as HRESULT
	hasChildNodes as function(byval This as IHTMLDOMNode ptr, byval fChildren as VARIANT_BOOL ptr) as HRESULT
	get_childNodes as function(byval This as IHTMLDOMNode ptr, byval p as IDispatch ptr ptr) as HRESULT
	get_attributes as function(byval This as IHTMLDOMNode ptr, byval p as IDispatch ptr ptr) as HRESULT
	insertBefore as function(byval This as IHTMLDOMNode ptr, byval newChild as IHTMLDOMNode ptr, byval refChild as VARIANT, byval node as IHTMLDOMNode ptr ptr) as HRESULT
	removeChild as function(byval This as IHTMLDOMNode ptr, byval oldChild as IHTMLDOMNode ptr, byval node as IHTMLDOMNode ptr ptr) as HRESULT
	replaceChild as function(byval This as IHTMLDOMNode ptr, byval newChild as IHTMLDOMNode ptr, byval oldChild as IHTMLDOMNode ptr, byval node as IHTMLDOMNode ptr ptr) as HRESULT
	cloneNode as function(byval This as IHTMLDOMNode ptr, byval fDeep as VARIANT_BOOL, byval clonedNode as IHTMLDOMNode ptr ptr) as HRESULT
	removeNode as function(byval This as IHTMLDOMNode ptr, byval fDeep as VARIANT_BOOL, byval removed as IHTMLDOMNode ptr ptr) as HRESULT
	swapNode as function(byval This as IHTMLDOMNode ptr, byval otherNode as IHTMLDOMNode ptr, byval swappedNode as IHTMLDOMNode ptr ptr) as HRESULT
	replaceNode as function(byval This as IHTMLDOMNode ptr, byval replacement as IHTMLDOMNode ptr, byval replaced as IHTMLDOMNode ptr ptr) as HRESULT
	appendChild as function(byval This as IHTMLDOMNode ptr, byval newChild as IHTMLDOMNode ptr, byval node as IHTMLDOMNode ptr ptr) as HRESULT
	get_nodeName as function(byval This as IHTMLDOMNode ptr, byval p as BSTR ptr) as HRESULT
	put_nodeValue as function(byval This as IHTMLDOMNode ptr, byval v as VARIANT) as HRESULT
	get_nodeValue as function(byval This as IHTMLDOMNode ptr, byval p as VARIANT ptr) as HRESULT
	get_firstChild as function(byval This as IHTMLDOMNode ptr, byval p as IHTMLDOMNode ptr ptr) as HRESULT
	get_lastChild as function(byval This as IHTMLDOMNode ptr, byval p as IHTMLDOMNode ptr ptr) as HRESULT
	get_previousSibling as function(byval This as IHTMLDOMNode ptr, byval p as IHTMLDOMNode ptr ptr) as HRESULT
	get_nextSibling as function(byval This as IHTMLDOMNode ptr, byval p as IHTMLDOMNode ptr ptr) as HRESULT
end type

type IHTMLDOMNode_
	lpVtbl as IHTMLDOMNodeVtbl ptr
end type

#define IHTMLDOMNode_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLDOMNode_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLDOMNode_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLDOMNode_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLDOMNode_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLDOMNode_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLDOMNode_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLDOMNode_get_nodeType(This, p) (This)->lpVtbl->get_nodeType(This, p)
#define IHTMLDOMNode_get_parentNode(This, p) (This)->lpVtbl->get_parentNode(This, p)
#define IHTMLDOMNode_hasChildNodes(This, fChildren) (This)->lpVtbl->hasChildNodes(This, fChildren)
#define IHTMLDOMNode_get_childNodes(This, p) (This)->lpVtbl->get_childNodes(This, p)
#define IHTMLDOMNode_get_attributes(This, p) (This)->lpVtbl->get_attributes(This, p)
#define IHTMLDOMNode_insertBefore(This, newChild, refChild, node) (This)->lpVtbl->insertBefore(This, newChild, refChild, node)
#define IHTMLDOMNode_removeChild(This, oldChild, node) (This)->lpVtbl->removeChild(This, oldChild, node)
#define IHTMLDOMNode_replaceChild(This, newChild, oldChild, node) (This)->lpVtbl->replaceChild(This, newChild, oldChild, node)
#define IHTMLDOMNode_cloneNode(This, fDeep, clonedNode) (This)->lpVtbl->cloneNode(This, fDeep, clonedNode)
#define IHTMLDOMNode_removeNode(This, fDeep, removed) (This)->lpVtbl->removeNode(This, fDeep, removed)
#define IHTMLDOMNode_swapNode(This, otherNode, swappedNode) (This)->lpVtbl->swapNode(This, otherNode, swappedNode)
#define IHTMLDOMNode_replaceNode(This, replacement, replaced) (This)->lpVtbl->replaceNode(This, replacement, replaced)
#define IHTMLDOMNode_appendChild(This, newChild, node) (This)->lpVtbl->appendChild(This, newChild, node)
#define IHTMLDOMNode_get_nodeName(This, p) (This)->lpVtbl->get_nodeName(This, p)
#define IHTMLDOMNode_put_nodeValue(This, v) (This)->lpVtbl->put_nodeValue(This, v)
#define IHTMLDOMNode_get_nodeValue(This, p) (This)->lpVtbl->get_nodeValue(This, p)
#define IHTMLDOMNode_get_firstChild(This, p) (This)->lpVtbl->get_firstChild(This, p)
#define IHTMLDOMNode_get_lastChild(This, p) (This)->lpVtbl->get_lastChild(This, p)
#define IHTMLDOMNode_get_previousSibling(This, p) (This)->lpVtbl->get_previousSibling(This, p)
#define IHTMLDOMNode_get_nextSibling(This, p) (This)->lpVtbl->get_nextSibling(This, p)

declare function IHTMLDOMNode_get_nodeType_Proxy(byval This as IHTMLDOMNode ptr, byval p as long ptr) as HRESULT
declare sub IHTMLDOMNode_get_nodeType_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDOMNode_get_parentNode_Proxy(byval This as IHTMLDOMNode ptr, byval p as IHTMLDOMNode ptr ptr) as HRESULT
declare sub IHTMLDOMNode_get_parentNode_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDOMNode_hasChildNodes_Proxy(byval This as IHTMLDOMNode ptr, byval fChildren as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLDOMNode_hasChildNodes_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDOMNode_get_childNodes_Proxy(byval This as IHTMLDOMNode ptr, byval p as IDispatch ptr ptr) as HRESULT
declare sub IHTMLDOMNode_get_childNodes_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDOMNode_get_attributes_Proxy(byval This as IHTMLDOMNode ptr, byval p as IDispatch ptr ptr) as HRESULT
declare sub IHTMLDOMNode_get_attributes_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDOMNode_insertBefore_Proxy(byval This as IHTMLDOMNode ptr, byval newChild as IHTMLDOMNode ptr, byval refChild as VARIANT, byval node as IHTMLDOMNode ptr ptr) as HRESULT
declare sub IHTMLDOMNode_insertBefore_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDOMNode_removeChild_Proxy(byval This as IHTMLDOMNode ptr, byval oldChild as IHTMLDOMNode ptr, byval node as IHTMLDOMNode ptr ptr) as HRESULT
declare sub IHTMLDOMNode_removeChild_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDOMNode_replaceChild_Proxy(byval This as IHTMLDOMNode ptr, byval newChild as IHTMLDOMNode ptr, byval oldChild as IHTMLDOMNode ptr, byval node as IHTMLDOMNode ptr ptr) as HRESULT
declare sub IHTMLDOMNode_replaceChild_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDOMNode_cloneNode_Proxy(byval This as IHTMLDOMNode ptr, byval fDeep as VARIANT_BOOL, byval clonedNode as IHTMLDOMNode ptr ptr) as HRESULT
declare sub IHTMLDOMNode_cloneNode_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDOMNode_removeNode_Proxy(byval This as IHTMLDOMNode ptr, byval fDeep as VARIANT_BOOL, byval removed as IHTMLDOMNode ptr ptr) as HRESULT
declare sub IHTMLDOMNode_removeNode_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDOMNode_swapNode_Proxy(byval This as IHTMLDOMNode ptr, byval otherNode as IHTMLDOMNode ptr, byval swappedNode as IHTMLDOMNode ptr ptr) as HRESULT
declare sub IHTMLDOMNode_swapNode_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDOMNode_replaceNode_Proxy(byval This as IHTMLDOMNode ptr, byval replacement as IHTMLDOMNode ptr, byval replaced as IHTMLDOMNode ptr ptr) as HRESULT
declare sub IHTMLDOMNode_replaceNode_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDOMNode_appendChild_Proxy(byval This as IHTMLDOMNode ptr, byval newChild as IHTMLDOMNode ptr, byval node as IHTMLDOMNode ptr ptr) as HRESULT
declare sub IHTMLDOMNode_appendChild_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDOMNode_get_nodeName_Proxy(byval This as IHTMLDOMNode ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLDOMNode_get_nodeName_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDOMNode_put_nodeValue_Proxy(byval This as IHTMLDOMNode ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLDOMNode_put_nodeValue_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDOMNode_get_nodeValue_Proxy(byval This as IHTMLDOMNode ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLDOMNode_get_nodeValue_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDOMNode_get_firstChild_Proxy(byval This as IHTMLDOMNode ptr, byval p as IHTMLDOMNode ptr ptr) as HRESULT
declare sub IHTMLDOMNode_get_firstChild_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDOMNode_get_lastChild_Proxy(byval This as IHTMLDOMNode ptr, byval p as IHTMLDOMNode ptr ptr) as HRESULT
declare sub IHTMLDOMNode_get_lastChild_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDOMNode_get_previousSibling_Proxy(byval This as IHTMLDOMNode ptr, byval p as IHTMLDOMNode ptr ptr) as HRESULT
declare sub IHTMLDOMNode_get_previousSibling_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDOMNode_get_nextSibling_Proxy(byval This as IHTMLDOMNode ptr, byval p as IHTMLDOMNode ptr ptr) as HRESULT
declare sub IHTMLDOMNode_get_nextSibling_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLDOMNode2_INTERFACE_DEFINED__
extern IID_IHTMLDOMNode2 as const IID
type IHTMLDOMNode2 as IHTMLDOMNode2_

type IHTMLDOMNode2Vtbl
	QueryInterface as function(byval This as IHTMLDOMNode2 ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLDOMNode2 ptr) as ULONG
	Release as function(byval This as IHTMLDOMNode2 ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLDOMNode2 ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLDOMNode2 ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLDOMNode2 ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLDOMNode2 ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	get_ownerDocument as function(byval This as IHTMLDOMNode2 ptr, byval p as IDispatch ptr ptr) as HRESULT
end type

type IHTMLDOMNode2_
	lpVtbl as IHTMLDOMNode2Vtbl ptr
end type

#define IHTMLDOMNode2_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLDOMNode2_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLDOMNode2_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLDOMNode2_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLDOMNode2_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLDOMNode2_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLDOMNode2_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLDOMNode2_get_ownerDocument(This, p) (This)->lpVtbl->get_ownerDocument(This, p)
declare function IHTMLDOMNode2_get_ownerDocument_Proxy(byval This as IHTMLDOMNode2 ptr, byval p as IDispatch ptr ptr) as HRESULT
declare sub IHTMLDOMNode2_get_ownerDocument_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLDOMAttribute_INTERFACE_DEFINED__
extern IID_IHTMLDOMAttribute as const IID
type IHTMLDOMAttribute as IHTMLDOMAttribute_

type IHTMLDOMAttributeVtbl
	QueryInterface as function(byval This as IHTMLDOMAttribute ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLDOMAttribute ptr) as ULONG
	Release as function(byval This as IHTMLDOMAttribute ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLDOMAttribute ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLDOMAttribute ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLDOMAttribute ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLDOMAttribute ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	get_nodeName as function(byval This as IHTMLDOMAttribute ptr, byval p as BSTR ptr) as HRESULT
	put_nodeValue as function(byval This as IHTMLDOMAttribute ptr, byval v as VARIANT) as HRESULT
	get_nodeValue as function(byval This as IHTMLDOMAttribute ptr, byval p as VARIANT ptr) as HRESULT
	get_specified as function(byval This as IHTMLDOMAttribute ptr, byval p as VARIANT_BOOL ptr) as HRESULT
end type

type IHTMLDOMAttribute_
	lpVtbl as IHTMLDOMAttributeVtbl ptr
end type

#define IHTMLDOMAttribute_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLDOMAttribute_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLDOMAttribute_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLDOMAttribute_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLDOMAttribute_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLDOMAttribute_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLDOMAttribute_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLDOMAttribute_get_nodeName(This, p) (This)->lpVtbl->get_nodeName(This, p)
#define IHTMLDOMAttribute_put_nodeValue(This, v) (This)->lpVtbl->put_nodeValue(This, v)
#define IHTMLDOMAttribute_get_nodeValue(This, p) (This)->lpVtbl->get_nodeValue(This, p)
#define IHTMLDOMAttribute_get_specified(This, p) (This)->lpVtbl->get_specified(This, p)

declare function IHTMLDOMAttribute_get_nodeName_Proxy(byval This as IHTMLDOMAttribute ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLDOMAttribute_get_nodeName_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDOMAttribute_put_nodeValue_Proxy(byval This as IHTMLDOMAttribute ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLDOMAttribute_put_nodeValue_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDOMAttribute_get_nodeValue_Proxy(byval This as IHTMLDOMAttribute ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLDOMAttribute_get_nodeValue_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDOMAttribute_get_specified_Proxy(byval This as IHTMLDOMAttribute ptr, byval p as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLDOMAttribute_get_specified_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLDOMAttribute2_INTERFACE_DEFINED__
extern IID_IHTMLDOMAttribute2 as const IID
type IHTMLDOMAttribute2 as IHTMLDOMAttribute2_

type IHTMLDOMAttribute2Vtbl
	QueryInterface as function(byval This as IHTMLDOMAttribute2 ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLDOMAttribute2 ptr) as ULONG
	Release as function(byval This as IHTMLDOMAttribute2 ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLDOMAttribute2 ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLDOMAttribute2 ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLDOMAttribute2 ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLDOMAttribute2 ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	get_name as function(byval This as IHTMLDOMAttribute2 ptr, byval p as BSTR ptr) as HRESULT
	put_value as function(byval This as IHTMLDOMAttribute2 ptr, byval v as BSTR) as HRESULT
	get_value as function(byval This as IHTMLDOMAttribute2 ptr, byval p as BSTR ptr) as HRESULT
	get_expando as function(byval This as IHTMLDOMAttribute2 ptr, byval p as VARIANT_BOOL ptr) as HRESULT
	get_nodeType as function(byval This as IHTMLDOMAttribute2 ptr, byval p as long ptr) as HRESULT
	get_parentNode as function(byval This as IHTMLDOMAttribute2 ptr, byval p as IHTMLDOMNode ptr ptr) as HRESULT
	get_childNodes as function(byval This as IHTMLDOMAttribute2 ptr, byval p as IDispatch ptr ptr) as HRESULT
	get_firstChild as function(byval This as IHTMLDOMAttribute2 ptr, byval p as IHTMLDOMNode ptr ptr) as HRESULT
	get_lastChild as function(byval This as IHTMLDOMAttribute2 ptr, byval p as IHTMLDOMNode ptr ptr) as HRESULT
	get_previousSibling as function(byval This as IHTMLDOMAttribute2 ptr, byval p as IHTMLDOMNode ptr ptr) as HRESULT
	get_nextSibling as function(byval This as IHTMLDOMAttribute2 ptr, byval p as IHTMLDOMNode ptr ptr) as HRESULT
	get_attributes as function(byval This as IHTMLDOMAttribute2 ptr, byval p as IDispatch ptr ptr) as HRESULT
	get_ownerDocument as function(byval This as IHTMLDOMAttribute2 ptr, byval p as IDispatch ptr ptr) as HRESULT
	insertBefore as function(byval This as IHTMLDOMAttribute2 ptr, byval newChild as IHTMLDOMNode ptr, byval refChild as VARIANT, byval node as IHTMLDOMNode ptr ptr) as HRESULT
	replaceChild as function(byval This as IHTMLDOMAttribute2 ptr, byval newChild as IHTMLDOMNode ptr, byval oldChild as IHTMLDOMNode ptr, byval node as IHTMLDOMNode ptr ptr) as HRESULT
	removeChild as function(byval This as IHTMLDOMAttribute2 ptr, byval oldChild as IHTMLDOMNode ptr, byval node as IHTMLDOMNode ptr ptr) as HRESULT
	appendChild as function(byval This as IHTMLDOMAttribute2 ptr, byval newChild as IHTMLDOMNode ptr, byval node as IHTMLDOMNode ptr ptr) as HRESULT
	hasChildNodes as function(byval This as IHTMLDOMAttribute2 ptr, byval fChildren as VARIANT_BOOL ptr) as HRESULT
	cloneNode as function(byval This as IHTMLDOMAttribute2 ptr, byval fDeep as VARIANT_BOOL, byval clonedNode as IHTMLDOMAttribute ptr ptr) as HRESULT
end type

type IHTMLDOMAttribute2_
	lpVtbl as IHTMLDOMAttribute2Vtbl ptr
end type

#define IHTMLDOMAttribute2_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLDOMAttribute2_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLDOMAttribute2_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLDOMAttribute2_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLDOMAttribute2_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLDOMAttribute2_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLDOMAttribute2_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLDOMAttribute2_get_name(This, p) (This)->lpVtbl->get_name(This, p)
#define IHTMLDOMAttribute2_put_value(This, v) (This)->lpVtbl->put_value(This, v)
#define IHTMLDOMAttribute2_get_value(This, p) (This)->lpVtbl->get_value(This, p)
#define IHTMLDOMAttribute2_get_expando(This, p) (This)->lpVtbl->get_expando(This, p)
#define IHTMLDOMAttribute2_get_nodeType(This, p) (This)->lpVtbl->get_nodeType(This, p)
#define IHTMLDOMAttribute2_get_parentNode(This, p) (This)->lpVtbl->get_parentNode(This, p)
#define IHTMLDOMAttribute2_get_childNodes(This, p) (This)->lpVtbl->get_childNodes(This, p)
#define IHTMLDOMAttribute2_get_firstChild(This, p) (This)->lpVtbl->get_firstChild(This, p)
#define IHTMLDOMAttribute2_get_lastChild(This, p) (This)->lpVtbl->get_lastChild(This, p)
#define IHTMLDOMAttribute2_get_previousSibling(This, p) (This)->lpVtbl->get_previousSibling(This, p)
#define IHTMLDOMAttribute2_get_nextSibling(This, p) (This)->lpVtbl->get_nextSibling(This, p)
#define IHTMLDOMAttribute2_get_attributes(This, p) (This)->lpVtbl->get_attributes(This, p)
#define IHTMLDOMAttribute2_get_ownerDocument(This, p) (This)->lpVtbl->get_ownerDocument(This, p)
#define IHTMLDOMAttribute2_insertBefore(This, newChild, refChild, node) (This)->lpVtbl->insertBefore(This, newChild, refChild, node)
#define IHTMLDOMAttribute2_replaceChild(This, newChild, oldChild, node) (This)->lpVtbl->replaceChild(This, newChild, oldChild, node)
#define IHTMLDOMAttribute2_removeChild(This, oldChild, node) (This)->lpVtbl->removeChild(This, oldChild, node)
#define IHTMLDOMAttribute2_appendChild(This, newChild, node) (This)->lpVtbl->appendChild(This, newChild, node)
#define IHTMLDOMAttribute2_hasChildNodes(This, fChildren) (This)->lpVtbl->hasChildNodes(This, fChildren)
#define IHTMLDOMAttribute2_cloneNode(This, fDeep, clonedNode) (This)->lpVtbl->cloneNode(This, fDeep, clonedNode)

declare function IHTMLDOMAttribute2_get_name_Proxy(byval This as IHTMLDOMAttribute2 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLDOMAttribute2_get_name_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDOMAttribute2_put_value_Proxy(byval This as IHTMLDOMAttribute2 ptr, byval v as BSTR) as HRESULT
declare sub IHTMLDOMAttribute2_put_value_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDOMAttribute2_get_value_Proxy(byval This as IHTMLDOMAttribute2 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLDOMAttribute2_get_value_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDOMAttribute2_get_expando_Proxy(byval This as IHTMLDOMAttribute2 ptr, byval p as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLDOMAttribute2_get_expando_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDOMAttribute2_get_nodeType_Proxy(byval This as IHTMLDOMAttribute2 ptr, byval p as long ptr) as HRESULT
declare sub IHTMLDOMAttribute2_get_nodeType_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDOMAttribute2_get_parentNode_Proxy(byval This as IHTMLDOMAttribute2 ptr, byval p as IHTMLDOMNode ptr ptr) as HRESULT
declare sub IHTMLDOMAttribute2_get_parentNode_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDOMAttribute2_get_childNodes_Proxy(byval This as IHTMLDOMAttribute2 ptr, byval p as IDispatch ptr ptr) as HRESULT
declare sub IHTMLDOMAttribute2_get_childNodes_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDOMAttribute2_get_firstChild_Proxy(byval This as IHTMLDOMAttribute2 ptr, byval p as IHTMLDOMNode ptr ptr) as HRESULT
declare sub IHTMLDOMAttribute2_get_firstChild_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDOMAttribute2_get_lastChild_Proxy(byval This as IHTMLDOMAttribute2 ptr, byval p as IHTMLDOMNode ptr ptr) as HRESULT
declare sub IHTMLDOMAttribute2_get_lastChild_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDOMAttribute2_get_previousSibling_Proxy(byval This as IHTMLDOMAttribute2 ptr, byval p as IHTMLDOMNode ptr ptr) as HRESULT
declare sub IHTMLDOMAttribute2_get_previousSibling_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDOMAttribute2_get_nextSibling_Proxy(byval This as IHTMLDOMAttribute2 ptr, byval p as IHTMLDOMNode ptr ptr) as HRESULT
declare sub IHTMLDOMAttribute2_get_nextSibling_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDOMAttribute2_get_attributes_Proxy(byval This as IHTMLDOMAttribute2 ptr, byval p as IDispatch ptr ptr) as HRESULT
declare sub IHTMLDOMAttribute2_get_attributes_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDOMAttribute2_get_ownerDocument_Proxy(byval This as IHTMLDOMAttribute2 ptr, byval p as IDispatch ptr ptr) as HRESULT
declare sub IHTMLDOMAttribute2_get_ownerDocument_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDOMAttribute2_insertBefore_Proxy(byval This as IHTMLDOMAttribute2 ptr, byval newChild as IHTMLDOMNode ptr, byval refChild as VARIANT, byval node as IHTMLDOMNode ptr ptr) as HRESULT
declare sub IHTMLDOMAttribute2_insertBefore_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDOMAttribute2_replaceChild_Proxy(byval This as IHTMLDOMAttribute2 ptr, byval newChild as IHTMLDOMNode ptr, byval oldChild as IHTMLDOMNode ptr, byval node as IHTMLDOMNode ptr ptr) as HRESULT
declare sub IHTMLDOMAttribute2_replaceChild_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDOMAttribute2_removeChild_Proxy(byval This as IHTMLDOMAttribute2 ptr, byval oldChild as IHTMLDOMNode ptr, byval node as IHTMLDOMNode ptr ptr) as HRESULT
declare sub IHTMLDOMAttribute2_removeChild_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDOMAttribute2_appendChild_Proxy(byval This as IHTMLDOMAttribute2 ptr, byval newChild as IHTMLDOMNode ptr, byval node as IHTMLDOMNode ptr ptr) as HRESULT
declare sub IHTMLDOMAttribute2_appendChild_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDOMAttribute2_hasChildNodes_Proxy(byval This as IHTMLDOMAttribute2 ptr, byval fChildren as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLDOMAttribute2_hasChildNodes_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDOMAttribute2_cloneNode_Proxy(byval This as IHTMLDOMAttribute2 ptr, byval fDeep as VARIANT_BOOL, byval clonedNode as IHTMLDOMAttribute ptr ptr) as HRESULT
declare sub IHTMLDOMAttribute2_cloneNode_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLDOMTextNode_INTERFACE_DEFINED__
extern IID_IHTMLDOMTextNode as const IID
type IHTMLDOMTextNode as IHTMLDOMTextNode_

type IHTMLDOMTextNodeVtbl
	QueryInterface as function(byval This as IHTMLDOMTextNode ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLDOMTextNode ptr) as ULONG
	Release as function(byval This as IHTMLDOMTextNode ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLDOMTextNode ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLDOMTextNode ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLDOMTextNode ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLDOMTextNode ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	put_data as function(byval This as IHTMLDOMTextNode ptr, byval v as BSTR) as HRESULT
	get_data as function(byval This as IHTMLDOMTextNode ptr, byval p as BSTR ptr) as HRESULT
	toString as function(byval This as IHTMLDOMTextNode ptr, byval String as BSTR ptr) as HRESULT
	get_length as function(byval This as IHTMLDOMTextNode ptr, byval p as long ptr) as HRESULT
	splitText as function(byval This as IHTMLDOMTextNode ptr, byval offset as long, byval pRetNode as IHTMLDOMNode ptr ptr) as HRESULT
end type

type IHTMLDOMTextNode_
	lpVtbl as IHTMLDOMTextNodeVtbl ptr
end type

#define IHTMLDOMTextNode_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLDOMTextNode_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLDOMTextNode_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLDOMTextNode_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLDOMTextNode_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLDOMTextNode_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLDOMTextNode_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLDOMTextNode_put_data(This, v) (This)->lpVtbl->put_data(This, v)
#define IHTMLDOMTextNode_get_data(This, p) (This)->lpVtbl->get_data(This, p)
#define IHTMLDOMTextNode_toString(This, String) (This)->lpVtbl->toString(This, String)
#define IHTMLDOMTextNode_get_length(This, p) (This)->lpVtbl->get_length(This, p)
#define IHTMLDOMTextNode_splitText(This, offset, pRetNode) (This)->lpVtbl->splitText(This, offset, pRetNode)

declare function IHTMLDOMTextNode_put_data_Proxy(byval This as IHTMLDOMTextNode ptr, byval v as BSTR) as HRESULT
declare sub IHTMLDOMTextNode_put_data_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDOMTextNode_get_data_Proxy(byval This as IHTMLDOMTextNode ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLDOMTextNode_get_data_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDOMTextNode_toString_Proxy(byval This as IHTMLDOMTextNode ptr, byval String as BSTR ptr) as HRESULT
declare sub IHTMLDOMTextNode_toString_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDOMTextNode_get_length_Proxy(byval This as IHTMLDOMTextNode ptr, byval p as long ptr) as HRESULT
declare sub IHTMLDOMTextNode_get_length_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDOMTextNode_splitText_Proxy(byval This as IHTMLDOMTextNode ptr, byval offset as long, byval pRetNode as IHTMLDOMNode ptr ptr) as HRESULT
declare sub IHTMLDOMTextNode_splitText_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLDOMTextNode2_INTERFACE_DEFINED__
extern IID_IHTMLDOMTextNode2 as const IID
type IHTMLDOMTextNode2 as IHTMLDOMTextNode2_

type IHTMLDOMTextNode2Vtbl
	QueryInterface as function(byval This as IHTMLDOMTextNode2 ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLDOMTextNode2 ptr) as ULONG
	Release as function(byval This as IHTMLDOMTextNode2 ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLDOMTextNode2 ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLDOMTextNode2 ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLDOMTextNode2 ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLDOMTextNode2 ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	substringData as function(byval This as IHTMLDOMTextNode2 ptr, byval offset as long, byval Count as long, byval pbstrsubString as BSTR ptr) as HRESULT
	appendData as function(byval This as IHTMLDOMTextNode2 ptr, byval bstrstring as BSTR) as HRESULT
	insertData as function(byval This as IHTMLDOMTextNode2 ptr, byval offset as long, byval bstrstring as BSTR) as HRESULT
	deleteData as function(byval This as IHTMLDOMTextNode2 ptr, byval offset as long, byval Count as long) as HRESULT
	replaceData as function(byval This as IHTMLDOMTextNode2 ptr, byval offset as long, byval Count as long, byval bstrstring as BSTR) as HRESULT
end type

type IHTMLDOMTextNode2_
	lpVtbl as IHTMLDOMTextNode2Vtbl ptr
end type

#define IHTMLDOMTextNode2_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLDOMTextNode2_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLDOMTextNode2_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLDOMTextNode2_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLDOMTextNode2_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLDOMTextNode2_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLDOMTextNode2_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLDOMTextNode2_substringData(This, offset, Count, pbstrsubString) (This)->lpVtbl->substringData(This, offset, Count, pbstrsubString)
#define IHTMLDOMTextNode2_appendData(This, bstrstring) (This)->lpVtbl->appendData(This, bstrstring)
#define IHTMLDOMTextNode2_insertData(This, offset, bstrstring) (This)->lpVtbl->insertData(This, offset, bstrstring)
#define IHTMLDOMTextNode2_deleteData(This, offset, Count) (This)->lpVtbl->deleteData(This, offset, Count)
#define IHTMLDOMTextNode2_replaceData(This, offset, Count, bstrstring) (This)->lpVtbl->replaceData(This, offset, Count, bstrstring)

declare function IHTMLDOMTextNode2_substringData_Proxy(byval This as IHTMLDOMTextNode2 ptr, byval offset as long, byval Count as long, byval pbstrsubString as BSTR ptr) as HRESULT
declare sub IHTMLDOMTextNode2_substringData_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDOMTextNode2_appendData_Proxy(byval This as IHTMLDOMTextNode2 ptr, byval bstrstring as BSTR) as HRESULT
declare sub IHTMLDOMTextNode2_appendData_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDOMTextNode2_insertData_Proxy(byval This as IHTMLDOMTextNode2 ptr, byval offset as long, byval bstrstring as BSTR) as HRESULT
declare sub IHTMLDOMTextNode2_insertData_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDOMTextNode2_deleteData_Proxy(byval This as IHTMLDOMTextNode2 ptr, byval offset as long, byval Count as long) as HRESULT
declare sub IHTMLDOMTextNode2_deleteData_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDOMTextNode2_replaceData_Proxy(byval This as IHTMLDOMTextNode2 ptr, byval offset as long, byval Count as long, byval bstrstring as BSTR) as HRESULT
declare sub IHTMLDOMTextNode2_replaceData_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLDOMImplementation_INTERFACE_DEFINED__
extern IID_IHTMLDOMImplementation as const IID
type IHTMLDOMImplementation as IHTMLDOMImplementation_

type IHTMLDOMImplementationVtbl
	QueryInterface as function(byval This as IHTMLDOMImplementation ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLDOMImplementation ptr) as ULONG
	Release as function(byval This as IHTMLDOMImplementation ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLDOMImplementation ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLDOMImplementation ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLDOMImplementation ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLDOMImplementation ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	hasFeature as function(byval This as IHTMLDOMImplementation ptr, byval bstrfeature as BSTR, byval version as VARIANT, byval pfHasFeature as VARIANT_BOOL ptr) as HRESULT
end type

type IHTMLDOMImplementation_
	lpVtbl as IHTMLDOMImplementationVtbl ptr
end type

#define IHTMLDOMImplementation_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLDOMImplementation_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLDOMImplementation_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLDOMImplementation_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLDOMImplementation_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLDOMImplementation_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLDOMImplementation_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLDOMImplementation_hasFeature(This, bstrfeature, version, pfHasFeature) (This)->lpVtbl->hasFeature(This, bstrfeature, version, pfHasFeature)
declare function IHTMLDOMImplementation_hasFeature_Proxy(byval This as IHTMLDOMImplementation ptr, byval bstrfeature as BSTR, byval version as VARIANT, byval pfHasFeature as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLDOMImplementation_hasFeature_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __DispHTMLDOMAttribute_DISPINTERFACE_DEFINED__
extern DIID_DispHTMLDOMAttribute as const IID
type DispHTMLDOMAttribute as DispHTMLDOMAttribute_

type DispHTMLDOMAttributeVtbl
	QueryInterface as function(byval This as DispHTMLDOMAttribute ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as DispHTMLDOMAttribute ptr) as ULONG
	Release as function(byval This as DispHTMLDOMAttribute ptr) as ULONG
	GetTypeInfoCount as function(byval This as DispHTMLDOMAttribute ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as DispHTMLDOMAttribute ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as DispHTMLDOMAttribute ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as DispHTMLDOMAttribute ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type DispHTMLDOMAttribute_
	lpVtbl as DispHTMLDOMAttributeVtbl ptr
end type

#define DispHTMLDOMAttribute_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define DispHTMLDOMAttribute_AddRef(This) (This)->lpVtbl->AddRef(This)
#define DispHTMLDOMAttribute_Release(This) (This)->lpVtbl->Release(This)
#define DispHTMLDOMAttribute_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define DispHTMLDOMAttribute_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define DispHTMLDOMAttribute_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define DispHTMLDOMAttribute_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
extern CLSID_HTMLDOMAttribute as const CLSID
#define __DispHTMLDOMTextNode_DISPINTERFACE_DEFINED__
extern DIID_DispHTMLDOMTextNode as const IID
type DispHTMLDOMTextNode as DispHTMLDOMTextNode_

type DispHTMLDOMTextNodeVtbl
	QueryInterface as function(byval This as DispHTMLDOMTextNode ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as DispHTMLDOMTextNode ptr) as ULONG
	Release as function(byval This as DispHTMLDOMTextNode ptr) as ULONG
	GetTypeInfoCount as function(byval This as DispHTMLDOMTextNode ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as DispHTMLDOMTextNode ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as DispHTMLDOMTextNode ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as DispHTMLDOMTextNode ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type DispHTMLDOMTextNode_
	lpVtbl as DispHTMLDOMTextNodeVtbl ptr
end type

#define DispHTMLDOMTextNode_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define DispHTMLDOMTextNode_AddRef(This) (This)->lpVtbl->AddRef(This)
#define DispHTMLDOMTextNode_Release(This) (This)->lpVtbl->Release(This)
#define DispHTMLDOMTextNode_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define DispHTMLDOMTextNode_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define DispHTMLDOMTextNode_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define DispHTMLDOMTextNode_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
extern CLSID_HTMLDOMTextNode as const CLSID
#define __DispHTMLDOMImplementation_DISPINTERFACE_DEFINED__
extern DIID_DispHTMLDOMImplementation as const IID
type DispHTMLDOMImplementation as DispHTMLDOMImplementation_

type DispHTMLDOMImplementationVtbl
	QueryInterface as function(byval This as DispHTMLDOMImplementation ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as DispHTMLDOMImplementation ptr) as ULONG
	Release as function(byval This as DispHTMLDOMImplementation ptr) as ULONG
	GetTypeInfoCount as function(byval This as DispHTMLDOMImplementation ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as DispHTMLDOMImplementation ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as DispHTMLDOMImplementation ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as DispHTMLDOMImplementation ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type DispHTMLDOMImplementation_
	lpVtbl as DispHTMLDOMImplementationVtbl ptr
end type

#define DispHTMLDOMImplementation_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define DispHTMLDOMImplementation_AddRef(This) (This)->lpVtbl->AddRef(This)
#define DispHTMLDOMImplementation_Release(This) (This)->lpVtbl->Release(This)
#define DispHTMLDOMImplementation_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define DispHTMLDOMImplementation_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define DispHTMLDOMImplementation_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define DispHTMLDOMImplementation_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
extern CLSID_HTMLDOMImplementation as const CLSID
#define __IHTMLAttributeCollection_INTERFACE_DEFINED__
extern IID_IHTMLAttributeCollection as const IID
type IHTMLAttributeCollection as IHTMLAttributeCollection_

type IHTMLAttributeCollectionVtbl
	QueryInterface as function(byval This as IHTMLAttributeCollection ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLAttributeCollection ptr) as ULONG
	Release as function(byval This as IHTMLAttributeCollection ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLAttributeCollection ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLAttributeCollection ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLAttributeCollection ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLAttributeCollection ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	get_length as function(byval This as IHTMLAttributeCollection ptr, byval p as long ptr) as HRESULT
	get__newEnum as function(byval This as IHTMLAttributeCollection ptr, byval p as IUnknown ptr ptr) as HRESULT
	item as function(byval This as IHTMLAttributeCollection ptr, byval name as VARIANT ptr, byval pdisp as IDispatch ptr ptr) as HRESULT
end type

type IHTMLAttributeCollection_
	lpVtbl as IHTMLAttributeCollectionVtbl ptr
end type

#define IHTMLAttributeCollection_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLAttributeCollection_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLAttributeCollection_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLAttributeCollection_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLAttributeCollection_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLAttributeCollection_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLAttributeCollection_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLAttributeCollection_get_length(This, p) (This)->lpVtbl->get_length(This, p)
#define IHTMLAttributeCollection_get__newEnum(This, p) (This)->lpVtbl->get__newEnum(This, p)
#define IHTMLAttributeCollection_item(This, name, pdisp) (This)->lpVtbl->item(This, name, pdisp)

declare function IHTMLAttributeCollection_get_length_Proxy(byval This as IHTMLAttributeCollection ptr, byval p as long ptr) as HRESULT
declare sub IHTMLAttributeCollection_get_length_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLAttributeCollection_get__newEnum_Proxy(byval This as IHTMLAttributeCollection ptr, byval p as IUnknown ptr ptr) as HRESULT
declare sub IHTMLAttributeCollection_get__newEnum_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLAttributeCollection_item_Proxy(byval This as IHTMLAttributeCollection ptr, byval name as VARIANT ptr, byval pdisp as IDispatch ptr ptr) as HRESULT
declare sub IHTMLAttributeCollection_item_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLAttributeCollection2_INTERFACE_DEFINED__
extern IID_IHTMLAttributeCollection2 as const IID
type IHTMLAttributeCollection2 as IHTMLAttributeCollection2_

type IHTMLAttributeCollection2Vtbl
	QueryInterface as function(byval This as IHTMLAttributeCollection2 ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLAttributeCollection2 ptr) as ULONG
	Release as function(byval This as IHTMLAttributeCollection2 ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLAttributeCollection2 ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLAttributeCollection2 ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLAttributeCollection2 ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLAttributeCollection2 ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	getNamedItem as function(byval This as IHTMLAttributeCollection2 ptr, byval bstrName as BSTR, byval newretNode as IHTMLDOMAttribute ptr ptr) as HRESULT
	setNamedItem as function(byval This as IHTMLAttributeCollection2 ptr, byval ppNode as IHTMLDOMAttribute ptr, byval newretNode as IHTMLDOMAttribute ptr ptr) as HRESULT
	removeNamedItem as function(byval This as IHTMLAttributeCollection2 ptr, byval bstrName as BSTR, byval newretNode as IHTMLDOMAttribute ptr ptr) as HRESULT
end type

type IHTMLAttributeCollection2_
	lpVtbl as IHTMLAttributeCollection2Vtbl ptr
end type

#define IHTMLAttributeCollection2_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLAttributeCollection2_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLAttributeCollection2_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLAttributeCollection2_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLAttributeCollection2_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLAttributeCollection2_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLAttributeCollection2_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLAttributeCollection2_getNamedItem(This, bstrName, newretNode) (This)->lpVtbl->getNamedItem(This, bstrName, newretNode)
#define IHTMLAttributeCollection2_setNamedItem(This, ppNode, newretNode) (This)->lpVtbl->setNamedItem(This, ppNode, newretNode)
#define IHTMLAttributeCollection2_removeNamedItem(This, bstrName, newretNode) (This)->lpVtbl->removeNamedItem(This, bstrName, newretNode)

declare function IHTMLAttributeCollection2_getNamedItem_Proxy(byval This as IHTMLAttributeCollection2 ptr, byval bstrName as BSTR, byval newretNode as IHTMLDOMAttribute ptr ptr) as HRESULT
declare sub IHTMLAttributeCollection2_getNamedItem_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLAttributeCollection2_setNamedItem_Proxy(byval This as IHTMLAttributeCollection2 ptr, byval ppNode as IHTMLDOMAttribute ptr, byval newretNode as IHTMLDOMAttribute ptr ptr) as HRESULT
declare sub IHTMLAttributeCollection2_setNamedItem_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLAttributeCollection2_removeNamedItem_Proxy(byval This as IHTMLAttributeCollection2 ptr, byval bstrName as BSTR, byval newretNode as IHTMLDOMAttribute ptr ptr) as HRESULT
declare sub IHTMLAttributeCollection2_removeNamedItem_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLDOMChildrenCollection_INTERFACE_DEFINED__
extern IID_IHTMLDOMChildrenCollection as const IID
type IHTMLDOMChildrenCollection as IHTMLDOMChildrenCollection_

type IHTMLDOMChildrenCollectionVtbl
	QueryInterface as function(byval This as IHTMLDOMChildrenCollection ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLDOMChildrenCollection ptr) as ULONG
	Release as function(byval This as IHTMLDOMChildrenCollection ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLDOMChildrenCollection ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLDOMChildrenCollection ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLDOMChildrenCollection ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLDOMChildrenCollection ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	get_length as function(byval This as IHTMLDOMChildrenCollection ptr, byval p as long ptr) as HRESULT
	get__newEnum as function(byval This as IHTMLDOMChildrenCollection ptr, byval p as IUnknown ptr ptr) as HRESULT
	item as function(byval This as IHTMLDOMChildrenCollection ptr, byval index as long, byval ppItem as IDispatch ptr ptr) as HRESULT
end type

type IHTMLDOMChildrenCollection_
	lpVtbl as IHTMLDOMChildrenCollectionVtbl ptr
end type

#define IHTMLDOMChildrenCollection_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLDOMChildrenCollection_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLDOMChildrenCollection_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLDOMChildrenCollection_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLDOMChildrenCollection_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLDOMChildrenCollection_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLDOMChildrenCollection_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLDOMChildrenCollection_get_length(This, p) (This)->lpVtbl->get_length(This, p)
#define IHTMLDOMChildrenCollection_get__newEnum(This, p) (This)->lpVtbl->get__newEnum(This, p)
#define IHTMLDOMChildrenCollection_item(This, index, ppItem) (This)->lpVtbl->item(This, index, ppItem)

declare function IHTMLDOMChildrenCollection_get_length_Proxy(byval This as IHTMLDOMChildrenCollection ptr, byval p as long ptr) as HRESULT
declare sub IHTMLDOMChildrenCollection_get_length_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDOMChildrenCollection_get__newEnum_Proxy(byval This as IHTMLDOMChildrenCollection ptr, byval p as IUnknown ptr ptr) as HRESULT
declare sub IHTMLDOMChildrenCollection_get__newEnum_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDOMChildrenCollection_item_Proxy(byval This as IHTMLDOMChildrenCollection ptr, byval index as long, byval ppItem as IDispatch ptr ptr) as HRESULT
declare sub IHTMLDOMChildrenCollection_item_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __DispHTMLAttributeCollection_DISPINTERFACE_DEFINED__
extern DIID_DispHTMLAttributeCollection as const IID
type DispHTMLAttributeCollection as DispHTMLAttributeCollection_

type DispHTMLAttributeCollectionVtbl
	QueryInterface as function(byval This as DispHTMLAttributeCollection ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as DispHTMLAttributeCollection ptr) as ULONG
	Release as function(byval This as DispHTMLAttributeCollection ptr) as ULONG
	GetTypeInfoCount as function(byval This as DispHTMLAttributeCollection ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as DispHTMLAttributeCollection ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as DispHTMLAttributeCollection ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as DispHTMLAttributeCollection ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type DispHTMLAttributeCollection_
	lpVtbl as DispHTMLAttributeCollectionVtbl ptr
end type

#define DispHTMLAttributeCollection_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define DispHTMLAttributeCollection_AddRef(This) (This)->lpVtbl->AddRef(This)
#define DispHTMLAttributeCollection_Release(This) (This)->lpVtbl->Release(This)
#define DispHTMLAttributeCollection_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define DispHTMLAttributeCollection_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define DispHTMLAttributeCollection_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define DispHTMLAttributeCollection_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
extern CLSID_HTMLAttributeCollection as const CLSID
#define __DispDOMChildrenCollection_DISPINTERFACE_DEFINED__
extern DIID_DispDOMChildrenCollection as const IID
type DispDOMChildrenCollection as DispDOMChildrenCollection_

type DispDOMChildrenCollectionVtbl
	QueryInterface as function(byval This as DispDOMChildrenCollection ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as DispDOMChildrenCollection ptr) as ULONG
	Release as function(byval This as DispDOMChildrenCollection ptr) as ULONG
	GetTypeInfoCount as function(byval This as DispDOMChildrenCollection ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as DispDOMChildrenCollection ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as DispDOMChildrenCollection ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as DispDOMChildrenCollection ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type DispDOMChildrenCollection_
	lpVtbl as DispDOMChildrenCollectionVtbl ptr
end type

#define DispDOMChildrenCollection_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define DispDOMChildrenCollection_AddRef(This) (This)->lpVtbl->AddRef(This)
#define DispDOMChildrenCollection_Release(This) (This)->lpVtbl->Release(This)
#define DispDOMChildrenCollection_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define DispDOMChildrenCollection_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define DispDOMChildrenCollection_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define DispDOMChildrenCollection_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
extern CLSID_DOMChildrenCollection as const CLSID
#define __HTMLElementEvents2_DISPINTERFACE_DEFINED__
extern DIID_HTMLElementEvents2 as const IID
type HTMLElementEvents2 as HTMLElementEvents2_

type HTMLElementEvents2Vtbl
	QueryInterface as function(byval This as HTMLElementEvents2 ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as HTMLElementEvents2 ptr) as ULONG
	Release as function(byval This as HTMLElementEvents2 ptr) as ULONG
	GetTypeInfoCount as function(byval This as HTMLElementEvents2 ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as HTMLElementEvents2 ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as HTMLElementEvents2 ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as HTMLElementEvents2 ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type HTMLElementEvents2_
	lpVtbl as HTMLElementEvents2Vtbl ptr
end type

#define HTMLElementEvents2_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define HTMLElementEvents2_AddRef(This) (This)->lpVtbl->AddRef(This)
#define HTMLElementEvents2_Release(This) (This)->lpVtbl->Release(This)
#define HTMLElementEvents2_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define HTMLElementEvents2_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define HTMLElementEvents2_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define HTMLElementEvents2_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define __HTMLElementEvents_DISPINTERFACE_DEFINED__
extern DIID_HTMLElementEvents as const IID
type HTMLElementEvents as HTMLElementEvents_

type HTMLElementEventsVtbl
	QueryInterface as function(byval This as HTMLElementEvents ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as HTMLElementEvents ptr) as ULONG
	Release as function(byval This as HTMLElementEvents ptr) as ULONG
	GetTypeInfoCount as function(byval This as HTMLElementEvents ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as HTMLElementEvents ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as HTMLElementEvents ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as HTMLElementEvents ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type HTMLElementEvents_
	lpVtbl as HTMLElementEventsVtbl ptr
end type

#define HTMLElementEvents_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define HTMLElementEvents_AddRef(This) (This)->lpVtbl->AddRef(This)
#define HTMLElementEvents_Release(This) (This)->lpVtbl->Release(This)
#define HTMLElementEvents_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define HTMLElementEvents_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define HTMLElementEvents_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define HTMLElementEvents_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define __IHTMLElementCollection_INTERFACE_DEFINED__
extern IID_IHTMLElementCollection as const IID
type IHTMLElementCollection as IHTMLElementCollection_

type IHTMLElementCollectionVtbl
	QueryInterface as function(byval This as IHTMLElementCollection ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLElementCollection ptr) as ULONG
	Release as function(byval This as IHTMLElementCollection ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLElementCollection ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLElementCollection ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLElementCollection ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLElementCollection ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	toString as function(byval This as IHTMLElementCollection ptr, byval String as BSTR ptr) as HRESULT
	put_length as function(byval This as IHTMLElementCollection ptr, byval v as long) as HRESULT
	get_length as function(byval This as IHTMLElementCollection ptr, byval p as long ptr) as HRESULT
	get__newEnum as function(byval This as IHTMLElementCollection ptr, byval p as IUnknown ptr ptr) as HRESULT
	item as function(byval This as IHTMLElementCollection ptr, byval name as VARIANT, byval index as VARIANT, byval pdisp as IDispatch ptr ptr) as HRESULT
	tags as function(byval This as IHTMLElementCollection ptr, byval tagName as VARIANT, byval pdisp as IDispatch ptr ptr) as HRESULT
end type

type IHTMLElementCollection_
	lpVtbl as IHTMLElementCollectionVtbl ptr
end type

#define IHTMLElementCollection_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLElementCollection_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLElementCollection_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLElementCollection_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLElementCollection_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLElementCollection_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLElementCollection_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLElementCollection_toString(This, String) (This)->lpVtbl->toString(This, String)
#define IHTMLElementCollection_put_length(This, v) (This)->lpVtbl->put_length(This, v)
#define IHTMLElementCollection_get_length(This, p) (This)->lpVtbl->get_length(This, p)
#define IHTMLElementCollection_get__newEnum(This, p) (This)->lpVtbl->get__newEnum(This, p)
#define IHTMLElementCollection_item(This, name, index, pdisp) (This)->lpVtbl->item(This, name, index, pdisp)
#define IHTMLElementCollection_tags(This, tagName, pdisp) (This)->lpVtbl->tags(This, tagName, pdisp)

declare function IHTMLElementCollection_toString_Proxy(byval This as IHTMLElementCollection ptr, byval String as BSTR ptr) as HRESULT
declare sub IHTMLElementCollection_toString_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElementCollection_put_length_Proxy(byval This as IHTMLElementCollection ptr, byval v as long) as HRESULT
declare sub IHTMLElementCollection_put_length_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElementCollection_get_length_Proxy(byval This as IHTMLElementCollection ptr, byval p as long ptr) as HRESULT
declare sub IHTMLElementCollection_get_length_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElementCollection_get__newEnum_Proxy(byval This as IHTMLElementCollection ptr, byval p as IUnknown ptr ptr) as HRESULT
declare sub IHTMLElementCollection_get__newEnum_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElementCollection_item_Proxy(byval This as IHTMLElementCollection ptr, byval name as VARIANT, byval index as VARIANT, byval pdisp as IDispatch ptr ptr) as HRESULT
declare sub IHTMLElementCollection_item_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElementCollection_tags_Proxy(byval This as IHTMLElementCollection ptr, byval tagName as VARIANT, byval pdisp as IDispatch ptr ptr) as HRESULT
declare sub IHTMLElementCollection_tags_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLElement2_INTERFACE_DEFINED__
extern IID_IHTMLElement2 as const IID
type IHTMLElement2 as IHTMLElement2_

type IHTMLElement2Vtbl
	QueryInterface as function(byval This as IHTMLElement2 ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLElement2 ptr) as ULONG
	Release as function(byval This as IHTMLElement2 ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLElement2 ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLElement2 ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLElement2 ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLElement2 ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	get_scopeName as function(byval This as IHTMLElement2 ptr, byval p as BSTR ptr) as HRESULT
	setCapture as function(byval This as IHTMLElement2 ptr, byval containerCapture as VARIANT_BOOL) as HRESULT
	releaseCapture as function(byval This as IHTMLElement2 ptr) as HRESULT
	put_onlosecapture as function(byval This as IHTMLElement2 ptr, byval v as VARIANT) as HRESULT
	get_onlosecapture as function(byval This as IHTMLElement2 ptr, byval p as VARIANT ptr) as HRESULT
	componentFromPoint as function(byval This as IHTMLElement2 ptr, byval x as long, byval y as long, byval component as BSTR ptr) as HRESULT
	doScroll as function(byval This as IHTMLElement2 ptr, byval component as VARIANT) as HRESULT
	put_onscroll as function(byval This as IHTMLElement2 ptr, byval v as VARIANT) as HRESULT
	get_onscroll as function(byval This as IHTMLElement2 ptr, byval p as VARIANT ptr) as HRESULT
	put_ondrag as function(byval This as IHTMLElement2 ptr, byval v as VARIANT) as HRESULT
	get_ondrag as function(byval This as IHTMLElement2 ptr, byval p as VARIANT ptr) as HRESULT
	put_ondragend as function(byval This as IHTMLElement2 ptr, byval v as VARIANT) as HRESULT
	get_ondragend as function(byval This as IHTMLElement2 ptr, byval p as VARIANT ptr) as HRESULT
	put_ondragenter as function(byval This as IHTMLElement2 ptr, byval v as VARIANT) as HRESULT
	get_ondragenter as function(byval This as IHTMLElement2 ptr, byval p as VARIANT ptr) as HRESULT
	put_ondragover as function(byval This as IHTMLElement2 ptr, byval v as VARIANT) as HRESULT
	get_ondragover as function(byval This as IHTMLElement2 ptr, byval p as VARIANT ptr) as HRESULT
	put_ondragleave as function(byval This as IHTMLElement2 ptr, byval v as VARIANT) as HRESULT
	get_ondragleave as function(byval This as IHTMLElement2 ptr, byval p as VARIANT ptr) as HRESULT
	put_ondrop as function(byval This as IHTMLElement2 ptr, byval v as VARIANT) as HRESULT
	get_ondrop as function(byval This as IHTMLElement2 ptr, byval p as VARIANT ptr) as HRESULT
	put_onbeforecut as function(byval This as IHTMLElement2 ptr, byval v as VARIANT) as HRESULT
	get_onbeforecut as function(byval This as IHTMLElement2 ptr, byval p as VARIANT ptr) as HRESULT
	put_oncut as function(byval This as IHTMLElement2 ptr, byval v as VARIANT) as HRESULT
	get_oncut as function(byval This as IHTMLElement2 ptr, byval p as VARIANT ptr) as HRESULT
	put_onbeforecopy as function(byval This as IHTMLElement2 ptr, byval v as VARIANT) as HRESULT
	get_onbeforecopy as function(byval This as IHTMLElement2 ptr, byval p as VARIANT ptr) as HRESULT
	put_oncopy as function(byval This as IHTMLElement2 ptr, byval v as VARIANT) as HRESULT
	get_oncopy as function(byval This as IHTMLElement2 ptr, byval p as VARIANT ptr) as HRESULT
	put_onbeforepaste as function(byval This as IHTMLElement2 ptr, byval v as VARIANT) as HRESULT
	get_onbeforepaste as function(byval This as IHTMLElement2 ptr, byval p as VARIANT ptr) as HRESULT
	put_onpaste as function(byval This as IHTMLElement2 ptr, byval v as VARIANT) as HRESULT
	get_onpaste as function(byval This as IHTMLElement2 ptr, byval p as VARIANT ptr) as HRESULT
	get_currentStyle as function(byval This as IHTMLElement2 ptr, byval p as IHTMLCurrentStyle ptr ptr) as HRESULT
	put_onpropertychange as function(byval This as IHTMLElement2 ptr, byval v as VARIANT) as HRESULT
	get_onpropertychange as function(byval This as IHTMLElement2 ptr, byval p as VARIANT ptr) as HRESULT
	getClientRects as function(byval This as IHTMLElement2 ptr, byval pRectCol as IHTMLRectCollection ptr ptr) as HRESULT
	getBoundingClientRect as function(byval This as IHTMLElement2 ptr, byval pRect as IHTMLRect ptr ptr) as HRESULT
	setExpression as function(byval This as IHTMLElement2 ptr, byval propname as BSTR, byval expression as BSTR, byval language as BSTR) as HRESULT
	getExpression as function(byval This as IHTMLElement2 ptr, byval propname as BSTR, byval expression as VARIANT ptr) as HRESULT
	removeExpression as function(byval This as IHTMLElement2 ptr, byval propname as BSTR, byval pfSuccess as VARIANT_BOOL ptr) as HRESULT
	put_tabIndex as function(byval This as IHTMLElement2 ptr, byval v as short) as HRESULT
	get_tabIndex as function(byval This as IHTMLElement2 ptr, byval p as short ptr) as HRESULT
	focus as function(byval This as IHTMLElement2 ptr) as HRESULT
	put_accessKey as function(byval This as IHTMLElement2 ptr, byval v as BSTR) as HRESULT
	get_accessKey as function(byval This as IHTMLElement2 ptr, byval p as BSTR ptr) as HRESULT
	put_onblur as function(byval This as IHTMLElement2 ptr, byval v as VARIANT) as HRESULT
	get_onblur as function(byval This as IHTMLElement2 ptr, byval p as VARIANT ptr) as HRESULT
	put_onfocus as function(byval This as IHTMLElement2 ptr, byval v as VARIANT) as HRESULT
	get_onfocus as function(byval This as IHTMLElement2 ptr, byval p as VARIANT ptr) as HRESULT
	put_onresize as function(byval This as IHTMLElement2 ptr, byval v as VARIANT) as HRESULT
	get_onresize as function(byval This as IHTMLElement2 ptr, byval p as VARIANT ptr) as HRESULT
	blur as function(byval This as IHTMLElement2 ptr) as HRESULT
	addFilter as function(byval This as IHTMLElement2 ptr, byval pUnk as IUnknown ptr) as HRESULT
	removeFilter as function(byval This as IHTMLElement2 ptr, byval pUnk as IUnknown ptr) as HRESULT
	get_clientHeight as function(byval This as IHTMLElement2 ptr, byval p as long ptr) as HRESULT
	get_clientWidth as function(byval This as IHTMLElement2 ptr, byval p as long ptr) as HRESULT
	get_clientTop as function(byval This as IHTMLElement2 ptr, byval p as long ptr) as HRESULT
	get_clientLeft as function(byval This as IHTMLElement2 ptr, byval p as long ptr) as HRESULT
	attachEvent as function(byval This as IHTMLElement2 ptr, byval event as BSTR, byval pDisp as IDispatch ptr, byval pfResult as VARIANT_BOOL ptr) as HRESULT
	detachEvent as function(byval This as IHTMLElement2 ptr, byval event as BSTR, byval pDisp as IDispatch ptr) as HRESULT
	get_readyState as function(byval This as IHTMLElement2 ptr, byval p as VARIANT ptr) as HRESULT
	put_onreadystatechange as function(byval This as IHTMLElement2 ptr, byval v as VARIANT) as HRESULT
	get_onreadystatechange as function(byval This as IHTMLElement2 ptr, byval p as VARIANT ptr) as HRESULT
	put_onrowsdelete as function(byval This as IHTMLElement2 ptr, byval v as VARIANT) as HRESULT
	get_onrowsdelete as function(byval This as IHTMLElement2 ptr, byval p as VARIANT ptr) as HRESULT
	put_onrowsinserted as function(byval This as IHTMLElement2 ptr, byval v as VARIANT) as HRESULT
	get_onrowsinserted as function(byval This as IHTMLElement2 ptr, byval p as VARIANT ptr) as HRESULT
	put_oncellchange as function(byval This as IHTMLElement2 ptr, byval v as VARIANT) as HRESULT
	get_oncellchange as function(byval This as IHTMLElement2 ptr, byval p as VARIANT ptr) as HRESULT
	put_dir as function(byval This as IHTMLElement2 ptr, byval v as BSTR) as HRESULT
	get_dir as function(byval This as IHTMLElement2 ptr, byval p as BSTR ptr) as HRESULT
	createControlRange as function(byval This as IHTMLElement2 ptr, byval range as IDispatch ptr ptr) as HRESULT
	get_scrollHeight as function(byval This as IHTMLElement2 ptr, byval p as long ptr) as HRESULT
	get_scrollWidth as function(byval This as IHTMLElement2 ptr, byval p as long ptr) as HRESULT
	put_scrollTop as function(byval This as IHTMLElement2 ptr, byval v as long) as HRESULT
	get_scrollTop as function(byval This as IHTMLElement2 ptr, byval p as long ptr) as HRESULT
	put_scrollLeft as function(byval This as IHTMLElement2 ptr, byval v as long) as HRESULT
	get_scrollLeft as function(byval This as IHTMLElement2 ptr, byval p as long ptr) as HRESULT
	clearAttributes as function(byval This as IHTMLElement2 ptr) as HRESULT
	mergeAttributes as function(byval This as IHTMLElement2 ptr, byval mergeThis as IHTMLElement ptr) as HRESULT
	put_oncontextmenu as function(byval This as IHTMLElement2 ptr, byval v as VARIANT) as HRESULT
	get_oncontextmenu as function(byval This as IHTMLElement2 ptr, byval p as VARIANT ptr) as HRESULT
	insertAdjacentElement as function(byval This as IHTMLElement2 ptr, byval where as BSTR, byval insertedElement as IHTMLElement ptr, byval inserted as IHTMLElement ptr ptr) as HRESULT
	applyElement as function(byval This as IHTMLElement2 ptr, byval apply as IHTMLElement ptr, byval where as BSTR, byval applied as IHTMLElement ptr ptr) as HRESULT
	getAdjacentText as function(byval This as IHTMLElement2 ptr, byval where as BSTR, byval text as BSTR ptr) as HRESULT
	replaceAdjacentText as function(byval This as IHTMLElement2 ptr, byval where as BSTR, byval newText as BSTR, byval oldText as BSTR ptr) as HRESULT
	get_canHaveChildren as function(byval This as IHTMLElement2 ptr, byval p as VARIANT_BOOL ptr) as HRESULT
	addBehavior as function(byval This as IHTMLElement2 ptr, byval bstrUrl as BSTR, byval pvarFactory as VARIANT ptr, byval pCookie as long ptr) as HRESULT
	removeBehavior as function(byval This as IHTMLElement2 ptr, byval cookie as long, byval pfResult as VARIANT_BOOL ptr) as HRESULT
	get_runtimeStyle as function(byval This as IHTMLElement2 ptr, byval p as IHTMLStyle ptr ptr) as HRESULT
	get_behaviorUrns as function(byval This as IHTMLElement2 ptr, byval p as IDispatch ptr ptr) as HRESULT
	put_tagUrn as function(byval This as IHTMLElement2 ptr, byval v as BSTR) as HRESULT
	get_tagUrn as function(byval This as IHTMLElement2 ptr, byval p as BSTR ptr) as HRESULT
	put_onbeforeeditfocus as function(byval This as IHTMLElement2 ptr, byval v as VARIANT) as HRESULT
	get_onbeforeeditfocus as function(byval This as IHTMLElement2 ptr, byval p as VARIANT ptr) as HRESULT
	get_readyStateValue as function(byval This as IHTMLElement2 ptr, byval p as long ptr) as HRESULT
	getElementsByTagName as function(byval This as IHTMLElement2 ptr, byval v as BSTR, byval pelColl as IHTMLElementCollection ptr ptr) as HRESULT
end type

type IHTMLElement2_
	lpVtbl as IHTMLElement2Vtbl ptr
end type

#define IHTMLElement2_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLElement2_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLElement2_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLElement2_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLElement2_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLElement2_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLElement2_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLElement2_get_scopeName(This, p) (This)->lpVtbl->get_scopeName(This, p)
#define IHTMLElement2_setCapture(This, containerCapture) (This)->lpVtbl->setCapture(This, containerCapture)
#define IHTMLElement2_releaseCapture(This) (This)->lpVtbl->releaseCapture(This)
#define IHTMLElement2_put_onlosecapture(This, v) (This)->lpVtbl->put_onlosecapture(This, v)
#define IHTMLElement2_get_onlosecapture(This, p) (This)->lpVtbl->get_onlosecapture(This, p)
#define IHTMLElement2_componentFromPoint(This, x, y, component) (This)->lpVtbl->componentFromPoint(This, x, y, component)
#define IHTMLElement2_doScroll(This, component) (This)->lpVtbl->doScroll(This, component)
#define IHTMLElement2_put_onscroll(This, v) (This)->lpVtbl->put_onscroll(This, v)
#define IHTMLElement2_get_onscroll(This, p) (This)->lpVtbl->get_onscroll(This, p)
#define IHTMLElement2_put_ondrag(This, v) (This)->lpVtbl->put_ondrag(This, v)
#define IHTMLElement2_get_ondrag(This, p) (This)->lpVtbl->get_ondrag(This, p)
#define IHTMLElement2_put_ondragend(This, v) (This)->lpVtbl->put_ondragend(This, v)
#define IHTMLElement2_get_ondragend(This, p) (This)->lpVtbl->get_ondragend(This, p)
#define IHTMLElement2_put_ondragenter(This, v) (This)->lpVtbl->put_ondragenter(This, v)
#define IHTMLElement2_get_ondragenter(This, p) (This)->lpVtbl->get_ondragenter(This, p)
#define IHTMLElement2_put_ondragover(This, v) (This)->lpVtbl->put_ondragover(This, v)
#define IHTMLElement2_get_ondragover(This, p) (This)->lpVtbl->get_ondragover(This, p)
#define IHTMLElement2_put_ondragleave(This, v) (This)->lpVtbl->put_ondragleave(This, v)
#define IHTMLElement2_get_ondragleave(This, p) (This)->lpVtbl->get_ondragleave(This, p)
#define IHTMLElement2_put_ondrop(This, v) (This)->lpVtbl->put_ondrop(This, v)
#define IHTMLElement2_get_ondrop(This, p) (This)->lpVtbl->get_ondrop(This, p)
#define IHTMLElement2_put_onbeforecut(This, v) (This)->lpVtbl->put_onbeforecut(This, v)
#define IHTMLElement2_get_onbeforecut(This, p) (This)->lpVtbl->get_onbeforecut(This, p)
#define IHTMLElement2_put_oncut(This, v) (This)->lpVtbl->put_oncut(This, v)
#define IHTMLElement2_get_oncut(This, p) (This)->lpVtbl->get_oncut(This, p)
#define IHTMLElement2_put_onbeforecopy(This, v) (This)->lpVtbl->put_onbeforecopy(This, v)
#define IHTMLElement2_get_onbeforecopy(This, p) (This)->lpVtbl->get_onbeforecopy(This, p)
#define IHTMLElement2_put_oncopy(This, v) (This)->lpVtbl->put_oncopy(This, v)
#define IHTMLElement2_get_oncopy(This, p) (This)->lpVtbl->get_oncopy(This, p)
#define IHTMLElement2_put_onbeforepaste(This, v) (This)->lpVtbl->put_onbeforepaste(This, v)
#define IHTMLElement2_get_onbeforepaste(This, p) (This)->lpVtbl->get_onbeforepaste(This, p)
#define IHTMLElement2_put_onpaste(This, v) (This)->lpVtbl->put_onpaste(This, v)
#define IHTMLElement2_get_onpaste(This, p) (This)->lpVtbl->get_onpaste(This, p)
#define IHTMLElement2_get_currentStyle(This, p) (This)->lpVtbl->get_currentStyle(This, p)
#define IHTMLElement2_put_onpropertychange(This, v) (This)->lpVtbl->put_onpropertychange(This, v)
#define IHTMLElement2_get_onpropertychange(This, p) (This)->lpVtbl->get_onpropertychange(This, p)
#define IHTMLElement2_getClientRects(This, pRectCol) (This)->lpVtbl->getClientRects(This, pRectCol)
#define IHTMLElement2_getBoundingClientRect(This, pRect) (This)->lpVtbl->getBoundingClientRect(This, pRect)
#define IHTMLElement2_setExpression(This, propname, expression, language) (This)->lpVtbl->setExpression(This, propname, expression, language)
#define IHTMLElement2_getExpression(This, propname, expression) (This)->lpVtbl->getExpression(This, propname, expression)
#define IHTMLElement2_removeExpression(This, propname, pfSuccess) (This)->lpVtbl->removeExpression(This, propname, pfSuccess)
#define IHTMLElement2_put_tabIndex(This, v) (This)->lpVtbl->put_tabIndex(This, v)
#define IHTMLElement2_get_tabIndex(This, p) (This)->lpVtbl->get_tabIndex(This, p)
#define IHTMLElement2_focus(This) (This)->lpVtbl->focus(This)
#define IHTMLElement2_put_accessKey(This, v) (This)->lpVtbl->put_accessKey(This, v)
#define IHTMLElement2_get_accessKey(This, p) (This)->lpVtbl->get_accessKey(This, p)
#define IHTMLElement2_put_onblur(This, v) (This)->lpVtbl->put_onblur(This, v)
#define IHTMLElement2_get_onblur(This, p) (This)->lpVtbl->get_onblur(This, p)
#define IHTMLElement2_put_onfocus(This, v) (This)->lpVtbl->put_onfocus(This, v)
#define IHTMLElement2_get_onfocus(This, p) (This)->lpVtbl->get_onfocus(This, p)
#define IHTMLElement2_put_onresize(This, v) (This)->lpVtbl->put_onresize(This, v)
#define IHTMLElement2_get_onresize(This, p) (This)->lpVtbl->get_onresize(This, p)
#define IHTMLElement2_blur(This) (This)->lpVtbl->blur(This)
#define IHTMLElement2_addFilter(This, pUnk) (This)->lpVtbl->addFilter(This, pUnk)
#define IHTMLElement2_removeFilter(This, pUnk) (This)->lpVtbl->removeFilter(This, pUnk)
#define IHTMLElement2_get_clientHeight(This, p) (This)->lpVtbl->get_clientHeight(This, p)
#define IHTMLElement2_get_clientWidth(This, p) (This)->lpVtbl->get_clientWidth(This, p)
#define IHTMLElement2_get_clientTop(This, p) (This)->lpVtbl->get_clientTop(This, p)
#define IHTMLElement2_get_clientLeft(This, p) (This)->lpVtbl->get_clientLeft(This, p)
#define IHTMLElement2_attachEvent(This, event, pDisp, pfResult) (This)->lpVtbl->attachEvent(This, event, pDisp, pfResult)
#define IHTMLElement2_detachEvent(This, event, pDisp) (This)->lpVtbl->detachEvent(This, event, pDisp)
#define IHTMLElement2_get_readyState(This, p) (This)->lpVtbl->get_readyState(This, p)
#define IHTMLElement2_put_onreadystatechange(This, v) (This)->lpVtbl->put_onreadystatechange(This, v)
#define IHTMLElement2_get_onreadystatechange(This, p) (This)->lpVtbl->get_onreadystatechange(This, p)
#define IHTMLElement2_put_onrowsdelete(This, v) (This)->lpVtbl->put_onrowsdelete(This, v)
#define IHTMLElement2_get_onrowsdelete(This, p) (This)->lpVtbl->get_onrowsdelete(This, p)
#define IHTMLElement2_put_onrowsinserted(This, v) (This)->lpVtbl->put_onrowsinserted(This, v)
#define IHTMLElement2_get_onrowsinserted(This, p) (This)->lpVtbl->get_onrowsinserted(This, p)
#define IHTMLElement2_put_oncellchange(This, v) (This)->lpVtbl->put_oncellchange(This, v)
#define IHTMLElement2_get_oncellchange(This, p) (This)->lpVtbl->get_oncellchange(This, p)
#define IHTMLElement2_put_dir(This, v) (This)->lpVtbl->put_dir(This, v)
#define IHTMLElement2_get_dir(This, p) (This)->lpVtbl->get_dir(This, p)
#define IHTMLElement2_createControlRange(This, range) (This)->lpVtbl->createControlRange(This, range)
#define IHTMLElement2_get_scrollHeight(This, p) (This)->lpVtbl->get_scrollHeight(This, p)
#define IHTMLElement2_get_scrollWidth(This, p) (This)->lpVtbl->get_scrollWidth(This, p)
#define IHTMLElement2_put_scrollTop(This, v) (This)->lpVtbl->put_scrollTop(This, v)
#define IHTMLElement2_get_scrollTop(This, p) (This)->lpVtbl->get_scrollTop(This, p)
#define IHTMLElement2_put_scrollLeft(This, v) (This)->lpVtbl->put_scrollLeft(This, v)
#define IHTMLElement2_get_scrollLeft(This, p) (This)->lpVtbl->get_scrollLeft(This, p)
#define IHTMLElement2_clearAttributes(This) (This)->lpVtbl->clearAttributes(This)
#define IHTMLElement2_mergeAttributes(This, mergeThis) (This)->lpVtbl->mergeAttributes(This, mergeThis)
#define IHTMLElement2_put_oncontextmenu(This, v) (This)->lpVtbl->put_oncontextmenu(This, v)
#define IHTMLElement2_get_oncontextmenu(This, p) (This)->lpVtbl->get_oncontextmenu(This, p)
#define IHTMLElement2_insertAdjacentElement(This, where, insertedElement, inserted) (This)->lpVtbl->insertAdjacentElement(This, where, insertedElement, inserted)
#define IHTMLElement2_applyElement(This, apply, where, applied) (This)->lpVtbl->applyElement(This, apply, where, applied)
#define IHTMLElement2_getAdjacentText(This, where, text) (This)->lpVtbl->getAdjacentText(This, where, text)
#define IHTMLElement2_replaceAdjacentText(This, where, newText, oldText) (This)->lpVtbl->replaceAdjacentText(This, where, newText, oldText)
#define IHTMLElement2_get_canHaveChildren(This, p) (This)->lpVtbl->get_canHaveChildren(This, p)
#define IHTMLElement2_addBehavior(This, bstrUrl, pvarFactory, pCookie) (This)->lpVtbl->addBehavior(This, bstrUrl, pvarFactory, pCookie)
#define IHTMLElement2_removeBehavior(This, cookie, pfResult) (This)->lpVtbl->removeBehavior(This, cookie, pfResult)
#define IHTMLElement2_get_runtimeStyle(This, p) (This)->lpVtbl->get_runtimeStyle(This, p)
#define IHTMLElement2_get_behaviorUrns(This, p) (This)->lpVtbl->get_behaviorUrns(This, p)
#define IHTMLElement2_put_tagUrn(This, v) (This)->lpVtbl->put_tagUrn(This, v)
#define IHTMLElement2_get_tagUrn(This, p) (This)->lpVtbl->get_tagUrn(This, p)
#define IHTMLElement2_put_onbeforeeditfocus(This, v) (This)->lpVtbl->put_onbeforeeditfocus(This, v)
#define IHTMLElement2_get_onbeforeeditfocus(This, p) (This)->lpVtbl->get_onbeforeeditfocus(This, p)
#define IHTMLElement2_get_readyStateValue(This, p) (This)->lpVtbl->get_readyStateValue(This, p)
#define IHTMLElement2_getElementsByTagName(This, v, pelColl) (This)->lpVtbl->getElementsByTagName(This, v, pelColl)

declare function IHTMLElement2_get_scopeName_Proxy(byval This as IHTMLElement2 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLElement2_get_scopeName_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement2_setCapture_Proxy(byval This as IHTMLElement2 ptr, byval containerCapture as VARIANT_BOOL) as HRESULT
declare sub IHTMLElement2_setCapture_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement2_releaseCapture_Proxy(byval This as IHTMLElement2 ptr) as HRESULT
declare sub IHTMLElement2_releaseCapture_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement2_put_onlosecapture_Proxy(byval This as IHTMLElement2 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLElement2_put_onlosecapture_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement2_get_onlosecapture_Proxy(byval This as IHTMLElement2 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLElement2_get_onlosecapture_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement2_componentFromPoint_Proxy(byval This as IHTMLElement2 ptr, byval x as long, byval y as long, byval component as BSTR ptr) as HRESULT
declare sub IHTMLElement2_componentFromPoint_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement2_doScroll_Proxy(byval This as IHTMLElement2 ptr, byval component as VARIANT) as HRESULT
declare sub IHTMLElement2_doScroll_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement2_put_onscroll_Proxy(byval This as IHTMLElement2 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLElement2_put_onscroll_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement2_get_onscroll_Proxy(byval This as IHTMLElement2 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLElement2_get_onscroll_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement2_put_ondrag_Proxy(byval This as IHTMLElement2 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLElement2_put_ondrag_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement2_get_ondrag_Proxy(byval This as IHTMLElement2 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLElement2_get_ondrag_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement2_put_ondragend_Proxy(byval This as IHTMLElement2 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLElement2_put_ondragend_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement2_get_ondragend_Proxy(byval This as IHTMLElement2 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLElement2_get_ondragend_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement2_put_ondragenter_Proxy(byval This as IHTMLElement2 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLElement2_put_ondragenter_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement2_get_ondragenter_Proxy(byval This as IHTMLElement2 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLElement2_get_ondragenter_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement2_put_ondragover_Proxy(byval This as IHTMLElement2 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLElement2_put_ondragover_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement2_get_ondragover_Proxy(byval This as IHTMLElement2 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLElement2_get_ondragover_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement2_put_ondragleave_Proxy(byval This as IHTMLElement2 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLElement2_put_ondragleave_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement2_get_ondragleave_Proxy(byval This as IHTMLElement2 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLElement2_get_ondragleave_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement2_put_ondrop_Proxy(byval This as IHTMLElement2 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLElement2_put_ondrop_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement2_get_ondrop_Proxy(byval This as IHTMLElement2 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLElement2_get_ondrop_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement2_put_onbeforecut_Proxy(byval This as IHTMLElement2 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLElement2_put_onbeforecut_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement2_get_onbeforecut_Proxy(byval This as IHTMLElement2 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLElement2_get_onbeforecut_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement2_put_oncut_Proxy(byval This as IHTMLElement2 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLElement2_put_oncut_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement2_get_oncut_Proxy(byval This as IHTMLElement2 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLElement2_get_oncut_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement2_put_onbeforecopy_Proxy(byval This as IHTMLElement2 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLElement2_put_onbeforecopy_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement2_get_onbeforecopy_Proxy(byval This as IHTMLElement2 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLElement2_get_onbeforecopy_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement2_put_oncopy_Proxy(byval This as IHTMLElement2 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLElement2_put_oncopy_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement2_get_oncopy_Proxy(byval This as IHTMLElement2 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLElement2_get_oncopy_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement2_put_onbeforepaste_Proxy(byval This as IHTMLElement2 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLElement2_put_onbeforepaste_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement2_get_onbeforepaste_Proxy(byval This as IHTMLElement2 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLElement2_get_onbeforepaste_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement2_put_onpaste_Proxy(byval This as IHTMLElement2 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLElement2_put_onpaste_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement2_get_onpaste_Proxy(byval This as IHTMLElement2 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLElement2_get_onpaste_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement2_get_currentStyle_Proxy(byval This as IHTMLElement2 ptr, byval p as IHTMLCurrentStyle ptr ptr) as HRESULT
declare sub IHTMLElement2_get_currentStyle_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement2_put_onpropertychange_Proxy(byval This as IHTMLElement2 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLElement2_put_onpropertychange_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement2_get_onpropertychange_Proxy(byval This as IHTMLElement2 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLElement2_get_onpropertychange_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement2_getClientRects_Proxy(byval This as IHTMLElement2 ptr, byval pRectCol as IHTMLRectCollection ptr ptr) as HRESULT
declare sub IHTMLElement2_getClientRects_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement2_getBoundingClientRect_Proxy(byval This as IHTMLElement2 ptr, byval pRect as IHTMLRect ptr ptr) as HRESULT
declare sub IHTMLElement2_getBoundingClientRect_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement2_setExpression_Proxy(byval This as IHTMLElement2 ptr, byval propname as BSTR, byval expression as BSTR, byval language as BSTR) as HRESULT
declare sub IHTMLElement2_setExpression_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement2_getExpression_Proxy(byval This as IHTMLElement2 ptr, byval propname as BSTR, byval expression as VARIANT ptr) as HRESULT
declare sub IHTMLElement2_getExpression_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement2_removeExpression_Proxy(byval This as IHTMLElement2 ptr, byval propname as BSTR, byval pfSuccess as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLElement2_removeExpression_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement2_put_tabIndex_Proxy(byval This as IHTMLElement2 ptr, byval v as short) as HRESULT
declare sub IHTMLElement2_put_tabIndex_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement2_get_tabIndex_Proxy(byval This as IHTMLElement2 ptr, byval p as short ptr) as HRESULT
declare sub IHTMLElement2_get_tabIndex_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement2_focus_Proxy(byval This as IHTMLElement2 ptr) as HRESULT
declare sub IHTMLElement2_focus_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement2_put_accessKey_Proxy(byval This as IHTMLElement2 ptr, byval v as BSTR) as HRESULT
declare sub IHTMLElement2_put_accessKey_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement2_get_accessKey_Proxy(byval This as IHTMLElement2 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLElement2_get_accessKey_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement2_put_onblur_Proxy(byval This as IHTMLElement2 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLElement2_put_onblur_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement2_get_onblur_Proxy(byval This as IHTMLElement2 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLElement2_get_onblur_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement2_put_onfocus_Proxy(byval This as IHTMLElement2 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLElement2_put_onfocus_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement2_get_onfocus_Proxy(byval This as IHTMLElement2 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLElement2_get_onfocus_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement2_put_onresize_Proxy(byval This as IHTMLElement2 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLElement2_put_onresize_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement2_get_onresize_Proxy(byval This as IHTMLElement2 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLElement2_get_onresize_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement2_blur_Proxy(byval This as IHTMLElement2 ptr) as HRESULT
declare sub IHTMLElement2_blur_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement2_addFilter_Proxy(byval This as IHTMLElement2 ptr, byval pUnk as IUnknown ptr) as HRESULT
declare sub IHTMLElement2_addFilter_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement2_removeFilter_Proxy(byval This as IHTMLElement2 ptr, byval pUnk as IUnknown ptr) as HRESULT
declare sub IHTMLElement2_removeFilter_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement2_get_clientHeight_Proxy(byval This as IHTMLElement2 ptr, byval p as long ptr) as HRESULT
declare sub IHTMLElement2_get_clientHeight_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement2_get_clientWidth_Proxy(byval This as IHTMLElement2 ptr, byval p as long ptr) as HRESULT
declare sub IHTMLElement2_get_clientWidth_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement2_get_clientTop_Proxy(byval This as IHTMLElement2 ptr, byval p as long ptr) as HRESULT
declare sub IHTMLElement2_get_clientTop_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement2_get_clientLeft_Proxy(byval This as IHTMLElement2 ptr, byval p as long ptr) as HRESULT
declare sub IHTMLElement2_get_clientLeft_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement2_attachEvent_Proxy(byval This as IHTMLElement2 ptr, byval event as BSTR, byval pDisp as IDispatch ptr, byval pfResult as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLElement2_attachEvent_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement2_detachEvent_Proxy(byval This as IHTMLElement2 ptr, byval event as BSTR, byval pDisp as IDispatch ptr) as HRESULT
declare sub IHTMLElement2_detachEvent_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement2_get_readyState_Proxy(byval This as IHTMLElement2 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLElement2_get_readyState_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement2_put_onreadystatechange_Proxy(byval This as IHTMLElement2 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLElement2_put_onreadystatechange_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement2_get_onreadystatechange_Proxy(byval This as IHTMLElement2 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLElement2_get_onreadystatechange_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement2_put_onrowsdelete_Proxy(byval This as IHTMLElement2 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLElement2_put_onrowsdelete_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement2_get_onrowsdelete_Proxy(byval This as IHTMLElement2 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLElement2_get_onrowsdelete_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement2_put_onrowsinserted_Proxy(byval This as IHTMLElement2 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLElement2_put_onrowsinserted_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement2_get_onrowsinserted_Proxy(byval This as IHTMLElement2 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLElement2_get_onrowsinserted_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement2_put_oncellchange_Proxy(byval This as IHTMLElement2 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLElement2_put_oncellchange_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement2_get_oncellchange_Proxy(byval This as IHTMLElement2 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLElement2_get_oncellchange_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement2_put_dir_Proxy(byval This as IHTMLElement2 ptr, byval v as BSTR) as HRESULT
declare sub IHTMLElement2_put_dir_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement2_get_dir_Proxy(byval This as IHTMLElement2 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLElement2_get_dir_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement2_createControlRange_Proxy(byval This as IHTMLElement2 ptr, byval range as IDispatch ptr ptr) as HRESULT
declare sub IHTMLElement2_createControlRange_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement2_get_scrollHeight_Proxy(byval This as IHTMLElement2 ptr, byval p as long ptr) as HRESULT
declare sub IHTMLElement2_get_scrollHeight_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement2_get_scrollWidth_Proxy(byval This as IHTMLElement2 ptr, byval p as long ptr) as HRESULT
declare sub IHTMLElement2_get_scrollWidth_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement2_put_scrollTop_Proxy(byval This as IHTMLElement2 ptr, byval v as long) as HRESULT
declare sub IHTMLElement2_put_scrollTop_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement2_get_scrollTop_Proxy(byval This as IHTMLElement2 ptr, byval p as long ptr) as HRESULT
declare sub IHTMLElement2_get_scrollTop_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement2_put_scrollLeft_Proxy(byval This as IHTMLElement2 ptr, byval v as long) as HRESULT
declare sub IHTMLElement2_put_scrollLeft_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement2_get_scrollLeft_Proxy(byval This as IHTMLElement2 ptr, byval p as long ptr) as HRESULT
declare sub IHTMLElement2_get_scrollLeft_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement2_clearAttributes_Proxy(byval This as IHTMLElement2 ptr) as HRESULT
declare sub IHTMLElement2_clearAttributes_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement2_mergeAttributes_Proxy(byval This as IHTMLElement2 ptr, byval mergeThis as IHTMLElement ptr) as HRESULT
declare sub IHTMLElement2_mergeAttributes_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement2_put_oncontextmenu_Proxy(byval This as IHTMLElement2 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLElement2_put_oncontextmenu_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement2_get_oncontextmenu_Proxy(byval This as IHTMLElement2 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLElement2_get_oncontextmenu_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement2_insertAdjacentElement_Proxy(byval This as IHTMLElement2 ptr, byval where as BSTR, byval insertedElement as IHTMLElement ptr, byval inserted as IHTMLElement ptr ptr) as HRESULT
declare sub IHTMLElement2_insertAdjacentElement_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement2_applyElement_Proxy(byval This as IHTMLElement2 ptr, byval apply as IHTMLElement ptr, byval where as BSTR, byval applied as IHTMLElement ptr ptr) as HRESULT
declare sub IHTMLElement2_applyElement_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement2_getAdjacentText_Proxy(byval This as IHTMLElement2 ptr, byval where as BSTR, byval text as BSTR ptr) as HRESULT
declare sub IHTMLElement2_getAdjacentText_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement2_replaceAdjacentText_Proxy(byval This as IHTMLElement2 ptr, byval where as BSTR, byval newText as BSTR, byval oldText as BSTR ptr) as HRESULT
declare sub IHTMLElement2_replaceAdjacentText_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement2_get_canHaveChildren_Proxy(byval This as IHTMLElement2 ptr, byval p as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLElement2_get_canHaveChildren_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement2_addBehavior_Proxy(byval This as IHTMLElement2 ptr, byval bstrUrl as BSTR, byval pvarFactory as VARIANT ptr, byval pCookie as long ptr) as HRESULT
declare sub IHTMLElement2_addBehavior_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement2_removeBehavior_Proxy(byval This as IHTMLElement2 ptr, byval cookie as long, byval pfResult as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLElement2_removeBehavior_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement2_get_runtimeStyle_Proxy(byval This as IHTMLElement2 ptr, byval p as IHTMLStyle ptr ptr) as HRESULT
declare sub IHTMLElement2_get_runtimeStyle_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement2_get_behaviorUrns_Proxy(byval This as IHTMLElement2 ptr, byval p as IDispatch ptr ptr) as HRESULT
declare sub IHTMLElement2_get_behaviorUrns_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement2_put_tagUrn_Proxy(byval This as IHTMLElement2 ptr, byval v as BSTR) as HRESULT
declare sub IHTMLElement2_put_tagUrn_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement2_get_tagUrn_Proxy(byval This as IHTMLElement2 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLElement2_get_tagUrn_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement2_put_onbeforeeditfocus_Proxy(byval This as IHTMLElement2 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLElement2_put_onbeforeeditfocus_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement2_get_onbeforeeditfocus_Proxy(byval This as IHTMLElement2 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLElement2_get_onbeforeeditfocus_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement2_get_readyStateValue_Proxy(byval This as IHTMLElement2 ptr, byval p as long ptr) as HRESULT
declare sub IHTMLElement2_get_readyStateValue_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement2_getElementsByTagName_Proxy(byval This as IHTMLElement2 ptr, byval v as BSTR, byval pelColl as IHTMLElementCollection ptr ptr) as HRESULT
declare sub IHTMLElement2_getElementsByTagName_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLElement3_INTERFACE_DEFINED__
extern IID_IHTMLElement3 as const IID
type IHTMLElement3 as IHTMLElement3_

type IHTMLElement3Vtbl
	QueryInterface as function(byval This as IHTMLElement3 ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLElement3 ptr) as ULONG
	Release as function(byval This as IHTMLElement3 ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLElement3 ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLElement3 ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLElement3 ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLElement3 ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	mergeAttributes as function(byval This as IHTMLElement3 ptr, byval mergeThis as IHTMLElement ptr, byval pvarFlags as VARIANT ptr) as HRESULT
	get_isMultiLine as function(byval This as IHTMLElement3 ptr, byval p as VARIANT_BOOL ptr) as HRESULT
	get_canHaveHTML as function(byval This as IHTMLElement3 ptr, byval p as VARIANT_BOOL ptr) as HRESULT
	put_onlayoutcomplete as function(byval This as IHTMLElement3 ptr, byval v as VARIANT) as HRESULT
	get_onlayoutcomplete as function(byval This as IHTMLElement3 ptr, byval p as VARIANT ptr) as HRESULT
	put_onpage as function(byval This as IHTMLElement3 ptr, byval v as VARIANT) as HRESULT
	get_onpage as function(byval This as IHTMLElement3 ptr, byval p as VARIANT ptr) as HRESULT
	put_inflateBlock as function(byval This as IHTMLElement3 ptr, byval v as VARIANT_BOOL) as HRESULT
	get_inflateBlock as function(byval This as IHTMLElement3 ptr, byval p as VARIANT_BOOL ptr) as HRESULT
	put_onbeforedeactivate as function(byval This as IHTMLElement3 ptr, byval v as VARIANT) as HRESULT
	get_onbeforedeactivate as function(byval This as IHTMLElement3 ptr, byval p as VARIANT ptr) as HRESULT
	setActive as function(byval This as IHTMLElement3 ptr) as HRESULT
	put_contentEditable as function(byval This as IHTMLElement3 ptr, byval v as BSTR) as HRESULT
	get_contentEditable as function(byval This as IHTMLElement3 ptr, byval p as BSTR ptr) as HRESULT
	get_isContentEditable as function(byval This as IHTMLElement3 ptr, byval p as VARIANT_BOOL ptr) as HRESULT
	put_hideFocus as function(byval This as IHTMLElement3 ptr, byval v as VARIANT_BOOL) as HRESULT
	get_hideFocus as function(byval This as IHTMLElement3 ptr, byval p as VARIANT_BOOL ptr) as HRESULT
	put_disabled as function(byval This as IHTMLElement3 ptr, byval v as VARIANT_BOOL) as HRESULT
	get_disabled as function(byval This as IHTMLElement3 ptr, byval p as VARIANT_BOOL ptr) as HRESULT
	get_isDisabled as function(byval This as IHTMLElement3 ptr, byval p as VARIANT_BOOL ptr) as HRESULT
	put_onmove as function(byval This as IHTMLElement3 ptr, byval v as VARIANT) as HRESULT
	get_onmove as function(byval This as IHTMLElement3 ptr, byval p as VARIANT ptr) as HRESULT
	put_oncontrolselect as function(byval This as IHTMLElement3 ptr, byval v as VARIANT) as HRESULT
	get_oncontrolselect as function(byval This as IHTMLElement3 ptr, byval p as VARIANT ptr) as HRESULT
	fireEvent as function(byval This as IHTMLElement3 ptr, byval bstrEventName as BSTR, byval pvarEventObject as VARIANT ptr, byval pfCancelled as VARIANT_BOOL ptr) as HRESULT
	put_onresizestart as function(byval This as IHTMLElement3 ptr, byval v as VARIANT) as HRESULT
	get_onresizestart as function(byval This as IHTMLElement3 ptr, byval p as VARIANT ptr) as HRESULT
	put_onresizeend as function(byval This as IHTMLElement3 ptr, byval v as VARIANT) as HRESULT
	get_onresizeend as function(byval This as IHTMLElement3 ptr, byval p as VARIANT ptr) as HRESULT
	put_onmovestart as function(byval This as IHTMLElement3 ptr, byval v as VARIANT) as HRESULT
	get_onmovestart as function(byval This as IHTMLElement3 ptr, byval p as VARIANT ptr) as HRESULT
	put_onmoveend as function(byval This as IHTMLElement3 ptr, byval v as VARIANT) as HRESULT
	get_onmoveend as function(byval This as IHTMLElement3 ptr, byval p as VARIANT ptr) as HRESULT
	put_onmouseenter as function(byval This as IHTMLElement3 ptr, byval v as VARIANT) as HRESULT
	get_onmouseenter as function(byval This as IHTMLElement3 ptr, byval p as VARIANT ptr) as HRESULT
	put_onmouseleave as function(byval This as IHTMLElement3 ptr, byval v as VARIANT) as HRESULT
	get_onmouseleave as function(byval This as IHTMLElement3 ptr, byval p as VARIANT ptr) as HRESULT
	put_onactivate as function(byval This as IHTMLElement3 ptr, byval v as VARIANT) as HRESULT
	get_onactivate as function(byval This as IHTMLElement3 ptr, byval p as VARIANT ptr) as HRESULT
	put_ondeactivate as function(byval This as IHTMLElement3 ptr, byval v as VARIANT) as HRESULT
	get_ondeactivate as function(byval This as IHTMLElement3 ptr, byval p as VARIANT ptr) as HRESULT
	dragDrop as function(byval This as IHTMLElement3 ptr, byval pfRet as VARIANT_BOOL ptr) as HRESULT
	get_glyphMode as function(byval This as IHTMLElement3 ptr, byval p as LONG ptr) as HRESULT
end type

type IHTMLElement3_
	lpVtbl as IHTMLElement3Vtbl ptr
end type

#define IHTMLElement3_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLElement3_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLElement3_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLElement3_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLElement3_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLElement3_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLElement3_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLElement3_mergeAttributes(This, mergeThis, pvarFlags) (This)->lpVtbl->mergeAttributes(This, mergeThis, pvarFlags)
#define IHTMLElement3_get_isMultiLine(This, p) (This)->lpVtbl->get_isMultiLine(This, p)
#define IHTMLElement3_get_canHaveHTML(This, p) (This)->lpVtbl->get_canHaveHTML(This, p)
#define IHTMLElement3_put_onlayoutcomplete(This, v) (This)->lpVtbl->put_onlayoutcomplete(This, v)
#define IHTMLElement3_get_onlayoutcomplete(This, p) (This)->lpVtbl->get_onlayoutcomplete(This, p)
#define IHTMLElement3_put_onpage(This, v) (This)->lpVtbl->put_onpage(This, v)
#define IHTMLElement3_get_onpage(This, p) (This)->lpVtbl->get_onpage(This, p)
#define IHTMLElement3_put_inflateBlock(This, v) (This)->lpVtbl->put_inflateBlock(This, v)
#define IHTMLElement3_get_inflateBlock(This, p) (This)->lpVtbl->get_inflateBlock(This, p)
#define IHTMLElement3_put_onbeforedeactivate(This, v) (This)->lpVtbl->put_onbeforedeactivate(This, v)
#define IHTMLElement3_get_onbeforedeactivate(This, p) (This)->lpVtbl->get_onbeforedeactivate(This, p)
#define IHTMLElement3_setActive(This) (This)->lpVtbl->setActive(This)
#define IHTMLElement3_put_contentEditable(This, v) (This)->lpVtbl->put_contentEditable(This, v)
#define IHTMLElement3_get_contentEditable(This, p) (This)->lpVtbl->get_contentEditable(This, p)
#define IHTMLElement3_get_isContentEditable(This, p) (This)->lpVtbl->get_isContentEditable(This, p)
#define IHTMLElement3_put_hideFocus(This, v) (This)->lpVtbl->put_hideFocus(This, v)
#define IHTMLElement3_get_hideFocus(This, p) (This)->lpVtbl->get_hideFocus(This, p)
#define IHTMLElement3_put_disabled(This, v) (This)->lpVtbl->put_disabled(This, v)
#define IHTMLElement3_get_disabled(This, p) (This)->lpVtbl->get_disabled(This, p)
#define IHTMLElement3_get_isDisabled(This, p) (This)->lpVtbl->get_isDisabled(This, p)
#define IHTMLElement3_put_onmove(This, v) (This)->lpVtbl->put_onmove(This, v)
#define IHTMLElement3_get_onmove(This, p) (This)->lpVtbl->get_onmove(This, p)
#define IHTMLElement3_put_oncontrolselect(This, v) (This)->lpVtbl->put_oncontrolselect(This, v)
#define IHTMLElement3_get_oncontrolselect(This, p) (This)->lpVtbl->get_oncontrolselect(This, p)
#define IHTMLElement3_fireEvent(This, bstrEventName, pvarEventObject, pfCancelled) (This)->lpVtbl->fireEvent(This, bstrEventName, pvarEventObject, pfCancelled)
#define IHTMLElement3_put_onresizestart(This, v) (This)->lpVtbl->put_onresizestart(This, v)
#define IHTMLElement3_get_onresizestart(This, p) (This)->lpVtbl->get_onresizestart(This, p)
#define IHTMLElement3_put_onresizeend(This, v) (This)->lpVtbl->put_onresizeend(This, v)
#define IHTMLElement3_get_onresizeend(This, p) (This)->lpVtbl->get_onresizeend(This, p)
#define IHTMLElement3_put_onmovestart(This, v) (This)->lpVtbl->put_onmovestart(This, v)
#define IHTMLElement3_get_onmovestart(This, p) (This)->lpVtbl->get_onmovestart(This, p)
#define IHTMLElement3_put_onmoveend(This, v) (This)->lpVtbl->put_onmoveend(This, v)
#define IHTMLElement3_get_onmoveend(This, p) (This)->lpVtbl->get_onmoveend(This, p)
#define IHTMLElement3_put_onmouseenter(This, v) (This)->lpVtbl->put_onmouseenter(This, v)
#define IHTMLElement3_get_onmouseenter(This, p) (This)->lpVtbl->get_onmouseenter(This, p)
#define IHTMLElement3_put_onmouseleave(This, v) (This)->lpVtbl->put_onmouseleave(This, v)
#define IHTMLElement3_get_onmouseleave(This, p) (This)->lpVtbl->get_onmouseleave(This, p)
#define IHTMLElement3_put_onactivate(This, v) (This)->lpVtbl->put_onactivate(This, v)
#define IHTMLElement3_get_onactivate(This, p) (This)->lpVtbl->get_onactivate(This, p)
#define IHTMLElement3_put_ondeactivate(This, v) (This)->lpVtbl->put_ondeactivate(This, v)
#define IHTMLElement3_get_ondeactivate(This, p) (This)->lpVtbl->get_ondeactivate(This, p)
#define IHTMLElement3_dragDrop(This, pfRet) (This)->lpVtbl->dragDrop(This, pfRet)
#define IHTMLElement3_get_glyphMode(This, p) (This)->lpVtbl->get_glyphMode(This, p)

declare function IHTMLElement3_mergeAttributes_Proxy(byval This as IHTMLElement3 ptr, byval mergeThis as IHTMLElement ptr, byval pvarFlags as VARIANT ptr) as HRESULT
declare sub IHTMLElement3_mergeAttributes_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement3_get_isMultiLine_Proxy(byval This as IHTMLElement3 ptr, byval p as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLElement3_get_isMultiLine_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement3_get_canHaveHTML_Proxy(byval This as IHTMLElement3 ptr, byval p as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLElement3_get_canHaveHTML_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement3_put_onlayoutcomplete_Proxy(byval This as IHTMLElement3 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLElement3_put_onlayoutcomplete_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement3_get_onlayoutcomplete_Proxy(byval This as IHTMLElement3 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLElement3_get_onlayoutcomplete_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement3_put_onpage_Proxy(byval This as IHTMLElement3 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLElement3_put_onpage_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement3_get_onpage_Proxy(byval This as IHTMLElement3 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLElement3_get_onpage_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement3_put_inflateBlock_Proxy(byval This as IHTMLElement3 ptr, byval v as VARIANT_BOOL) as HRESULT
declare sub IHTMLElement3_put_inflateBlock_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement3_get_inflateBlock_Proxy(byval This as IHTMLElement3 ptr, byval p as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLElement3_get_inflateBlock_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement3_put_onbeforedeactivate_Proxy(byval This as IHTMLElement3 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLElement3_put_onbeforedeactivate_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement3_get_onbeforedeactivate_Proxy(byval This as IHTMLElement3 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLElement3_get_onbeforedeactivate_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement3_setActive_Proxy(byval This as IHTMLElement3 ptr) as HRESULT
declare sub IHTMLElement3_setActive_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement3_put_contentEditable_Proxy(byval This as IHTMLElement3 ptr, byval v as BSTR) as HRESULT
declare sub IHTMLElement3_put_contentEditable_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement3_get_contentEditable_Proxy(byval This as IHTMLElement3 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLElement3_get_contentEditable_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement3_get_isContentEditable_Proxy(byval This as IHTMLElement3 ptr, byval p as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLElement3_get_isContentEditable_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement3_put_hideFocus_Proxy(byval This as IHTMLElement3 ptr, byval v as VARIANT_BOOL) as HRESULT
declare sub IHTMLElement3_put_hideFocus_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement3_get_hideFocus_Proxy(byval This as IHTMLElement3 ptr, byval p as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLElement3_get_hideFocus_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement3_put_disabled_Proxy(byval This as IHTMLElement3 ptr, byval v as VARIANT_BOOL) as HRESULT
declare sub IHTMLElement3_put_disabled_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement3_get_disabled_Proxy(byval This as IHTMLElement3 ptr, byval p as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLElement3_get_disabled_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement3_get_isDisabled_Proxy(byval This as IHTMLElement3 ptr, byval p as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLElement3_get_isDisabled_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement3_put_onmove_Proxy(byval This as IHTMLElement3 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLElement3_put_onmove_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement3_get_onmove_Proxy(byval This as IHTMLElement3 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLElement3_get_onmove_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement3_put_oncontrolselect_Proxy(byval This as IHTMLElement3 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLElement3_put_oncontrolselect_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement3_get_oncontrolselect_Proxy(byval This as IHTMLElement3 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLElement3_get_oncontrolselect_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement3_fireEvent_Proxy(byval This as IHTMLElement3 ptr, byval bstrEventName as BSTR, byval pvarEventObject as VARIANT ptr, byval pfCancelled as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLElement3_fireEvent_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement3_put_onresizestart_Proxy(byval This as IHTMLElement3 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLElement3_put_onresizestart_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement3_get_onresizestart_Proxy(byval This as IHTMLElement3 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLElement3_get_onresizestart_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement3_put_onresizeend_Proxy(byval This as IHTMLElement3 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLElement3_put_onresizeend_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement3_get_onresizeend_Proxy(byval This as IHTMLElement3 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLElement3_get_onresizeend_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement3_put_onmovestart_Proxy(byval This as IHTMLElement3 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLElement3_put_onmovestart_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement3_get_onmovestart_Proxy(byval This as IHTMLElement3 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLElement3_get_onmovestart_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement3_put_onmoveend_Proxy(byval This as IHTMLElement3 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLElement3_put_onmoveend_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement3_get_onmoveend_Proxy(byval This as IHTMLElement3 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLElement3_get_onmoveend_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement3_put_onmouseenter_Proxy(byval This as IHTMLElement3 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLElement3_put_onmouseenter_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement3_get_onmouseenter_Proxy(byval This as IHTMLElement3 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLElement3_get_onmouseenter_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement3_put_onmouseleave_Proxy(byval This as IHTMLElement3 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLElement3_put_onmouseleave_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement3_get_onmouseleave_Proxy(byval This as IHTMLElement3 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLElement3_get_onmouseleave_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement3_put_onactivate_Proxy(byval This as IHTMLElement3 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLElement3_put_onactivate_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement3_get_onactivate_Proxy(byval This as IHTMLElement3 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLElement3_get_onactivate_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement3_put_ondeactivate_Proxy(byval This as IHTMLElement3 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLElement3_put_ondeactivate_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement3_get_ondeactivate_Proxy(byval This as IHTMLElement3 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLElement3_get_ondeactivate_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement3_dragDrop_Proxy(byval This as IHTMLElement3 ptr, byval pfRet as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLElement3_dragDrop_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement3_get_glyphMode_Proxy(byval This as IHTMLElement3 ptr, byval p as LONG ptr) as HRESULT
declare sub IHTMLElement3_get_glyphMode_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLElement4_INTERFACE_DEFINED__
extern IID_IHTMLElement4 as const IID
type IHTMLElement4 as IHTMLElement4_

type IHTMLElement4Vtbl
	QueryInterface as function(byval This as IHTMLElement4 ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLElement4 ptr) as ULONG
	Release as function(byval This as IHTMLElement4 ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLElement4 ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLElement4 ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLElement4 ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLElement4 ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	put_onmousewheel as function(byval This as IHTMLElement4 ptr, byval v as VARIANT) as HRESULT
	get_onmousewheel as function(byval This as IHTMLElement4 ptr, byval p as VARIANT ptr) as HRESULT
	normalize as function(byval This as IHTMLElement4 ptr) as HRESULT
	getAttributeNode as function(byval This as IHTMLElement4 ptr, byval bstrname as BSTR, byval ppAttribute as IHTMLDOMAttribute ptr ptr) as HRESULT
	setAttributeNode as function(byval This as IHTMLElement4 ptr, byval pattr as IHTMLDOMAttribute ptr, byval ppretAttribute as IHTMLDOMAttribute ptr ptr) as HRESULT
	removeAttributeNode as function(byval This as IHTMLElement4 ptr, byval pattr as IHTMLDOMAttribute ptr, byval ppretAttribute as IHTMLDOMAttribute ptr ptr) as HRESULT
	put_onbeforeactivate as function(byval This as IHTMLElement4 ptr, byval v as VARIANT) as HRESULT
	get_onbeforeactivate as function(byval This as IHTMLElement4 ptr, byval p as VARIANT ptr) as HRESULT
	put_onfocusin as function(byval This as IHTMLElement4 ptr, byval v as VARIANT) as HRESULT
	get_onfocusin as function(byval This as IHTMLElement4 ptr, byval p as VARIANT ptr) as HRESULT
	put_onfocusout as function(byval This as IHTMLElement4 ptr, byval v as VARIANT) as HRESULT
	get_onfocusout as function(byval This as IHTMLElement4 ptr, byval p as VARIANT ptr) as HRESULT
end type

type IHTMLElement4_
	lpVtbl as IHTMLElement4Vtbl ptr
end type

#define IHTMLElement4_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLElement4_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLElement4_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLElement4_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLElement4_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLElement4_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLElement4_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLElement4_put_onmousewheel(This, v) (This)->lpVtbl->put_onmousewheel(This, v)
#define IHTMLElement4_get_onmousewheel(This, p) (This)->lpVtbl->get_onmousewheel(This, p)
#define IHTMLElement4_normalize(This) (This)->lpVtbl->normalize(This)
#define IHTMLElement4_getAttributeNode(This, bstrname, ppAttribute) (This)->lpVtbl->getAttributeNode(This, bstrname, ppAttribute)
#define IHTMLElement4_setAttributeNode(This, pattr, ppretAttribute) (This)->lpVtbl->setAttributeNode(This, pattr, ppretAttribute)
#define IHTMLElement4_removeAttributeNode(This, pattr, ppretAttribute) (This)->lpVtbl->removeAttributeNode(This, pattr, ppretAttribute)
#define IHTMLElement4_put_onbeforeactivate(This, v) (This)->lpVtbl->put_onbeforeactivate(This, v)
#define IHTMLElement4_get_onbeforeactivate(This, p) (This)->lpVtbl->get_onbeforeactivate(This, p)
#define IHTMLElement4_put_onfocusin(This, v) (This)->lpVtbl->put_onfocusin(This, v)
#define IHTMLElement4_get_onfocusin(This, p) (This)->lpVtbl->get_onfocusin(This, p)
#define IHTMLElement4_put_onfocusout(This, v) (This)->lpVtbl->put_onfocusout(This, v)
#define IHTMLElement4_get_onfocusout(This, p) (This)->lpVtbl->get_onfocusout(This, p)

declare function IHTMLElement4_put_onmousewheel_Proxy(byval This as IHTMLElement4 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLElement4_put_onmousewheel_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement4_get_onmousewheel_Proxy(byval This as IHTMLElement4 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLElement4_get_onmousewheel_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement4_normalize_Proxy(byval This as IHTMLElement4 ptr) as HRESULT
declare sub IHTMLElement4_normalize_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement4_getAttributeNode_Proxy(byval This as IHTMLElement4 ptr, byval bstrname as BSTR, byval ppAttribute as IHTMLDOMAttribute ptr ptr) as HRESULT
declare sub IHTMLElement4_getAttributeNode_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement4_setAttributeNode_Proxy(byval This as IHTMLElement4 ptr, byval pattr as IHTMLDOMAttribute ptr, byval ppretAttribute as IHTMLDOMAttribute ptr ptr) as HRESULT
declare sub IHTMLElement4_setAttributeNode_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement4_removeAttributeNode_Proxy(byval This as IHTMLElement4 ptr, byval pattr as IHTMLDOMAttribute ptr, byval ppretAttribute as IHTMLDOMAttribute ptr ptr) as HRESULT
declare sub IHTMLElement4_removeAttributeNode_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement4_put_onbeforeactivate_Proxy(byval This as IHTMLElement4 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLElement4_put_onbeforeactivate_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement4_get_onbeforeactivate_Proxy(byval This as IHTMLElement4 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLElement4_get_onbeforeactivate_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement4_put_onfocusin_Proxy(byval This as IHTMLElement4 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLElement4_put_onfocusin_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement4_get_onfocusin_Proxy(byval This as IHTMLElement4 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLElement4_get_onfocusin_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement4_put_onfocusout_Proxy(byval This as IHTMLElement4 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLElement4_put_onfocusout_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElement4_get_onfocusout_Proxy(byval This as IHTMLElement4 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLElement4_get_onfocusout_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLElementRender_INTERFACE_DEFINED__
extern IID_IHTMLElementRender as const IID
type IHTMLElementRender as IHTMLElementRender_

type IHTMLElementRenderVtbl
	QueryInterface as function(byval This as IHTMLElementRender ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLElementRender ptr) as ULONG
	Release as function(byval This as IHTMLElementRender ptr) as ULONG
	DrawToDC as function(byval This as IHTMLElementRender ptr, byval hDC as HDC) as HRESULT
	SetDocumentPrinter as function(byval This as IHTMLElementRender ptr, byval bstrPrinterName as BSTR, byval hDC as HDC) as HRESULT
end type

type IHTMLElementRender_
	lpVtbl as IHTMLElementRenderVtbl ptr
end type

#define IHTMLElementRender_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLElementRender_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLElementRender_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLElementRender_DrawToDC(This, hDC) (This)->lpVtbl->DrawToDC(This, hDC)
#define IHTMLElementRender_SetDocumentPrinter(This, bstrPrinterName, hDC) (This)->lpVtbl->SetDocumentPrinter(This, bstrPrinterName, hDC)

declare function IHTMLElementRender_DrawToDC_Proxy(byval This as IHTMLElementRender ptr, byval hDC as HDC) as HRESULT
declare sub IHTMLElementRender_DrawToDC_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElementRender_SetDocumentPrinter_Proxy(byval This as IHTMLElementRender ptr, byval bstrPrinterName as BSTR, byval hDC as HDC) as HRESULT
declare sub IHTMLElementRender_SetDocumentPrinter_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLUniqueName_INTERFACE_DEFINED__
extern IID_IHTMLUniqueName as const IID
type IHTMLUniqueName as IHTMLUniqueName_

type IHTMLUniqueNameVtbl
	QueryInterface as function(byval This as IHTMLUniqueName ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLUniqueName ptr) as ULONG
	Release as function(byval This as IHTMLUniqueName ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLUniqueName ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLUniqueName ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLUniqueName ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLUniqueName ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	get_uniqueNumber as function(byval This as IHTMLUniqueName ptr, byval p as long ptr) as HRESULT
	get_uniqueID as function(byval This as IHTMLUniqueName ptr, byval p as BSTR ptr) as HRESULT
end type

type IHTMLUniqueName_
	lpVtbl as IHTMLUniqueNameVtbl ptr
end type

#define IHTMLUniqueName_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLUniqueName_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLUniqueName_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLUniqueName_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLUniqueName_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLUniqueName_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLUniqueName_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLUniqueName_get_uniqueNumber(This, p) (This)->lpVtbl->get_uniqueNumber(This, p)
#define IHTMLUniqueName_get_uniqueID(This, p) (This)->lpVtbl->get_uniqueID(This, p)

declare function IHTMLUniqueName_get_uniqueNumber_Proxy(byval This as IHTMLUniqueName ptr, byval p as long ptr) as HRESULT
declare sub IHTMLUniqueName_get_uniqueNumber_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLUniqueName_get_uniqueID_Proxy(byval This as IHTMLUniqueName ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLUniqueName_get_uniqueID_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLDatabinding_INTERFACE_DEFINED__
extern IID_IHTMLDatabinding as const IID
type IHTMLDatabinding as IHTMLDatabinding_

type IHTMLDatabindingVtbl
	QueryInterface as function(byval This as IHTMLDatabinding ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLDatabinding ptr) as ULONG
	Release as function(byval This as IHTMLDatabinding ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLDatabinding ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLDatabinding ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLDatabinding ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLDatabinding ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	put_dataFld as function(byval This as IHTMLDatabinding ptr, byval v as BSTR) as HRESULT
	get_dataFld as function(byval This as IHTMLDatabinding ptr, byval p as BSTR ptr) as HRESULT
	put_dataSrc as function(byval This as IHTMLDatabinding ptr, byval v as BSTR) as HRESULT
	get_dataSrc as function(byval This as IHTMLDatabinding ptr, byval p as BSTR ptr) as HRESULT
	put_dataFormatAs as function(byval This as IHTMLDatabinding ptr, byval v as BSTR) as HRESULT
	get_dataFormatAs as function(byval This as IHTMLDatabinding ptr, byval p as BSTR ptr) as HRESULT
end type

type IHTMLDatabinding_
	lpVtbl as IHTMLDatabindingVtbl ptr
end type

#define IHTMLDatabinding_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLDatabinding_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLDatabinding_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLDatabinding_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLDatabinding_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLDatabinding_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLDatabinding_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLDatabinding_put_dataFld(This, v) (This)->lpVtbl->put_dataFld(This, v)
#define IHTMLDatabinding_get_dataFld(This, p) (This)->lpVtbl->get_dataFld(This, p)
#define IHTMLDatabinding_put_dataSrc(This, v) (This)->lpVtbl->put_dataSrc(This, v)
#define IHTMLDatabinding_get_dataSrc(This, p) (This)->lpVtbl->get_dataSrc(This, p)
#define IHTMLDatabinding_put_dataFormatAs(This, v) (This)->lpVtbl->put_dataFormatAs(This, v)
#define IHTMLDatabinding_get_dataFormatAs(This, p) (This)->lpVtbl->get_dataFormatAs(This, p)

declare function IHTMLDatabinding_put_dataFld_Proxy(byval This as IHTMLDatabinding ptr, byval v as BSTR) as HRESULT
declare sub IHTMLDatabinding_put_dataFld_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDatabinding_get_dataFld_Proxy(byval This as IHTMLDatabinding ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLDatabinding_get_dataFld_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDatabinding_put_dataSrc_Proxy(byval This as IHTMLDatabinding ptr, byval v as BSTR) as HRESULT
declare sub IHTMLDatabinding_put_dataSrc_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDatabinding_get_dataSrc_Proxy(byval This as IHTMLDatabinding ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLDatabinding_get_dataSrc_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDatabinding_put_dataFormatAs_Proxy(byval This as IHTMLDatabinding ptr, byval v as BSTR) as HRESULT
declare sub IHTMLDatabinding_put_dataFormatAs_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDatabinding_get_dataFormatAs_Proxy(byval This as IHTMLDatabinding ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLDatabinding_get_dataFormatAs_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLDocument_INTERFACE_DEFINED__
extern IID_IHTMLDocument as const IID
type IHTMLDocument as IHTMLDocument_

type IHTMLDocumentVtbl
	QueryInterface as function(byval This as IHTMLDocument ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLDocument ptr) as ULONG
	Release as function(byval This as IHTMLDocument ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLDocument ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLDocument ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLDocument ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLDocument ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	get_Script as function(byval This as IHTMLDocument ptr, byval p as IDispatch ptr ptr) as HRESULT
end type

type IHTMLDocument_
	lpVtbl as IHTMLDocumentVtbl ptr
end type

#define IHTMLDocument_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLDocument_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLDocument_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLDocument_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLDocument_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLDocument_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLDocument_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLDocument_get_Script(This, p) (This)->lpVtbl->get_Script(This, p)
declare function IHTMLDocument_get_Script_Proxy(byval This as IHTMLDocument ptr, byval p as IDispatch ptr ptr) as HRESULT
declare sub IHTMLDocument_get_Script_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLElementDefaults_INTERFACE_DEFINED__
extern IID_IHTMLElementDefaults as const IID
type IHTMLElementDefaults as IHTMLElementDefaults_

type IHTMLElementDefaultsVtbl
	QueryInterface as function(byval This as IHTMLElementDefaults ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLElementDefaults ptr) as ULONG
	Release as function(byval This as IHTMLElementDefaults ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLElementDefaults ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLElementDefaults ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLElementDefaults ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLElementDefaults ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	get_style as function(byval This as IHTMLElementDefaults ptr, byval p as IHTMLStyle ptr ptr) as HRESULT
	put_tabStop as function(byval This as IHTMLElementDefaults ptr, byval v as VARIANT_BOOL) as HRESULT
	get_tabStop as function(byval This as IHTMLElementDefaults ptr, byval p as VARIANT_BOOL ptr) as HRESULT
	put_viewInheritStyle as function(byval This as IHTMLElementDefaults ptr, byval v as VARIANT_BOOL) as HRESULT
	get_viewInheritStyle as function(byval This as IHTMLElementDefaults ptr, byval p as VARIANT_BOOL ptr) as HRESULT
	put_viewMasterTab as function(byval This as IHTMLElementDefaults ptr, byval v as VARIANT_BOOL) as HRESULT
	get_viewMasterTab as function(byval This as IHTMLElementDefaults ptr, byval p as VARIANT_BOOL ptr) as HRESULT
	put_scrollSegmentX as function(byval This as IHTMLElementDefaults ptr, byval v as long) as HRESULT
	get_scrollSegmentX as function(byval This as IHTMLElementDefaults ptr, byval p as long ptr) as HRESULT
	put_scrollSegmentY as function(byval This as IHTMLElementDefaults ptr, byval v as long) as HRESULT
	get_scrollSegmentY as function(byval This as IHTMLElementDefaults ptr, byval p as long ptr) as HRESULT
	put_isMultiLine as function(byval This as IHTMLElementDefaults ptr, byval v as VARIANT_BOOL) as HRESULT
	get_isMultiLine as function(byval This as IHTMLElementDefaults ptr, byval p as VARIANT_BOOL ptr) as HRESULT
	put_contentEditable as function(byval This as IHTMLElementDefaults ptr, byval v as BSTR) as HRESULT
	get_contentEditable as function(byval This as IHTMLElementDefaults ptr, byval p as BSTR ptr) as HRESULT
	put_canHaveHTML as function(byval This as IHTMLElementDefaults ptr, byval v as VARIANT_BOOL) as HRESULT
	get_canHaveHTML as function(byval This as IHTMLElementDefaults ptr, byval p as VARIANT_BOOL ptr) as HRESULT
	putref_viewLink as function(byval This as IHTMLElementDefaults ptr, byval v as IHTMLDocument ptr) as HRESULT
	get_viewLink as function(byval This as IHTMLElementDefaults ptr, byval p as IHTMLDocument ptr ptr) as HRESULT
	put_frozen as function(byval This as IHTMLElementDefaults ptr, byval v as VARIANT_BOOL) as HRESULT
	get_frozen as function(byval This as IHTMLElementDefaults ptr, byval p as VARIANT_BOOL ptr) as HRESULT
end type

type IHTMLElementDefaults_
	lpVtbl as IHTMLElementDefaultsVtbl ptr
end type

#define IHTMLElementDefaults_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLElementDefaults_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLElementDefaults_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLElementDefaults_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLElementDefaults_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLElementDefaults_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLElementDefaults_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLElementDefaults_get_style(This, p) (This)->lpVtbl->get_style(This, p)
#define IHTMLElementDefaults_put_tabStop(This, v) (This)->lpVtbl->put_tabStop(This, v)
#define IHTMLElementDefaults_get_tabStop(This, p) (This)->lpVtbl->get_tabStop(This, p)
#define IHTMLElementDefaults_put_viewInheritStyle(This, v) (This)->lpVtbl->put_viewInheritStyle(This, v)
#define IHTMLElementDefaults_get_viewInheritStyle(This, p) (This)->lpVtbl->get_viewInheritStyle(This, p)
#define IHTMLElementDefaults_put_viewMasterTab(This, v) (This)->lpVtbl->put_viewMasterTab(This, v)
#define IHTMLElementDefaults_get_viewMasterTab(This, p) (This)->lpVtbl->get_viewMasterTab(This, p)
#define IHTMLElementDefaults_put_scrollSegmentX(This, v) (This)->lpVtbl->put_scrollSegmentX(This, v)
#define IHTMLElementDefaults_get_scrollSegmentX(This, p) (This)->lpVtbl->get_scrollSegmentX(This, p)
#define IHTMLElementDefaults_put_scrollSegmentY(This, v) (This)->lpVtbl->put_scrollSegmentY(This, v)
#define IHTMLElementDefaults_get_scrollSegmentY(This, p) (This)->lpVtbl->get_scrollSegmentY(This, p)
#define IHTMLElementDefaults_put_isMultiLine(This, v) (This)->lpVtbl->put_isMultiLine(This, v)
#define IHTMLElementDefaults_get_isMultiLine(This, p) (This)->lpVtbl->get_isMultiLine(This, p)
#define IHTMLElementDefaults_put_contentEditable(This, v) (This)->lpVtbl->put_contentEditable(This, v)
#define IHTMLElementDefaults_get_contentEditable(This, p) (This)->lpVtbl->get_contentEditable(This, p)
#define IHTMLElementDefaults_put_canHaveHTML(This, v) (This)->lpVtbl->put_canHaveHTML(This, v)
#define IHTMLElementDefaults_get_canHaveHTML(This, p) (This)->lpVtbl->get_canHaveHTML(This, p)
#define IHTMLElementDefaults_putref_viewLink(This, v) (This)->lpVtbl->putref_viewLink(This, v)
#define IHTMLElementDefaults_get_viewLink(This, p) (This)->lpVtbl->get_viewLink(This, p)
#define IHTMLElementDefaults_put_frozen(This, v) (This)->lpVtbl->put_frozen(This, v)
#define IHTMLElementDefaults_get_frozen(This, p) (This)->lpVtbl->get_frozen(This, p)

declare function IHTMLElementDefaults_get_style_Proxy(byval This as IHTMLElementDefaults ptr, byval p as IHTMLStyle ptr ptr) as HRESULT
declare sub IHTMLElementDefaults_get_style_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElementDefaults_put_tabStop_Proxy(byval This as IHTMLElementDefaults ptr, byval v as VARIANT_BOOL) as HRESULT
declare sub IHTMLElementDefaults_put_tabStop_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElementDefaults_get_tabStop_Proxy(byval This as IHTMLElementDefaults ptr, byval p as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLElementDefaults_get_tabStop_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElementDefaults_put_viewInheritStyle_Proxy(byval This as IHTMLElementDefaults ptr, byval v as VARIANT_BOOL) as HRESULT
declare sub IHTMLElementDefaults_put_viewInheritStyle_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElementDefaults_get_viewInheritStyle_Proxy(byval This as IHTMLElementDefaults ptr, byval p as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLElementDefaults_get_viewInheritStyle_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElementDefaults_put_viewMasterTab_Proxy(byval This as IHTMLElementDefaults ptr, byval v as VARIANT_BOOL) as HRESULT
declare sub IHTMLElementDefaults_put_viewMasterTab_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElementDefaults_get_viewMasterTab_Proxy(byval This as IHTMLElementDefaults ptr, byval p as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLElementDefaults_get_viewMasterTab_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElementDefaults_put_scrollSegmentX_Proxy(byval This as IHTMLElementDefaults ptr, byval v as long) as HRESULT
declare sub IHTMLElementDefaults_put_scrollSegmentX_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElementDefaults_get_scrollSegmentX_Proxy(byval This as IHTMLElementDefaults ptr, byval p as long ptr) as HRESULT
declare sub IHTMLElementDefaults_get_scrollSegmentX_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElementDefaults_put_scrollSegmentY_Proxy(byval This as IHTMLElementDefaults ptr, byval v as long) as HRESULT
declare sub IHTMLElementDefaults_put_scrollSegmentY_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElementDefaults_get_scrollSegmentY_Proxy(byval This as IHTMLElementDefaults ptr, byval p as long ptr) as HRESULT
declare sub IHTMLElementDefaults_get_scrollSegmentY_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElementDefaults_put_isMultiLine_Proxy(byval This as IHTMLElementDefaults ptr, byval v as VARIANT_BOOL) as HRESULT
declare sub IHTMLElementDefaults_put_isMultiLine_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElementDefaults_get_isMultiLine_Proxy(byval This as IHTMLElementDefaults ptr, byval p as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLElementDefaults_get_isMultiLine_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElementDefaults_put_contentEditable_Proxy(byval This as IHTMLElementDefaults ptr, byval v as BSTR) as HRESULT
declare sub IHTMLElementDefaults_put_contentEditable_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElementDefaults_get_contentEditable_Proxy(byval This as IHTMLElementDefaults ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLElementDefaults_get_contentEditable_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElementDefaults_put_canHaveHTML_Proxy(byval This as IHTMLElementDefaults ptr, byval v as VARIANT_BOOL) as HRESULT
declare sub IHTMLElementDefaults_put_canHaveHTML_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElementDefaults_get_canHaveHTML_Proxy(byval This as IHTMLElementDefaults ptr, byval p as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLElementDefaults_get_canHaveHTML_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElementDefaults_putref_viewLink_Proxy(byval This as IHTMLElementDefaults ptr, byval v as IHTMLDocument ptr) as HRESULT
declare sub IHTMLElementDefaults_putref_viewLink_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElementDefaults_get_viewLink_Proxy(byval This as IHTMLElementDefaults ptr, byval p as IHTMLDocument ptr ptr) as HRESULT
declare sub IHTMLElementDefaults_get_viewLink_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElementDefaults_put_frozen_Proxy(byval This as IHTMLElementDefaults ptr, byval v as VARIANT_BOOL) as HRESULT
declare sub IHTMLElementDefaults_put_frozen_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLElementDefaults_get_frozen_Proxy(byval This as IHTMLElementDefaults ptr, byval p as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLElementDefaults_get_frozen_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __DispHTMLDefaults_DISPINTERFACE_DEFINED__
extern DIID_DispHTMLDefaults as const IID
type DispHTMLDefaults as DispHTMLDefaults_

type DispHTMLDefaultsVtbl
	QueryInterface as function(byval This as DispHTMLDefaults ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as DispHTMLDefaults ptr) as ULONG
	Release as function(byval This as DispHTMLDefaults ptr) as ULONG
	GetTypeInfoCount as function(byval This as DispHTMLDefaults ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as DispHTMLDefaults ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as DispHTMLDefaults ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as DispHTMLDefaults ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type DispHTMLDefaults_
	lpVtbl as DispHTMLDefaultsVtbl ptr
end type

#define DispHTMLDefaults_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define DispHTMLDefaults_AddRef(This) (This)->lpVtbl->AddRef(This)
#define DispHTMLDefaults_Release(This) (This)->lpVtbl->Release(This)
#define DispHTMLDefaults_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define DispHTMLDefaults_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define DispHTMLDefaults_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define DispHTMLDefaults_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
extern CLSID_HTMLDefaults as const CLSID
#define __IHTCDefaultDispatch_INTERFACE_DEFINED__
extern IID_IHTCDefaultDispatch as const IID
type IHTCDefaultDispatch as IHTCDefaultDispatch_

type IHTCDefaultDispatchVtbl
	QueryInterface as function(byval This as IHTCDefaultDispatch ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTCDefaultDispatch ptr) as ULONG
	Release as function(byval This as IHTCDefaultDispatch ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTCDefaultDispatch ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTCDefaultDispatch ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTCDefaultDispatch ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTCDefaultDispatch ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	get_element as function(byval This as IHTCDefaultDispatch ptr, byval p as IHTMLElement ptr ptr) as HRESULT
	createEventObject as function(byval This as IHTCDefaultDispatch ptr, byval eventObj as IHTMLEventObj ptr ptr) as HRESULT
	get_defaults as function(byval This as IHTCDefaultDispatch ptr, byval p as IDispatch ptr ptr) as HRESULT
	get_document as function(byval This as IHTCDefaultDispatch ptr, byval p as IDispatch ptr ptr) as HRESULT
end type

type IHTCDefaultDispatch_
	lpVtbl as IHTCDefaultDispatchVtbl ptr
end type

#define IHTCDefaultDispatch_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTCDefaultDispatch_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTCDefaultDispatch_Release(This) (This)->lpVtbl->Release(This)
#define IHTCDefaultDispatch_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTCDefaultDispatch_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTCDefaultDispatch_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTCDefaultDispatch_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTCDefaultDispatch_get_element(This, p) (This)->lpVtbl->get_element(This, p)
#define IHTCDefaultDispatch_createEventObject(This, eventObj) (This)->lpVtbl->createEventObject(This, eventObj)
#define IHTCDefaultDispatch_get_defaults(This, p) (This)->lpVtbl->get_defaults(This, p)
#define IHTCDefaultDispatch_get_document(This, p) (This)->lpVtbl->get_document(This, p)

declare function IHTCDefaultDispatch_get_element_Proxy(byval This as IHTCDefaultDispatch ptr, byval p as IHTMLElement ptr ptr) as HRESULT
declare sub IHTCDefaultDispatch_get_element_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTCDefaultDispatch_createEventObject_Proxy(byval This as IHTCDefaultDispatch ptr, byval eventObj as IHTMLEventObj ptr ptr) as HRESULT
declare sub IHTCDefaultDispatch_createEventObject_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTCDefaultDispatch_get_defaults_Proxy(byval This as IHTCDefaultDispatch ptr, byval p as IDispatch ptr ptr) as HRESULT
declare sub IHTCDefaultDispatch_get_defaults_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTCDefaultDispatch_get_document_Proxy(byval This as IHTCDefaultDispatch ptr, byval p as IDispatch ptr ptr) as HRESULT
declare sub IHTCDefaultDispatch_get_document_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTCPropertyBehavior_INTERFACE_DEFINED__
extern IID_IHTCPropertyBehavior as const IID
type IHTCPropertyBehavior as IHTCPropertyBehavior_

type IHTCPropertyBehaviorVtbl
	QueryInterface as function(byval This as IHTCPropertyBehavior ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTCPropertyBehavior ptr) as ULONG
	Release as function(byval This as IHTCPropertyBehavior ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTCPropertyBehavior ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTCPropertyBehavior ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTCPropertyBehavior ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTCPropertyBehavior ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	fireChange as function(byval This as IHTCPropertyBehavior ptr) as HRESULT
	put_value as function(byval This as IHTCPropertyBehavior ptr, byval v as VARIANT) as HRESULT
	get_value as function(byval This as IHTCPropertyBehavior ptr, byval p as VARIANT ptr) as HRESULT
end type

type IHTCPropertyBehavior_
	lpVtbl as IHTCPropertyBehaviorVtbl ptr
end type

#define IHTCPropertyBehavior_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTCPropertyBehavior_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTCPropertyBehavior_Release(This) (This)->lpVtbl->Release(This)
#define IHTCPropertyBehavior_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTCPropertyBehavior_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTCPropertyBehavior_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTCPropertyBehavior_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTCPropertyBehavior_fireChange(This) (This)->lpVtbl->fireChange(This)
#define IHTCPropertyBehavior_put_value(This, v) (This)->lpVtbl->put_value(This, v)
#define IHTCPropertyBehavior_get_value(This, p) (This)->lpVtbl->get_value(This, p)

declare function IHTCPropertyBehavior_fireChange_Proxy(byval This as IHTCPropertyBehavior ptr) as HRESULT
declare sub IHTCPropertyBehavior_fireChange_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTCPropertyBehavior_put_value_Proxy(byval This as IHTCPropertyBehavior ptr, byval v as VARIANT) as HRESULT
declare sub IHTCPropertyBehavior_put_value_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTCPropertyBehavior_get_value_Proxy(byval This as IHTCPropertyBehavior ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTCPropertyBehavior_get_value_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTCMethodBehavior_INTERFACE_DEFINED__
extern IID_IHTCMethodBehavior as const IID
type IHTCMethodBehavior as IHTCMethodBehavior_

type IHTCMethodBehaviorVtbl
	QueryInterface as function(byval This as IHTCMethodBehavior ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTCMethodBehavior ptr) as ULONG
	Release as function(byval This as IHTCMethodBehavior ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTCMethodBehavior ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTCMethodBehavior ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTCMethodBehavior ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTCMethodBehavior ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type IHTCMethodBehavior_
	lpVtbl as IHTCMethodBehaviorVtbl ptr
end type

#define IHTCMethodBehavior_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTCMethodBehavior_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTCMethodBehavior_Release(This) (This)->lpVtbl->Release(This)
#define IHTCMethodBehavior_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTCMethodBehavior_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTCMethodBehavior_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTCMethodBehavior_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define __IHTCEventBehavior_INTERFACE_DEFINED__
extern IID_IHTCEventBehavior as const IID
type IHTCEventBehavior as IHTCEventBehavior_

type IHTCEventBehaviorVtbl
	QueryInterface as function(byval This as IHTCEventBehavior ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTCEventBehavior ptr) as ULONG
	Release as function(byval This as IHTCEventBehavior ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTCEventBehavior ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTCEventBehavior ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTCEventBehavior ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTCEventBehavior ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	fire as function(byval This as IHTCEventBehavior ptr, byval pvar as IHTMLEventObj ptr) as HRESULT
end type

type IHTCEventBehavior_
	lpVtbl as IHTCEventBehaviorVtbl ptr
end type

#define IHTCEventBehavior_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTCEventBehavior_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTCEventBehavior_Release(This) (This)->lpVtbl->Release(This)
#define IHTCEventBehavior_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTCEventBehavior_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTCEventBehavior_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTCEventBehavior_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTCEventBehavior_fire(This, pvar) (This)->lpVtbl->fire(This, pvar)
declare function IHTCEventBehavior_fire_Proxy(byval This as IHTCEventBehavior ptr, byval pvar as IHTMLEventObj ptr) as HRESULT
declare sub IHTCEventBehavior_fire_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTCAttachBehavior_INTERFACE_DEFINED__
extern IID_IHTCAttachBehavior as const IID
type IHTCAttachBehavior as IHTCAttachBehavior_

type IHTCAttachBehaviorVtbl
	QueryInterface as function(byval This as IHTCAttachBehavior ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTCAttachBehavior ptr) as ULONG
	Release as function(byval This as IHTCAttachBehavior ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTCAttachBehavior ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTCAttachBehavior ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTCAttachBehavior ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTCAttachBehavior ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	fireEvent as function(byval This as IHTCAttachBehavior ptr, byval evt as IDispatch ptr) as HRESULT
	detachEvent as function(byval This as IHTCAttachBehavior ptr) as HRESULT
end type

type IHTCAttachBehavior_
	lpVtbl as IHTCAttachBehaviorVtbl ptr
end type

#define IHTCAttachBehavior_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTCAttachBehavior_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTCAttachBehavior_Release(This) (This)->lpVtbl->Release(This)
#define IHTCAttachBehavior_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTCAttachBehavior_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTCAttachBehavior_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTCAttachBehavior_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTCAttachBehavior_fireEvent(This, evt) (This)->lpVtbl->fireEvent(This, evt)
#define IHTCAttachBehavior_detachEvent(This) (This)->lpVtbl->detachEvent(This)

declare function IHTCAttachBehavior_fireEvent_Proxy(byval This as IHTCAttachBehavior ptr, byval evt as IDispatch ptr) as HRESULT
declare sub IHTCAttachBehavior_fireEvent_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTCAttachBehavior_detachEvent_Proxy(byval This as IHTCAttachBehavior ptr) as HRESULT
declare sub IHTCAttachBehavior_detachEvent_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTCAttachBehavior2_INTERFACE_DEFINED__
extern IID_IHTCAttachBehavior2 as const IID
type IHTCAttachBehavior2 as IHTCAttachBehavior2_

type IHTCAttachBehavior2Vtbl
	QueryInterface as function(byval This as IHTCAttachBehavior2 ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTCAttachBehavior2 ptr) as ULONG
	Release as function(byval This as IHTCAttachBehavior2 ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTCAttachBehavior2 ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTCAttachBehavior2 ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTCAttachBehavior2 ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTCAttachBehavior2 ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	fireEvent as function(byval This as IHTCAttachBehavior2 ptr, byval evt as VARIANT) as HRESULT
end type

type IHTCAttachBehavior2_
	lpVtbl as IHTCAttachBehavior2Vtbl ptr
end type

#define IHTCAttachBehavior2_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTCAttachBehavior2_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTCAttachBehavior2_Release(This) (This)->lpVtbl->Release(This)
#define IHTCAttachBehavior2_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTCAttachBehavior2_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTCAttachBehavior2_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTCAttachBehavior2_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTCAttachBehavior2_fireEvent(This, evt) (This)->lpVtbl->fireEvent(This, evt)
declare function IHTCAttachBehavior2_fireEvent_Proxy(byval This as IHTCAttachBehavior2 ptr, byval evt as VARIANT) as HRESULT
declare sub IHTCAttachBehavior2_fireEvent_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTCDescBehavior_INTERFACE_DEFINED__
extern IID_IHTCDescBehavior as const IID
type IHTCDescBehavior as IHTCDescBehavior_

type IHTCDescBehaviorVtbl
	QueryInterface as function(byval This as IHTCDescBehavior ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTCDescBehavior ptr) as ULONG
	Release as function(byval This as IHTCDescBehavior ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTCDescBehavior ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTCDescBehavior ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTCDescBehavior ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTCDescBehavior ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	get_urn as function(byval This as IHTCDescBehavior ptr, byval p as BSTR ptr) as HRESULT
	get_name as function(byval This as IHTCDescBehavior ptr, byval p as BSTR ptr) as HRESULT
end type

type IHTCDescBehavior_
	lpVtbl as IHTCDescBehaviorVtbl ptr
end type

#define IHTCDescBehavior_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTCDescBehavior_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTCDescBehavior_Release(This) (This)->lpVtbl->Release(This)
#define IHTCDescBehavior_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTCDescBehavior_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTCDescBehavior_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTCDescBehavior_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTCDescBehavior_get_urn(This, p) (This)->lpVtbl->get_urn(This, p)
#define IHTCDescBehavior_get_name(This, p) (This)->lpVtbl->get_name(This, p)

declare function IHTCDescBehavior_get_urn_Proxy(byval This as IHTCDescBehavior ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTCDescBehavior_get_urn_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTCDescBehavior_get_name_Proxy(byval This as IHTCDescBehavior ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTCDescBehavior_get_name_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __DispHTCDefaultDispatch_DISPINTERFACE_DEFINED__
extern DIID_DispHTCDefaultDispatch as const IID
type DispHTCDefaultDispatch as DispHTCDefaultDispatch_

type DispHTCDefaultDispatchVtbl
	QueryInterface as function(byval This as DispHTCDefaultDispatch ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as DispHTCDefaultDispatch ptr) as ULONG
	Release as function(byval This as DispHTCDefaultDispatch ptr) as ULONG
	GetTypeInfoCount as function(byval This as DispHTCDefaultDispatch ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as DispHTCDefaultDispatch ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as DispHTCDefaultDispatch ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as DispHTCDefaultDispatch ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type DispHTCDefaultDispatch_
	lpVtbl as DispHTCDefaultDispatchVtbl ptr
end type

#define DispHTCDefaultDispatch_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define DispHTCDefaultDispatch_AddRef(This) (This)->lpVtbl->AddRef(This)
#define DispHTCDefaultDispatch_Release(This) (This)->lpVtbl->Release(This)
#define DispHTCDefaultDispatch_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define DispHTCDefaultDispatch_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define DispHTCDefaultDispatch_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define DispHTCDefaultDispatch_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
extern CLSID_HTCDefaultDispatch as const CLSID
#define __DispHTCPropertyBehavior_DISPINTERFACE_DEFINED__
extern DIID_DispHTCPropertyBehavior as const IID
type DispHTCPropertyBehavior as DispHTCPropertyBehavior_

type DispHTCPropertyBehaviorVtbl
	QueryInterface as function(byval This as DispHTCPropertyBehavior ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as DispHTCPropertyBehavior ptr) as ULONG
	Release as function(byval This as DispHTCPropertyBehavior ptr) as ULONG
	GetTypeInfoCount as function(byval This as DispHTCPropertyBehavior ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as DispHTCPropertyBehavior ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as DispHTCPropertyBehavior ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as DispHTCPropertyBehavior ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type DispHTCPropertyBehavior_
	lpVtbl as DispHTCPropertyBehaviorVtbl ptr
end type

#define DispHTCPropertyBehavior_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define DispHTCPropertyBehavior_AddRef(This) (This)->lpVtbl->AddRef(This)
#define DispHTCPropertyBehavior_Release(This) (This)->lpVtbl->Release(This)
#define DispHTCPropertyBehavior_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define DispHTCPropertyBehavior_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define DispHTCPropertyBehavior_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define DispHTCPropertyBehavior_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
extern CLSID_HTCPropertyBehavior as const CLSID
#define __DispHTCMethodBehavior_DISPINTERFACE_DEFINED__
extern DIID_DispHTCMethodBehavior as const IID
type DispHTCMethodBehavior as DispHTCMethodBehavior_

type DispHTCMethodBehaviorVtbl
	QueryInterface as function(byval This as DispHTCMethodBehavior ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as DispHTCMethodBehavior ptr) as ULONG
	Release as function(byval This as DispHTCMethodBehavior ptr) as ULONG
	GetTypeInfoCount as function(byval This as DispHTCMethodBehavior ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as DispHTCMethodBehavior ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as DispHTCMethodBehavior ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as DispHTCMethodBehavior ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type DispHTCMethodBehavior_
	lpVtbl as DispHTCMethodBehaviorVtbl ptr
end type

#define DispHTCMethodBehavior_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define DispHTCMethodBehavior_AddRef(This) (This)->lpVtbl->AddRef(This)
#define DispHTCMethodBehavior_Release(This) (This)->lpVtbl->Release(This)
#define DispHTCMethodBehavior_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define DispHTCMethodBehavior_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define DispHTCMethodBehavior_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define DispHTCMethodBehavior_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
extern CLSID_HTCMethodBehavior as const CLSID
#define __DispHTCEventBehavior_DISPINTERFACE_DEFINED__
extern DIID_DispHTCEventBehavior as const IID
type DispHTCEventBehavior as DispHTCEventBehavior_

type DispHTCEventBehaviorVtbl
	QueryInterface as function(byval This as DispHTCEventBehavior ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as DispHTCEventBehavior ptr) as ULONG
	Release as function(byval This as DispHTCEventBehavior ptr) as ULONG
	GetTypeInfoCount as function(byval This as DispHTCEventBehavior ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as DispHTCEventBehavior ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as DispHTCEventBehavior ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as DispHTCEventBehavior ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type DispHTCEventBehavior_
	lpVtbl as DispHTCEventBehaviorVtbl ptr
end type

#define DispHTCEventBehavior_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define DispHTCEventBehavior_AddRef(This) (This)->lpVtbl->AddRef(This)
#define DispHTCEventBehavior_Release(This) (This)->lpVtbl->Release(This)
#define DispHTCEventBehavior_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define DispHTCEventBehavior_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define DispHTCEventBehavior_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define DispHTCEventBehavior_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
extern CLSID_HTCEventBehavior as const CLSID
#define __DispHTCAttachBehavior_DISPINTERFACE_DEFINED__
extern DIID_DispHTCAttachBehavior as const IID
type DispHTCAttachBehavior as DispHTCAttachBehavior_

type DispHTCAttachBehaviorVtbl
	QueryInterface as function(byval This as DispHTCAttachBehavior ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as DispHTCAttachBehavior ptr) as ULONG
	Release as function(byval This as DispHTCAttachBehavior ptr) as ULONG
	GetTypeInfoCount as function(byval This as DispHTCAttachBehavior ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as DispHTCAttachBehavior ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as DispHTCAttachBehavior ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as DispHTCAttachBehavior ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type DispHTCAttachBehavior_
	lpVtbl as DispHTCAttachBehaviorVtbl ptr
end type

#define DispHTCAttachBehavior_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define DispHTCAttachBehavior_AddRef(This) (This)->lpVtbl->AddRef(This)
#define DispHTCAttachBehavior_Release(This) (This)->lpVtbl->Release(This)
#define DispHTCAttachBehavior_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define DispHTCAttachBehavior_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define DispHTCAttachBehavior_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define DispHTCAttachBehavior_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
extern CLSID_HTCAttachBehavior as const CLSID
#define __DispHTCDescBehavior_DISPINTERFACE_DEFINED__
extern DIID_DispHTCDescBehavior as const IID
type DispHTCDescBehavior as DispHTCDescBehavior_

type DispHTCDescBehaviorVtbl
	QueryInterface as function(byval This as DispHTCDescBehavior ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as DispHTCDescBehavior ptr) as ULONG
	Release as function(byval This as DispHTCDescBehavior ptr) as ULONG
	GetTypeInfoCount as function(byval This as DispHTCDescBehavior ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as DispHTCDescBehavior ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as DispHTCDescBehavior ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as DispHTCDescBehavior ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type DispHTCDescBehavior_
	lpVtbl as DispHTCDescBehaviorVtbl ptr
end type

#define DispHTCDescBehavior_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define DispHTCDescBehavior_AddRef(This) (This)->lpVtbl->AddRef(This)
#define DispHTCDescBehavior_Release(This) (This)->lpVtbl->Release(This)
#define DispHTCDescBehavior_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define DispHTCDescBehavior_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define DispHTCDescBehavior_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define DispHTCDescBehavior_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
extern CLSID_HTCDescBehavior as const CLSID
#define __IHTMLUrnCollection_INTERFACE_DEFINED__
extern IID_IHTMLUrnCollection as const IID
type IHTMLUrnCollection as IHTMLUrnCollection_

type IHTMLUrnCollectionVtbl
	QueryInterface as function(byval This as IHTMLUrnCollection ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLUrnCollection ptr) as ULONG
	Release as function(byval This as IHTMLUrnCollection ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLUrnCollection ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLUrnCollection ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLUrnCollection ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLUrnCollection ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	get_length as function(byval This as IHTMLUrnCollection ptr, byval p as long ptr) as HRESULT
	item as function(byval This as IHTMLUrnCollection ptr, byval index as long, byval ppUrn as BSTR ptr) as HRESULT
end type

type IHTMLUrnCollection_
	lpVtbl as IHTMLUrnCollectionVtbl ptr
end type

#define IHTMLUrnCollection_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLUrnCollection_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLUrnCollection_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLUrnCollection_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLUrnCollection_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLUrnCollection_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLUrnCollection_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLUrnCollection_get_length(This, p) (This)->lpVtbl->get_length(This, p)
#define IHTMLUrnCollection_item(This, index, ppUrn) (This)->lpVtbl->item(This, index, ppUrn)

declare function IHTMLUrnCollection_get_length_Proxy(byval This as IHTMLUrnCollection ptr, byval p as long ptr) as HRESULT
declare sub IHTMLUrnCollection_get_length_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLUrnCollection_item_Proxy(byval This as IHTMLUrnCollection ptr, byval index as long, byval ppUrn as BSTR ptr) as HRESULT
declare sub IHTMLUrnCollection_item_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
extern CLSID_HTMLUrnCollection as const CLSID
#define __IHTMLGenericElement_INTERFACE_DEFINED__
extern IID_IHTMLGenericElement as const IID
type IHTMLGenericElement as IHTMLGenericElement_

type IHTMLGenericElementVtbl
	QueryInterface as function(byval This as IHTMLGenericElement ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLGenericElement ptr) as ULONG
	Release as function(byval This as IHTMLGenericElement ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLGenericElement ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLGenericElement ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLGenericElement ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLGenericElement ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	get_recordset as function(byval This as IHTMLGenericElement ptr, byval p as IDispatch ptr ptr) as HRESULT
	namedRecordset as function(byval This as IHTMLGenericElement ptr, byval dataMember as BSTR, byval hierarchy as VARIANT ptr, byval ppRecordset as IDispatch ptr ptr) as HRESULT
end type

type IHTMLGenericElement_
	lpVtbl as IHTMLGenericElementVtbl ptr
end type

#define IHTMLGenericElement_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLGenericElement_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLGenericElement_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLGenericElement_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLGenericElement_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLGenericElement_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLGenericElement_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLGenericElement_get_recordset(This, p) (This)->lpVtbl->get_recordset(This, p)
#define IHTMLGenericElement_namedRecordset(This, dataMember, hierarchy, ppRecordset) (This)->lpVtbl->namedRecordset(This, dataMember, hierarchy, ppRecordset)

declare function IHTMLGenericElement_get_recordset_Proxy(byval This as IHTMLGenericElement ptr, byval p as IDispatch ptr ptr) as HRESULT
declare sub IHTMLGenericElement_get_recordset_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLGenericElement_namedRecordset_Proxy(byval This as IHTMLGenericElement ptr, byval dataMember as BSTR, byval hierarchy as VARIANT ptr, byval ppRecordset as IDispatch ptr ptr) as HRESULT
declare sub IHTMLGenericElement_namedRecordset_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __DispHTMLGenericElement_DISPINTERFACE_DEFINED__
extern DIID_DispHTMLGenericElement as const IID
type DispHTMLGenericElement as DispHTMLGenericElement_

type DispHTMLGenericElementVtbl
	QueryInterface as function(byval This as DispHTMLGenericElement ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as DispHTMLGenericElement ptr) as ULONG
	Release as function(byval This as DispHTMLGenericElement ptr) as ULONG
	GetTypeInfoCount as function(byval This as DispHTMLGenericElement ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as DispHTMLGenericElement ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as DispHTMLGenericElement ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as DispHTMLGenericElement ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type DispHTMLGenericElement_
	lpVtbl as DispHTMLGenericElementVtbl ptr
end type

#define DispHTMLGenericElement_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define DispHTMLGenericElement_AddRef(This) (This)->lpVtbl->AddRef(This)
#define DispHTMLGenericElement_Release(This) (This)->lpVtbl->Release(This)
#define DispHTMLGenericElement_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define DispHTMLGenericElement_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define DispHTMLGenericElement_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define DispHTMLGenericElement_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
extern CLSID_HTMLGenericElement as const CLSID
#define __IHTMLStyleSheetRule_INTERFACE_DEFINED__
extern IID_IHTMLStyleSheetRule as const IID
type IHTMLStyleSheetRule as IHTMLStyleSheetRule_

type IHTMLStyleSheetRuleVtbl
	QueryInterface as function(byval This as IHTMLStyleSheetRule ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLStyleSheetRule ptr) as ULONG
	Release as function(byval This as IHTMLStyleSheetRule ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLStyleSheetRule ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLStyleSheetRule ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLStyleSheetRule ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLStyleSheetRule ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	put_selectorText as function(byval This as IHTMLStyleSheetRule ptr, byval v as BSTR) as HRESULT
	get_selectorText as function(byval This as IHTMLStyleSheetRule ptr, byval p as BSTR ptr) as HRESULT
	get_style as function(byval This as IHTMLStyleSheetRule ptr, byval p as IHTMLRuleStyle ptr ptr) as HRESULT
	get_readOnly as function(byval This as IHTMLStyleSheetRule ptr, byval p as VARIANT_BOOL ptr) as HRESULT
end type

type IHTMLStyleSheetRule_
	lpVtbl as IHTMLStyleSheetRuleVtbl ptr
end type

#define IHTMLStyleSheetRule_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLStyleSheetRule_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLStyleSheetRule_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLStyleSheetRule_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLStyleSheetRule_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLStyleSheetRule_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLStyleSheetRule_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLStyleSheetRule_put_selectorText(This, v) (This)->lpVtbl->put_selectorText(This, v)
#define IHTMLStyleSheetRule_get_selectorText(This, p) (This)->lpVtbl->get_selectorText(This, p)
#define IHTMLStyleSheetRule_get_style(This, p) (This)->lpVtbl->get_style(This, p)
#define IHTMLStyleSheetRule_get_readOnly(This, p) (This)->lpVtbl->get_readOnly(This, p)

declare function IHTMLStyleSheetRule_put_selectorText_Proxy(byval This as IHTMLStyleSheetRule ptr, byval v as BSTR) as HRESULT
declare sub IHTMLStyleSheetRule_put_selectorText_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyleSheetRule_get_selectorText_Proxy(byval This as IHTMLStyleSheetRule ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLStyleSheetRule_get_selectorText_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyleSheetRule_get_style_Proxy(byval This as IHTMLStyleSheetRule ptr, byval p as IHTMLRuleStyle ptr ptr) as HRESULT
declare sub IHTMLStyleSheetRule_get_style_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyleSheetRule_get_readOnly_Proxy(byval This as IHTMLStyleSheetRule ptr, byval p as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLStyleSheetRule_get_readOnly_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLStyleSheetRulesCollection_INTERFACE_DEFINED__
extern IID_IHTMLStyleSheetRulesCollection as const IID
type IHTMLStyleSheetRulesCollection as IHTMLStyleSheetRulesCollection_

type IHTMLStyleSheetRulesCollectionVtbl
	QueryInterface as function(byval This as IHTMLStyleSheetRulesCollection ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLStyleSheetRulesCollection ptr) as ULONG
	Release as function(byval This as IHTMLStyleSheetRulesCollection ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLStyleSheetRulesCollection ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLStyleSheetRulesCollection ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLStyleSheetRulesCollection ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLStyleSheetRulesCollection ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	get_length as function(byval This as IHTMLStyleSheetRulesCollection ptr, byval p as long ptr) as HRESULT
	item as function(byval This as IHTMLStyleSheetRulesCollection ptr, byval index as long, byval ppHTMLStyleSheetRule as IHTMLStyleSheetRule ptr ptr) as HRESULT
end type

type IHTMLStyleSheetRulesCollection_
	lpVtbl as IHTMLStyleSheetRulesCollectionVtbl ptr
end type

#define IHTMLStyleSheetRulesCollection_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLStyleSheetRulesCollection_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLStyleSheetRulesCollection_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLStyleSheetRulesCollection_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLStyleSheetRulesCollection_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLStyleSheetRulesCollection_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLStyleSheetRulesCollection_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLStyleSheetRulesCollection_get_length(This, p) (This)->lpVtbl->get_length(This, p)
#define IHTMLStyleSheetRulesCollection_item(This, index, ppHTMLStyleSheetRule) (This)->lpVtbl->item(This, index, ppHTMLStyleSheetRule)

declare function IHTMLStyleSheetRulesCollection_get_length_Proxy(byval This as IHTMLStyleSheetRulesCollection ptr, byval p as long ptr) as HRESULT
declare sub IHTMLStyleSheetRulesCollection_get_length_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyleSheetRulesCollection_item_Proxy(byval This as IHTMLStyleSheetRulesCollection ptr, byval index as long, byval ppHTMLStyleSheetRule as IHTMLStyleSheetRule ptr ptr) as HRESULT
declare sub IHTMLStyleSheetRulesCollection_item_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
extern CLSID_HTMLStyleSheetRule as const CLSID
extern CLSID_HTMLStyleSheetRulesCollection as const CLSID
#define __IHTMLStyleSheetPage_INTERFACE_DEFINED__
extern IID_IHTMLStyleSheetPage as const IID
type IHTMLStyleSheetPage as IHTMLStyleSheetPage_

type IHTMLStyleSheetPageVtbl
	QueryInterface as function(byval This as IHTMLStyleSheetPage ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLStyleSheetPage ptr) as ULONG
	Release as function(byval This as IHTMLStyleSheetPage ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLStyleSheetPage ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLStyleSheetPage ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLStyleSheetPage ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLStyleSheetPage ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	get_selector as function(byval This as IHTMLStyleSheetPage ptr, byval p as BSTR ptr) as HRESULT
	get_pseudoClass as function(byval This as IHTMLStyleSheetPage ptr, byval p as BSTR ptr) as HRESULT
end type

type IHTMLStyleSheetPage_
	lpVtbl as IHTMLStyleSheetPageVtbl ptr
end type

#define IHTMLStyleSheetPage_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLStyleSheetPage_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLStyleSheetPage_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLStyleSheetPage_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLStyleSheetPage_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLStyleSheetPage_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLStyleSheetPage_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLStyleSheetPage_get_selector(This, p) (This)->lpVtbl->get_selector(This, p)
#define IHTMLStyleSheetPage_get_pseudoClass(This, p) (This)->lpVtbl->get_pseudoClass(This, p)

declare function IHTMLStyleSheetPage_get_selector_Proxy(byval This as IHTMLStyleSheetPage ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLStyleSheetPage_get_selector_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyleSheetPage_get_pseudoClass_Proxy(byval This as IHTMLStyleSheetPage ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLStyleSheetPage_get_pseudoClass_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLStyleSheetPagesCollection_INTERFACE_DEFINED__
extern IID_IHTMLStyleSheetPagesCollection as const IID
type IHTMLStyleSheetPagesCollection as IHTMLStyleSheetPagesCollection_

type IHTMLStyleSheetPagesCollectionVtbl
	QueryInterface as function(byval This as IHTMLStyleSheetPagesCollection ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLStyleSheetPagesCollection ptr) as ULONG
	Release as function(byval This as IHTMLStyleSheetPagesCollection ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLStyleSheetPagesCollection ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLStyleSheetPagesCollection ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLStyleSheetPagesCollection ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLStyleSheetPagesCollection ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	get_length as function(byval This as IHTMLStyleSheetPagesCollection ptr, byval p as long ptr) as HRESULT
	item as function(byval This as IHTMLStyleSheetPagesCollection ptr, byval index as long, byval ppHTMLStyleSheetPage as IHTMLStyleSheetPage ptr ptr) as HRESULT
end type

type IHTMLStyleSheetPagesCollection_
	lpVtbl as IHTMLStyleSheetPagesCollectionVtbl ptr
end type

#define IHTMLStyleSheetPagesCollection_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLStyleSheetPagesCollection_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLStyleSheetPagesCollection_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLStyleSheetPagesCollection_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLStyleSheetPagesCollection_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLStyleSheetPagesCollection_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLStyleSheetPagesCollection_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLStyleSheetPagesCollection_get_length(This, p) (This)->lpVtbl->get_length(This, p)
#define IHTMLStyleSheetPagesCollection_item(This, index, ppHTMLStyleSheetPage) (This)->lpVtbl->item(This, index, ppHTMLStyleSheetPage)

declare function IHTMLStyleSheetPagesCollection_get_length_Proxy(byval This as IHTMLStyleSheetPagesCollection ptr, byval p as long ptr) as HRESULT
declare sub IHTMLStyleSheetPagesCollection_get_length_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyleSheetPagesCollection_item_Proxy(byval This as IHTMLStyleSheetPagesCollection ptr, byval index as long, byval ppHTMLStyleSheetPage as IHTMLStyleSheetPage ptr ptr) as HRESULT
declare sub IHTMLStyleSheetPagesCollection_item_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
extern CLSID_HTMLStyleSheetPage as const CLSID
extern CLSID_HTMLStyleSheetPagesCollection as const CLSID
#define __IHTMLStyleSheetsCollection_INTERFACE_DEFINED__
extern IID_IHTMLStyleSheetsCollection as const IID
type IHTMLStyleSheetsCollection as IHTMLStyleSheetsCollection_

type IHTMLStyleSheetsCollectionVtbl
	QueryInterface as function(byval This as IHTMLStyleSheetsCollection ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLStyleSheetsCollection ptr) as ULONG
	Release as function(byval This as IHTMLStyleSheetsCollection ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLStyleSheetsCollection ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLStyleSheetsCollection ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLStyleSheetsCollection ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLStyleSheetsCollection ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	get_length as function(byval This as IHTMLStyleSheetsCollection ptr, byval p as long ptr) as HRESULT
	get__newEnum as function(byval This as IHTMLStyleSheetsCollection ptr, byval p as IUnknown ptr ptr) as HRESULT
	item as function(byval This as IHTMLStyleSheetsCollection ptr, byval pvarIndex as VARIANT ptr, byval pvarResult as VARIANT ptr) as HRESULT
end type

type IHTMLStyleSheetsCollection_
	lpVtbl as IHTMLStyleSheetsCollectionVtbl ptr
end type

#define IHTMLStyleSheetsCollection_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLStyleSheetsCollection_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLStyleSheetsCollection_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLStyleSheetsCollection_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLStyleSheetsCollection_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLStyleSheetsCollection_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLStyleSheetsCollection_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLStyleSheetsCollection_get_length(This, p) (This)->lpVtbl->get_length(This, p)
#define IHTMLStyleSheetsCollection_get__newEnum(This, p) (This)->lpVtbl->get__newEnum(This, p)
#define IHTMLStyleSheetsCollection_item(This, pvarIndex, pvarResult) (This)->lpVtbl->item(This, pvarIndex, pvarResult)

declare function IHTMLStyleSheetsCollection_get_length_Proxy(byval This as IHTMLStyleSheetsCollection ptr, byval p as long ptr) as HRESULT
declare sub IHTMLStyleSheetsCollection_get_length_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyleSheetsCollection_get__newEnum_Proxy(byval This as IHTMLStyleSheetsCollection ptr, byval p as IUnknown ptr ptr) as HRESULT
declare sub IHTMLStyleSheetsCollection_get__newEnum_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyleSheetsCollection_item_Proxy(byval This as IHTMLStyleSheetsCollection ptr, byval pvarIndex as VARIANT ptr, byval pvarResult as VARIANT ptr) as HRESULT
declare sub IHTMLStyleSheetsCollection_item_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLStyleSheet_INTERFACE_DEFINED__
extern IID_IHTMLStyleSheet as const IID
type IHTMLStyleSheet as IHTMLStyleSheet_

type IHTMLStyleSheetVtbl
	QueryInterface as function(byval This as IHTMLStyleSheet ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLStyleSheet ptr) as ULONG
	Release as function(byval This as IHTMLStyleSheet ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLStyleSheet ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLStyleSheet ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLStyleSheet ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLStyleSheet ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	put_title as function(byval This as IHTMLStyleSheet ptr, byval v as BSTR) as HRESULT
	get_title as function(byval This as IHTMLStyleSheet ptr, byval p as BSTR ptr) as HRESULT
	get_parentStyleSheet as function(byval This as IHTMLStyleSheet ptr, byval p as IHTMLStyleSheet ptr ptr) as HRESULT
	get_owningElement as function(byval This as IHTMLStyleSheet ptr, byval p as IHTMLElement ptr ptr) as HRESULT
	put_disabled as function(byval This as IHTMLStyleSheet ptr, byval v as VARIANT_BOOL) as HRESULT
	get_disabled as function(byval This as IHTMLStyleSheet ptr, byval p as VARIANT_BOOL ptr) as HRESULT
	get_readOnly as function(byval This as IHTMLStyleSheet ptr, byval p as VARIANT_BOOL ptr) as HRESULT
	get_imports as function(byval This as IHTMLStyleSheet ptr, byval p as IHTMLStyleSheetsCollection ptr ptr) as HRESULT
	put_href as function(byval This as IHTMLStyleSheet ptr, byval v as BSTR) as HRESULT
	get_href as function(byval This as IHTMLStyleSheet ptr, byval p as BSTR ptr) as HRESULT
	get_type as function(byval This as IHTMLStyleSheet ptr, byval p as BSTR ptr) as HRESULT
	get_id as function(byval This as IHTMLStyleSheet ptr, byval p as BSTR ptr) as HRESULT
	addImport as function(byval This as IHTMLStyleSheet ptr, byval bstrURL as BSTR, byval lIndex as long, byval plIndex as long ptr) as HRESULT
	addRule as function(byval This as IHTMLStyleSheet ptr, byval bstrSelector as BSTR, byval bstrStyle as BSTR, byval lIndex as long, byval plNewIndex as long ptr) as HRESULT
	removeImport as function(byval This as IHTMLStyleSheet ptr, byval lIndex as long) as HRESULT
	removeRule as function(byval This as IHTMLStyleSheet ptr, byval lIndex as long) as HRESULT
	put_media as function(byval This as IHTMLStyleSheet ptr, byval v as BSTR) as HRESULT
	get_media as function(byval This as IHTMLStyleSheet ptr, byval p as BSTR ptr) as HRESULT
	put_cssText as function(byval This as IHTMLStyleSheet ptr, byval v as BSTR) as HRESULT
	get_cssText as function(byval This as IHTMLStyleSheet ptr, byval p as BSTR ptr) as HRESULT
	get_rules as function(byval This as IHTMLStyleSheet ptr, byval p as IHTMLStyleSheetRulesCollection ptr ptr) as HRESULT
end type

type IHTMLStyleSheet_
	lpVtbl as IHTMLStyleSheetVtbl ptr
end type

#define IHTMLStyleSheet_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLStyleSheet_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLStyleSheet_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLStyleSheet_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLStyleSheet_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLStyleSheet_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLStyleSheet_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLStyleSheet_put_title(This, v) (This)->lpVtbl->put_title(This, v)
#define IHTMLStyleSheet_get_title(This, p) (This)->lpVtbl->get_title(This, p)
#define IHTMLStyleSheet_get_parentStyleSheet(This, p) (This)->lpVtbl->get_parentStyleSheet(This, p)
#define IHTMLStyleSheet_get_owningElement(This, p) (This)->lpVtbl->get_owningElement(This, p)
#define IHTMLStyleSheet_put_disabled(This, v) (This)->lpVtbl->put_disabled(This, v)
#define IHTMLStyleSheet_get_disabled(This, p) (This)->lpVtbl->get_disabled(This, p)
#define IHTMLStyleSheet_get_readOnly(This, p) (This)->lpVtbl->get_readOnly(This, p)
#define IHTMLStyleSheet_get_imports(This, p) (This)->lpVtbl->get_imports(This, p)
#define IHTMLStyleSheet_put_href(This, v) (This)->lpVtbl->put_href(This, v)
#define IHTMLStyleSheet_get_href(This, p) (This)->lpVtbl->get_href(This, p)
#define IHTMLStyleSheet_get_type(This, p) (This)->lpVtbl->get_type(This, p)
#define IHTMLStyleSheet_get_id(This, p) (This)->lpVtbl->get_id(This, p)
#define IHTMLStyleSheet_addImport(This, bstrURL, lIndex, plIndex) (This)->lpVtbl->addImport(This, bstrURL, lIndex, plIndex)
#define IHTMLStyleSheet_addRule(This, bstrSelector, bstrStyle, lIndex, plNewIndex) (This)->lpVtbl->addRule(This, bstrSelector, bstrStyle, lIndex, plNewIndex)
#define IHTMLStyleSheet_removeImport(This, lIndex) (This)->lpVtbl->removeImport(This, lIndex)
#define IHTMLStyleSheet_removeRule(This, lIndex) (This)->lpVtbl->removeRule(This, lIndex)
#define IHTMLStyleSheet_put_media(This, v) (This)->lpVtbl->put_media(This, v)
#define IHTMLStyleSheet_get_media(This, p) (This)->lpVtbl->get_media(This, p)
#define IHTMLStyleSheet_put_cssText(This, v) (This)->lpVtbl->put_cssText(This, v)
#define IHTMLStyleSheet_get_cssText(This, p) (This)->lpVtbl->get_cssText(This, p)
#define IHTMLStyleSheet_get_rules(This, p) (This)->lpVtbl->get_rules(This, p)

declare function IHTMLStyleSheet_put_title_Proxy(byval This as IHTMLStyleSheet ptr, byval v as BSTR) as HRESULT
declare sub IHTMLStyleSheet_put_title_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyleSheet_get_title_Proxy(byval This as IHTMLStyleSheet ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLStyleSheet_get_title_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyleSheet_get_parentStyleSheet_Proxy(byval This as IHTMLStyleSheet ptr, byval p as IHTMLStyleSheet ptr ptr) as HRESULT
declare sub IHTMLStyleSheet_get_parentStyleSheet_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyleSheet_get_owningElement_Proxy(byval This as IHTMLStyleSheet ptr, byval p as IHTMLElement ptr ptr) as HRESULT
declare sub IHTMLStyleSheet_get_owningElement_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyleSheet_put_disabled_Proxy(byval This as IHTMLStyleSheet ptr, byval v as VARIANT_BOOL) as HRESULT
declare sub IHTMLStyleSheet_put_disabled_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyleSheet_get_disabled_Proxy(byval This as IHTMLStyleSheet ptr, byval p as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLStyleSheet_get_disabled_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyleSheet_get_readOnly_Proxy(byval This as IHTMLStyleSheet ptr, byval p as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLStyleSheet_get_readOnly_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyleSheet_get_imports_Proxy(byval This as IHTMLStyleSheet ptr, byval p as IHTMLStyleSheetsCollection ptr ptr) as HRESULT
declare sub IHTMLStyleSheet_get_imports_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyleSheet_put_href_Proxy(byval This as IHTMLStyleSheet ptr, byval v as BSTR) as HRESULT
declare sub IHTMLStyleSheet_put_href_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyleSheet_get_href_Proxy(byval This as IHTMLStyleSheet ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLStyleSheet_get_href_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyleSheet_get_type_Proxy(byval This as IHTMLStyleSheet ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLStyleSheet_get_type_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyleSheet_get_id_Proxy(byval This as IHTMLStyleSheet ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLStyleSheet_get_id_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyleSheet_addImport_Proxy(byval This as IHTMLStyleSheet ptr, byval bstrURL as BSTR, byval lIndex as long, byval plIndex as long ptr) as HRESULT
declare sub IHTMLStyleSheet_addImport_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyleSheet_addRule_Proxy(byval This as IHTMLStyleSheet ptr, byval bstrSelector as BSTR, byval bstrStyle as BSTR, byval lIndex as long, byval plNewIndex as long ptr) as HRESULT
declare sub IHTMLStyleSheet_addRule_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyleSheet_removeImport_Proxy(byval This as IHTMLStyleSheet ptr, byval lIndex as long) as HRESULT
declare sub IHTMLStyleSheet_removeImport_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyleSheet_removeRule_Proxy(byval This as IHTMLStyleSheet ptr, byval lIndex as long) as HRESULT
declare sub IHTMLStyleSheet_removeRule_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyleSheet_put_media_Proxy(byval This as IHTMLStyleSheet ptr, byval v as BSTR) as HRESULT
declare sub IHTMLStyleSheet_put_media_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyleSheet_get_media_Proxy(byval This as IHTMLStyleSheet ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLStyleSheet_get_media_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyleSheet_put_cssText_Proxy(byval This as IHTMLStyleSheet ptr, byval v as BSTR) as HRESULT
declare sub IHTMLStyleSheet_put_cssText_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyleSheet_get_cssText_Proxy(byval This as IHTMLStyleSheet ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLStyleSheet_get_cssText_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyleSheet_get_rules_Proxy(byval This as IHTMLStyleSheet ptr, byval p as IHTMLStyleSheetRulesCollection ptr ptr) as HRESULT
declare sub IHTMLStyleSheet_get_rules_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLStyleSheet2_INTERFACE_DEFINED__
extern IID_IHTMLStyleSheet2 as const IID
type IHTMLStyleSheet2 as IHTMLStyleSheet2_

type IHTMLStyleSheet2Vtbl
	QueryInterface as function(byval This as IHTMLStyleSheet2 ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLStyleSheet2 ptr) as ULONG
	Release as function(byval This as IHTMLStyleSheet2 ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLStyleSheet2 ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLStyleSheet2 ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLStyleSheet2 ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLStyleSheet2 ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	get_pages as function(byval This as IHTMLStyleSheet2 ptr, byval p as IHTMLStyleSheetPagesCollection ptr ptr) as HRESULT
	addPageRule as function(byval This as IHTMLStyleSheet2 ptr, byval bstrSelector as BSTR, byval bstrStyle as BSTR, byval lIndex as long, byval plNewIndex as long ptr) as HRESULT
end type

type IHTMLStyleSheet2_
	lpVtbl as IHTMLStyleSheet2Vtbl ptr
end type

#define IHTMLStyleSheet2_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLStyleSheet2_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLStyleSheet2_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLStyleSheet2_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLStyleSheet2_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLStyleSheet2_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLStyleSheet2_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLStyleSheet2_get_pages(This, p) (This)->lpVtbl->get_pages(This, p)
#define IHTMLStyleSheet2_addPageRule(This, bstrSelector, bstrStyle, lIndex, plNewIndex) (This)->lpVtbl->addPageRule(This, bstrSelector, bstrStyle, lIndex, plNewIndex)

declare function IHTMLStyleSheet2_get_pages_Proxy(byval This as IHTMLStyleSheet2 ptr, byval p as IHTMLStyleSheetPagesCollection ptr ptr) as HRESULT
declare sub IHTMLStyleSheet2_get_pages_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyleSheet2_addPageRule_Proxy(byval This as IHTMLStyleSheet2 ptr, byval bstrSelector as BSTR, byval bstrStyle as BSTR, byval lIndex as long, byval plNewIndex as long ptr) as HRESULT
declare sub IHTMLStyleSheet2_addPageRule_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __DispHTMLStyleSheet_DISPINTERFACE_DEFINED__
extern DIID_DispHTMLStyleSheet as const IID
type DispHTMLStyleSheet as DispHTMLStyleSheet_

type DispHTMLStyleSheetVtbl
	QueryInterface as function(byval This as DispHTMLStyleSheet ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as DispHTMLStyleSheet ptr) as ULONG
	Release as function(byval This as DispHTMLStyleSheet ptr) as ULONG
	GetTypeInfoCount as function(byval This as DispHTMLStyleSheet ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as DispHTMLStyleSheet ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as DispHTMLStyleSheet ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as DispHTMLStyleSheet ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type DispHTMLStyleSheet_
	lpVtbl as DispHTMLStyleSheetVtbl ptr
end type

#define DispHTMLStyleSheet_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define DispHTMLStyleSheet_AddRef(This) (This)->lpVtbl->AddRef(This)
#define DispHTMLStyleSheet_Release(This) (This)->lpVtbl->Release(This)
#define DispHTMLStyleSheet_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define DispHTMLStyleSheet_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define DispHTMLStyleSheet_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define DispHTMLStyleSheet_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
extern CLSID_HTMLStyleSheet as const CLSID
extern CLSID_HTMLStyleSheetsCollection as const CLSID
#define __HTMLLinkElementEvents2_DISPINTERFACE_DEFINED__
extern DIID_HTMLLinkElementEvents2 as const IID
type HTMLLinkElementEvents2 as HTMLLinkElementEvents2_

type HTMLLinkElementEvents2Vtbl
	QueryInterface as function(byval This as HTMLLinkElementEvents2 ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as HTMLLinkElementEvents2 ptr) as ULONG
	Release as function(byval This as HTMLLinkElementEvents2 ptr) as ULONG
	GetTypeInfoCount as function(byval This as HTMLLinkElementEvents2 ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as HTMLLinkElementEvents2 ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as HTMLLinkElementEvents2 ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as HTMLLinkElementEvents2 ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type HTMLLinkElementEvents2_
	lpVtbl as HTMLLinkElementEvents2Vtbl ptr
end type

#define HTMLLinkElementEvents2_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define HTMLLinkElementEvents2_AddRef(This) (This)->lpVtbl->AddRef(This)
#define HTMLLinkElementEvents2_Release(This) (This)->lpVtbl->Release(This)
#define HTMLLinkElementEvents2_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define HTMLLinkElementEvents2_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define HTMLLinkElementEvents2_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define HTMLLinkElementEvents2_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define __HTMLLinkElementEvents_DISPINTERFACE_DEFINED__
extern DIID_HTMLLinkElementEvents as const IID
type HTMLLinkElementEvents as HTMLLinkElementEvents_

type HTMLLinkElementEventsVtbl
	QueryInterface as function(byval This as HTMLLinkElementEvents ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as HTMLLinkElementEvents ptr) as ULONG
	Release as function(byval This as HTMLLinkElementEvents ptr) as ULONG
	GetTypeInfoCount as function(byval This as HTMLLinkElementEvents ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as HTMLLinkElementEvents ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as HTMLLinkElementEvents ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as HTMLLinkElementEvents ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type HTMLLinkElementEvents_
	lpVtbl as HTMLLinkElementEventsVtbl ptr
end type

#define HTMLLinkElementEvents_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define HTMLLinkElementEvents_AddRef(This) (This)->lpVtbl->AddRef(This)
#define HTMLLinkElementEvents_Release(This) (This)->lpVtbl->Release(This)
#define HTMLLinkElementEvents_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define HTMLLinkElementEvents_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define HTMLLinkElementEvents_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define HTMLLinkElementEvents_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define __IHTMLLinkElement_INTERFACE_DEFINED__
extern IID_IHTMLLinkElement as const IID
type IHTMLLinkElement as IHTMLLinkElement_

type IHTMLLinkElementVtbl
	QueryInterface as function(byval This as IHTMLLinkElement ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLLinkElement ptr) as ULONG
	Release as function(byval This as IHTMLLinkElement ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLLinkElement ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLLinkElement ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLLinkElement ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLLinkElement ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	put_href as function(byval This as IHTMLLinkElement ptr, byval v as BSTR) as HRESULT
	get_href as function(byval This as IHTMLLinkElement ptr, byval p as BSTR ptr) as HRESULT
	put_rel as function(byval This as IHTMLLinkElement ptr, byval v as BSTR) as HRESULT
	get_rel as function(byval This as IHTMLLinkElement ptr, byval p as BSTR ptr) as HRESULT
	put_rev as function(byval This as IHTMLLinkElement ptr, byval v as BSTR) as HRESULT
	get_rev as function(byval This as IHTMLLinkElement ptr, byval p as BSTR ptr) as HRESULT
	put_type as function(byval This as IHTMLLinkElement ptr, byval v as BSTR) as HRESULT
	get_type as function(byval This as IHTMLLinkElement ptr, byval p as BSTR ptr) as HRESULT
	get_readyState as function(byval This as IHTMLLinkElement ptr, byval p as BSTR ptr) as HRESULT
	put_onreadystatechange as function(byval This as IHTMLLinkElement ptr, byval v as VARIANT) as HRESULT
	get_onreadystatechange as function(byval This as IHTMLLinkElement ptr, byval p as VARIANT ptr) as HRESULT
	put_onload as function(byval This as IHTMLLinkElement ptr, byval v as VARIANT) as HRESULT
	get_onload as function(byval This as IHTMLLinkElement ptr, byval p as VARIANT ptr) as HRESULT
	put_onerror as function(byval This as IHTMLLinkElement ptr, byval v as VARIANT) as HRESULT
	get_onerror as function(byval This as IHTMLLinkElement ptr, byval p as VARIANT ptr) as HRESULT
	get_styleSheet as function(byval This as IHTMLLinkElement ptr, byval p as IHTMLStyleSheet ptr ptr) as HRESULT
	put_disabled as function(byval This as IHTMLLinkElement ptr, byval v as VARIANT_BOOL) as HRESULT
	get_disabled as function(byval This as IHTMLLinkElement ptr, byval p as VARIANT_BOOL ptr) as HRESULT
	put_media as function(byval This as IHTMLLinkElement ptr, byval v as BSTR) as HRESULT
	get_media as function(byval This as IHTMLLinkElement ptr, byval p as BSTR ptr) as HRESULT
end type

type IHTMLLinkElement_
	lpVtbl as IHTMLLinkElementVtbl ptr
end type

#define IHTMLLinkElement_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLLinkElement_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLLinkElement_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLLinkElement_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLLinkElement_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLLinkElement_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLLinkElement_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLLinkElement_put_href(This, v) (This)->lpVtbl->put_href(This, v)
#define IHTMLLinkElement_get_href(This, p) (This)->lpVtbl->get_href(This, p)
#define IHTMLLinkElement_put_rel(This, v) (This)->lpVtbl->put_rel(This, v)
#define IHTMLLinkElement_get_rel(This, p) (This)->lpVtbl->get_rel(This, p)
#define IHTMLLinkElement_put_rev(This, v) (This)->lpVtbl->put_rev(This, v)
#define IHTMLLinkElement_get_rev(This, p) (This)->lpVtbl->get_rev(This, p)
#define IHTMLLinkElement_put_type(This, v) (This)->lpVtbl->put_type(This, v)
#define IHTMLLinkElement_get_type(This, p) (This)->lpVtbl->get_type(This, p)
#define IHTMLLinkElement_get_readyState(This, p) (This)->lpVtbl->get_readyState(This, p)
#define IHTMLLinkElement_put_onreadystatechange(This, v) (This)->lpVtbl->put_onreadystatechange(This, v)
#define IHTMLLinkElement_get_onreadystatechange(This, p) (This)->lpVtbl->get_onreadystatechange(This, p)
#define IHTMLLinkElement_put_onload(This, v) (This)->lpVtbl->put_onload(This, v)
#define IHTMLLinkElement_get_onload(This, p) (This)->lpVtbl->get_onload(This, p)
#define IHTMLLinkElement_put_onerror(This, v) (This)->lpVtbl->put_onerror(This, v)
#define IHTMLLinkElement_get_onerror(This, p) (This)->lpVtbl->get_onerror(This, p)
#define IHTMLLinkElement_get_styleSheet(This, p) (This)->lpVtbl->get_styleSheet(This, p)
#define IHTMLLinkElement_put_disabled(This, v) (This)->lpVtbl->put_disabled(This, v)
#define IHTMLLinkElement_get_disabled(This, p) (This)->lpVtbl->get_disabled(This, p)
#define IHTMLLinkElement_put_media(This, v) (This)->lpVtbl->put_media(This, v)
#define IHTMLLinkElement_get_media(This, p) (This)->lpVtbl->get_media(This, p)

declare function IHTMLLinkElement_put_href_Proxy(byval This as IHTMLLinkElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLLinkElement_put_href_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLLinkElement_get_href_Proxy(byval This as IHTMLLinkElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLLinkElement_get_href_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLLinkElement_put_rel_Proxy(byval This as IHTMLLinkElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLLinkElement_put_rel_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLLinkElement_get_rel_Proxy(byval This as IHTMLLinkElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLLinkElement_get_rel_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLLinkElement_put_rev_Proxy(byval This as IHTMLLinkElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLLinkElement_put_rev_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLLinkElement_get_rev_Proxy(byval This as IHTMLLinkElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLLinkElement_get_rev_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLLinkElement_put_type_Proxy(byval This as IHTMLLinkElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLLinkElement_put_type_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLLinkElement_get_type_Proxy(byval This as IHTMLLinkElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLLinkElement_get_type_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLLinkElement_get_readyState_Proxy(byval This as IHTMLLinkElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLLinkElement_get_readyState_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLLinkElement_put_onreadystatechange_Proxy(byval This as IHTMLLinkElement ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLLinkElement_put_onreadystatechange_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLLinkElement_get_onreadystatechange_Proxy(byval This as IHTMLLinkElement ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLLinkElement_get_onreadystatechange_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLLinkElement_put_onload_Proxy(byval This as IHTMLLinkElement ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLLinkElement_put_onload_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLLinkElement_get_onload_Proxy(byval This as IHTMLLinkElement ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLLinkElement_get_onload_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLLinkElement_put_onerror_Proxy(byval This as IHTMLLinkElement ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLLinkElement_put_onerror_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLLinkElement_get_onerror_Proxy(byval This as IHTMLLinkElement ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLLinkElement_get_onerror_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLLinkElement_get_styleSheet_Proxy(byval This as IHTMLLinkElement ptr, byval p as IHTMLStyleSheet ptr ptr) as HRESULT
declare sub IHTMLLinkElement_get_styleSheet_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLLinkElement_put_disabled_Proxy(byval This as IHTMLLinkElement ptr, byval v as VARIANT_BOOL) as HRESULT
declare sub IHTMLLinkElement_put_disabled_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLLinkElement_get_disabled_Proxy(byval This as IHTMLLinkElement ptr, byval p as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLLinkElement_get_disabled_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLLinkElement_put_media_Proxy(byval This as IHTMLLinkElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLLinkElement_put_media_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLLinkElement_get_media_Proxy(byval This as IHTMLLinkElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLLinkElement_get_media_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLLinkElement2_INTERFACE_DEFINED__
extern IID_IHTMLLinkElement2 as const IID
type IHTMLLinkElement2 as IHTMLLinkElement2_

type IHTMLLinkElement2Vtbl
	QueryInterface as function(byval This as IHTMLLinkElement2 ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLLinkElement2 ptr) as ULONG
	Release as function(byval This as IHTMLLinkElement2 ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLLinkElement2 ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLLinkElement2 ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLLinkElement2 ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLLinkElement2 ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	put_target as function(byval This as IHTMLLinkElement2 ptr, byval v as BSTR) as HRESULT
	get_target as function(byval This as IHTMLLinkElement2 ptr, byval p as BSTR ptr) as HRESULT
end type

type IHTMLLinkElement2_
	lpVtbl as IHTMLLinkElement2Vtbl ptr
end type

#define IHTMLLinkElement2_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLLinkElement2_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLLinkElement2_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLLinkElement2_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLLinkElement2_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLLinkElement2_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLLinkElement2_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLLinkElement2_put_target(This, v) (This)->lpVtbl->put_target(This, v)
#define IHTMLLinkElement2_get_target(This, p) (This)->lpVtbl->get_target(This, p)

declare function IHTMLLinkElement2_put_target_Proxy(byval This as IHTMLLinkElement2 ptr, byval v as BSTR) as HRESULT
declare sub IHTMLLinkElement2_put_target_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLLinkElement2_get_target_Proxy(byval This as IHTMLLinkElement2 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLLinkElement2_get_target_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLLinkElement3_INTERFACE_DEFINED__
extern IID_IHTMLLinkElement3 as const IID
type IHTMLLinkElement3 as IHTMLLinkElement3_

type IHTMLLinkElement3Vtbl
	QueryInterface as function(byval This as IHTMLLinkElement3 ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLLinkElement3 ptr) as ULONG
	Release as function(byval This as IHTMLLinkElement3 ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLLinkElement3 ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLLinkElement3 ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLLinkElement3 ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLLinkElement3 ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	put_charset as function(byval This as IHTMLLinkElement3 ptr, byval v as BSTR) as HRESULT
	get_charset as function(byval This as IHTMLLinkElement3 ptr, byval p as BSTR ptr) as HRESULT
	put_hreflang as function(byval This as IHTMLLinkElement3 ptr, byval v as BSTR) as HRESULT
	get_hreflang as function(byval This as IHTMLLinkElement3 ptr, byval p as BSTR ptr) as HRESULT
end type

type IHTMLLinkElement3_
	lpVtbl as IHTMLLinkElement3Vtbl ptr
end type

#define IHTMLLinkElement3_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLLinkElement3_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLLinkElement3_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLLinkElement3_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLLinkElement3_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLLinkElement3_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLLinkElement3_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLLinkElement3_put_charset(This, v) (This)->lpVtbl->put_charset(This, v)
#define IHTMLLinkElement3_get_charset(This, p) (This)->lpVtbl->get_charset(This, p)
#define IHTMLLinkElement3_put_hreflang(This, v) (This)->lpVtbl->put_hreflang(This, v)
#define IHTMLLinkElement3_get_hreflang(This, p) (This)->lpVtbl->get_hreflang(This, p)

declare function IHTMLLinkElement3_put_charset_Proxy(byval This as IHTMLLinkElement3 ptr, byval v as BSTR) as HRESULT
declare sub IHTMLLinkElement3_put_charset_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLLinkElement3_get_charset_Proxy(byval This as IHTMLLinkElement3 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLLinkElement3_get_charset_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLLinkElement3_put_hreflang_Proxy(byval This as IHTMLLinkElement3 ptr, byval v as BSTR) as HRESULT
declare sub IHTMLLinkElement3_put_hreflang_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLLinkElement3_get_hreflang_Proxy(byval This as IHTMLLinkElement3 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLLinkElement3_get_hreflang_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __DispHTMLLinkElement_DISPINTERFACE_DEFINED__
extern DIID_DispHTMLLinkElement as const IID
type DispHTMLLinkElement as DispHTMLLinkElement_

type DispHTMLLinkElementVtbl
	QueryInterface as function(byval This as DispHTMLLinkElement ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as DispHTMLLinkElement ptr) as ULONG
	Release as function(byval This as DispHTMLLinkElement ptr) as ULONG
	GetTypeInfoCount as function(byval This as DispHTMLLinkElement ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as DispHTMLLinkElement ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as DispHTMLLinkElement ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as DispHTMLLinkElement ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type DispHTMLLinkElement_
	lpVtbl as DispHTMLLinkElementVtbl ptr
end type

#define DispHTMLLinkElement_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define DispHTMLLinkElement_AddRef(This) (This)->lpVtbl->AddRef(This)
#define DispHTMLLinkElement_Release(This) (This)->lpVtbl->Release(This)
#define DispHTMLLinkElement_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define DispHTMLLinkElement_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define DispHTMLLinkElement_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define DispHTMLLinkElement_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
extern CLSID_HTMLLinkElement as const CLSID
#define __IHTMLTxtRange_INTERFACE_DEFINED__
extern IID_IHTMLTxtRange as const IID
type IHTMLTxtRange as IHTMLTxtRange_

type IHTMLTxtRangeVtbl
	QueryInterface as function(byval This as IHTMLTxtRange ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLTxtRange ptr) as ULONG
	Release as function(byval This as IHTMLTxtRange ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLTxtRange ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLTxtRange ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLTxtRange ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLTxtRange ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	get_htmlText as function(byval This as IHTMLTxtRange ptr, byval p as BSTR ptr) as HRESULT
	put_text as function(byval This as IHTMLTxtRange ptr, byval v as BSTR) as HRESULT
	get_text as function(byval This as IHTMLTxtRange ptr, byval p as BSTR ptr) as HRESULT
	parentElement as function(byval This as IHTMLTxtRange ptr, byval parent as IHTMLElement ptr ptr) as HRESULT
	duplicate as function(byval This as IHTMLTxtRange ptr, byval Duplicate as IHTMLTxtRange ptr ptr) as HRESULT
	inRange as function(byval This as IHTMLTxtRange ptr, byval Range as IHTMLTxtRange ptr, byval InRange as VARIANT_BOOL ptr) as HRESULT
	isEqual as function(byval This as IHTMLTxtRange ptr, byval Range as IHTMLTxtRange ptr, byval IsEqual as VARIANT_BOOL ptr) as HRESULT
	scrollIntoView as function(byval This as IHTMLTxtRange ptr, byval fStart as VARIANT_BOOL) as HRESULT
	collapse as function(byval This as IHTMLTxtRange ptr, byval Start as VARIANT_BOOL) as HRESULT
	expand as function(byval This as IHTMLTxtRange ptr, byval Unit as BSTR, byval Success as VARIANT_BOOL ptr) as HRESULT
	move as function(byval This as IHTMLTxtRange ptr, byval Unit as BSTR, byval Count as long, byval ActualCount as long ptr) as HRESULT
	moveStart as function(byval This as IHTMLTxtRange ptr, byval Unit as BSTR, byval Count as long, byval ActualCount as long ptr) as HRESULT
	moveEnd as function(byval This as IHTMLTxtRange ptr, byval Unit as BSTR, byval Count as long, byval ActualCount as long ptr) as HRESULT
	select as function(byval This as IHTMLTxtRange ptr) as HRESULT
	pasteHTML as function(byval This as IHTMLTxtRange ptr, byval html as BSTR) as HRESULT
	moveToElementText as function(byval This as IHTMLTxtRange ptr, byval element as IHTMLElement ptr) as HRESULT
	setEndPoint as function(byval This as IHTMLTxtRange ptr, byval how as BSTR, byval SourceRange as IHTMLTxtRange ptr) as HRESULT
	compareEndPoints as function(byval This as IHTMLTxtRange ptr, byval how as BSTR, byval SourceRange as IHTMLTxtRange ptr, byval ret as long ptr) as HRESULT
	findText as function(byval This as IHTMLTxtRange ptr, byval String as BSTR, byval count as long, byval Flags as long, byval Success as VARIANT_BOOL ptr) as HRESULT
	moveToPoint as function(byval This as IHTMLTxtRange ptr, byval x as long, byval y as long) as HRESULT
	getBookmark as function(byval This as IHTMLTxtRange ptr, byval Boolmark as BSTR ptr) as HRESULT
	moveToBookmark as function(byval This as IHTMLTxtRange ptr, byval Bookmark as BSTR, byval Success as VARIANT_BOOL ptr) as HRESULT
	queryCommandSupported as function(byval This as IHTMLTxtRange ptr, byval cmdID as BSTR, byval pfRet as VARIANT_BOOL ptr) as HRESULT
	queryCommandEnabled as function(byval This as IHTMLTxtRange ptr, byval cmdID as BSTR, byval pfRet as VARIANT_BOOL ptr) as HRESULT
	queryCommandState as function(byval This as IHTMLTxtRange ptr, byval cmdID as BSTR, byval pfRet as VARIANT_BOOL ptr) as HRESULT
	queryCommandIndeterm as function(byval This as IHTMLTxtRange ptr, byval cmdID as BSTR, byval pfRet as VARIANT_BOOL ptr) as HRESULT
	queryCommandText as function(byval This as IHTMLTxtRange ptr, byval cmdID as BSTR, byval pcmdText as BSTR ptr) as HRESULT
	queryCommandValue as function(byval This as IHTMLTxtRange ptr, byval cmdID as BSTR, byval pcmdValue as VARIANT ptr) as HRESULT
	execCommand as function(byval This as IHTMLTxtRange ptr, byval cmdID as BSTR, byval showUI as VARIANT_BOOL, byval value as VARIANT, byval pfRet as VARIANT_BOOL ptr) as HRESULT
	execCommandShowHelp as function(byval This as IHTMLTxtRange ptr, byval cmdID as BSTR, byval pfRet as VARIANT_BOOL ptr) as HRESULT
end type

type IHTMLTxtRange_
	lpVtbl as IHTMLTxtRangeVtbl ptr
end type

#define IHTMLTxtRange_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLTxtRange_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLTxtRange_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLTxtRange_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLTxtRange_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLTxtRange_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLTxtRange_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLTxtRange_get_htmlText(This, p) (This)->lpVtbl->get_htmlText(This, p)
#define IHTMLTxtRange_put_text(This, v) (This)->lpVtbl->put_text(This, v)
#define IHTMLTxtRange_get_text(This, p) (This)->lpVtbl->get_text(This, p)
#define IHTMLTxtRange_parentElement(This, parent) (This)->lpVtbl->parentElement(This, parent)
#define IHTMLTxtRange_duplicate(This, Duplicate) (This)->lpVtbl->duplicate(This, Duplicate)
#define IHTMLTxtRange_inRange(This, Range, InRange) (This)->lpVtbl->inRange(This, Range, InRange)
#define IHTMLTxtRange_isEqual(This, Range, IsEqual) (This)->lpVtbl->isEqual(This, Range, IsEqual)
#define IHTMLTxtRange_scrollIntoView(This, fStart) (This)->lpVtbl->scrollIntoView(This, fStart)
#define IHTMLTxtRange_collapse(This, Start) (This)->lpVtbl->collapse(This, Start)
#define IHTMLTxtRange_expand(This, Unit, Success) (This)->lpVtbl->expand(This, Unit, Success)
#define IHTMLTxtRange_move(This, Unit, Count, ActualCount) (This)->lpVtbl->move(This, Unit, Count, ActualCount)
#define IHTMLTxtRange_moveStart(This, Unit, Count, ActualCount) (This)->lpVtbl->moveStart(This, Unit, Count, ActualCount)
#define IHTMLTxtRange_moveEnd(This, Unit, Count, ActualCount) (This)->lpVtbl->moveEnd(This, Unit, Count, ActualCount)
#define IHTMLTxtRange_select(This) (This)->lpVtbl->select(This)
#define IHTMLTxtRange_pasteHTML(This, html) (This)->lpVtbl->pasteHTML(This, html)
#define IHTMLTxtRange_moveToElementText(This, element) (This)->lpVtbl->moveToElementText(This, element)
#define IHTMLTxtRange_setEndPoint(This, how, SourceRange) (This)->lpVtbl->setEndPoint(This, how, SourceRange)
#define IHTMLTxtRange_compareEndPoints(This, how, SourceRange, ret) (This)->lpVtbl->compareEndPoints(This, how, SourceRange, ret)
#define IHTMLTxtRange_findText(This, String, count, Flags, Success) (This)->lpVtbl->findText(This, String, count, Flags, Success)
#define IHTMLTxtRange_moveToPoint(This, x, y) (This)->lpVtbl->moveToPoint(This, x, y)
#define IHTMLTxtRange_getBookmark(This, Boolmark) (This)->lpVtbl->getBookmark(This, Boolmark)
#define IHTMLTxtRange_moveToBookmark(This, Bookmark, Success) (This)->lpVtbl->moveToBookmark(This, Bookmark, Success)
#define IHTMLTxtRange_queryCommandSupported(This, cmdID, pfRet) (This)->lpVtbl->queryCommandSupported(This, cmdID, pfRet)
#define IHTMLTxtRange_queryCommandEnabled(This, cmdID, pfRet) (This)->lpVtbl->queryCommandEnabled(This, cmdID, pfRet)
#define IHTMLTxtRange_queryCommandState(This, cmdID, pfRet) (This)->lpVtbl->queryCommandState(This, cmdID, pfRet)
#define IHTMLTxtRange_queryCommandIndeterm(This, cmdID, pfRet) (This)->lpVtbl->queryCommandIndeterm(This, cmdID, pfRet)
#define IHTMLTxtRange_queryCommandText(This, cmdID, pcmdText) (This)->lpVtbl->queryCommandText(This, cmdID, pcmdText)
#define IHTMLTxtRange_queryCommandValue(This, cmdID, pcmdValue) (This)->lpVtbl->queryCommandValue(This, cmdID, pcmdValue)
#define IHTMLTxtRange_execCommand(This, cmdID, showUI, value, pfRet) (This)->lpVtbl->execCommand(This, cmdID, showUI, value, pfRet)
#define IHTMLTxtRange_execCommandShowHelp(This, cmdID, pfRet) (This)->lpVtbl->execCommandShowHelp(This, cmdID, pfRet)

declare function IHTMLTxtRange_get_htmlText_Proxy(byval This as IHTMLTxtRange ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLTxtRange_get_htmlText_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTxtRange_put_text_Proxy(byval This as IHTMLTxtRange ptr, byval v as BSTR) as HRESULT
declare sub IHTMLTxtRange_put_text_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTxtRange_get_text_Proxy(byval This as IHTMLTxtRange ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLTxtRange_get_text_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTxtRange_parentElement_Proxy(byval This as IHTMLTxtRange ptr, byval parent as IHTMLElement ptr ptr) as HRESULT
declare sub IHTMLTxtRange_parentElement_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTxtRange_duplicate_Proxy(byval This as IHTMLTxtRange ptr, byval Duplicate as IHTMLTxtRange ptr ptr) as HRESULT
declare sub IHTMLTxtRange_duplicate_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTxtRange_inRange_Proxy(byval This as IHTMLTxtRange ptr, byval Range as IHTMLTxtRange ptr, byval InRange as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLTxtRange_inRange_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTxtRange_isEqual_Proxy(byval This as IHTMLTxtRange ptr, byval Range as IHTMLTxtRange ptr, byval IsEqual as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLTxtRange_isEqual_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTxtRange_scrollIntoView_Proxy(byval This as IHTMLTxtRange ptr, byval fStart as VARIANT_BOOL) as HRESULT
declare sub IHTMLTxtRange_scrollIntoView_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTxtRange_collapse_Proxy(byval This as IHTMLTxtRange ptr, byval Start as VARIANT_BOOL) as HRESULT
declare sub IHTMLTxtRange_collapse_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTxtRange_expand_Proxy(byval This as IHTMLTxtRange ptr, byval Unit as BSTR, byval Success as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLTxtRange_expand_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTxtRange_move_Proxy(byval This as IHTMLTxtRange ptr, byval Unit as BSTR, byval Count as long, byval ActualCount as long ptr) as HRESULT
declare sub IHTMLTxtRange_move_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTxtRange_moveStart_Proxy(byval This as IHTMLTxtRange ptr, byval Unit as BSTR, byval Count as long, byval ActualCount as long ptr) as HRESULT
declare sub IHTMLTxtRange_moveStart_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTxtRange_moveEnd_Proxy(byval This as IHTMLTxtRange ptr, byval Unit as BSTR, byval Count as long, byval ActualCount as long ptr) as HRESULT
declare sub IHTMLTxtRange_moveEnd_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTxtRange_select_Proxy(byval This as IHTMLTxtRange ptr) as HRESULT
declare sub IHTMLTxtRange_select_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTxtRange_pasteHTML_Proxy(byval This as IHTMLTxtRange ptr, byval html as BSTR) as HRESULT
declare sub IHTMLTxtRange_pasteHTML_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTxtRange_moveToElementText_Proxy(byval This as IHTMLTxtRange ptr, byval element as IHTMLElement ptr) as HRESULT
declare sub IHTMLTxtRange_moveToElementText_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTxtRange_setEndPoint_Proxy(byval This as IHTMLTxtRange ptr, byval how as BSTR, byval SourceRange as IHTMLTxtRange ptr) as HRESULT
declare sub IHTMLTxtRange_setEndPoint_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTxtRange_compareEndPoints_Proxy(byval This as IHTMLTxtRange ptr, byval how as BSTR, byval SourceRange as IHTMLTxtRange ptr, byval ret as long ptr) as HRESULT
declare sub IHTMLTxtRange_compareEndPoints_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTxtRange_findText_Proxy(byval This as IHTMLTxtRange ptr, byval String as BSTR, byval count as long, byval Flags as long, byval Success as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLTxtRange_findText_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTxtRange_moveToPoint_Proxy(byval This as IHTMLTxtRange ptr, byval x as long, byval y as long) as HRESULT
declare sub IHTMLTxtRange_moveToPoint_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTxtRange_getBookmark_Proxy(byval This as IHTMLTxtRange ptr, byval Boolmark as BSTR ptr) as HRESULT
declare sub IHTMLTxtRange_getBookmark_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTxtRange_moveToBookmark_Proxy(byval This as IHTMLTxtRange ptr, byval Bookmark as BSTR, byval Success as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLTxtRange_moveToBookmark_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTxtRange_queryCommandSupported_Proxy(byval This as IHTMLTxtRange ptr, byval cmdID as BSTR, byval pfRet as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLTxtRange_queryCommandSupported_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTxtRange_queryCommandEnabled_Proxy(byval This as IHTMLTxtRange ptr, byval cmdID as BSTR, byval pfRet as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLTxtRange_queryCommandEnabled_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTxtRange_queryCommandState_Proxy(byval This as IHTMLTxtRange ptr, byval cmdID as BSTR, byval pfRet as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLTxtRange_queryCommandState_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTxtRange_queryCommandIndeterm_Proxy(byval This as IHTMLTxtRange ptr, byval cmdID as BSTR, byval pfRet as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLTxtRange_queryCommandIndeterm_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTxtRange_queryCommandText_Proxy(byval This as IHTMLTxtRange ptr, byval cmdID as BSTR, byval pcmdText as BSTR ptr) as HRESULT
declare sub IHTMLTxtRange_queryCommandText_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTxtRange_queryCommandValue_Proxy(byval This as IHTMLTxtRange ptr, byval cmdID as BSTR, byval pcmdValue as VARIANT ptr) as HRESULT
declare sub IHTMLTxtRange_queryCommandValue_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTxtRange_execCommand_Proxy(byval This as IHTMLTxtRange ptr, byval cmdID as BSTR, byval showUI as VARIANT_BOOL, byval value as VARIANT, byval pfRet as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLTxtRange_execCommand_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTxtRange_execCommandShowHelp_Proxy(byval This as IHTMLTxtRange ptr, byval cmdID as BSTR, byval pfRet as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLTxtRange_execCommandShowHelp_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLTextRangeMetrics_INTERFACE_DEFINED__
extern IID_IHTMLTextRangeMetrics as const IID
type IHTMLTextRangeMetrics as IHTMLTextRangeMetrics_

type IHTMLTextRangeMetricsVtbl
	QueryInterface as function(byval This as IHTMLTextRangeMetrics ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLTextRangeMetrics ptr) as ULONG
	Release as function(byval This as IHTMLTextRangeMetrics ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLTextRangeMetrics ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLTextRangeMetrics ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLTextRangeMetrics ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLTextRangeMetrics ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	get_offsetTop as function(byval This as IHTMLTextRangeMetrics ptr, byval p as long ptr) as HRESULT
	get_offsetLeft as function(byval This as IHTMLTextRangeMetrics ptr, byval p as long ptr) as HRESULT
	get_boundingTop as function(byval This as IHTMLTextRangeMetrics ptr, byval p as long ptr) as HRESULT
	get_boundingLeft as function(byval This as IHTMLTextRangeMetrics ptr, byval p as long ptr) as HRESULT
	get_boundingWidth as function(byval This as IHTMLTextRangeMetrics ptr, byval p as long ptr) as HRESULT
	get_boundingHeight as function(byval This as IHTMLTextRangeMetrics ptr, byval p as long ptr) as HRESULT
end type

type IHTMLTextRangeMetrics_
	lpVtbl as IHTMLTextRangeMetricsVtbl ptr
end type

#define IHTMLTextRangeMetrics_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLTextRangeMetrics_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLTextRangeMetrics_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLTextRangeMetrics_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLTextRangeMetrics_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLTextRangeMetrics_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLTextRangeMetrics_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLTextRangeMetrics_get_offsetTop(This, p) (This)->lpVtbl->get_offsetTop(This, p)
#define IHTMLTextRangeMetrics_get_offsetLeft(This, p) (This)->lpVtbl->get_offsetLeft(This, p)
#define IHTMLTextRangeMetrics_get_boundingTop(This, p) (This)->lpVtbl->get_boundingTop(This, p)
#define IHTMLTextRangeMetrics_get_boundingLeft(This, p) (This)->lpVtbl->get_boundingLeft(This, p)
#define IHTMLTextRangeMetrics_get_boundingWidth(This, p) (This)->lpVtbl->get_boundingWidth(This, p)
#define IHTMLTextRangeMetrics_get_boundingHeight(This, p) (This)->lpVtbl->get_boundingHeight(This, p)

declare function IHTMLTextRangeMetrics_get_offsetTop_Proxy(byval This as IHTMLTextRangeMetrics ptr, byval p as long ptr) as HRESULT
declare sub IHTMLTextRangeMetrics_get_offsetTop_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTextRangeMetrics_get_offsetLeft_Proxy(byval This as IHTMLTextRangeMetrics ptr, byval p as long ptr) as HRESULT
declare sub IHTMLTextRangeMetrics_get_offsetLeft_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTextRangeMetrics_get_boundingTop_Proxy(byval This as IHTMLTextRangeMetrics ptr, byval p as long ptr) as HRESULT
declare sub IHTMLTextRangeMetrics_get_boundingTop_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTextRangeMetrics_get_boundingLeft_Proxy(byval This as IHTMLTextRangeMetrics ptr, byval p as long ptr) as HRESULT
declare sub IHTMLTextRangeMetrics_get_boundingLeft_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTextRangeMetrics_get_boundingWidth_Proxy(byval This as IHTMLTextRangeMetrics ptr, byval p as long ptr) as HRESULT
declare sub IHTMLTextRangeMetrics_get_boundingWidth_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTextRangeMetrics_get_boundingHeight_Proxy(byval This as IHTMLTextRangeMetrics ptr, byval p as long ptr) as HRESULT
declare sub IHTMLTextRangeMetrics_get_boundingHeight_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLTextRangeMetrics2_INTERFACE_DEFINED__
extern IID_IHTMLTextRangeMetrics2 as const IID
type IHTMLTextRangeMetrics2 as IHTMLTextRangeMetrics2_

type IHTMLTextRangeMetrics2Vtbl
	QueryInterface as function(byval This as IHTMLTextRangeMetrics2 ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLTextRangeMetrics2 ptr) as ULONG
	Release as function(byval This as IHTMLTextRangeMetrics2 ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLTextRangeMetrics2 ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLTextRangeMetrics2 ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLTextRangeMetrics2 ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLTextRangeMetrics2 ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	getClientRects as function(byval This as IHTMLTextRangeMetrics2 ptr, byval pRectCol as IHTMLRectCollection ptr ptr) as HRESULT
	getBoundingClientRect as function(byval This as IHTMLTextRangeMetrics2 ptr, byval pRect as IHTMLRect ptr ptr) as HRESULT
end type

type IHTMLTextRangeMetrics2_
	lpVtbl as IHTMLTextRangeMetrics2Vtbl ptr
end type

#define IHTMLTextRangeMetrics2_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLTextRangeMetrics2_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLTextRangeMetrics2_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLTextRangeMetrics2_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLTextRangeMetrics2_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLTextRangeMetrics2_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLTextRangeMetrics2_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLTextRangeMetrics2_getClientRects(This, pRectCol) (This)->lpVtbl->getClientRects(This, pRectCol)
#define IHTMLTextRangeMetrics2_getBoundingClientRect(This, pRect) (This)->lpVtbl->getBoundingClientRect(This, pRect)

declare function IHTMLTextRangeMetrics2_getClientRects_Proxy(byval This as IHTMLTextRangeMetrics2 ptr, byval pRectCol as IHTMLRectCollection ptr ptr) as HRESULT
declare sub IHTMLTextRangeMetrics2_getClientRects_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTextRangeMetrics2_getBoundingClientRect_Proxy(byval This as IHTMLTextRangeMetrics2 ptr, byval pRect as IHTMLRect ptr ptr) as HRESULT
declare sub IHTMLTextRangeMetrics2_getBoundingClientRect_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLTxtRangeCollection_INTERFACE_DEFINED__
extern IID_IHTMLTxtRangeCollection as const IID
type IHTMLTxtRangeCollection as IHTMLTxtRangeCollection_

type IHTMLTxtRangeCollectionVtbl
	QueryInterface as function(byval This as IHTMLTxtRangeCollection ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLTxtRangeCollection ptr) as ULONG
	Release as function(byval This as IHTMLTxtRangeCollection ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLTxtRangeCollection ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLTxtRangeCollection ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLTxtRangeCollection ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLTxtRangeCollection ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	get_length as function(byval This as IHTMLTxtRangeCollection ptr, byval p as long ptr) as HRESULT
	get__newEnum as function(byval This as IHTMLTxtRangeCollection ptr, byval p as IUnknown ptr ptr) as HRESULT
	item as function(byval This as IHTMLTxtRangeCollection ptr, byval pvarIndex as VARIANT ptr, byval pvarResult as VARIANT ptr) as HRESULT
end type

type IHTMLTxtRangeCollection_
	lpVtbl as IHTMLTxtRangeCollectionVtbl ptr
end type

#define IHTMLTxtRangeCollection_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLTxtRangeCollection_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLTxtRangeCollection_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLTxtRangeCollection_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLTxtRangeCollection_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLTxtRangeCollection_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLTxtRangeCollection_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLTxtRangeCollection_get_length(This, p) (This)->lpVtbl->get_length(This, p)
#define IHTMLTxtRangeCollection_get__newEnum(This, p) (This)->lpVtbl->get__newEnum(This, p)
#define IHTMLTxtRangeCollection_item(This, pvarIndex, pvarResult) (This)->lpVtbl->item(This, pvarIndex, pvarResult)

declare function IHTMLTxtRangeCollection_get_length_Proxy(byval This as IHTMLTxtRangeCollection ptr, byval p as long ptr) as HRESULT
declare sub IHTMLTxtRangeCollection_get_length_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTxtRangeCollection_get__newEnum_Proxy(byval This as IHTMLTxtRangeCollection ptr, byval p as IUnknown ptr ptr) as HRESULT
declare sub IHTMLTxtRangeCollection_get__newEnum_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTxtRangeCollection_item_Proxy(byval This as IHTMLTxtRangeCollection ptr, byval pvarIndex as VARIANT ptr, byval pvarResult as VARIANT ptr) as HRESULT
declare sub IHTMLTxtRangeCollection_item_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __HTMLFormElementEvents2_DISPINTERFACE_DEFINED__
extern DIID_HTMLFormElementEvents2 as const IID
type HTMLFormElementEvents2 as HTMLFormElementEvents2_

type HTMLFormElementEvents2Vtbl
	QueryInterface as function(byval This as HTMLFormElementEvents2 ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as HTMLFormElementEvents2 ptr) as ULONG
	Release as function(byval This as HTMLFormElementEvents2 ptr) as ULONG
	GetTypeInfoCount as function(byval This as HTMLFormElementEvents2 ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as HTMLFormElementEvents2 ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as HTMLFormElementEvents2 ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as HTMLFormElementEvents2 ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type HTMLFormElementEvents2_
	lpVtbl as HTMLFormElementEvents2Vtbl ptr
end type

#define HTMLFormElementEvents2_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define HTMLFormElementEvents2_AddRef(This) (This)->lpVtbl->AddRef(This)
#define HTMLFormElementEvents2_Release(This) (This)->lpVtbl->Release(This)
#define HTMLFormElementEvents2_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define HTMLFormElementEvents2_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define HTMLFormElementEvents2_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define HTMLFormElementEvents2_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define __HTMLFormElementEvents_DISPINTERFACE_DEFINED__
extern DIID_HTMLFormElementEvents as const IID
type HTMLFormElementEvents as HTMLFormElementEvents_

type HTMLFormElementEventsVtbl
	QueryInterface as function(byval This as HTMLFormElementEvents ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as HTMLFormElementEvents ptr) as ULONG
	Release as function(byval This as HTMLFormElementEvents ptr) as ULONG
	GetTypeInfoCount as function(byval This as HTMLFormElementEvents ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as HTMLFormElementEvents ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as HTMLFormElementEvents ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as HTMLFormElementEvents ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type HTMLFormElementEvents_
	lpVtbl as HTMLFormElementEventsVtbl ptr
end type

#define HTMLFormElementEvents_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define HTMLFormElementEvents_AddRef(This) (This)->lpVtbl->AddRef(This)
#define HTMLFormElementEvents_Release(This) (This)->lpVtbl->Release(This)
#define HTMLFormElementEvents_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define HTMLFormElementEvents_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define HTMLFormElementEvents_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define HTMLFormElementEvents_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define __IHTMLFormElement_INTERFACE_DEFINED__
extern IID_IHTMLFormElement as const IID
type IHTMLFormElement as IHTMLFormElement_

type IHTMLFormElementVtbl
	QueryInterface as function(byval This as IHTMLFormElement ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLFormElement ptr) as ULONG
	Release as function(byval This as IHTMLFormElement ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLFormElement ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLFormElement ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLFormElement ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLFormElement ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	put_action as function(byval This as IHTMLFormElement ptr, byval v as BSTR) as HRESULT
	get_action as function(byval This as IHTMLFormElement ptr, byval p as BSTR ptr) as HRESULT
	put_dir as function(byval This as IHTMLFormElement ptr, byval v as BSTR) as HRESULT
	get_dir as function(byval This as IHTMLFormElement ptr, byval p as BSTR ptr) as HRESULT
	put_encoding as function(byval This as IHTMLFormElement ptr, byval v as BSTR) as HRESULT
	get_encoding as function(byval This as IHTMLFormElement ptr, byval p as BSTR ptr) as HRESULT
	put_method as function(byval This as IHTMLFormElement ptr, byval v as BSTR) as HRESULT
	get_method as function(byval This as IHTMLFormElement ptr, byval p as BSTR ptr) as HRESULT
	get_elements as function(byval This as IHTMLFormElement ptr, byval p as IDispatch ptr ptr) as HRESULT
	put_target as function(byval This as IHTMLFormElement ptr, byval v as BSTR) as HRESULT
	get_target as function(byval This as IHTMLFormElement ptr, byval p as BSTR ptr) as HRESULT
	put_name as function(byval This as IHTMLFormElement ptr, byval v as BSTR) as HRESULT
	get_name as function(byval This as IHTMLFormElement ptr, byval p as BSTR ptr) as HRESULT
	put_onsubmit as function(byval This as IHTMLFormElement ptr, byval v as VARIANT) as HRESULT
	get_onsubmit as function(byval This as IHTMLFormElement ptr, byval p as VARIANT ptr) as HRESULT
	put_onreset as function(byval This as IHTMLFormElement ptr, byval v as VARIANT) as HRESULT
	get_onreset as function(byval This as IHTMLFormElement ptr, byval p as VARIANT ptr) as HRESULT
	submit as function(byval This as IHTMLFormElement ptr) as HRESULT
	reset as function(byval This as IHTMLFormElement ptr) as HRESULT
	put_length as function(byval This as IHTMLFormElement ptr, byval v as long) as HRESULT
	get_length as function(byval This as IHTMLFormElement ptr, byval p as long ptr) as HRESULT
	get__newEnum as function(byval This as IHTMLFormElement ptr, byval p as IUnknown ptr ptr) as HRESULT
	item as function(byval This as IHTMLFormElement ptr, byval name as VARIANT, byval index as VARIANT, byval pdisp as IDispatch ptr ptr) as HRESULT
	tags as function(byval This as IHTMLFormElement ptr, byval tagName as VARIANT, byval pdisp as IDispatch ptr ptr) as HRESULT
end type

type IHTMLFormElement_
	lpVtbl as IHTMLFormElementVtbl ptr
end type

#define IHTMLFormElement_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLFormElement_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLFormElement_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLFormElement_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLFormElement_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLFormElement_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLFormElement_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLFormElement_put_action(This, v) (This)->lpVtbl->put_action(This, v)
#define IHTMLFormElement_get_action(This, p) (This)->lpVtbl->get_action(This, p)
#define IHTMLFormElement_put_dir(This, v) (This)->lpVtbl->put_dir(This, v)
#define IHTMLFormElement_get_dir(This, p) (This)->lpVtbl->get_dir(This, p)
#define IHTMLFormElement_put_encoding(This, v) (This)->lpVtbl->put_encoding(This, v)
#define IHTMLFormElement_get_encoding(This, p) (This)->lpVtbl->get_encoding(This, p)
#define IHTMLFormElement_put_method(This, v) (This)->lpVtbl->put_method(This, v)
#define IHTMLFormElement_get_method(This, p) (This)->lpVtbl->get_method(This, p)
#define IHTMLFormElement_get_elements(This, p) (This)->lpVtbl->get_elements(This, p)
#define IHTMLFormElement_put_target(This, v) (This)->lpVtbl->put_target(This, v)
#define IHTMLFormElement_get_target(This, p) (This)->lpVtbl->get_target(This, p)
#define IHTMLFormElement_put_name(This, v) (This)->lpVtbl->put_name(This, v)
#define IHTMLFormElement_get_name(This, p) (This)->lpVtbl->get_name(This, p)
#define IHTMLFormElement_put_onsubmit(This, v) (This)->lpVtbl->put_onsubmit(This, v)
#define IHTMLFormElement_get_onsubmit(This, p) (This)->lpVtbl->get_onsubmit(This, p)
#define IHTMLFormElement_put_onreset(This, v) (This)->lpVtbl->put_onreset(This, v)
#define IHTMLFormElement_get_onreset(This, p) (This)->lpVtbl->get_onreset(This, p)
#define IHTMLFormElement_submit(This) (This)->lpVtbl->submit(This)
#define IHTMLFormElement_reset(This) (This)->lpVtbl->reset(This)
#define IHTMLFormElement_put_length(This, v) (This)->lpVtbl->put_length(This, v)
#define IHTMLFormElement_get_length(This, p) (This)->lpVtbl->get_length(This, p)
#define IHTMLFormElement_get__newEnum(This, p) (This)->lpVtbl->get__newEnum(This, p)
#define IHTMLFormElement_item(This, name, index, pdisp) (This)->lpVtbl->item(This, name, index, pdisp)
#define IHTMLFormElement_tags(This, tagName, pdisp) (This)->lpVtbl->tags(This, tagName, pdisp)

declare function IHTMLFormElement_put_action_Proxy(byval This as IHTMLFormElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLFormElement_put_action_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLFormElement_get_action_Proxy(byval This as IHTMLFormElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLFormElement_get_action_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLFormElement_put_dir_Proxy(byval This as IHTMLFormElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLFormElement_put_dir_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLFormElement_get_dir_Proxy(byval This as IHTMLFormElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLFormElement_get_dir_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLFormElement_put_encoding_Proxy(byval This as IHTMLFormElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLFormElement_put_encoding_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLFormElement_get_encoding_Proxy(byval This as IHTMLFormElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLFormElement_get_encoding_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLFormElement_put_method_Proxy(byval This as IHTMLFormElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLFormElement_put_method_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLFormElement_get_method_Proxy(byval This as IHTMLFormElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLFormElement_get_method_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLFormElement_get_elements_Proxy(byval This as IHTMLFormElement ptr, byval p as IDispatch ptr ptr) as HRESULT
declare sub IHTMLFormElement_get_elements_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLFormElement_put_target_Proxy(byval This as IHTMLFormElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLFormElement_put_target_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLFormElement_get_target_Proxy(byval This as IHTMLFormElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLFormElement_get_target_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLFormElement_put_name_Proxy(byval This as IHTMLFormElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLFormElement_put_name_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLFormElement_get_name_Proxy(byval This as IHTMLFormElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLFormElement_get_name_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLFormElement_put_onsubmit_Proxy(byval This as IHTMLFormElement ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLFormElement_put_onsubmit_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLFormElement_get_onsubmit_Proxy(byval This as IHTMLFormElement ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLFormElement_get_onsubmit_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLFormElement_put_onreset_Proxy(byval This as IHTMLFormElement ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLFormElement_put_onreset_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLFormElement_get_onreset_Proxy(byval This as IHTMLFormElement ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLFormElement_get_onreset_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLFormElement_submit_Proxy(byval This as IHTMLFormElement ptr) as HRESULT
declare sub IHTMLFormElement_submit_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLFormElement_reset_Proxy(byval This as IHTMLFormElement ptr) as HRESULT
declare sub IHTMLFormElement_reset_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLFormElement_put_length_Proxy(byval This as IHTMLFormElement ptr, byval v as long) as HRESULT
declare sub IHTMLFormElement_put_length_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLFormElement_get_length_Proxy(byval This as IHTMLFormElement ptr, byval p as long ptr) as HRESULT
declare sub IHTMLFormElement_get_length_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLFormElement_get__newEnum_Proxy(byval This as IHTMLFormElement ptr, byval p as IUnknown ptr ptr) as HRESULT
declare sub IHTMLFormElement_get__newEnum_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLFormElement_item_Proxy(byval This as IHTMLFormElement ptr, byval name as VARIANT, byval index as VARIANT, byval pdisp as IDispatch ptr ptr) as HRESULT
declare sub IHTMLFormElement_item_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLFormElement_tags_Proxy(byval This as IHTMLFormElement ptr, byval tagName as VARIANT, byval pdisp as IDispatch ptr ptr) as HRESULT
declare sub IHTMLFormElement_tags_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLFormElement2_INTERFACE_DEFINED__
extern IID_IHTMLFormElement2 as const IID
type IHTMLFormElement2 as IHTMLFormElement2_

type IHTMLFormElement2Vtbl
	QueryInterface as function(byval This as IHTMLFormElement2 ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLFormElement2 ptr) as ULONG
	Release as function(byval This as IHTMLFormElement2 ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLFormElement2 ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLFormElement2 ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLFormElement2 ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLFormElement2 ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	put_acceptCharset as function(byval This as IHTMLFormElement2 ptr, byval v as BSTR) as HRESULT
	get_acceptCharset as function(byval This as IHTMLFormElement2 ptr, byval p as BSTR ptr) as HRESULT
	urns as function(byval This as IHTMLFormElement2 ptr, byval urn as VARIANT, byval pdisp as IDispatch ptr ptr) as HRESULT
end type

type IHTMLFormElement2_
	lpVtbl as IHTMLFormElement2Vtbl ptr
end type

#define IHTMLFormElement2_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLFormElement2_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLFormElement2_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLFormElement2_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLFormElement2_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLFormElement2_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLFormElement2_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLFormElement2_put_acceptCharset(This, v) (This)->lpVtbl->put_acceptCharset(This, v)
#define IHTMLFormElement2_get_acceptCharset(This, p) (This)->lpVtbl->get_acceptCharset(This, p)
#define IHTMLFormElement2_urns(This, urn, pdisp) (This)->lpVtbl->urns(This, urn, pdisp)

declare function IHTMLFormElement2_put_acceptCharset_Proxy(byval This as IHTMLFormElement2 ptr, byval v as BSTR) as HRESULT
declare sub IHTMLFormElement2_put_acceptCharset_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLFormElement2_get_acceptCharset_Proxy(byval This as IHTMLFormElement2 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLFormElement2_get_acceptCharset_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLFormElement2_urns_Proxy(byval This as IHTMLFormElement2 ptr, byval urn as VARIANT, byval pdisp as IDispatch ptr ptr) as HRESULT
declare sub IHTMLFormElement2_urns_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLFormElement3_INTERFACE_DEFINED__
extern IID_IHTMLFormElement3 as const IID
type IHTMLFormElement3 as IHTMLFormElement3_

type IHTMLFormElement3Vtbl
	QueryInterface as function(byval This as IHTMLFormElement3 ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLFormElement3 ptr) as ULONG
	Release as function(byval This as IHTMLFormElement3 ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLFormElement3 ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLFormElement3 ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLFormElement3 ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLFormElement3 ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	namedItem as function(byval This as IHTMLFormElement3 ptr, byval name as BSTR, byval pdisp as IDispatch ptr ptr) as HRESULT
end type

type IHTMLFormElement3_
	lpVtbl as IHTMLFormElement3Vtbl ptr
end type

#define IHTMLFormElement3_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLFormElement3_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLFormElement3_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLFormElement3_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLFormElement3_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLFormElement3_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLFormElement3_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLFormElement3_namedItem(This, name, pdisp) (This)->lpVtbl->namedItem(This, name, pdisp)
declare function IHTMLFormElement3_namedItem_Proxy(byval This as IHTMLFormElement3 ptr, byval name as BSTR, byval pdisp as IDispatch ptr ptr) as HRESULT
declare sub IHTMLFormElement3_namedItem_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLSubmitData_INTERFACE_DEFINED__
extern IID_IHTMLSubmitData as const IID
type IHTMLSubmitData as IHTMLSubmitData_

type IHTMLSubmitDataVtbl
	QueryInterface as function(byval This as IHTMLSubmitData ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLSubmitData ptr) as ULONG
	Release as function(byval This as IHTMLSubmitData ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLSubmitData ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLSubmitData ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLSubmitData ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLSubmitData ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	appendNameValuePair as function(byval This as IHTMLSubmitData ptr, byval name as BSTR, byval value as BSTR) as HRESULT
	appendNameFilePair as function(byval This as IHTMLSubmitData ptr, byval name as BSTR, byval filename as BSTR) as HRESULT
	appendItemSeparator as function(byval This as IHTMLSubmitData ptr) as HRESULT
end type

type IHTMLSubmitData_
	lpVtbl as IHTMLSubmitDataVtbl ptr
end type

#define IHTMLSubmitData_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLSubmitData_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLSubmitData_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLSubmitData_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLSubmitData_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLSubmitData_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLSubmitData_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLSubmitData_appendNameValuePair(This, name, value) (This)->lpVtbl->appendNameValuePair(This, name, value)
#define IHTMLSubmitData_appendNameFilePair(This, name, filename) (This)->lpVtbl->appendNameFilePair(This, name, filename)
#define IHTMLSubmitData_appendItemSeparator(This) (This)->lpVtbl->appendItemSeparator(This)

declare function IHTMLSubmitData_appendNameValuePair_Proxy(byval This as IHTMLSubmitData ptr, byval name as BSTR, byval value as BSTR) as HRESULT
declare sub IHTMLSubmitData_appendNameValuePair_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLSubmitData_appendNameFilePair_Proxy(byval This as IHTMLSubmitData ptr, byval name as BSTR, byval filename as BSTR) as HRESULT
declare sub IHTMLSubmitData_appendNameFilePair_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLSubmitData_appendItemSeparator_Proxy(byval This as IHTMLSubmitData ptr) as HRESULT
declare sub IHTMLSubmitData_appendItemSeparator_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __DispHTMLFormElement_DISPINTERFACE_DEFINED__
extern DIID_DispHTMLFormElement as const IID
type DispHTMLFormElement as DispHTMLFormElement_

type DispHTMLFormElementVtbl
	QueryInterface as function(byval This as DispHTMLFormElement ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as DispHTMLFormElement ptr) as ULONG
	Release as function(byval This as DispHTMLFormElement ptr) as ULONG
	GetTypeInfoCount as function(byval This as DispHTMLFormElement ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as DispHTMLFormElement ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as DispHTMLFormElement ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as DispHTMLFormElement ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type DispHTMLFormElement_
	lpVtbl as DispHTMLFormElementVtbl ptr
end type

#define DispHTMLFormElement_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define DispHTMLFormElement_AddRef(This) (This)->lpVtbl->AddRef(This)
#define DispHTMLFormElement_Release(This) (This)->lpVtbl->Release(This)
#define DispHTMLFormElement_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define DispHTMLFormElement_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define DispHTMLFormElement_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define DispHTMLFormElement_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
extern CLSID_HTMLFormElement as const CLSID
#define __HTMLControlElementEvents2_DISPINTERFACE_DEFINED__
extern DIID_HTMLControlElementEvents2 as const IID
type HTMLControlElementEvents2 as HTMLControlElementEvents2_

type HTMLControlElementEvents2Vtbl
	QueryInterface as function(byval This as HTMLControlElementEvents2 ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as HTMLControlElementEvents2 ptr) as ULONG
	Release as function(byval This as HTMLControlElementEvents2 ptr) as ULONG
	GetTypeInfoCount as function(byval This as HTMLControlElementEvents2 ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as HTMLControlElementEvents2 ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as HTMLControlElementEvents2 ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as HTMLControlElementEvents2 ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type HTMLControlElementEvents2_
	lpVtbl as HTMLControlElementEvents2Vtbl ptr
end type

#define HTMLControlElementEvents2_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define HTMLControlElementEvents2_AddRef(This) (This)->lpVtbl->AddRef(This)
#define HTMLControlElementEvents2_Release(This) (This)->lpVtbl->Release(This)
#define HTMLControlElementEvents2_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define HTMLControlElementEvents2_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define HTMLControlElementEvents2_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define HTMLControlElementEvents2_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define __HTMLControlElementEvents_DISPINTERFACE_DEFINED__
extern DIID_HTMLControlElementEvents as const IID
type HTMLControlElementEvents as HTMLControlElementEvents_

type HTMLControlElementEventsVtbl
	QueryInterface as function(byval This as HTMLControlElementEvents ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as HTMLControlElementEvents ptr) as ULONG
	Release as function(byval This as HTMLControlElementEvents ptr) as ULONG
	GetTypeInfoCount as function(byval This as HTMLControlElementEvents ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as HTMLControlElementEvents ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as HTMLControlElementEvents ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as HTMLControlElementEvents ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type HTMLControlElementEvents_
	lpVtbl as HTMLControlElementEventsVtbl ptr
end type

#define HTMLControlElementEvents_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define HTMLControlElementEvents_AddRef(This) (This)->lpVtbl->AddRef(This)
#define HTMLControlElementEvents_Release(This) (This)->lpVtbl->Release(This)
#define HTMLControlElementEvents_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define HTMLControlElementEvents_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define HTMLControlElementEvents_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define HTMLControlElementEvents_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define __IHTMLControlElement_INTERFACE_DEFINED__
extern IID_IHTMLControlElement as const IID
type IHTMLControlElement as IHTMLControlElement_

type IHTMLControlElementVtbl
	QueryInterface as function(byval This as IHTMLControlElement ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLControlElement ptr) as ULONG
	Release as function(byval This as IHTMLControlElement ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLControlElement ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLControlElement ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLControlElement ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLControlElement ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	put_tabIndex as function(byval This as IHTMLControlElement ptr, byval v as short) as HRESULT
	get_tabIndex as function(byval This as IHTMLControlElement ptr, byval p as short ptr) as HRESULT
	focus as function(byval This as IHTMLControlElement ptr) as HRESULT
	put_accessKey as function(byval This as IHTMLControlElement ptr, byval v as BSTR) as HRESULT
	get_accessKey as function(byval This as IHTMLControlElement ptr, byval p as BSTR ptr) as HRESULT
	put_onblur as function(byval This as IHTMLControlElement ptr, byval v as VARIANT) as HRESULT
	get_onblur as function(byval This as IHTMLControlElement ptr, byval p as VARIANT ptr) as HRESULT
	put_onfocus as function(byval This as IHTMLControlElement ptr, byval v as VARIANT) as HRESULT
	get_onfocus as function(byval This as IHTMLControlElement ptr, byval p as VARIANT ptr) as HRESULT
	put_onresize as function(byval This as IHTMLControlElement ptr, byval v as VARIANT) as HRESULT
	get_onresize as function(byval This as IHTMLControlElement ptr, byval p as VARIANT ptr) as HRESULT
	blur as function(byval This as IHTMLControlElement ptr) as HRESULT
	addFilter as function(byval This as IHTMLControlElement ptr, byval pUnk as IUnknown ptr) as HRESULT
	removeFilter as function(byval This as IHTMLControlElement ptr, byval pUnk as IUnknown ptr) as HRESULT
	get_clientHeight as function(byval This as IHTMLControlElement ptr, byval p as long ptr) as HRESULT
	get_clientWidth as function(byval This as IHTMLControlElement ptr, byval p as long ptr) as HRESULT
	get_clientTop as function(byval This as IHTMLControlElement ptr, byval p as long ptr) as HRESULT
	get_clientLeft as function(byval This as IHTMLControlElement ptr, byval p as long ptr) as HRESULT
end type

type IHTMLControlElement_
	lpVtbl as IHTMLControlElementVtbl ptr
end type

#define IHTMLControlElement_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLControlElement_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLControlElement_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLControlElement_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLControlElement_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLControlElement_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLControlElement_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLControlElement_put_tabIndex(This, v) (This)->lpVtbl->put_tabIndex(This, v)
#define IHTMLControlElement_get_tabIndex(This, p) (This)->lpVtbl->get_tabIndex(This, p)
#define IHTMLControlElement_focus(This) (This)->lpVtbl->focus(This)
#define IHTMLControlElement_put_accessKey(This, v) (This)->lpVtbl->put_accessKey(This, v)
#define IHTMLControlElement_get_accessKey(This, p) (This)->lpVtbl->get_accessKey(This, p)
#define IHTMLControlElement_put_onblur(This, v) (This)->lpVtbl->put_onblur(This, v)
#define IHTMLControlElement_get_onblur(This, p) (This)->lpVtbl->get_onblur(This, p)
#define IHTMLControlElement_put_onfocus(This, v) (This)->lpVtbl->put_onfocus(This, v)
#define IHTMLControlElement_get_onfocus(This, p) (This)->lpVtbl->get_onfocus(This, p)
#define IHTMLControlElement_put_onresize(This, v) (This)->lpVtbl->put_onresize(This, v)
#define IHTMLControlElement_get_onresize(This, p) (This)->lpVtbl->get_onresize(This, p)
#define IHTMLControlElement_blur(This) (This)->lpVtbl->blur(This)
#define IHTMLControlElement_addFilter(This, pUnk) (This)->lpVtbl->addFilter(This, pUnk)
#define IHTMLControlElement_removeFilter(This, pUnk) (This)->lpVtbl->removeFilter(This, pUnk)
#define IHTMLControlElement_get_clientHeight(This, p) (This)->lpVtbl->get_clientHeight(This, p)
#define IHTMLControlElement_get_clientWidth(This, p) (This)->lpVtbl->get_clientWidth(This, p)
#define IHTMLControlElement_get_clientTop(This, p) (This)->lpVtbl->get_clientTop(This, p)
#define IHTMLControlElement_get_clientLeft(This, p) (This)->lpVtbl->get_clientLeft(This, p)

declare function IHTMLControlElement_put_tabIndex_Proxy(byval This as IHTMLControlElement ptr, byval v as short) as HRESULT
declare sub IHTMLControlElement_put_tabIndex_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLControlElement_get_tabIndex_Proxy(byval This as IHTMLControlElement ptr, byval p as short ptr) as HRESULT
declare sub IHTMLControlElement_get_tabIndex_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLControlElement_focus_Proxy(byval This as IHTMLControlElement ptr) as HRESULT
declare sub IHTMLControlElement_focus_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLControlElement_put_accessKey_Proxy(byval This as IHTMLControlElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLControlElement_put_accessKey_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLControlElement_get_accessKey_Proxy(byval This as IHTMLControlElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLControlElement_get_accessKey_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLControlElement_put_onblur_Proxy(byval This as IHTMLControlElement ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLControlElement_put_onblur_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLControlElement_get_onblur_Proxy(byval This as IHTMLControlElement ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLControlElement_get_onblur_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLControlElement_put_onfocus_Proxy(byval This as IHTMLControlElement ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLControlElement_put_onfocus_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLControlElement_get_onfocus_Proxy(byval This as IHTMLControlElement ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLControlElement_get_onfocus_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLControlElement_put_onresize_Proxy(byval This as IHTMLControlElement ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLControlElement_put_onresize_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLControlElement_get_onresize_Proxy(byval This as IHTMLControlElement ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLControlElement_get_onresize_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLControlElement_blur_Proxy(byval This as IHTMLControlElement ptr) as HRESULT
declare sub IHTMLControlElement_blur_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLControlElement_addFilter_Proxy(byval This as IHTMLControlElement ptr, byval pUnk as IUnknown ptr) as HRESULT
declare sub IHTMLControlElement_addFilter_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLControlElement_removeFilter_Proxy(byval This as IHTMLControlElement ptr, byval pUnk as IUnknown ptr) as HRESULT
declare sub IHTMLControlElement_removeFilter_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLControlElement_get_clientHeight_Proxy(byval This as IHTMLControlElement ptr, byval p as long ptr) as HRESULT
declare sub IHTMLControlElement_get_clientHeight_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLControlElement_get_clientWidth_Proxy(byval This as IHTMLControlElement ptr, byval p as long ptr) as HRESULT
declare sub IHTMLControlElement_get_clientWidth_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLControlElement_get_clientTop_Proxy(byval This as IHTMLControlElement ptr, byval p as long ptr) as HRESULT
declare sub IHTMLControlElement_get_clientTop_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLControlElement_get_clientLeft_Proxy(byval This as IHTMLControlElement ptr, byval p as long ptr) as HRESULT
declare sub IHTMLControlElement_get_clientLeft_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLTextElement_INTERFACE_DEFINED__
extern IID_IHTMLTextElement as const IID
type IHTMLTextElement as IHTMLTextElement_

type IHTMLTextElementVtbl
	QueryInterface as function(byval This as IHTMLTextElement ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLTextElement ptr) as ULONG
	Release as function(byval This as IHTMLTextElement ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLTextElement ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLTextElement ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLTextElement ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLTextElement ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type IHTMLTextElement_
	lpVtbl as IHTMLTextElementVtbl ptr
end type

#define IHTMLTextElement_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLTextElement_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLTextElement_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLTextElement_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLTextElement_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLTextElement_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLTextElement_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define __DispHTMLTextElement_DISPINTERFACE_DEFINED__
extern DIID_DispHTMLTextElement as const IID
type DispHTMLTextElement as DispHTMLTextElement_

type DispHTMLTextElementVtbl
	QueryInterface as function(byval This as DispHTMLTextElement ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as DispHTMLTextElement ptr) as ULONG
	Release as function(byval This as DispHTMLTextElement ptr) as ULONG
	GetTypeInfoCount as function(byval This as DispHTMLTextElement ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as DispHTMLTextElement ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as DispHTMLTextElement ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as DispHTMLTextElement ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type DispHTMLTextElement_
	lpVtbl as DispHTMLTextElementVtbl ptr
end type

#define DispHTMLTextElement_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define DispHTMLTextElement_AddRef(This) (This)->lpVtbl->AddRef(This)
#define DispHTMLTextElement_Release(This) (This)->lpVtbl->Release(This)
#define DispHTMLTextElement_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define DispHTMLTextElement_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define DispHTMLTextElement_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define DispHTMLTextElement_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
extern CLSID_HTMLTextElement as const CLSID
#define __HTMLTextContainerEvents2_DISPINTERFACE_DEFINED__
extern DIID_HTMLTextContainerEvents2 as const IID
type HTMLTextContainerEvents2 as HTMLTextContainerEvents2_

type HTMLTextContainerEvents2Vtbl
	QueryInterface as function(byval This as HTMLTextContainerEvents2 ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as HTMLTextContainerEvents2 ptr) as ULONG
	Release as function(byval This as HTMLTextContainerEvents2 ptr) as ULONG
	GetTypeInfoCount as function(byval This as HTMLTextContainerEvents2 ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as HTMLTextContainerEvents2 ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as HTMLTextContainerEvents2 ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as HTMLTextContainerEvents2 ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type HTMLTextContainerEvents2_
	lpVtbl as HTMLTextContainerEvents2Vtbl ptr
end type

#define HTMLTextContainerEvents2_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define HTMLTextContainerEvents2_AddRef(This) (This)->lpVtbl->AddRef(This)
#define HTMLTextContainerEvents2_Release(This) (This)->lpVtbl->Release(This)
#define HTMLTextContainerEvents2_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define HTMLTextContainerEvents2_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define HTMLTextContainerEvents2_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define HTMLTextContainerEvents2_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define __HTMLTextContainerEvents_DISPINTERFACE_DEFINED__
extern DIID_HTMLTextContainerEvents as const IID
type HTMLTextContainerEvents as HTMLTextContainerEvents_

type HTMLTextContainerEventsVtbl
	QueryInterface as function(byval This as HTMLTextContainerEvents ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as HTMLTextContainerEvents ptr) as ULONG
	Release as function(byval This as HTMLTextContainerEvents ptr) as ULONG
	GetTypeInfoCount as function(byval This as HTMLTextContainerEvents ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as HTMLTextContainerEvents ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as HTMLTextContainerEvents ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as HTMLTextContainerEvents ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type HTMLTextContainerEvents_
	lpVtbl as HTMLTextContainerEventsVtbl ptr
end type

#define HTMLTextContainerEvents_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define HTMLTextContainerEvents_AddRef(This) (This)->lpVtbl->AddRef(This)
#define HTMLTextContainerEvents_Release(This) (This)->lpVtbl->Release(This)
#define HTMLTextContainerEvents_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define HTMLTextContainerEvents_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define HTMLTextContainerEvents_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define HTMLTextContainerEvents_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define __IHTMLTextContainer_INTERFACE_DEFINED__
extern IID_IHTMLTextContainer as const IID
type IHTMLTextContainer as IHTMLTextContainer_

type IHTMLTextContainerVtbl
	QueryInterface as function(byval This as IHTMLTextContainer ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLTextContainer ptr) as ULONG
	Release as function(byval This as IHTMLTextContainer ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLTextContainer ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLTextContainer ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLTextContainer ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLTextContainer ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	createControlRange as function(byval This as IHTMLTextContainer ptr, byval range as IDispatch ptr ptr) as HRESULT
	get_scrollHeight as function(byval This as IHTMLTextContainer ptr, byval p as long ptr) as HRESULT
	get_scrollWidth as function(byval This as IHTMLTextContainer ptr, byval p as long ptr) as HRESULT
	put_scrollTop as function(byval This as IHTMLTextContainer ptr, byval v as long) as HRESULT
	get_scrollTop as function(byval This as IHTMLTextContainer ptr, byval p as long ptr) as HRESULT
	put_scrollLeft as function(byval This as IHTMLTextContainer ptr, byval v as long) as HRESULT
	get_scrollLeft as function(byval This as IHTMLTextContainer ptr, byval p as long ptr) as HRESULT
	put_onscroll as function(byval This as IHTMLTextContainer ptr, byval v as VARIANT) as HRESULT
	get_onscroll as function(byval This as IHTMLTextContainer ptr, byval p as VARIANT ptr) as HRESULT
end type

type IHTMLTextContainer_
	lpVtbl as IHTMLTextContainerVtbl ptr
end type

#define IHTMLTextContainer_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLTextContainer_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLTextContainer_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLTextContainer_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLTextContainer_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLTextContainer_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLTextContainer_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLTextContainer_createControlRange(This, range) (This)->lpVtbl->createControlRange(This, range)
#define IHTMLTextContainer_get_scrollHeight(This, p) (This)->lpVtbl->get_scrollHeight(This, p)
#define IHTMLTextContainer_get_scrollWidth(This, p) (This)->lpVtbl->get_scrollWidth(This, p)
#define IHTMLTextContainer_put_scrollTop(This, v) (This)->lpVtbl->put_scrollTop(This, v)
#define IHTMLTextContainer_get_scrollTop(This, p) (This)->lpVtbl->get_scrollTop(This, p)
#define IHTMLTextContainer_put_scrollLeft(This, v) (This)->lpVtbl->put_scrollLeft(This, v)
#define IHTMLTextContainer_get_scrollLeft(This, p) (This)->lpVtbl->get_scrollLeft(This, p)
#define IHTMLTextContainer_put_onscroll(This, v) (This)->lpVtbl->put_onscroll(This, v)
#define IHTMLTextContainer_get_onscroll(This, p) (This)->lpVtbl->get_onscroll(This, p)

declare function IHTMLTextContainer_createControlRange_Proxy(byval This as IHTMLTextContainer ptr, byval range as IDispatch ptr ptr) as HRESULT
declare sub IHTMLTextContainer_createControlRange_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTextContainer_get_scrollHeight_Proxy(byval This as IHTMLTextContainer ptr, byval p as long ptr) as HRESULT
declare sub IHTMLTextContainer_get_scrollHeight_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTextContainer_get_scrollWidth_Proxy(byval This as IHTMLTextContainer ptr, byval p as long ptr) as HRESULT
declare sub IHTMLTextContainer_get_scrollWidth_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTextContainer_put_scrollTop_Proxy(byval This as IHTMLTextContainer ptr, byval v as long) as HRESULT
declare sub IHTMLTextContainer_put_scrollTop_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTextContainer_get_scrollTop_Proxy(byval This as IHTMLTextContainer ptr, byval p as long ptr) as HRESULT
declare sub IHTMLTextContainer_get_scrollTop_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTextContainer_put_scrollLeft_Proxy(byval This as IHTMLTextContainer ptr, byval v as long) as HRESULT
declare sub IHTMLTextContainer_put_scrollLeft_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTextContainer_get_scrollLeft_Proxy(byval This as IHTMLTextContainer ptr, byval p as long ptr) as HRESULT
declare sub IHTMLTextContainer_get_scrollLeft_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTextContainer_put_onscroll_Proxy(byval This as IHTMLTextContainer ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLTextContainer_put_onscroll_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTextContainer_get_onscroll_Proxy(byval This as IHTMLTextContainer ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLTextContainer_get_onscroll_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLControlRange_INTERFACE_DEFINED__
extern IID_IHTMLControlRange as const IID
type IHTMLControlRange as IHTMLControlRange_

type IHTMLControlRangeVtbl
	QueryInterface as function(byval This as IHTMLControlRange ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLControlRange ptr) as ULONG
	Release as function(byval This as IHTMLControlRange ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLControlRange ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLControlRange ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLControlRange ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLControlRange ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	select as function(byval This as IHTMLControlRange ptr) as HRESULT
	add as function(byval This as IHTMLControlRange ptr, byval item as IHTMLControlElement ptr) as HRESULT
	remove as function(byval This as IHTMLControlRange ptr, byval index as long) as HRESULT
	item as function(byval This as IHTMLControlRange ptr, byval index as long, byval pdisp as IHTMLElement ptr ptr) as HRESULT
	scrollIntoView as function(byval This as IHTMLControlRange ptr, byval varargStart as VARIANT) as HRESULT
	queryCommandSupported as function(byval This as IHTMLControlRange ptr, byval cmdID as BSTR, byval pfRet as VARIANT_BOOL ptr) as HRESULT
	queryCommandEnabled as function(byval This as IHTMLControlRange ptr, byval cmdID as BSTR, byval pfRet as VARIANT_BOOL ptr) as HRESULT
	queryCommandState as function(byval This as IHTMLControlRange ptr, byval cmdID as BSTR, byval pfRet as VARIANT_BOOL ptr) as HRESULT
	queryCommandIndeterm as function(byval This as IHTMLControlRange ptr, byval cmdID as BSTR, byval pfRet as VARIANT_BOOL ptr) as HRESULT
	queryCommandText as function(byval This as IHTMLControlRange ptr, byval cmdID as BSTR, byval pcmdText as BSTR ptr) as HRESULT
	queryCommandValue as function(byval This as IHTMLControlRange ptr, byval cmdID as BSTR, byval pcmdValue as VARIANT ptr) as HRESULT
	execCommand as function(byval This as IHTMLControlRange ptr, byval cmdID as BSTR, byval showUI as VARIANT_BOOL, byval value as VARIANT, byval pfRet as VARIANT_BOOL ptr) as HRESULT
	execCommandShowHelp as function(byval This as IHTMLControlRange ptr, byval cmdID as BSTR, byval pfRet as VARIANT_BOOL ptr) as HRESULT
	commonParentElement as function(byval This as IHTMLControlRange ptr, byval parent as IHTMLElement ptr ptr) as HRESULT
	get_length as function(byval This as IHTMLControlRange ptr, byval p as long ptr) as HRESULT
end type

type IHTMLControlRange_
	lpVtbl as IHTMLControlRangeVtbl ptr
end type

#define IHTMLControlRange_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLControlRange_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLControlRange_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLControlRange_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLControlRange_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLControlRange_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLControlRange_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLControlRange_select(This) (This)->lpVtbl->select(This)
#define IHTMLControlRange_add(This, item) (This)->lpVtbl->add(This, item)
#define IHTMLControlRange_remove(This, index) (This)->lpVtbl->remove(This, index)
#define IHTMLControlRange_item(This, index, pdisp) (This)->lpVtbl->item(This, index, pdisp)
#define IHTMLControlRange_scrollIntoView(This, varargStart) (This)->lpVtbl->scrollIntoView(This, varargStart)
#define IHTMLControlRange_queryCommandSupported(This, cmdID, pfRet) (This)->lpVtbl->queryCommandSupported(This, cmdID, pfRet)
#define IHTMLControlRange_queryCommandEnabled(This, cmdID, pfRet) (This)->lpVtbl->queryCommandEnabled(This, cmdID, pfRet)
#define IHTMLControlRange_queryCommandState(This, cmdID, pfRet) (This)->lpVtbl->queryCommandState(This, cmdID, pfRet)
#define IHTMLControlRange_queryCommandIndeterm(This, cmdID, pfRet) (This)->lpVtbl->queryCommandIndeterm(This, cmdID, pfRet)
#define IHTMLControlRange_queryCommandText(This, cmdID, pcmdText) (This)->lpVtbl->queryCommandText(This, cmdID, pcmdText)
#define IHTMLControlRange_queryCommandValue(This, cmdID, pcmdValue) (This)->lpVtbl->queryCommandValue(This, cmdID, pcmdValue)
#define IHTMLControlRange_execCommand(This, cmdID, showUI, value, pfRet) (This)->lpVtbl->execCommand(This, cmdID, showUI, value, pfRet)
#define IHTMLControlRange_execCommandShowHelp(This, cmdID, pfRet) (This)->lpVtbl->execCommandShowHelp(This, cmdID, pfRet)
#define IHTMLControlRange_commonParentElement(This, parent) (This)->lpVtbl->commonParentElement(This, parent)
#define IHTMLControlRange_get_length(This, p) (This)->lpVtbl->get_length(This, p)

declare function IHTMLControlRange_select_Proxy(byval This as IHTMLControlRange ptr) as HRESULT
declare sub IHTMLControlRange_select_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLControlRange_add_Proxy(byval This as IHTMLControlRange ptr, byval item as IHTMLControlElement ptr) as HRESULT
declare sub IHTMLControlRange_add_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLControlRange_remove_Proxy(byval This as IHTMLControlRange ptr, byval index as long) as HRESULT
declare sub IHTMLControlRange_remove_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLControlRange_item_Proxy(byval This as IHTMLControlRange ptr, byval index as long, byval pdisp as IHTMLElement ptr ptr) as HRESULT
declare sub IHTMLControlRange_item_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLControlRange_scrollIntoView_Proxy(byval This as IHTMLControlRange ptr, byval varargStart as VARIANT) as HRESULT
declare sub IHTMLControlRange_scrollIntoView_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLControlRange_queryCommandSupported_Proxy(byval This as IHTMLControlRange ptr, byval cmdID as BSTR, byval pfRet as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLControlRange_queryCommandSupported_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLControlRange_queryCommandEnabled_Proxy(byval This as IHTMLControlRange ptr, byval cmdID as BSTR, byval pfRet as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLControlRange_queryCommandEnabled_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLControlRange_queryCommandState_Proxy(byval This as IHTMLControlRange ptr, byval cmdID as BSTR, byval pfRet as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLControlRange_queryCommandState_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLControlRange_queryCommandIndeterm_Proxy(byval This as IHTMLControlRange ptr, byval cmdID as BSTR, byval pfRet as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLControlRange_queryCommandIndeterm_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLControlRange_queryCommandText_Proxy(byval This as IHTMLControlRange ptr, byval cmdID as BSTR, byval pcmdText as BSTR ptr) as HRESULT
declare sub IHTMLControlRange_queryCommandText_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLControlRange_queryCommandValue_Proxy(byval This as IHTMLControlRange ptr, byval cmdID as BSTR, byval pcmdValue as VARIANT ptr) as HRESULT
declare sub IHTMLControlRange_queryCommandValue_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLControlRange_execCommand_Proxy(byval This as IHTMLControlRange ptr, byval cmdID as BSTR, byval showUI as VARIANT_BOOL, byval value as VARIANT, byval pfRet as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLControlRange_execCommand_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLControlRange_execCommandShowHelp_Proxy(byval This as IHTMLControlRange ptr, byval cmdID as BSTR, byval pfRet as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLControlRange_execCommandShowHelp_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLControlRange_commonParentElement_Proxy(byval This as IHTMLControlRange ptr, byval parent as IHTMLElement ptr ptr) as HRESULT
declare sub IHTMLControlRange_commonParentElement_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLControlRange_get_length_Proxy(byval This as IHTMLControlRange ptr, byval p as long ptr) as HRESULT
declare sub IHTMLControlRange_get_length_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLControlRange2_INTERFACE_DEFINED__
extern IID_IHTMLControlRange2 as const IID
type IHTMLControlRange2 as IHTMLControlRange2_

type IHTMLControlRange2Vtbl
	QueryInterface as function(byval This as IHTMLControlRange2 ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLControlRange2 ptr) as ULONG
	Release as function(byval This as IHTMLControlRange2 ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLControlRange2 ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLControlRange2 ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLControlRange2 ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLControlRange2 ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	addElement as function(byval This as IHTMLControlRange2 ptr, byval item as IHTMLElement ptr) as HRESULT
end type

type IHTMLControlRange2_
	lpVtbl as IHTMLControlRange2Vtbl ptr
end type

#define IHTMLControlRange2_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLControlRange2_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLControlRange2_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLControlRange2_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLControlRange2_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLControlRange2_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLControlRange2_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLControlRange2_addElement(This, item) (This)->lpVtbl->addElement(This, item)
declare function IHTMLControlRange2_addElement_Proxy(byval This as IHTMLControlRange2 ptr, byval item as IHTMLElement ptr) as HRESULT
declare sub IHTMLControlRange2_addElement_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __HTMLImgEvents2_DISPINTERFACE_DEFINED__
extern DIID_HTMLImgEvents2 as const IID
type HTMLImgEvents2 as HTMLImgEvents2_

type HTMLImgEvents2Vtbl
	QueryInterface as function(byval This as HTMLImgEvents2 ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as HTMLImgEvents2 ptr) as ULONG
	Release as function(byval This as HTMLImgEvents2 ptr) as ULONG
	GetTypeInfoCount as function(byval This as HTMLImgEvents2 ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as HTMLImgEvents2 ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as HTMLImgEvents2 ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as HTMLImgEvents2 ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type HTMLImgEvents2_
	lpVtbl as HTMLImgEvents2Vtbl ptr
end type

#define HTMLImgEvents2_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define HTMLImgEvents2_AddRef(This) (This)->lpVtbl->AddRef(This)
#define HTMLImgEvents2_Release(This) (This)->lpVtbl->Release(This)
#define HTMLImgEvents2_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define HTMLImgEvents2_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define HTMLImgEvents2_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define HTMLImgEvents2_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define __HTMLImgEvents_DISPINTERFACE_DEFINED__
extern DIID_HTMLImgEvents as const IID
type HTMLImgEvents as HTMLImgEvents_

type HTMLImgEventsVtbl
	QueryInterface as function(byval This as HTMLImgEvents ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as HTMLImgEvents ptr) as ULONG
	Release as function(byval This as HTMLImgEvents ptr) as ULONG
	GetTypeInfoCount as function(byval This as HTMLImgEvents ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as HTMLImgEvents ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as HTMLImgEvents ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as HTMLImgEvents ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type HTMLImgEvents_
	lpVtbl as HTMLImgEventsVtbl ptr
end type

#define HTMLImgEvents_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define HTMLImgEvents_AddRef(This) (This)->lpVtbl->AddRef(This)
#define HTMLImgEvents_Release(This) (This)->lpVtbl->Release(This)
#define HTMLImgEvents_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define HTMLImgEvents_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define HTMLImgEvents_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define HTMLImgEvents_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define __IHTMLImgElement_INTERFACE_DEFINED__
extern IID_IHTMLImgElement as const IID
type IHTMLImgElement as IHTMLImgElement_

type IHTMLImgElementVtbl
	QueryInterface as function(byval This as IHTMLImgElement ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLImgElement ptr) as ULONG
	Release as function(byval This as IHTMLImgElement ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLImgElement ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLImgElement ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLImgElement ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLImgElement ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	put_isMap as function(byval This as IHTMLImgElement ptr, byval v as VARIANT_BOOL) as HRESULT
	get_isMap as function(byval This as IHTMLImgElement ptr, byval p as VARIANT_BOOL ptr) as HRESULT
	put_useMap as function(byval This as IHTMLImgElement ptr, byval v as BSTR) as HRESULT
	get_useMap as function(byval This as IHTMLImgElement ptr, byval p as BSTR ptr) as HRESULT
	get_mimeType as function(byval This as IHTMLImgElement ptr, byval p as BSTR ptr) as HRESULT
	get_fileSize as function(byval This as IHTMLImgElement ptr, byval p as BSTR ptr) as HRESULT
	get_fileCreatedDate as function(byval This as IHTMLImgElement ptr, byval p as BSTR ptr) as HRESULT
	get_fileModifiedDate as function(byval This as IHTMLImgElement ptr, byval p as BSTR ptr) as HRESULT
	get_fileUpdatedDate as function(byval This as IHTMLImgElement ptr, byval p as BSTR ptr) as HRESULT
	get_protocol as function(byval This as IHTMLImgElement ptr, byval p as BSTR ptr) as HRESULT
	get_href as function(byval This as IHTMLImgElement ptr, byval p as BSTR ptr) as HRESULT
	get_nameProp as function(byval This as IHTMLImgElement ptr, byval p as BSTR ptr) as HRESULT
	put_border as function(byval This as IHTMLImgElement ptr, byval v as VARIANT) as HRESULT
	get_border as function(byval This as IHTMLImgElement ptr, byval p as VARIANT ptr) as HRESULT
	put_vspace as function(byval This as IHTMLImgElement ptr, byval v as long) as HRESULT
	get_vspace as function(byval This as IHTMLImgElement ptr, byval p as long ptr) as HRESULT
	put_hspace as function(byval This as IHTMLImgElement ptr, byval v as long) as HRESULT
	get_hspace as function(byval This as IHTMLImgElement ptr, byval p as long ptr) as HRESULT
	put_alt as function(byval This as IHTMLImgElement ptr, byval v as BSTR) as HRESULT
	get_alt as function(byval This as IHTMLImgElement ptr, byval p as BSTR ptr) as HRESULT
	put_src as function(byval This as IHTMLImgElement ptr, byval v as BSTR) as HRESULT
	get_src as function(byval This as IHTMLImgElement ptr, byval p as BSTR ptr) as HRESULT
	put_lowsrc as function(byval This as IHTMLImgElement ptr, byval v as BSTR) as HRESULT
	get_lowsrc as function(byval This as IHTMLImgElement ptr, byval p as BSTR ptr) as HRESULT
	put_vrml as function(byval This as IHTMLImgElement ptr, byval v as BSTR) as HRESULT
	get_vrml as function(byval This as IHTMLImgElement ptr, byval p as BSTR ptr) as HRESULT
	put_dynsrc as function(byval This as IHTMLImgElement ptr, byval v as BSTR) as HRESULT
	get_dynsrc as function(byval This as IHTMLImgElement ptr, byval p as BSTR ptr) as HRESULT
	get_readyState as function(byval This as IHTMLImgElement ptr, byval p as BSTR ptr) as HRESULT
	get_complete as function(byval This as IHTMLImgElement ptr, byval p as VARIANT_BOOL ptr) as HRESULT
	put_loop as function(byval This as IHTMLImgElement ptr, byval v as VARIANT) as HRESULT
	get_loop as function(byval This as IHTMLImgElement ptr, byval p as VARIANT ptr) as HRESULT
	put_align as function(byval This as IHTMLImgElement ptr, byval v as BSTR) as HRESULT
	get_align as function(byval This as IHTMLImgElement ptr, byval p as BSTR ptr) as HRESULT
	put_onload as function(byval This as IHTMLImgElement ptr, byval v as VARIANT) as HRESULT
	get_onload as function(byval This as IHTMLImgElement ptr, byval p as VARIANT ptr) as HRESULT
	put_onerror as function(byval This as IHTMLImgElement ptr, byval v as VARIANT) as HRESULT
	get_onerror as function(byval This as IHTMLImgElement ptr, byval p as VARIANT ptr) as HRESULT
	put_onabort as function(byval This as IHTMLImgElement ptr, byval v as VARIANT) as HRESULT
	get_onabort as function(byval This as IHTMLImgElement ptr, byval p as VARIANT ptr) as HRESULT
	put_name as function(byval This as IHTMLImgElement ptr, byval v as BSTR) as HRESULT
	get_name as function(byval This as IHTMLImgElement ptr, byval p as BSTR ptr) as HRESULT
	put_width as function(byval This as IHTMLImgElement ptr, byval v as long) as HRESULT
	get_width as function(byval This as IHTMLImgElement ptr, byval p as long ptr) as HRESULT
	put_height as function(byval This as IHTMLImgElement ptr, byval v as long) as HRESULT
	get_height as function(byval This as IHTMLImgElement ptr, byval p as long ptr) as HRESULT
	put_start as function(byval This as IHTMLImgElement ptr, byval v as BSTR) as HRESULT
	get_start as function(byval This as IHTMLImgElement ptr, byval p as BSTR ptr) as HRESULT
end type

type IHTMLImgElement_
	lpVtbl as IHTMLImgElementVtbl ptr
end type

#define IHTMLImgElement_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLImgElement_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLImgElement_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLImgElement_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLImgElement_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLImgElement_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLImgElement_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLImgElement_put_isMap(This, v) (This)->lpVtbl->put_isMap(This, v)
#define IHTMLImgElement_get_isMap(This, p) (This)->lpVtbl->get_isMap(This, p)
#define IHTMLImgElement_put_useMap(This, v) (This)->lpVtbl->put_useMap(This, v)
#define IHTMLImgElement_get_useMap(This, p) (This)->lpVtbl->get_useMap(This, p)
#define IHTMLImgElement_get_mimeType(This, p) (This)->lpVtbl->get_mimeType(This, p)
#define IHTMLImgElement_get_fileSize(This, p) (This)->lpVtbl->get_fileSize(This, p)
#define IHTMLImgElement_get_fileCreatedDate(This, p) (This)->lpVtbl->get_fileCreatedDate(This, p)
#define IHTMLImgElement_get_fileModifiedDate(This, p) (This)->lpVtbl->get_fileModifiedDate(This, p)
#define IHTMLImgElement_get_fileUpdatedDate(This, p) (This)->lpVtbl->get_fileUpdatedDate(This, p)
#define IHTMLImgElement_get_protocol(This, p) (This)->lpVtbl->get_protocol(This, p)
#define IHTMLImgElement_get_href(This, p) (This)->lpVtbl->get_href(This, p)
#define IHTMLImgElement_get_nameProp(This, p) (This)->lpVtbl->get_nameProp(This, p)
#define IHTMLImgElement_put_border(This, v) (This)->lpVtbl->put_border(This, v)
#define IHTMLImgElement_get_border(This, p) (This)->lpVtbl->get_border(This, p)
#define IHTMLImgElement_put_vspace(This, v) (This)->lpVtbl->put_vspace(This, v)
#define IHTMLImgElement_get_vspace(This, p) (This)->lpVtbl->get_vspace(This, p)
#define IHTMLImgElement_put_hspace(This, v) (This)->lpVtbl->put_hspace(This, v)
#define IHTMLImgElement_get_hspace(This, p) (This)->lpVtbl->get_hspace(This, p)
#define IHTMLImgElement_put_alt(This, v) (This)->lpVtbl->put_alt(This, v)
#define IHTMLImgElement_get_alt(This, p) (This)->lpVtbl->get_alt(This, p)
#define IHTMLImgElement_put_src(This, v) (This)->lpVtbl->put_src(This, v)
#define IHTMLImgElement_get_src(This, p) (This)->lpVtbl->get_src(This, p)
#define IHTMLImgElement_put_lowsrc(This, v) (This)->lpVtbl->put_lowsrc(This, v)
#define IHTMLImgElement_get_lowsrc(This, p) (This)->lpVtbl->get_lowsrc(This, p)
#define IHTMLImgElement_put_vrml(This, v) (This)->lpVtbl->put_vrml(This, v)
#define IHTMLImgElement_get_vrml(This, p) (This)->lpVtbl->get_vrml(This, p)
#define IHTMLImgElement_put_dynsrc(This, v) (This)->lpVtbl->put_dynsrc(This, v)
#define IHTMLImgElement_get_dynsrc(This, p) (This)->lpVtbl->get_dynsrc(This, p)
#define IHTMLImgElement_get_readyState(This, p) (This)->lpVtbl->get_readyState(This, p)
#define IHTMLImgElement_get_complete(This, p) (This)->lpVtbl->get_complete(This, p)
#define IHTMLImgElement_put_loop(This, v) (This)->lpVtbl->put_loop(This, v)
#define IHTMLImgElement_get_loop(This, p) (This)->lpVtbl->get_loop(This, p)
#define IHTMLImgElement_put_align(This, v) (This)->lpVtbl->put_align(This, v)
#define IHTMLImgElement_get_align(This, p) (This)->lpVtbl->get_align(This, p)
#define IHTMLImgElement_put_onload(This, v) (This)->lpVtbl->put_onload(This, v)
#define IHTMLImgElement_get_onload(This, p) (This)->lpVtbl->get_onload(This, p)
#define IHTMLImgElement_put_onerror(This, v) (This)->lpVtbl->put_onerror(This, v)
#define IHTMLImgElement_get_onerror(This, p) (This)->lpVtbl->get_onerror(This, p)
#define IHTMLImgElement_put_onabort(This, v) (This)->lpVtbl->put_onabort(This, v)
#define IHTMLImgElement_get_onabort(This, p) (This)->lpVtbl->get_onabort(This, p)
#define IHTMLImgElement_put_name(This, v) (This)->lpVtbl->put_name(This, v)
#define IHTMLImgElement_get_name(This, p) (This)->lpVtbl->get_name(This, p)
#define IHTMLImgElement_put_width(This, v) (This)->lpVtbl->put_width(This, v)
#define IHTMLImgElement_get_width(This, p) (This)->lpVtbl->get_width(This, p)
#define IHTMLImgElement_put_height(This, v) (This)->lpVtbl->put_height(This, v)
#define IHTMLImgElement_get_height(This, p) (This)->lpVtbl->get_height(This, p)
#define IHTMLImgElement_put_start(This, v) (This)->lpVtbl->put_start(This, v)
#define IHTMLImgElement_get_start(This, p) (This)->lpVtbl->get_start(This, p)

declare function IHTMLImgElement_put_isMap_Proxy(byval This as IHTMLImgElement ptr, byval v as VARIANT_BOOL) as HRESULT
declare sub IHTMLImgElement_put_isMap_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLImgElement_get_isMap_Proxy(byval This as IHTMLImgElement ptr, byval p as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLImgElement_get_isMap_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLImgElement_put_useMap_Proxy(byval This as IHTMLImgElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLImgElement_put_useMap_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLImgElement_get_useMap_Proxy(byval This as IHTMLImgElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLImgElement_get_useMap_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLImgElement_get_mimeType_Proxy(byval This as IHTMLImgElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLImgElement_get_mimeType_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLImgElement_get_fileSize_Proxy(byval This as IHTMLImgElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLImgElement_get_fileSize_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLImgElement_get_fileCreatedDate_Proxy(byval This as IHTMLImgElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLImgElement_get_fileCreatedDate_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLImgElement_get_fileModifiedDate_Proxy(byval This as IHTMLImgElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLImgElement_get_fileModifiedDate_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLImgElement_get_fileUpdatedDate_Proxy(byval This as IHTMLImgElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLImgElement_get_fileUpdatedDate_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLImgElement_get_protocol_Proxy(byval This as IHTMLImgElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLImgElement_get_protocol_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLImgElement_get_href_Proxy(byval This as IHTMLImgElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLImgElement_get_href_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLImgElement_get_nameProp_Proxy(byval This as IHTMLImgElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLImgElement_get_nameProp_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLImgElement_put_border_Proxy(byval This as IHTMLImgElement ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLImgElement_put_border_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLImgElement_get_border_Proxy(byval This as IHTMLImgElement ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLImgElement_get_border_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLImgElement_put_vspace_Proxy(byval This as IHTMLImgElement ptr, byval v as long) as HRESULT
declare sub IHTMLImgElement_put_vspace_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLImgElement_get_vspace_Proxy(byval This as IHTMLImgElement ptr, byval p as long ptr) as HRESULT
declare sub IHTMLImgElement_get_vspace_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLImgElement_put_hspace_Proxy(byval This as IHTMLImgElement ptr, byval v as long) as HRESULT
declare sub IHTMLImgElement_put_hspace_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLImgElement_get_hspace_Proxy(byval This as IHTMLImgElement ptr, byval p as long ptr) as HRESULT
declare sub IHTMLImgElement_get_hspace_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLImgElement_put_alt_Proxy(byval This as IHTMLImgElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLImgElement_put_alt_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLImgElement_get_alt_Proxy(byval This as IHTMLImgElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLImgElement_get_alt_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLImgElement_put_src_Proxy(byval This as IHTMLImgElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLImgElement_put_src_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLImgElement_get_src_Proxy(byval This as IHTMLImgElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLImgElement_get_src_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLImgElement_put_lowsrc_Proxy(byval This as IHTMLImgElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLImgElement_put_lowsrc_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLImgElement_get_lowsrc_Proxy(byval This as IHTMLImgElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLImgElement_get_lowsrc_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLImgElement_put_vrml_Proxy(byval This as IHTMLImgElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLImgElement_put_vrml_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLImgElement_get_vrml_Proxy(byval This as IHTMLImgElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLImgElement_get_vrml_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLImgElement_put_dynsrc_Proxy(byval This as IHTMLImgElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLImgElement_put_dynsrc_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLImgElement_get_dynsrc_Proxy(byval This as IHTMLImgElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLImgElement_get_dynsrc_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLImgElement_get_readyState_Proxy(byval This as IHTMLImgElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLImgElement_get_readyState_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLImgElement_get_complete_Proxy(byval This as IHTMLImgElement ptr, byval p as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLImgElement_get_complete_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLImgElement_put_loop_Proxy(byval This as IHTMLImgElement ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLImgElement_put_loop_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLImgElement_get_loop_Proxy(byval This as IHTMLImgElement ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLImgElement_get_loop_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLImgElement_put_align_Proxy(byval This as IHTMLImgElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLImgElement_put_align_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLImgElement_get_align_Proxy(byval This as IHTMLImgElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLImgElement_get_align_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLImgElement_put_onload_Proxy(byval This as IHTMLImgElement ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLImgElement_put_onload_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLImgElement_get_onload_Proxy(byval This as IHTMLImgElement ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLImgElement_get_onload_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLImgElement_put_onerror_Proxy(byval This as IHTMLImgElement ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLImgElement_put_onerror_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLImgElement_get_onerror_Proxy(byval This as IHTMLImgElement ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLImgElement_get_onerror_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLImgElement_put_onabort_Proxy(byval This as IHTMLImgElement ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLImgElement_put_onabort_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLImgElement_get_onabort_Proxy(byval This as IHTMLImgElement ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLImgElement_get_onabort_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLImgElement_put_name_Proxy(byval This as IHTMLImgElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLImgElement_put_name_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLImgElement_get_name_Proxy(byval This as IHTMLImgElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLImgElement_get_name_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLImgElement_put_width_Proxy(byval This as IHTMLImgElement ptr, byval v as long) as HRESULT
declare sub IHTMLImgElement_put_width_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLImgElement_get_width_Proxy(byval This as IHTMLImgElement ptr, byval p as long ptr) as HRESULT
declare sub IHTMLImgElement_get_width_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLImgElement_put_height_Proxy(byval This as IHTMLImgElement ptr, byval v as long) as HRESULT
declare sub IHTMLImgElement_put_height_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLImgElement_get_height_Proxy(byval This as IHTMLImgElement ptr, byval p as long ptr) as HRESULT
declare sub IHTMLImgElement_get_height_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLImgElement_put_start_Proxy(byval This as IHTMLImgElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLImgElement_put_start_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLImgElement_get_start_Proxy(byval This as IHTMLImgElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLImgElement_get_start_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLImgElement2_INTERFACE_DEFINED__
extern IID_IHTMLImgElement2 as const IID
type IHTMLImgElement2 as IHTMLImgElement2_

type IHTMLImgElement2Vtbl
	QueryInterface as function(byval This as IHTMLImgElement2 ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLImgElement2 ptr) as ULONG
	Release as function(byval This as IHTMLImgElement2 ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLImgElement2 ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLImgElement2 ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLImgElement2 ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLImgElement2 ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	put_longDesc as function(byval This as IHTMLImgElement2 ptr, byval v as BSTR) as HRESULT
	get_longDesc as function(byval This as IHTMLImgElement2 ptr, byval p as BSTR ptr) as HRESULT
end type

type IHTMLImgElement2_
	lpVtbl as IHTMLImgElement2Vtbl ptr
end type

#define IHTMLImgElement2_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLImgElement2_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLImgElement2_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLImgElement2_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLImgElement2_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLImgElement2_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLImgElement2_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLImgElement2_put_longDesc(This, v) (This)->lpVtbl->put_longDesc(This, v)
#define IHTMLImgElement2_get_longDesc(This, p) (This)->lpVtbl->get_longDesc(This, p)

declare function IHTMLImgElement2_put_longDesc_Proxy(byval This as IHTMLImgElement2 ptr, byval v as BSTR) as HRESULT
declare sub IHTMLImgElement2_put_longDesc_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLImgElement2_get_longDesc_Proxy(byval This as IHTMLImgElement2 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLImgElement2_get_longDesc_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLImageElementFactory_INTERFACE_DEFINED__
extern IID_IHTMLImageElementFactory as const IID
type IHTMLImageElementFactory as IHTMLImageElementFactory_

type IHTMLImageElementFactoryVtbl
	QueryInterface as function(byval This as IHTMLImageElementFactory ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLImageElementFactory ptr) as ULONG
	Release as function(byval This as IHTMLImageElementFactory ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLImageElementFactory ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLImageElementFactory ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLImageElementFactory ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLImageElementFactory ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	create as function(byval This as IHTMLImageElementFactory ptr, byval width as VARIANT, byval height as VARIANT, byval __MIDL_0011 as IHTMLImgElement ptr ptr) as HRESULT
end type

type IHTMLImageElementFactory_
	lpVtbl as IHTMLImageElementFactoryVtbl ptr
end type

#define IHTMLImageElementFactory_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLImageElementFactory_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLImageElementFactory_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLImageElementFactory_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLImageElementFactory_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLImageElementFactory_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLImageElementFactory_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLImageElementFactory_create(This, width, height, __MIDL_0011) (This)->lpVtbl->create(This, width, height, __MIDL_0011)
declare function IHTMLImageElementFactory_create_Proxy(byval This as IHTMLImageElementFactory ptr, byval width as VARIANT, byval height as VARIANT, byval __MIDL_0011 as IHTMLImgElement ptr ptr) as HRESULT
declare sub IHTMLImageElementFactory_create_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __DispHTMLImg_DISPINTERFACE_DEFINED__
extern DIID_DispHTMLImg as const IID
type DispHTMLImg as DispHTMLImg_

type DispHTMLImgVtbl
	QueryInterface as function(byval This as DispHTMLImg ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as DispHTMLImg ptr) as ULONG
	Release as function(byval This as DispHTMLImg ptr) as ULONG
	GetTypeInfoCount as function(byval This as DispHTMLImg ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as DispHTMLImg ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as DispHTMLImg ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as DispHTMLImg ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type DispHTMLImg_
	lpVtbl as DispHTMLImgVtbl ptr
end type

#define DispHTMLImg_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define DispHTMLImg_AddRef(This) (This)->lpVtbl->AddRef(This)
#define DispHTMLImg_Release(This) (This)->lpVtbl->Release(This)
#define DispHTMLImg_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define DispHTMLImg_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define DispHTMLImg_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define DispHTMLImg_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
extern CLSID_HTMLImg as const CLSID
extern CLSID_HTMLImageElementFactory as const CLSID
#define __IHTMLBodyElement_INTERFACE_DEFINED__
extern IID_IHTMLBodyElement as const IID
type IHTMLBodyElement as IHTMLBodyElement_

type IHTMLBodyElementVtbl
	QueryInterface as function(byval This as IHTMLBodyElement ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLBodyElement ptr) as ULONG
	Release as function(byval This as IHTMLBodyElement ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLBodyElement ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLBodyElement ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLBodyElement ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLBodyElement ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	put_background as function(byval This as IHTMLBodyElement ptr, byval v as BSTR) as HRESULT
	get_background as function(byval This as IHTMLBodyElement ptr, byval p as BSTR ptr) as HRESULT
	put_bgProperties as function(byval This as IHTMLBodyElement ptr, byval v as BSTR) as HRESULT
	get_bgProperties as function(byval This as IHTMLBodyElement ptr, byval p as BSTR ptr) as HRESULT
	put_leftMargin as function(byval This as IHTMLBodyElement ptr, byval v as VARIANT) as HRESULT
	get_leftMargin as function(byval This as IHTMLBodyElement ptr, byval p as VARIANT ptr) as HRESULT
	put_topMargin as function(byval This as IHTMLBodyElement ptr, byval v as VARIANT) as HRESULT
	get_topMargin as function(byval This as IHTMLBodyElement ptr, byval p as VARIANT ptr) as HRESULT
	put_rightMargin as function(byval This as IHTMLBodyElement ptr, byval v as VARIANT) as HRESULT
	get_rightMargin as function(byval This as IHTMLBodyElement ptr, byval p as VARIANT ptr) as HRESULT
	put_bottomMargin as function(byval This as IHTMLBodyElement ptr, byval v as VARIANT) as HRESULT
	get_bottomMargin as function(byval This as IHTMLBodyElement ptr, byval p as VARIANT ptr) as HRESULT
	put_noWrap as function(byval This as IHTMLBodyElement ptr, byval v as VARIANT_BOOL) as HRESULT
	get_noWrap as function(byval This as IHTMLBodyElement ptr, byval p as VARIANT_BOOL ptr) as HRESULT
	put_bgColor as function(byval This as IHTMLBodyElement ptr, byval v as VARIANT) as HRESULT
	get_bgColor as function(byval This as IHTMLBodyElement ptr, byval p as VARIANT ptr) as HRESULT
	put_text as function(byval This as IHTMLBodyElement ptr, byval v as VARIANT) as HRESULT
	get_text as function(byval This as IHTMLBodyElement ptr, byval p as VARIANT ptr) as HRESULT
	put_link as function(byval This as IHTMLBodyElement ptr, byval v as VARIANT) as HRESULT
	get_link as function(byval This as IHTMLBodyElement ptr, byval p as VARIANT ptr) as HRESULT
	put_vLink as function(byval This as IHTMLBodyElement ptr, byval v as VARIANT) as HRESULT
	get_vLink as function(byval This as IHTMLBodyElement ptr, byval p as VARIANT ptr) as HRESULT
	put_aLink as function(byval This as IHTMLBodyElement ptr, byval v as VARIANT) as HRESULT
	get_aLink as function(byval This as IHTMLBodyElement ptr, byval p as VARIANT ptr) as HRESULT
	put_onload as function(byval This as IHTMLBodyElement ptr, byval v as VARIANT) as HRESULT
	get_onload as function(byval This as IHTMLBodyElement ptr, byval p as VARIANT ptr) as HRESULT
	put_onunload as function(byval This as IHTMLBodyElement ptr, byval v as VARIANT) as HRESULT
	get_onunload as function(byval This as IHTMLBodyElement ptr, byval p as VARIANT ptr) as HRESULT
	put_scroll as function(byval This as IHTMLBodyElement ptr, byval v as BSTR) as HRESULT
	get_scroll as function(byval This as IHTMLBodyElement ptr, byval p as BSTR ptr) as HRESULT
	put_onselect as function(byval This as IHTMLBodyElement ptr, byval v as VARIANT) as HRESULT
	get_onselect as function(byval This as IHTMLBodyElement ptr, byval p as VARIANT ptr) as HRESULT
	put_onbeforeunload as function(byval This as IHTMLBodyElement ptr, byval v as VARIANT) as HRESULT
	get_onbeforeunload as function(byval This as IHTMLBodyElement ptr, byval p as VARIANT ptr) as HRESULT
	createTextRange as function(byval This as IHTMLBodyElement ptr, byval range as IHTMLTxtRange ptr ptr) as HRESULT
end type

type IHTMLBodyElement_
	lpVtbl as IHTMLBodyElementVtbl ptr
end type

#define IHTMLBodyElement_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLBodyElement_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLBodyElement_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLBodyElement_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLBodyElement_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLBodyElement_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLBodyElement_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLBodyElement_put_background(This, v) (This)->lpVtbl->put_background(This, v)
#define IHTMLBodyElement_get_background(This, p) (This)->lpVtbl->get_background(This, p)
#define IHTMLBodyElement_put_bgProperties(This, v) (This)->lpVtbl->put_bgProperties(This, v)
#define IHTMLBodyElement_get_bgProperties(This, p) (This)->lpVtbl->get_bgProperties(This, p)
#define IHTMLBodyElement_put_leftMargin(This, v) (This)->lpVtbl->put_leftMargin(This, v)
#define IHTMLBodyElement_get_leftMargin(This, p) (This)->lpVtbl->get_leftMargin(This, p)
#define IHTMLBodyElement_put_topMargin(This, v) (This)->lpVtbl->put_topMargin(This, v)
#define IHTMLBodyElement_get_topMargin(This, p) (This)->lpVtbl->get_topMargin(This, p)
#define IHTMLBodyElement_put_rightMargin(This, v) (This)->lpVtbl->put_rightMargin(This, v)
#define IHTMLBodyElement_get_rightMargin(This, p) (This)->lpVtbl->get_rightMargin(This, p)
#define IHTMLBodyElement_put_bottomMargin(This, v) (This)->lpVtbl->put_bottomMargin(This, v)
#define IHTMLBodyElement_get_bottomMargin(This, p) (This)->lpVtbl->get_bottomMargin(This, p)
#define IHTMLBodyElement_put_noWrap(This, v) (This)->lpVtbl->put_noWrap(This, v)
#define IHTMLBodyElement_get_noWrap(This, p) (This)->lpVtbl->get_noWrap(This, p)
#define IHTMLBodyElement_put_bgColor(This, v) (This)->lpVtbl->put_bgColor(This, v)
#define IHTMLBodyElement_get_bgColor(This, p) (This)->lpVtbl->get_bgColor(This, p)
#define IHTMLBodyElement_put_text(This, v) (This)->lpVtbl->put_text(This, v)
#define IHTMLBodyElement_get_text(This, p) (This)->lpVtbl->get_text(This, p)
#define IHTMLBodyElement_put_link(This, v) (This)->lpVtbl->put_link(This, v)
#define IHTMLBodyElement_get_link(This, p) (This)->lpVtbl->get_link(This, p)
#define IHTMLBodyElement_put_vLink(This, v) (This)->lpVtbl->put_vLink(This, v)
#define IHTMLBodyElement_get_vLink(This, p) (This)->lpVtbl->get_vLink(This, p)
#define IHTMLBodyElement_put_aLink(This, v) (This)->lpVtbl->put_aLink(This, v)
#define IHTMLBodyElement_get_aLink(This, p) (This)->lpVtbl->get_aLink(This, p)
#define IHTMLBodyElement_put_onload(This, v) (This)->lpVtbl->put_onload(This, v)
#define IHTMLBodyElement_get_onload(This, p) (This)->lpVtbl->get_onload(This, p)
#define IHTMLBodyElement_put_onunload(This, v) (This)->lpVtbl->put_onunload(This, v)
#define IHTMLBodyElement_get_onunload(This, p) (This)->lpVtbl->get_onunload(This, p)
#define IHTMLBodyElement_put_scroll(This, v) (This)->lpVtbl->put_scroll(This, v)
#define IHTMLBodyElement_get_scroll(This, p) (This)->lpVtbl->get_scroll(This, p)
#define IHTMLBodyElement_put_onselect(This, v) (This)->lpVtbl->put_onselect(This, v)
#define IHTMLBodyElement_get_onselect(This, p) (This)->lpVtbl->get_onselect(This, p)
#define IHTMLBodyElement_put_onbeforeunload(This, v) (This)->lpVtbl->put_onbeforeunload(This, v)
#define IHTMLBodyElement_get_onbeforeunload(This, p) (This)->lpVtbl->get_onbeforeunload(This, p)
#define IHTMLBodyElement_createTextRange(This, range) (This)->lpVtbl->createTextRange(This, range)

declare function IHTMLBodyElement_put_background_Proxy(byval This as IHTMLBodyElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLBodyElement_put_background_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLBodyElement_get_background_Proxy(byval This as IHTMLBodyElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLBodyElement_get_background_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLBodyElement_put_bgProperties_Proxy(byval This as IHTMLBodyElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLBodyElement_put_bgProperties_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLBodyElement_get_bgProperties_Proxy(byval This as IHTMLBodyElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLBodyElement_get_bgProperties_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLBodyElement_put_leftMargin_Proxy(byval This as IHTMLBodyElement ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLBodyElement_put_leftMargin_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLBodyElement_get_leftMargin_Proxy(byval This as IHTMLBodyElement ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLBodyElement_get_leftMargin_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLBodyElement_put_topMargin_Proxy(byval This as IHTMLBodyElement ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLBodyElement_put_topMargin_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLBodyElement_get_topMargin_Proxy(byval This as IHTMLBodyElement ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLBodyElement_get_topMargin_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLBodyElement_put_rightMargin_Proxy(byval This as IHTMLBodyElement ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLBodyElement_put_rightMargin_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLBodyElement_get_rightMargin_Proxy(byval This as IHTMLBodyElement ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLBodyElement_get_rightMargin_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLBodyElement_put_bottomMargin_Proxy(byval This as IHTMLBodyElement ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLBodyElement_put_bottomMargin_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLBodyElement_get_bottomMargin_Proxy(byval This as IHTMLBodyElement ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLBodyElement_get_bottomMargin_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLBodyElement_put_noWrap_Proxy(byval This as IHTMLBodyElement ptr, byval v as VARIANT_BOOL) as HRESULT
declare sub IHTMLBodyElement_put_noWrap_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLBodyElement_get_noWrap_Proxy(byval This as IHTMLBodyElement ptr, byval p as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLBodyElement_get_noWrap_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLBodyElement_put_bgColor_Proxy(byval This as IHTMLBodyElement ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLBodyElement_put_bgColor_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLBodyElement_get_bgColor_Proxy(byval This as IHTMLBodyElement ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLBodyElement_get_bgColor_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLBodyElement_put_text_Proxy(byval This as IHTMLBodyElement ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLBodyElement_put_text_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLBodyElement_get_text_Proxy(byval This as IHTMLBodyElement ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLBodyElement_get_text_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLBodyElement_put_link_Proxy(byval This as IHTMLBodyElement ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLBodyElement_put_link_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLBodyElement_get_link_Proxy(byval This as IHTMLBodyElement ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLBodyElement_get_link_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLBodyElement_put_vLink_Proxy(byval This as IHTMLBodyElement ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLBodyElement_put_vLink_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLBodyElement_get_vLink_Proxy(byval This as IHTMLBodyElement ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLBodyElement_get_vLink_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLBodyElement_put_aLink_Proxy(byval This as IHTMLBodyElement ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLBodyElement_put_aLink_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLBodyElement_get_aLink_Proxy(byval This as IHTMLBodyElement ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLBodyElement_get_aLink_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLBodyElement_put_onload_Proxy(byval This as IHTMLBodyElement ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLBodyElement_put_onload_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLBodyElement_get_onload_Proxy(byval This as IHTMLBodyElement ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLBodyElement_get_onload_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLBodyElement_put_onunload_Proxy(byval This as IHTMLBodyElement ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLBodyElement_put_onunload_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLBodyElement_get_onunload_Proxy(byval This as IHTMLBodyElement ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLBodyElement_get_onunload_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLBodyElement_put_scroll_Proxy(byval This as IHTMLBodyElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLBodyElement_put_scroll_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLBodyElement_get_scroll_Proxy(byval This as IHTMLBodyElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLBodyElement_get_scroll_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLBodyElement_put_onselect_Proxy(byval This as IHTMLBodyElement ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLBodyElement_put_onselect_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLBodyElement_get_onselect_Proxy(byval This as IHTMLBodyElement ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLBodyElement_get_onselect_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLBodyElement_put_onbeforeunload_Proxy(byval This as IHTMLBodyElement ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLBodyElement_put_onbeforeunload_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLBodyElement_get_onbeforeunload_Proxy(byval This as IHTMLBodyElement ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLBodyElement_get_onbeforeunload_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLBodyElement_createTextRange_Proxy(byval This as IHTMLBodyElement ptr, byval range as IHTMLTxtRange ptr ptr) as HRESULT
declare sub IHTMLBodyElement_createTextRange_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLBodyElement2_INTERFACE_DEFINED__
extern IID_IHTMLBodyElement2 as const IID
type IHTMLBodyElement2 as IHTMLBodyElement2_

type IHTMLBodyElement2Vtbl
	QueryInterface as function(byval This as IHTMLBodyElement2 ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLBodyElement2 ptr) as ULONG
	Release as function(byval This as IHTMLBodyElement2 ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLBodyElement2 ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLBodyElement2 ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLBodyElement2 ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLBodyElement2 ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	put_onbeforeprint as function(byval This as IHTMLBodyElement2 ptr, byval v as VARIANT) as HRESULT
	get_onbeforeprint as function(byval This as IHTMLBodyElement2 ptr, byval p as VARIANT ptr) as HRESULT
	put_onafterprint as function(byval This as IHTMLBodyElement2 ptr, byval v as VARIANT) as HRESULT
	get_onafterprint as function(byval This as IHTMLBodyElement2 ptr, byval p as VARIANT ptr) as HRESULT
end type

type IHTMLBodyElement2_
	lpVtbl as IHTMLBodyElement2Vtbl ptr
end type

#define IHTMLBodyElement2_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLBodyElement2_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLBodyElement2_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLBodyElement2_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLBodyElement2_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLBodyElement2_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLBodyElement2_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLBodyElement2_put_onbeforeprint(This, v) (This)->lpVtbl->put_onbeforeprint(This, v)
#define IHTMLBodyElement2_get_onbeforeprint(This, p) (This)->lpVtbl->get_onbeforeprint(This, p)
#define IHTMLBodyElement2_put_onafterprint(This, v) (This)->lpVtbl->put_onafterprint(This, v)
#define IHTMLBodyElement2_get_onafterprint(This, p) (This)->lpVtbl->get_onafterprint(This, p)

declare function IHTMLBodyElement2_put_onbeforeprint_Proxy(byval This as IHTMLBodyElement2 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLBodyElement2_put_onbeforeprint_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLBodyElement2_get_onbeforeprint_Proxy(byval This as IHTMLBodyElement2 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLBodyElement2_get_onbeforeprint_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLBodyElement2_put_onafterprint_Proxy(byval This as IHTMLBodyElement2 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLBodyElement2_put_onafterprint_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLBodyElement2_get_onafterprint_Proxy(byval This as IHTMLBodyElement2 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLBodyElement2_get_onafterprint_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __DispHTMLBody_DISPINTERFACE_DEFINED__
extern DIID_DispHTMLBody as const IID
type DispHTMLBody as DispHTMLBody_

type DispHTMLBodyVtbl
	QueryInterface as function(byval This as DispHTMLBody ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as DispHTMLBody ptr) as ULONG
	Release as function(byval This as DispHTMLBody ptr) as ULONG
	GetTypeInfoCount as function(byval This as DispHTMLBody ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as DispHTMLBody ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as DispHTMLBody ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as DispHTMLBody ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type DispHTMLBody_
	lpVtbl as DispHTMLBodyVtbl ptr
end type

#define DispHTMLBody_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define DispHTMLBody_AddRef(This) (This)->lpVtbl->AddRef(This)
#define DispHTMLBody_Release(This) (This)->lpVtbl->Release(This)
#define DispHTMLBody_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define DispHTMLBody_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define DispHTMLBody_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define DispHTMLBody_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
extern CLSID_HTMLBody as const CLSID
#define __IHTMLFontElement_INTERFACE_DEFINED__
extern IID_IHTMLFontElement as const IID
type IHTMLFontElement as IHTMLFontElement_

type IHTMLFontElementVtbl
	QueryInterface as function(byval This as IHTMLFontElement ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLFontElement ptr) as ULONG
	Release as function(byval This as IHTMLFontElement ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLFontElement ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLFontElement ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLFontElement ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLFontElement ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	put_color as function(byval This as IHTMLFontElement ptr, byval v as VARIANT) as HRESULT
	get_color as function(byval This as IHTMLFontElement ptr, byval p as VARIANT ptr) as HRESULT
	put_face as function(byval This as IHTMLFontElement ptr, byval v as BSTR) as HRESULT
	get_face as function(byval This as IHTMLFontElement ptr, byval p as BSTR ptr) as HRESULT
	put_size as function(byval This as IHTMLFontElement ptr, byval v as VARIANT) as HRESULT
	get_size as function(byval This as IHTMLFontElement ptr, byval p as VARIANT ptr) as HRESULT
end type

type IHTMLFontElement_
	lpVtbl as IHTMLFontElementVtbl ptr
end type

#define IHTMLFontElement_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLFontElement_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLFontElement_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLFontElement_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLFontElement_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLFontElement_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLFontElement_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLFontElement_put_color(This, v) (This)->lpVtbl->put_color(This, v)
#define IHTMLFontElement_get_color(This, p) (This)->lpVtbl->get_color(This, p)
#define IHTMLFontElement_put_face(This, v) (This)->lpVtbl->put_face(This, v)
#define IHTMLFontElement_get_face(This, p) (This)->lpVtbl->get_face(This, p)
#define IHTMLFontElement_put_size(This, v) (This)->lpVtbl->put_size(This, v)
#define IHTMLFontElement_get_size(This, p) (This)->lpVtbl->get_size(This, p)

declare function IHTMLFontElement_put_color_Proxy(byval This as IHTMLFontElement ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLFontElement_put_color_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLFontElement_get_color_Proxy(byval This as IHTMLFontElement ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLFontElement_get_color_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLFontElement_put_face_Proxy(byval This as IHTMLFontElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLFontElement_put_face_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLFontElement_get_face_Proxy(byval This as IHTMLFontElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLFontElement_get_face_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLFontElement_put_size_Proxy(byval This as IHTMLFontElement ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLFontElement_put_size_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLFontElement_get_size_Proxy(byval This as IHTMLFontElement ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLFontElement_get_size_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __DispHTMLFontElement_DISPINTERFACE_DEFINED__
extern DIID_DispHTMLFontElement as const IID
type DispHTMLFontElement as DispHTMLFontElement_

type DispHTMLFontElementVtbl
	QueryInterface as function(byval This as DispHTMLFontElement ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as DispHTMLFontElement ptr) as ULONG
	Release as function(byval This as DispHTMLFontElement ptr) as ULONG
	GetTypeInfoCount as function(byval This as DispHTMLFontElement ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as DispHTMLFontElement ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as DispHTMLFontElement ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as DispHTMLFontElement ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type DispHTMLFontElement_
	lpVtbl as DispHTMLFontElementVtbl ptr
end type

#define DispHTMLFontElement_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define DispHTMLFontElement_AddRef(This) (This)->lpVtbl->AddRef(This)
#define DispHTMLFontElement_Release(This) (This)->lpVtbl->Release(This)
#define DispHTMLFontElement_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define DispHTMLFontElement_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define DispHTMLFontElement_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define DispHTMLFontElement_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
extern CLSID_HTMLFontElement as const CLSID
#define __HTMLAnchorEvents2_DISPINTERFACE_DEFINED__
extern DIID_HTMLAnchorEvents2 as const IID
type HTMLAnchorEvents2 as HTMLAnchorEvents2_

type HTMLAnchorEvents2Vtbl
	QueryInterface as function(byval This as HTMLAnchorEvents2 ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as HTMLAnchorEvents2 ptr) as ULONG
	Release as function(byval This as HTMLAnchorEvents2 ptr) as ULONG
	GetTypeInfoCount as function(byval This as HTMLAnchorEvents2 ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as HTMLAnchorEvents2 ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as HTMLAnchorEvents2 ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as HTMLAnchorEvents2 ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type HTMLAnchorEvents2_
	lpVtbl as HTMLAnchorEvents2Vtbl ptr
end type

#define HTMLAnchorEvents2_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define HTMLAnchorEvents2_AddRef(This) (This)->lpVtbl->AddRef(This)
#define HTMLAnchorEvents2_Release(This) (This)->lpVtbl->Release(This)
#define HTMLAnchorEvents2_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define HTMLAnchorEvents2_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define HTMLAnchorEvents2_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define HTMLAnchorEvents2_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define __HTMLAnchorEvents_DISPINTERFACE_DEFINED__
extern DIID_HTMLAnchorEvents as const IID
type HTMLAnchorEvents as HTMLAnchorEvents_

type HTMLAnchorEventsVtbl
	QueryInterface as function(byval This as HTMLAnchorEvents ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as HTMLAnchorEvents ptr) as ULONG
	Release as function(byval This as HTMLAnchorEvents ptr) as ULONG
	GetTypeInfoCount as function(byval This as HTMLAnchorEvents ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as HTMLAnchorEvents ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as HTMLAnchorEvents ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as HTMLAnchorEvents ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type HTMLAnchorEvents_
	lpVtbl as HTMLAnchorEventsVtbl ptr
end type

#define HTMLAnchorEvents_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define HTMLAnchorEvents_AddRef(This) (This)->lpVtbl->AddRef(This)
#define HTMLAnchorEvents_Release(This) (This)->lpVtbl->Release(This)
#define HTMLAnchorEvents_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define HTMLAnchorEvents_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define HTMLAnchorEvents_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define HTMLAnchorEvents_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define __IHTMLAnchorElement_INTERFACE_DEFINED__
extern IID_IHTMLAnchorElement as const IID
type IHTMLAnchorElement as IHTMLAnchorElement_

type IHTMLAnchorElementVtbl
	QueryInterface as function(byval This as IHTMLAnchorElement ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLAnchorElement ptr) as ULONG
	Release as function(byval This as IHTMLAnchorElement ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLAnchorElement ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLAnchorElement ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLAnchorElement ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLAnchorElement ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	put_href as function(byval This as IHTMLAnchorElement ptr, byval v as BSTR) as HRESULT
	get_href as function(byval This as IHTMLAnchorElement ptr, byval p as BSTR ptr) as HRESULT
	put_target as function(byval This as IHTMLAnchorElement ptr, byval v as BSTR) as HRESULT
	get_target as function(byval This as IHTMLAnchorElement ptr, byval p as BSTR ptr) as HRESULT
	put_rel as function(byval This as IHTMLAnchorElement ptr, byval v as BSTR) as HRESULT
	get_rel as function(byval This as IHTMLAnchorElement ptr, byval p as BSTR ptr) as HRESULT
	put_rev as function(byval This as IHTMLAnchorElement ptr, byval v as BSTR) as HRESULT
	get_rev as function(byval This as IHTMLAnchorElement ptr, byval p as BSTR ptr) as HRESULT
	put_urn as function(byval This as IHTMLAnchorElement ptr, byval v as BSTR) as HRESULT
	get_urn as function(byval This as IHTMLAnchorElement ptr, byval p as BSTR ptr) as HRESULT
	put_Methods as function(byval This as IHTMLAnchorElement ptr, byval v as BSTR) as HRESULT
	get_Methods as function(byval This as IHTMLAnchorElement ptr, byval p as BSTR ptr) as HRESULT
	put_name as function(byval This as IHTMLAnchorElement ptr, byval v as BSTR) as HRESULT
	get_name as function(byval This as IHTMLAnchorElement ptr, byval p as BSTR ptr) as HRESULT
	put_host as function(byval This as IHTMLAnchorElement ptr, byval v as BSTR) as HRESULT
	get_host as function(byval This as IHTMLAnchorElement ptr, byval p as BSTR ptr) as HRESULT
	put_hostname as function(byval This as IHTMLAnchorElement ptr, byval v as BSTR) as HRESULT
	get_hostname as function(byval This as IHTMLAnchorElement ptr, byval p as BSTR ptr) as HRESULT
	put_pathname as function(byval This as IHTMLAnchorElement ptr, byval v as BSTR) as HRESULT
	get_pathname as function(byval This as IHTMLAnchorElement ptr, byval p as BSTR ptr) as HRESULT
	put_port as function(byval This as IHTMLAnchorElement ptr, byval v as BSTR) as HRESULT
	get_port as function(byval This as IHTMLAnchorElement ptr, byval p as BSTR ptr) as HRESULT
	put_protocol as function(byval This as IHTMLAnchorElement ptr, byval v as BSTR) as HRESULT
	get_protocol as function(byval This as IHTMLAnchorElement ptr, byval p as BSTR ptr) as HRESULT
	put_search as function(byval This as IHTMLAnchorElement ptr, byval v as BSTR) as HRESULT
	get_search as function(byval This as IHTMLAnchorElement ptr, byval p as BSTR ptr) as HRESULT
	put_hash as function(byval This as IHTMLAnchorElement ptr, byval v as BSTR) as HRESULT
	get_hash as function(byval This as IHTMLAnchorElement ptr, byval p as BSTR ptr) as HRESULT
	put_onblur as function(byval This as IHTMLAnchorElement ptr, byval v as VARIANT) as HRESULT
	get_onblur as function(byval This as IHTMLAnchorElement ptr, byval p as VARIANT ptr) as HRESULT
	put_onfocus as function(byval This as IHTMLAnchorElement ptr, byval v as VARIANT) as HRESULT
	get_onfocus as function(byval This as IHTMLAnchorElement ptr, byval p as VARIANT ptr) as HRESULT
	put_accessKey as function(byval This as IHTMLAnchorElement ptr, byval v as BSTR) as HRESULT
	get_accessKey as function(byval This as IHTMLAnchorElement ptr, byval p as BSTR ptr) as HRESULT
	get_protocolLong as function(byval This as IHTMLAnchorElement ptr, byval p as BSTR ptr) as HRESULT
	get_mimeType as function(byval This as IHTMLAnchorElement ptr, byval p as BSTR ptr) as HRESULT
	get_nameProp as function(byval This as IHTMLAnchorElement ptr, byval p as BSTR ptr) as HRESULT
	put_tabIndex as function(byval This as IHTMLAnchorElement ptr, byval v as short) as HRESULT
	get_tabIndex as function(byval This as IHTMLAnchorElement ptr, byval p as short ptr) as HRESULT
	focus as function(byval This as IHTMLAnchorElement ptr) as HRESULT
	blur as function(byval This as IHTMLAnchorElement ptr) as HRESULT
end type

type IHTMLAnchorElement_
	lpVtbl as IHTMLAnchorElementVtbl ptr
end type

#define IHTMLAnchorElement_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLAnchorElement_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLAnchorElement_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLAnchorElement_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLAnchorElement_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLAnchorElement_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLAnchorElement_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLAnchorElement_put_href(This, v) (This)->lpVtbl->put_href(This, v)
#define IHTMLAnchorElement_get_href(This, p) (This)->lpVtbl->get_href(This, p)
#define IHTMLAnchorElement_put_target(This, v) (This)->lpVtbl->put_target(This, v)
#define IHTMLAnchorElement_get_target(This, p) (This)->lpVtbl->get_target(This, p)
#define IHTMLAnchorElement_put_rel(This, v) (This)->lpVtbl->put_rel(This, v)
#define IHTMLAnchorElement_get_rel(This, p) (This)->lpVtbl->get_rel(This, p)
#define IHTMLAnchorElement_put_rev(This, v) (This)->lpVtbl->put_rev(This, v)
#define IHTMLAnchorElement_get_rev(This, p) (This)->lpVtbl->get_rev(This, p)
#define IHTMLAnchorElement_put_urn(This, v) (This)->lpVtbl->put_urn(This, v)
#define IHTMLAnchorElement_get_urn(This, p) (This)->lpVtbl->get_urn(This, p)
#define IHTMLAnchorElement_put_Methods(This, v) (This)->lpVtbl->put_Methods(This, v)
#define IHTMLAnchorElement_get_Methods(This, p) (This)->lpVtbl->get_Methods(This, p)
#define IHTMLAnchorElement_put_name(This, v) (This)->lpVtbl->put_name(This, v)
#define IHTMLAnchorElement_get_name(This, p) (This)->lpVtbl->get_name(This, p)
#define IHTMLAnchorElement_put_host(This, v) (This)->lpVtbl->put_host(This, v)
#define IHTMLAnchorElement_get_host(This, p) (This)->lpVtbl->get_host(This, p)
#define IHTMLAnchorElement_put_hostname(This, v) (This)->lpVtbl->put_hostname(This, v)
#define IHTMLAnchorElement_get_hostname(This, p) (This)->lpVtbl->get_hostname(This, p)
#define IHTMLAnchorElement_put_pathname(This, v) (This)->lpVtbl->put_pathname(This, v)
#define IHTMLAnchorElement_get_pathname(This, p) (This)->lpVtbl->get_pathname(This, p)
#define IHTMLAnchorElement_put_port(This, v) (This)->lpVtbl->put_port(This, v)
#define IHTMLAnchorElement_get_port(This, p) (This)->lpVtbl->get_port(This, p)
#define IHTMLAnchorElement_put_protocol(This, v) (This)->lpVtbl->put_protocol(This, v)
#define IHTMLAnchorElement_get_protocol(This, p) (This)->lpVtbl->get_protocol(This, p)
#define IHTMLAnchorElement_put_search(This, v) (This)->lpVtbl->put_search(This, v)
#define IHTMLAnchorElement_get_search(This, p) (This)->lpVtbl->get_search(This, p)
#define IHTMLAnchorElement_put_hash(This, v) (This)->lpVtbl->put_hash(This, v)
#define IHTMLAnchorElement_get_hash(This, p) (This)->lpVtbl->get_hash(This, p)
#define IHTMLAnchorElement_put_onblur(This, v) (This)->lpVtbl->put_onblur(This, v)
#define IHTMLAnchorElement_get_onblur(This, p) (This)->lpVtbl->get_onblur(This, p)
#define IHTMLAnchorElement_put_onfocus(This, v) (This)->lpVtbl->put_onfocus(This, v)
#define IHTMLAnchorElement_get_onfocus(This, p) (This)->lpVtbl->get_onfocus(This, p)
#define IHTMLAnchorElement_put_accessKey(This, v) (This)->lpVtbl->put_accessKey(This, v)
#define IHTMLAnchorElement_get_accessKey(This, p) (This)->lpVtbl->get_accessKey(This, p)
#define IHTMLAnchorElement_get_protocolLong(This, p) (This)->lpVtbl->get_protocolLong(This, p)
#define IHTMLAnchorElement_get_mimeType(This, p) (This)->lpVtbl->get_mimeType(This, p)
#define IHTMLAnchorElement_get_nameProp(This, p) (This)->lpVtbl->get_nameProp(This, p)
#define IHTMLAnchorElement_put_tabIndex(This, v) (This)->lpVtbl->put_tabIndex(This, v)
#define IHTMLAnchorElement_get_tabIndex(This, p) (This)->lpVtbl->get_tabIndex(This, p)
#define IHTMLAnchorElement_focus(This) (This)->lpVtbl->focus(This)
#define IHTMLAnchorElement_blur(This) (This)->lpVtbl->blur(This)

declare function IHTMLAnchorElement_put_href_Proxy(byval This as IHTMLAnchorElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLAnchorElement_put_href_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLAnchorElement_get_href_Proxy(byval This as IHTMLAnchorElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLAnchorElement_get_href_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLAnchorElement_put_target_Proxy(byval This as IHTMLAnchorElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLAnchorElement_put_target_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLAnchorElement_get_target_Proxy(byval This as IHTMLAnchorElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLAnchorElement_get_target_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLAnchorElement_put_rel_Proxy(byval This as IHTMLAnchorElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLAnchorElement_put_rel_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLAnchorElement_get_rel_Proxy(byval This as IHTMLAnchorElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLAnchorElement_get_rel_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLAnchorElement_put_rev_Proxy(byval This as IHTMLAnchorElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLAnchorElement_put_rev_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLAnchorElement_get_rev_Proxy(byval This as IHTMLAnchorElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLAnchorElement_get_rev_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLAnchorElement_put_urn_Proxy(byval This as IHTMLAnchorElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLAnchorElement_put_urn_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLAnchorElement_get_urn_Proxy(byval This as IHTMLAnchorElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLAnchorElement_get_urn_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLAnchorElement_put_Methods_Proxy(byval This as IHTMLAnchorElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLAnchorElement_put_Methods_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLAnchorElement_get_Methods_Proxy(byval This as IHTMLAnchorElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLAnchorElement_get_Methods_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLAnchorElement_put_name_Proxy(byval This as IHTMLAnchorElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLAnchorElement_put_name_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLAnchorElement_get_name_Proxy(byval This as IHTMLAnchorElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLAnchorElement_get_name_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLAnchorElement_put_host_Proxy(byval This as IHTMLAnchorElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLAnchorElement_put_host_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLAnchorElement_get_host_Proxy(byval This as IHTMLAnchorElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLAnchorElement_get_host_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLAnchorElement_put_hostname_Proxy(byval This as IHTMLAnchorElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLAnchorElement_put_hostname_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLAnchorElement_get_hostname_Proxy(byval This as IHTMLAnchorElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLAnchorElement_get_hostname_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLAnchorElement_put_pathname_Proxy(byval This as IHTMLAnchorElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLAnchorElement_put_pathname_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLAnchorElement_get_pathname_Proxy(byval This as IHTMLAnchorElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLAnchorElement_get_pathname_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLAnchorElement_put_port_Proxy(byval This as IHTMLAnchorElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLAnchorElement_put_port_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLAnchorElement_get_port_Proxy(byval This as IHTMLAnchorElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLAnchorElement_get_port_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLAnchorElement_put_protocol_Proxy(byval This as IHTMLAnchorElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLAnchorElement_put_protocol_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLAnchorElement_get_protocol_Proxy(byval This as IHTMLAnchorElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLAnchorElement_get_protocol_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLAnchorElement_put_search_Proxy(byval This as IHTMLAnchorElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLAnchorElement_put_search_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLAnchorElement_get_search_Proxy(byval This as IHTMLAnchorElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLAnchorElement_get_search_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLAnchorElement_put_hash_Proxy(byval This as IHTMLAnchorElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLAnchorElement_put_hash_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLAnchorElement_get_hash_Proxy(byval This as IHTMLAnchorElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLAnchorElement_get_hash_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLAnchorElement_put_onblur_Proxy(byval This as IHTMLAnchorElement ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLAnchorElement_put_onblur_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLAnchorElement_get_onblur_Proxy(byval This as IHTMLAnchorElement ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLAnchorElement_get_onblur_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLAnchorElement_put_onfocus_Proxy(byval This as IHTMLAnchorElement ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLAnchorElement_put_onfocus_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLAnchorElement_get_onfocus_Proxy(byval This as IHTMLAnchorElement ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLAnchorElement_get_onfocus_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLAnchorElement_put_accessKey_Proxy(byval This as IHTMLAnchorElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLAnchorElement_put_accessKey_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLAnchorElement_get_accessKey_Proxy(byval This as IHTMLAnchorElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLAnchorElement_get_accessKey_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLAnchorElement_get_protocolLong_Proxy(byval This as IHTMLAnchorElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLAnchorElement_get_protocolLong_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLAnchorElement_get_mimeType_Proxy(byval This as IHTMLAnchorElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLAnchorElement_get_mimeType_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLAnchorElement_get_nameProp_Proxy(byval This as IHTMLAnchorElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLAnchorElement_get_nameProp_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLAnchorElement_put_tabIndex_Proxy(byval This as IHTMLAnchorElement ptr, byval v as short) as HRESULT
declare sub IHTMLAnchorElement_put_tabIndex_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLAnchorElement_get_tabIndex_Proxy(byval This as IHTMLAnchorElement ptr, byval p as short ptr) as HRESULT
declare sub IHTMLAnchorElement_get_tabIndex_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLAnchorElement_focus_Proxy(byval This as IHTMLAnchorElement ptr) as HRESULT
declare sub IHTMLAnchorElement_focus_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLAnchorElement_blur_Proxy(byval This as IHTMLAnchorElement ptr) as HRESULT
declare sub IHTMLAnchorElement_blur_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLAnchorElement2_INTERFACE_DEFINED__
extern IID_IHTMLAnchorElement2 as const IID
type IHTMLAnchorElement2 as IHTMLAnchorElement2_

type IHTMLAnchorElement2Vtbl
	QueryInterface as function(byval This as IHTMLAnchorElement2 ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLAnchorElement2 ptr) as ULONG
	Release as function(byval This as IHTMLAnchorElement2 ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLAnchorElement2 ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLAnchorElement2 ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLAnchorElement2 ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLAnchorElement2 ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	put_charset as function(byval This as IHTMLAnchorElement2 ptr, byval v as BSTR) as HRESULT
	get_charset as function(byval This as IHTMLAnchorElement2 ptr, byval p as BSTR ptr) as HRESULT
	put_coords as function(byval This as IHTMLAnchorElement2 ptr, byval v as BSTR) as HRESULT
	get_coords as function(byval This as IHTMLAnchorElement2 ptr, byval p as BSTR ptr) as HRESULT
	put_hreflang as function(byval This as IHTMLAnchorElement2 ptr, byval v as BSTR) as HRESULT
	get_hreflang as function(byval This as IHTMLAnchorElement2 ptr, byval p as BSTR ptr) as HRESULT
	put_shape as function(byval This as IHTMLAnchorElement2 ptr, byval v as BSTR) as HRESULT
	get_shape as function(byval This as IHTMLAnchorElement2 ptr, byval p as BSTR ptr) as HRESULT
	put_type as function(byval This as IHTMLAnchorElement2 ptr, byval v as BSTR) as HRESULT
	get_type as function(byval This as IHTMLAnchorElement2 ptr, byval p as BSTR ptr) as HRESULT
end type

type IHTMLAnchorElement2_
	lpVtbl as IHTMLAnchorElement2Vtbl ptr
end type

#define IHTMLAnchorElement2_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLAnchorElement2_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLAnchorElement2_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLAnchorElement2_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLAnchorElement2_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLAnchorElement2_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLAnchorElement2_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLAnchorElement2_put_charset(This, v) (This)->lpVtbl->put_charset(This, v)
#define IHTMLAnchorElement2_get_charset(This, p) (This)->lpVtbl->get_charset(This, p)
#define IHTMLAnchorElement2_put_coords(This, v) (This)->lpVtbl->put_coords(This, v)
#define IHTMLAnchorElement2_get_coords(This, p) (This)->lpVtbl->get_coords(This, p)
#define IHTMLAnchorElement2_put_hreflang(This, v) (This)->lpVtbl->put_hreflang(This, v)
#define IHTMLAnchorElement2_get_hreflang(This, p) (This)->lpVtbl->get_hreflang(This, p)
#define IHTMLAnchorElement2_put_shape(This, v) (This)->lpVtbl->put_shape(This, v)
#define IHTMLAnchorElement2_get_shape(This, p) (This)->lpVtbl->get_shape(This, p)
#define IHTMLAnchorElement2_put_type(This, v) (This)->lpVtbl->put_type(This, v)
#define IHTMLAnchorElement2_get_type(This, p) (This)->lpVtbl->get_type(This, p)

declare function IHTMLAnchorElement2_put_charset_Proxy(byval This as IHTMLAnchorElement2 ptr, byval v as BSTR) as HRESULT
declare sub IHTMLAnchorElement2_put_charset_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLAnchorElement2_get_charset_Proxy(byval This as IHTMLAnchorElement2 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLAnchorElement2_get_charset_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLAnchorElement2_put_coords_Proxy(byval This as IHTMLAnchorElement2 ptr, byval v as BSTR) as HRESULT
declare sub IHTMLAnchorElement2_put_coords_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLAnchorElement2_get_coords_Proxy(byval This as IHTMLAnchorElement2 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLAnchorElement2_get_coords_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLAnchorElement2_put_hreflang_Proxy(byval This as IHTMLAnchorElement2 ptr, byval v as BSTR) as HRESULT
declare sub IHTMLAnchorElement2_put_hreflang_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLAnchorElement2_get_hreflang_Proxy(byval This as IHTMLAnchorElement2 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLAnchorElement2_get_hreflang_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLAnchorElement2_put_shape_Proxy(byval This as IHTMLAnchorElement2 ptr, byval v as BSTR) as HRESULT
declare sub IHTMLAnchorElement2_put_shape_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLAnchorElement2_get_shape_Proxy(byval This as IHTMLAnchorElement2 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLAnchorElement2_get_shape_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLAnchorElement2_put_type_Proxy(byval This as IHTMLAnchorElement2 ptr, byval v as BSTR) as HRESULT
declare sub IHTMLAnchorElement2_put_type_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLAnchorElement2_get_type_Proxy(byval This as IHTMLAnchorElement2 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLAnchorElement2_get_type_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __DispHTMLAnchorElement_DISPINTERFACE_DEFINED__
extern DIID_DispHTMLAnchorElement as const IID
type DispHTMLAnchorElement as DispHTMLAnchorElement_

type DispHTMLAnchorElementVtbl
	QueryInterface as function(byval This as DispHTMLAnchorElement ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as DispHTMLAnchorElement ptr) as ULONG
	Release as function(byval This as DispHTMLAnchorElement ptr) as ULONG
	GetTypeInfoCount as function(byval This as DispHTMLAnchorElement ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as DispHTMLAnchorElement ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as DispHTMLAnchorElement ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as DispHTMLAnchorElement ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type DispHTMLAnchorElement_
	lpVtbl as DispHTMLAnchorElementVtbl ptr
end type

#define DispHTMLAnchorElement_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define DispHTMLAnchorElement_AddRef(This) (This)->lpVtbl->AddRef(This)
#define DispHTMLAnchorElement_Release(This) (This)->lpVtbl->Release(This)
#define DispHTMLAnchorElement_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define DispHTMLAnchorElement_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define DispHTMLAnchorElement_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define DispHTMLAnchorElement_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
extern CLSID_HTMLAnchorElement as const CLSID
#define __HTMLLabelEvents2_DISPINTERFACE_DEFINED__
extern DIID_HTMLLabelEvents2 as const IID
type HTMLLabelEvents2 as HTMLLabelEvents2_

type HTMLLabelEvents2Vtbl
	QueryInterface as function(byval This as HTMLLabelEvents2 ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as HTMLLabelEvents2 ptr) as ULONG
	Release as function(byval This as HTMLLabelEvents2 ptr) as ULONG
	GetTypeInfoCount as function(byval This as HTMLLabelEvents2 ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as HTMLLabelEvents2 ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as HTMLLabelEvents2 ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as HTMLLabelEvents2 ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type HTMLLabelEvents2_
	lpVtbl as HTMLLabelEvents2Vtbl ptr
end type

#define HTMLLabelEvents2_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define HTMLLabelEvents2_AddRef(This) (This)->lpVtbl->AddRef(This)
#define HTMLLabelEvents2_Release(This) (This)->lpVtbl->Release(This)
#define HTMLLabelEvents2_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define HTMLLabelEvents2_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define HTMLLabelEvents2_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define HTMLLabelEvents2_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define __HTMLLabelEvents_DISPINTERFACE_DEFINED__
extern DIID_HTMLLabelEvents as const IID
type HTMLLabelEvents as HTMLLabelEvents_

type HTMLLabelEventsVtbl
	QueryInterface as function(byval This as HTMLLabelEvents ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as HTMLLabelEvents ptr) as ULONG
	Release as function(byval This as HTMLLabelEvents ptr) as ULONG
	GetTypeInfoCount as function(byval This as HTMLLabelEvents ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as HTMLLabelEvents ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as HTMLLabelEvents ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as HTMLLabelEvents ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type HTMLLabelEvents_
	lpVtbl as HTMLLabelEventsVtbl ptr
end type

#define HTMLLabelEvents_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define HTMLLabelEvents_AddRef(This) (This)->lpVtbl->AddRef(This)
#define HTMLLabelEvents_Release(This) (This)->lpVtbl->Release(This)
#define HTMLLabelEvents_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define HTMLLabelEvents_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define HTMLLabelEvents_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define HTMLLabelEvents_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define __IHTMLLabelElement_INTERFACE_DEFINED__
extern IID_IHTMLLabelElement as const IID
type IHTMLLabelElement as IHTMLLabelElement_

type IHTMLLabelElementVtbl
	QueryInterface as function(byval This as IHTMLLabelElement ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLLabelElement ptr) as ULONG
	Release as function(byval This as IHTMLLabelElement ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLLabelElement ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLLabelElement ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLLabelElement ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLLabelElement ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	put_htmlFor as function(byval This as IHTMLLabelElement ptr, byval v as BSTR) as HRESULT
	get_htmlFor as function(byval This as IHTMLLabelElement ptr, byval p as BSTR ptr) as HRESULT
	put_accessKey as function(byval This as IHTMLLabelElement ptr, byval v as BSTR) as HRESULT
	get_accessKey as function(byval This as IHTMLLabelElement ptr, byval p as BSTR ptr) as HRESULT
end type

type IHTMLLabelElement_
	lpVtbl as IHTMLLabelElementVtbl ptr
end type

#define IHTMLLabelElement_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLLabelElement_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLLabelElement_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLLabelElement_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLLabelElement_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLLabelElement_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLLabelElement_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLLabelElement_put_htmlFor(This, v) (This)->lpVtbl->put_htmlFor(This, v)
#define IHTMLLabelElement_get_htmlFor(This, p) (This)->lpVtbl->get_htmlFor(This, p)
#define IHTMLLabelElement_put_accessKey(This, v) (This)->lpVtbl->put_accessKey(This, v)
#define IHTMLLabelElement_get_accessKey(This, p) (This)->lpVtbl->get_accessKey(This, p)

declare function IHTMLLabelElement_put_htmlFor_Proxy(byval This as IHTMLLabelElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLLabelElement_put_htmlFor_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLLabelElement_get_htmlFor_Proxy(byval This as IHTMLLabelElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLLabelElement_get_htmlFor_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLLabelElement_put_accessKey_Proxy(byval This as IHTMLLabelElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLLabelElement_put_accessKey_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLLabelElement_get_accessKey_Proxy(byval This as IHTMLLabelElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLLabelElement_get_accessKey_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLLabelElement2_INTERFACE_DEFINED__
extern IID_IHTMLLabelElement2 as const IID
type IHTMLLabelElement2 as IHTMLLabelElement2_

type IHTMLLabelElement2Vtbl
	QueryInterface as function(byval This as IHTMLLabelElement2 ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLLabelElement2 ptr) as ULONG
	Release as function(byval This as IHTMLLabelElement2 ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLLabelElement2 ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLLabelElement2 ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLLabelElement2 ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLLabelElement2 ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	get_form as function(byval This as IHTMLLabelElement2 ptr, byval p as IHTMLFormElement ptr ptr) as HRESULT
end type

type IHTMLLabelElement2_
	lpVtbl as IHTMLLabelElement2Vtbl ptr
end type

#define IHTMLLabelElement2_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLLabelElement2_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLLabelElement2_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLLabelElement2_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLLabelElement2_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLLabelElement2_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLLabelElement2_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLLabelElement2_get_form(This, p) (This)->lpVtbl->get_form(This, p)
declare function IHTMLLabelElement2_get_form_Proxy(byval This as IHTMLLabelElement2 ptr, byval p as IHTMLFormElement ptr ptr) as HRESULT
declare sub IHTMLLabelElement2_get_form_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __DispHTMLLabelElement_DISPINTERFACE_DEFINED__
extern DIID_DispHTMLLabelElement as const IID
type DispHTMLLabelElement as DispHTMLLabelElement_

type DispHTMLLabelElementVtbl
	QueryInterface as function(byval This as DispHTMLLabelElement ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as DispHTMLLabelElement ptr) as ULONG
	Release as function(byval This as DispHTMLLabelElement ptr) as ULONG
	GetTypeInfoCount as function(byval This as DispHTMLLabelElement ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as DispHTMLLabelElement ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as DispHTMLLabelElement ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as DispHTMLLabelElement ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type DispHTMLLabelElement_
	lpVtbl as DispHTMLLabelElementVtbl ptr
end type

#define DispHTMLLabelElement_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define DispHTMLLabelElement_AddRef(This) (This)->lpVtbl->AddRef(This)
#define DispHTMLLabelElement_Release(This) (This)->lpVtbl->Release(This)
#define DispHTMLLabelElement_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define DispHTMLLabelElement_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define DispHTMLLabelElement_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define DispHTMLLabelElement_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
extern CLSID_HTMLLabelElement as const CLSID
#define __IHTMLListElement_INTERFACE_DEFINED__
extern IID_IHTMLListElement as const IID
type IHTMLListElement as IHTMLListElement_

type IHTMLListElementVtbl
	QueryInterface as function(byval This as IHTMLListElement ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLListElement ptr) as ULONG
	Release as function(byval This as IHTMLListElement ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLListElement ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLListElement ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLListElement ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLListElement ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type IHTMLListElement_
	lpVtbl as IHTMLListElementVtbl ptr
end type

#define IHTMLListElement_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLListElement_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLListElement_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLListElement_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLListElement_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLListElement_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLListElement_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define __IHTMLListElement2_INTERFACE_DEFINED__
extern IID_IHTMLListElement2 as const IID
type IHTMLListElement2 as IHTMLListElement2_

type IHTMLListElement2Vtbl
	QueryInterface as function(byval This as IHTMLListElement2 ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLListElement2 ptr) as ULONG
	Release as function(byval This as IHTMLListElement2 ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLListElement2 ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLListElement2 ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLListElement2 ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLListElement2 ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	put_compact as function(byval This as IHTMLListElement2 ptr, byval v as VARIANT_BOOL) as HRESULT
	get_compact as function(byval This as IHTMLListElement2 ptr, byval p as VARIANT_BOOL ptr) as HRESULT
end type

type IHTMLListElement2_
	lpVtbl as IHTMLListElement2Vtbl ptr
end type

#define IHTMLListElement2_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLListElement2_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLListElement2_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLListElement2_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLListElement2_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLListElement2_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLListElement2_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLListElement2_put_compact(This, v) (This)->lpVtbl->put_compact(This, v)
#define IHTMLListElement2_get_compact(This, p) (This)->lpVtbl->get_compact(This, p)

declare function IHTMLListElement2_put_compact_Proxy(byval This as IHTMLListElement2 ptr, byval v as VARIANT_BOOL) as HRESULT
declare sub IHTMLListElement2_put_compact_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLListElement2_get_compact_Proxy(byval This as IHTMLListElement2 ptr, byval p as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLListElement2_get_compact_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __DispHTMLListElement_DISPINTERFACE_DEFINED__
extern DIID_DispHTMLListElement as const IID
type DispHTMLListElement as DispHTMLListElement_

type DispHTMLListElementVtbl
	QueryInterface as function(byval This as DispHTMLListElement ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as DispHTMLListElement ptr) as ULONG
	Release as function(byval This as DispHTMLListElement ptr) as ULONG
	GetTypeInfoCount as function(byval This as DispHTMLListElement ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as DispHTMLListElement ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as DispHTMLListElement ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as DispHTMLListElement ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type DispHTMLListElement_
	lpVtbl as DispHTMLListElementVtbl ptr
end type

#define DispHTMLListElement_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define DispHTMLListElement_AddRef(This) (This)->lpVtbl->AddRef(This)
#define DispHTMLListElement_Release(This) (This)->lpVtbl->Release(This)
#define DispHTMLListElement_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define DispHTMLListElement_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define DispHTMLListElement_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define DispHTMLListElement_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
extern CLSID_HTMLListElement as const CLSID
#define __IHTMLUListElement_INTERFACE_DEFINED__
extern IID_IHTMLUListElement as const IID
type IHTMLUListElement as IHTMLUListElement_

type IHTMLUListElementVtbl
	QueryInterface as function(byval This as IHTMLUListElement ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLUListElement ptr) as ULONG
	Release as function(byval This as IHTMLUListElement ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLUListElement ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLUListElement ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLUListElement ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLUListElement ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	put_compact as function(byval This as IHTMLUListElement ptr, byval v as VARIANT_BOOL) as HRESULT
	get_compact as function(byval This as IHTMLUListElement ptr, byval p as VARIANT_BOOL ptr) as HRESULT
	put_type as function(byval This as IHTMLUListElement ptr, byval v as BSTR) as HRESULT
	get_type as function(byval This as IHTMLUListElement ptr, byval p as BSTR ptr) as HRESULT
end type

type IHTMLUListElement_
	lpVtbl as IHTMLUListElementVtbl ptr
end type

#define IHTMLUListElement_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLUListElement_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLUListElement_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLUListElement_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLUListElement_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLUListElement_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLUListElement_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLUListElement_put_compact(This, v) (This)->lpVtbl->put_compact(This, v)
#define IHTMLUListElement_get_compact(This, p) (This)->lpVtbl->get_compact(This, p)
#define IHTMLUListElement_put_type(This, v) (This)->lpVtbl->put_type(This, v)
#define IHTMLUListElement_get_type(This, p) (This)->lpVtbl->get_type(This, p)

declare function IHTMLUListElement_put_compact_Proxy(byval This as IHTMLUListElement ptr, byval v as VARIANT_BOOL) as HRESULT
declare sub IHTMLUListElement_put_compact_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLUListElement_get_compact_Proxy(byval This as IHTMLUListElement ptr, byval p as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLUListElement_get_compact_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLUListElement_put_type_Proxy(byval This as IHTMLUListElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLUListElement_put_type_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLUListElement_get_type_Proxy(byval This as IHTMLUListElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLUListElement_get_type_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __DispHTMLUListElement_DISPINTERFACE_DEFINED__
extern DIID_DispHTMLUListElement as const IID
type DispHTMLUListElement as DispHTMLUListElement_

type DispHTMLUListElementVtbl
	QueryInterface as function(byval This as DispHTMLUListElement ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as DispHTMLUListElement ptr) as ULONG
	Release as function(byval This as DispHTMLUListElement ptr) as ULONG
	GetTypeInfoCount as function(byval This as DispHTMLUListElement ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as DispHTMLUListElement ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as DispHTMLUListElement ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as DispHTMLUListElement ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type DispHTMLUListElement_
	lpVtbl as DispHTMLUListElementVtbl ptr
end type

#define DispHTMLUListElement_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define DispHTMLUListElement_AddRef(This) (This)->lpVtbl->AddRef(This)
#define DispHTMLUListElement_Release(This) (This)->lpVtbl->Release(This)
#define DispHTMLUListElement_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define DispHTMLUListElement_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define DispHTMLUListElement_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define DispHTMLUListElement_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
extern CLSID_HTMLUListElement as const CLSID
#define __IHTMLOListElement_INTERFACE_DEFINED__
extern IID_IHTMLOListElement as const IID
type IHTMLOListElement as IHTMLOListElement_

type IHTMLOListElementVtbl
	QueryInterface as function(byval This as IHTMLOListElement ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLOListElement ptr) as ULONG
	Release as function(byval This as IHTMLOListElement ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLOListElement ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLOListElement ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLOListElement ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLOListElement ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	put_compact as function(byval This as IHTMLOListElement ptr, byval v as VARIANT_BOOL) as HRESULT
	get_compact as function(byval This as IHTMLOListElement ptr, byval p as VARIANT_BOOL ptr) as HRESULT
	put_start as function(byval This as IHTMLOListElement ptr, byval v as long) as HRESULT
	get_start as function(byval This as IHTMLOListElement ptr, byval p as long ptr) as HRESULT
	put_type as function(byval This as IHTMLOListElement ptr, byval v as BSTR) as HRESULT
	get_type as function(byval This as IHTMLOListElement ptr, byval p as BSTR ptr) as HRESULT
end type

type IHTMLOListElement_
	lpVtbl as IHTMLOListElementVtbl ptr
end type

#define IHTMLOListElement_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLOListElement_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLOListElement_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLOListElement_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLOListElement_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLOListElement_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLOListElement_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLOListElement_put_compact(This, v) (This)->lpVtbl->put_compact(This, v)
#define IHTMLOListElement_get_compact(This, p) (This)->lpVtbl->get_compact(This, p)
#define IHTMLOListElement_put_start(This, v) (This)->lpVtbl->put_start(This, v)
#define IHTMLOListElement_get_start(This, p) (This)->lpVtbl->get_start(This, p)
#define IHTMLOListElement_put_type(This, v) (This)->lpVtbl->put_type(This, v)
#define IHTMLOListElement_get_type(This, p) (This)->lpVtbl->get_type(This, p)

declare function IHTMLOListElement_put_compact_Proxy(byval This as IHTMLOListElement ptr, byval v as VARIANT_BOOL) as HRESULT
declare sub IHTMLOListElement_put_compact_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLOListElement_get_compact_Proxy(byval This as IHTMLOListElement ptr, byval p as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLOListElement_get_compact_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLOListElement_put_start_Proxy(byval This as IHTMLOListElement ptr, byval v as long) as HRESULT
declare sub IHTMLOListElement_put_start_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLOListElement_get_start_Proxy(byval This as IHTMLOListElement ptr, byval p as long ptr) as HRESULT
declare sub IHTMLOListElement_get_start_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLOListElement_put_type_Proxy(byval This as IHTMLOListElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLOListElement_put_type_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLOListElement_get_type_Proxy(byval This as IHTMLOListElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLOListElement_get_type_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __DispHTMLOListElement_DISPINTERFACE_DEFINED__
extern DIID_DispHTMLOListElement as const IID
type DispHTMLOListElement as DispHTMLOListElement_

type DispHTMLOListElementVtbl
	QueryInterface as function(byval This as DispHTMLOListElement ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as DispHTMLOListElement ptr) as ULONG
	Release as function(byval This as DispHTMLOListElement ptr) as ULONG
	GetTypeInfoCount as function(byval This as DispHTMLOListElement ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as DispHTMLOListElement ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as DispHTMLOListElement ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as DispHTMLOListElement ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type DispHTMLOListElement_
	lpVtbl as DispHTMLOListElementVtbl ptr
end type

#define DispHTMLOListElement_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define DispHTMLOListElement_AddRef(This) (This)->lpVtbl->AddRef(This)
#define DispHTMLOListElement_Release(This) (This)->lpVtbl->Release(This)
#define DispHTMLOListElement_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define DispHTMLOListElement_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define DispHTMLOListElement_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define DispHTMLOListElement_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
extern CLSID_HTMLOListElement as const CLSID
#define __IHTMLLIElement_INTERFACE_DEFINED__
extern IID_IHTMLLIElement as const IID
type IHTMLLIElement as IHTMLLIElement_

type IHTMLLIElementVtbl
	QueryInterface as function(byval This as IHTMLLIElement ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLLIElement ptr) as ULONG
	Release as function(byval This as IHTMLLIElement ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLLIElement ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLLIElement ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLLIElement ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLLIElement ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	put_type as function(byval This as IHTMLLIElement ptr, byval v as BSTR) as HRESULT
	get_type as function(byval This as IHTMLLIElement ptr, byval p as BSTR ptr) as HRESULT
	put_value as function(byval This as IHTMLLIElement ptr, byval v as long) as HRESULT
	get_value as function(byval This as IHTMLLIElement ptr, byval p as long ptr) as HRESULT
end type

type IHTMLLIElement_
	lpVtbl as IHTMLLIElementVtbl ptr
end type

#define IHTMLLIElement_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLLIElement_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLLIElement_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLLIElement_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLLIElement_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLLIElement_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLLIElement_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLLIElement_put_type(This, v) (This)->lpVtbl->put_type(This, v)
#define IHTMLLIElement_get_type(This, p) (This)->lpVtbl->get_type(This, p)
#define IHTMLLIElement_put_value(This, v) (This)->lpVtbl->put_value(This, v)
#define IHTMLLIElement_get_value(This, p) (This)->lpVtbl->get_value(This, p)

declare function IHTMLLIElement_put_type_Proxy(byval This as IHTMLLIElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLLIElement_put_type_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLLIElement_get_type_Proxy(byval This as IHTMLLIElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLLIElement_get_type_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLLIElement_put_value_Proxy(byval This as IHTMLLIElement ptr, byval v as long) as HRESULT
declare sub IHTMLLIElement_put_value_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLLIElement_get_value_Proxy(byval This as IHTMLLIElement ptr, byval p as long ptr) as HRESULT
declare sub IHTMLLIElement_get_value_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __DispHTMLLIElement_DISPINTERFACE_DEFINED__
extern DIID_DispHTMLLIElement as const IID
type DispHTMLLIElement as DispHTMLLIElement_

type DispHTMLLIElementVtbl
	QueryInterface as function(byval This as DispHTMLLIElement ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as DispHTMLLIElement ptr) as ULONG
	Release as function(byval This as DispHTMLLIElement ptr) as ULONG
	GetTypeInfoCount as function(byval This as DispHTMLLIElement ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as DispHTMLLIElement ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as DispHTMLLIElement ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as DispHTMLLIElement ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type DispHTMLLIElement_
	lpVtbl as DispHTMLLIElementVtbl ptr
end type

#define DispHTMLLIElement_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define DispHTMLLIElement_AddRef(This) (This)->lpVtbl->AddRef(This)
#define DispHTMLLIElement_Release(This) (This)->lpVtbl->Release(This)
#define DispHTMLLIElement_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define DispHTMLLIElement_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define DispHTMLLIElement_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define DispHTMLLIElement_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
extern CLSID_HTMLLIElement as const CLSID
#define __IHTMLBlockElement_INTERFACE_DEFINED__
extern IID_IHTMLBlockElement as const IID
type IHTMLBlockElement as IHTMLBlockElement_

type IHTMLBlockElementVtbl
	QueryInterface as function(byval This as IHTMLBlockElement ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLBlockElement ptr) as ULONG
	Release as function(byval This as IHTMLBlockElement ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLBlockElement ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLBlockElement ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLBlockElement ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLBlockElement ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	put_clear as function(byval This as IHTMLBlockElement ptr, byval v as BSTR) as HRESULT
	get_clear as function(byval This as IHTMLBlockElement ptr, byval p as BSTR ptr) as HRESULT
end type

type IHTMLBlockElement_
	lpVtbl as IHTMLBlockElementVtbl ptr
end type

#define IHTMLBlockElement_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLBlockElement_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLBlockElement_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLBlockElement_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLBlockElement_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLBlockElement_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLBlockElement_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLBlockElement_put_clear(This, v) (This)->lpVtbl->put_clear(This, v)
#define IHTMLBlockElement_get_clear(This, p) (This)->lpVtbl->get_clear(This, p)

declare function IHTMLBlockElement_put_clear_Proxy(byval This as IHTMLBlockElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLBlockElement_put_clear_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLBlockElement_get_clear_Proxy(byval This as IHTMLBlockElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLBlockElement_get_clear_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLBlockElement2_INTERFACE_DEFINED__
extern IID_IHTMLBlockElement2 as const IID
type IHTMLBlockElement2 as IHTMLBlockElement2_

type IHTMLBlockElement2Vtbl
	QueryInterface as function(byval This as IHTMLBlockElement2 ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLBlockElement2 ptr) as ULONG
	Release as function(byval This as IHTMLBlockElement2 ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLBlockElement2 ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLBlockElement2 ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLBlockElement2 ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLBlockElement2 ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	put_cite as function(byval This as IHTMLBlockElement2 ptr, byval v as BSTR) as HRESULT
	get_cite as function(byval This as IHTMLBlockElement2 ptr, byval p as BSTR ptr) as HRESULT
	put_width as function(byval This as IHTMLBlockElement2 ptr, byval v as BSTR) as HRESULT
	get_width as function(byval This as IHTMLBlockElement2 ptr, byval p as BSTR ptr) as HRESULT
end type

type IHTMLBlockElement2_
	lpVtbl as IHTMLBlockElement2Vtbl ptr
end type

#define IHTMLBlockElement2_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLBlockElement2_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLBlockElement2_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLBlockElement2_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLBlockElement2_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLBlockElement2_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLBlockElement2_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLBlockElement2_put_cite(This, v) (This)->lpVtbl->put_cite(This, v)
#define IHTMLBlockElement2_get_cite(This, p) (This)->lpVtbl->get_cite(This, p)
#define IHTMLBlockElement2_put_width(This, v) (This)->lpVtbl->put_width(This, v)
#define IHTMLBlockElement2_get_width(This, p) (This)->lpVtbl->get_width(This, p)

declare function IHTMLBlockElement2_put_cite_Proxy(byval This as IHTMLBlockElement2 ptr, byval v as BSTR) as HRESULT
declare sub IHTMLBlockElement2_put_cite_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLBlockElement2_get_cite_Proxy(byval This as IHTMLBlockElement2 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLBlockElement2_get_cite_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLBlockElement2_put_width_Proxy(byval This as IHTMLBlockElement2 ptr, byval v as BSTR) as HRESULT
declare sub IHTMLBlockElement2_put_width_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLBlockElement2_get_width_Proxy(byval This as IHTMLBlockElement2 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLBlockElement2_get_width_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __DispHTMLBlockElement_DISPINTERFACE_DEFINED__
extern DIID_DispHTMLBlockElement as const IID
type DispHTMLBlockElement as DispHTMLBlockElement_

type DispHTMLBlockElementVtbl
	QueryInterface as function(byval This as DispHTMLBlockElement ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as DispHTMLBlockElement ptr) as ULONG
	Release as function(byval This as DispHTMLBlockElement ptr) as ULONG
	GetTypeInfoCount as function(byval This as DispHTMLBlockElement ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as DispHTMLBlockElement ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as DispHTMLBlockElement ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as DispHTMLBlockElement ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type DispHTMLBlockElement_
	lpVtbl as DispHTMLBlockElementVtbl ptr
end type

#define DispHTMLBlockElement_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define DispHTMLBlockElement_AddRef(This) (This)->lpVtbl->AddRef(This)
#define DispHTMLBlockElement_Release(This) (This)->lpVtbl->Release(This)
#define DispHTMLBlockElement_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define DispHTMLBlockElement_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define DispHTMLBlockElement_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define DispHTMLBlockElement_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
extern CLSID_HTMLBlockElement as const CLSID
#define __IHTMLDivElement_INTERFACE_DEFINED__
extern IID_IHTMLDivElement as const IID
type IHTMLDivElement as IHTMLDivElement_

type IHTMLDivElementVtbl
	QueryInterface as function(byval This as IHTMLDivElement ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLDivElement ptr) as ULONG
	Release as function(byval This as IHTMLDivElement ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLDivElement ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLDivElement ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLDivElement ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLDivElement ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	put_align as function(byval This as IHTMLDivElement ptr, byval v as BSTR) as HRESULT
	get_align as function(byval This as IHTMLDivElement ptr, byval p as BSTR ptr) as HRESULT
	put_noWrap as function(byval This as IHTMLDivElement ptr, byval v as VARIANT_BOOL) as HRESULT
	get_noWrap as function(byval This as IHTMLDivElement ptr, byval p as VARIANT_BOOL ptr) as HRESULT
end type

type IHTMLDivElement_
	lpVtbl as IHTMLDivElementVtbl ptr
end type

#define IHTMLDivElement_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLDivElement_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLDivElement_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLDivElement_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLDivElement_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLDivElement_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLDivElement_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLDivElement_put_align(This, v) (This)->lpVtbl->put_align(This, v)
#define IHTMLDivElement_get_align(This, p) (This)->lpVtbl->get_align(This, p)
#define IHTMLDivElement_put_noWrap(This, v) (This)->lpVtbl->put_noWrap(This, v)
#define IHTMLDivElement_get_noWrap(This, p) (This)->lpVtbl->get_noWrap(This, p)

declare function IHTMLDivElement_put_align_Proxy(byval This as IHTMLDivElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLDivElement_put_align_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDivElement_get_align_Proxy(byval This as IHTMLDivElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLDivElement_get_align_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDivElement_put_noWrap_Proxy(byval This as IHTMLDivElement ptr, byval v as VARIANT_BOOL) as HRESULT
declare sub IHTMLDivElement_put_noWrap_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDivElement_get_noWrap_Proxy(byval This as IHTMLDivElement ptr, byval p as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLDivElement_get_noWrap_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __DispHTMLDivElement_DISPINTERFACE_DEFINED__
extern DIID_DispHTMLDivElement as const IID
type DispHTMLDivElement as DispHTMLDivElement_

type DispHTMLDivElementVtbl
	QueryInterface as function(byval This as DispHTMLDivElement ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as DispHTMLDivElement ptr) as ULONG
	Release as function(byval This as DispHTMLDivElement ptr) as ULONG
	GetTypeInfoCount as function(byval This as DispHTMLDivElement ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as DispHTMLDivElement ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as DispHTMLDivElement ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as DispHTMLDivElement ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type DispHTMLDivElement_
	lpVtbl as DispHTMLDivElementVtbl ptr
end type

#define DispHTMLDivElement_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define DispHTMLDivElement_AddRef(This) (This)->lpVtbl->AddRef(This)
#define DispHTMLDivElement_Release(This) (This)->lpVtbl->Release(This)
#define DispHTMLDivElement_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define DispHTMLDivElement_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define DispHTMLDivElement_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define DispHTMLDivElement_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
extern CLSID_HTMLDivElement as const CLSID
#define __IHTMLDDElement_INTERFACE_DEFINED__
extern IID_IHTMLDDElement as const IID
type IHTMLDDElement as IHTMLDDElement_

type IHTMLDDElementVtbl
	QueryInterface as function(byval This as IHTMLDDElement ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLDDElement ptr) as ULONG
	Release as function(byval This as IHTMLDDElement ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLDDElement ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLDDElement ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLDDElement ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLDDElement ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	put_noWrap as function(byval This as IHTMLDDElement ptr, byval v as VARIANT_BOOL) as HRESULT
	get_noWrap as function(byval This as IHTMLDDElement ptr, byval p as VARIANT_BOOL ptr) as HRESULT
end type

type IHTMLDDElement_
	lpVtbl as IHTMLDDElementVtbl ptr
end type

#define IHTMLDDElement_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLDDElement_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLDDElement_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLDDElement_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLDDElement_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLDDElement_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLDDElement_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLDDElement_put_noWrap(This, v) (This)->lpVtbl->put_noWrap(This, v)
#define IHTMLDDElement_get_noWrap(This, p) (This)->lpVtbl->get_noWrap(This, p)

declare function IHTMLDDElement_put_noWrap_Proxy(byval This as IHTMLDDElement ptr, byval v as VARIANT_BOOL) as HRESULT
declare sub IHTMLDDElement_put_noWrap_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDDElement_get_noWrap_Proxy(byval This as IHTMLDDElement ptr, byval p as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLDDElement_get_noWrap_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __DispHTMLDDElement_DISPINTERFACE_DEFINED__
extern DIID_DispHTMLDDElement as const IID
type DispHTMLDDElement as DispHTMLDDElement_

type DispHTMLDDElementVtbl
	QueryInterface as function(byval This as DispHTMLDDElement ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as DispHTMLDDElement ptr) as ULONG
	Release as function(byval This as DispHTMLDDElement ptr) as ULONG
	GetTypeInfoCount as function(byval This as DispHTMLDDElement ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as DispHTMLDDElement ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as DispHTMLDDElement ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as DispHTMLDDElement ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type DispHTMLDDElement_
	lpVtbl as DispHTMLDDElementVtbl ptr
end type

#define DispHTMLDDElement_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define DispHTMLDDElement_AddRef(This) (This)->lpVtbl->AddRef(This)
#define DispHTMLDDElement_Release(This) (This)->lpVtbl->Release(This)
#define DispHTMLDDElement_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define DispHTMLDDElement_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define DispHTMLDDElement_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define DispHTMLDDElement_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
extern CLSID_HTMLDDElement as const CLSID
#define __IHTMLDTElement_INTERFACE_DEFINED__
extern IID_IHTMLDTElement as const IID
type IHTMLDTElement as IHTMLDTElement_

type IHTMLDTElementVtbl
	QueryInterface as function(byval This as IHTMLDTElement ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLDTElement ptr) as ULONG
	Release as function(byval This as IHTMLDTElement ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLDTElement ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLDTElement ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLDTElement ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLDTElement ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	put_noWrap as function(byval This as IHTMLDTElement ptr, byval v as VARIANT_BOOL) as HRESULT
	get_noWrap as function(byval This as IHTMLDTElement ptr, byval p as VARIANT_BOOL ptr) as HRESULT
end type

type IHTMLDTElement_
	lpVtbl as IHTMLDTElementVtbl ptr
end type

#define IHTMLDTElement_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLDTElement_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLDTElement_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLDTElement_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLDTElement_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLDTElement_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLDTElement_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLDTElement_put_noWrap(This, v) (This)->lpVtbl->put_noWrap(This, v)
#define IHTMLDTElement_get_noWrap(This, p) (This)->lpVtbl->get_noWrap(This, p)

declare function IHTMLDTElement_put_noWrap_Proxy(byval This as IHTMLDTElement ptr, byval v as VARIANT_BOOL) as HRESULT
declare sub IHTMLDTElement_put_noWrap_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDTElement_get_noWrap_Proxy(byval This as IHTMLDTElement ptr, byval p as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLDTElement_get_noWrap_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __DispHTMLDTElement_DISPINTERFACE_DEFINED__
extern DIID_DispHTMLDTElement as const IID
type DispHTMLDTElement as DispHTMLDTElement_

type DispHTMLDTElementVtbl
	QueryInterface as function(byval This as DispHTMLDTElement ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as DispHTMLDTElement ptr) as ULONG
	Release as function(byval This as DispHTMLDTElement ptr) as ULONG
	GetTypeInfoCount as function(byval This as DispHTMLDTElement ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as DispHTMLDTElement ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as DispHTMLDTElement ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as DispHTMLDTElement ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type DispHTMLDTElement_
	lpVtbl as DispHTMLDTElementVtbl ptr
end type

#define DispHTMLDTElement_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define DispHTMLDTElement_AddRef(This) (This)->lpVtbl->AddRef(This)
#define DispHTMLDTElement_Release(This) (This)->lpVtbl->Release(This)
#define DispHTMLDTElement_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define DispHTMLDTElement_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define DispHTMLDTElement_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define DispHTMLDTElement_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
extern CLSID_HTMLDTElement as const CLSID
#define __IHTMLBRElement_INTERFACE_DEFINED__
extern IID_IHTMLBRElement as const IID
type IHTMLBRElement as IHTMLBRElement_

type IHTMLBRElementVtbl
	QueryInterface as function(byval This as IHTMLBRElement ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLBRElement ptr) as ULONG
	Release as function(byval This as IHTMLBRElement ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLBRElement ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLBRElement ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLBRElement ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLBRElement ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	put_clear as function(byval This as IHTMLBRElement ptr, byval v as BSTR) as HRESULT
	get_clear as function(byval This as IHTMLBRElement ptr, byval p as BSTR ptr) as HRESULT
end type

type IHTMLBRElement_
	lpVtbl as IHTMLBRElementVtbl ptr
end type

#define IHTMLBRElement_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLBRElement_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLBRElement_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLBRElement_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLBRElement_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLBRElement_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLBRElement_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLBRElement_put_clear(This, v) (This)->lpVtbl->put_clear(This, v)
#define IHTMLBRElement_get_clear(This, p) (This)->lpVtbl->get_clear(This, p)

declare function IHTMLBRElement_put_clear_Proxy(byval This as IHTMLBRElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLBRElement_put_clear_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLBRElement_get_clear_Proxy(byval This as IHTMLBRElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLBRElement_get_clear_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __DispHTMLBRElement_DISPINTERFACE_DEFINED__
extern DIID_DispHTMLBRElement as const IID
type DispHTMLBRElement as DispHTMLBRElement_

type DispHTMLBRElementVtbl
	QueryInterface as function(byval This as DispHTMLBRElement ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as DispHTMLBRElement ptr) as ULONG
	Release as function(byval This as DispHTMLBRElement ptr) as ULONG
	GetTypeInfoCount as function(byval This as DispHTMLBRElement ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as DispHTMLBRElement ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as DispHTMLBRElement ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as DispHTMLBRElement ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type DispHTMLBRElement_
	lpVtbl as DispHTMLBRElementVtbl ptr
end type

#define DispHTMLBRElement_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define DispHTMLBRElement_AddRef(This) (This)->lpVtbl->AddRef(This)
#define DispHTMLBRElement_Release(This) (This)->lpVtbl->Release(This)
#define DispHTMLBRElement_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define DispHTMLBRElement_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define DispHTMLBRElement_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define DispHTMLBRElement_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
extern CLSID_HTMLBRElement as const CLSID
#define __IHTMLDListElement_INTERFACE_DEFINED__
extern IID_IHTMLDListElement as const IID
type IHTMLDListElement as IHTMLDListElement_

type IHTMLDListElementVtbl
	QueryInterface as function(byval This as IHTMLDListElement ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLDListElement ptr) as ULONG
	Release as function(byval This as IHTMLDListElement ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLDListElement ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLDListElement ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLDListElement ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLDListElement ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	put_compact as function(byval This as IHTMLDListElement ptr, byval v as VARIANT_BOOL) as HRESULT
	get_compact as function(byval This as IHTMLDListElement ptr, byval p as VARIANT_BOOL ptr) as HRESULT
end type

type IHTMLDListElement_
	lpVtbl as IHTMLDListElementVtbl ptr
end type

#define IHTMLDListElement_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLDListElement_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLDListElement_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLDListElement_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLDListElement_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLDListElement_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLDListElement_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLDListElement_put_compact(This, v) (This)->lpVtbl->put_compact(This, v)
#define IHTMLDListElement_get_compact(This, p) (This)->lpVtbl->get_compact(This, p)

declare function IHTMLDListElement_put_compact_Proxy(byval This as IHTMLDListElement ptr, byval v as VARIANT_BOOL) as HRESULT
declare sub IHTMLDListElement_put_compact_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDListElement_get_compact_Proxy(byval This as IHTMLDListElement ptr, byval p as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLDListElement_get_compact_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __DispHTMLDListElement_DISPINTERFACE_DEFINED__
extern DIID_DispHTMLDListElement as const IID
type DispHTMLDListElement as DispHTMLDListElement_

type DispHTMLDListElementVtbl
	QueryInterface as function(byval This as DispHTMLDListElement ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as DispHTMLDListElement ptr) as ULONG
	Release as function(byval This as DispHTMLDListElement ptr) as ULONG
	GetTypeInfoCount as function(byval This as DispHTMLDListElement ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as DispHTMLDListElement ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as DispHTMLDListElement ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as DispHTMLDListElement ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type DispHTMLDListElement_
	lpVtbl as DispHTMLDListElementVtbl ptr
end type

#define DispHTMLDListElement_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define DispHTMLDListElement_AddRef(This) (This)->lpVtbl->AddRef(This)
#define DispHTMLDListElement_Release(This) (This)->lpVtbl->Release(This)
#define DispHTMLDListElement_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define DispHTMLDListElement_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define DispHTMLDListElement_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define DispHTMLDListElement_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
extern CLSID_HTMLDListElement as const CLSID
#define __IHTMLHRElement_INTERFACE_DEFINED__
extern IID_IHTMLHRElement as const IID
type IHTMLHRElement as IHTMLHRElement_

type IHTMLHRElementVtbl
	QueryInterface as function(byval This as IHTMLHRElement ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLHRElement ptr) as ULONG
	Release as function(byval This as IHTMLHRElement ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLHRElement ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLHRElement ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLHRElement ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLHRElement ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	put_align as function(byval This as IHTMLHRElement ptr, byval v as BSTR) as HRESULT
	get_align as function(byval This as IHTMLHRElement ptr, byval p as BSTR ptr) as HRESULT
	put_color as function(byval This as IHTMLHRElement ptr, byval v as VARIANT) as HRESULT
	get_color as function(byval This as IHTMLHRElement ptr, byval p as VARIANT ptr) as HRESULT
	put_noShade as function(byval This as IHTMLHRElement ptr, byval v as VARIANT_BOOL) as HRESULT
	get_noShade as function(byval This as IHTMLHRElement ptr, byval p as VARIANT_BOOL ptr) as HRESULT
	put_width as function(byval This as IHTMLHRElement ptr, byval v as VARIANT) as HRESULT
	get_width as function(byval This as IHTMLHRElement ptr, byval p as VARIANT ptr) as HRESULT
	put_size as function(byval This as IHTMLHRElement ptr, byval v as VARIANT) as HRESULT
	get_size as function(byval This as IHTMLHRElement ptr, byval p as VARIANT ptr) as HRESULT
end type

type IHTMLHRElement_
	lpVtbl as IHTMLHRElementVtbl ptr
end type

#define IHTMLHRElement_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLHRElement_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLHRElement_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLHRElement_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLHRElement_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLHRElement_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLHRElement_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLHRElement_put_align(This, v) (This)->lpVtbl->put_align(This, v)
#define IHTMLHRElement_get_align(This, p) (This)->lpVtbl->get_align(This, p)
#define IHTMLHRElement_put_color(This, v) (This)->lpVtbl->put_color(This, v)
#define IHTMLHRElement_get_color(This, p) (This)->lpVtbl->get_color(This, p)
#define IHTMLHRElement_put_noShade(This, v) (This)->lpVtbl->put_noShade(This, v)
#define IHTMLHRElement_get_noShade(This, p) (This)->lpVtbl->get_noShade(This, p)
#define IHTMLHRElement_put_width(This, v) (This)->lpVtbl->put_width(This, v)
#define IHTMLHRElement_get_width(This, p) (This)->lpVtbl->get_width(This, p)
#define IHTMLHRElement_put_size(This, v) (This)->lpVtbl->put_size(This, v)
#define IHTMLHRElement_get_size(This, p) (This)->lpVtbl->get_size(This, p)

declare function IHTMLHRElement_put_align_Proxy(byval This as IHTMLHRElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLHRElement_put_align_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLHRElement_get_align_Proxy(byval This as IHTMLHRElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLHRElement_get_align_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLHRElement_put_color_Proxy(byval This as IHTMLHRElement ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLHRElement_put_color_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLHRElement_get_color_Proxy(byval This as IHTMLHRElement ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLHRElement_get_color_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLHRElement_put_noShade_Proxy(byval This as IHTMLHRElement ptr, byval v as VARIANT_BOOL) as HRESULT
declare sub IHTMLHRElement_put_noShade_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLHRElement_get_noShade_Proxy(byval This as IHTMLHRElement ptr, byval p as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLHRElement_get_noShade_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLHRElement_put_width_Proxy(byval This as IHTMLHRElement ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLHRElement_put_width_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLHRElement_get_width_Proxy(byval This as IHTMLHRElement ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLHRElement_get_width_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLHRElement_put_size_Proxy(byval This as IHTMLHRElement ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLHRElement_put_size_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLHRElement_get_size_Proxy(byval This as IHTMLHRElement ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLHRElement_get_size_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __DispHTMLHRElement_DISPINTERFACE_DEFINED__
extern DIID_DispHTMLHRElement as const IID
type DispHTMLHRElement as DispHTMLHRElement_

type DispHTMLHRElementVtbl
	QueryInterface as function(byval This as DispHTMLHRElement ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as DispHTMLHRElement ptr) as ULONG
	Release as function(byval This as DispHTMLHRElement ptr) as ULONG
	GetTypeInfoCount as function(byval This as DispHTMLHRElement ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as DispHTMLHRElement ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as DispHTMLHRElement ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as DispHTMLHRElement ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type DispHTMLHRElement_
	lpVtbl as DispHTMLHRElementVtbl ptr
end type

#define DispHTMLHRElement_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define DispHTMLHRElement_AddRef(This) (This)->lpVtbl->AddRef(This)
#define DispHTMLHRElement_Release(This) (This)->lpVtbl->Release(This)
#define DispHTMLHRElement_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define DispHTMLHRElement_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define DispHTMLHRElement_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define DispHTMLHRElement_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
extern CLSID_HTMLHRElement as const CLSID
#define __IHTMLParaElement_INTERFACE_DEFINED__
extern IID_IHTMLParaElement as const IID
type IHTMLParaElement as IHTMLParaElement_

type IHTMLParaElementVtbl
	QueryInterface as function(byval This as IHTMLParaElement ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLParaElement ptr) as ULONG
	Release as function(byval This as IHTMLParaElement ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLParaElement ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLParaElement ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLParaElement ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLParaElement ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	put_align as function(byval This as IHTMLParaElement ptr, byval v as BSTR) as HRESULT
	get_align as function(byval This as IHTMLParaElement ptr, byval p as BSTR ptr) as HRESULT
end type

type IHTMLParaElement_
	lpVtbl as IHTMLParaElementVtbl ptr
end type

#define IHTMLParaElement_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLParaElement_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLParaElement_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLParaElement_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLParaElement_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLParaElement_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLParaElement_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLParaElement_put_align(This, v) (This)->lpVtbl->put_align(This, v)
#define IHTMLParaElement_get_align(This, p) (This)->lpVtbl->get_align(This, p)

declare function IHTMLParaElement_put_align_Proxy(byval This as IHTMLParaElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLParaElement_put_align_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLParaElement_get_align_Proxy(byval This as IHTMLParaElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLParaElement_get_align_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __DispHTMLParaElement_DISPINTERFACE_DEFINED__
extern DIID_DispHTMLParaElement as const IID
type DispHTMLParaElement as DispHTMLParaElement_

type DispHTMLParaElementVtbl
	QueryInterface as function(byval This as DispHTMLParaElement ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as DispHTMLParaElement ptr) as ULONG
	Release as function(byval This as DispHTMLParaElement ptr) as ULONG
	GetTypeInfoCount as function(byval This as DispHTMLParaElement ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as DispHTMLParaElement ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as DispHTMLParaElement ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as DispHTMLParaElement ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type DispHTMLParaElement_
	lpVtbl as DispHTMLParaElementVtbl ptr
end type

#define DispHTMLParaElement_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define DispHTMLParaElement_AddRef(This) (This)->lpVtbl->AddRef(This)
#define DispHTMLParaElement_Release(This) (This)->lpVtbl->Release(This)
#define DispHTMLParaElement_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define DispHTMLParaElement_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define DispHTMLParaElement_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define DispHTMLParaElement_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
extern CLSID_HTMLParaElement as const CLSID
#define __IHTMLElementCollection2_INTERFACE_DEFINED__
extern IID_IHTMLElementCollection2 as const IID
type IHTMLElementCollection2 as IHTMLElementCollection2_

type IHTMLElementCollection2Vtbl
	QueryInterface as function(byval This as IHTMLElementCollection2 ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLElementCollection2 ptr) as ULONG
	Release as function(byval This as IHTMLElementCollection2 ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLElementCollection2 ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLElementCollection2 ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLElementCollection2 ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLElementCollection2 ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	urns as function(byval This as IHTMLElementCollection2 ptr, byval urn as VARIANT, byval pdisp as IDispatch ptr ptr) as HRESULT
end type

type IHTMLElementCollection2_
	lpVtbl as IHTMLElementCollection2Vtbl ptr
end type

#define IHTMLElementCollection2_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLElementCollection2_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLElementCollection2_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLElementCollection2_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLElementCollection2_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLElementCollection2_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLElementCollection2_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLElementCollection2_urns(This, urn, pdisp) (This)->lpVtbl->urns(This, urn, pdisp)
declare function IHTMLElementCollection2_urns_Proxy(byval This as IHTMLElementCollection2 ptr, byval urn as VARIANT, byval pdisp as IDispatch ptr ptr) as HRESULT
declare sub IHTMLElementCollection2_urns_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLElementCollection3_INTERFACE_DEFINED__
extern IID_IHTMLElementCollection3 as const IID
type IHTMLElementCollection3 as IHTMLElementCollection3_

type IHTMLElementCollection3Vtbl
	QueryInterface as function(byval This as IHTMLElementCollection3 ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLElementCollection3 ptr) as ULONG
	Release as function(byval This as IHTMLElementCollection3 ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLElementCollection3 ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLElementCollection3 ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLElementCollection3 ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLElementCollection3 ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	namedItem as function(byval This as IHTMLElementCollection3 ptr, byval name as BSTR, byval pdisp as IDispatch ptr ptr) as HRESULT
end type

type IHTMLElementCollection3_
	lpVtbl as IHTMLElementCollection3Vtbl ptr
end type

#define IHTMLElementCollection3_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLElementCollection3_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLElementCollection3_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLElementCollection3_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLElementCollection3_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLElementCollection3_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLElementCollection3_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLElementCollection3_namedItem(This, name, pdisp) (This)->lpVtbl->namedItem(This, name, pdisp)
declare function IHTMLElementCollection3_namedItem_Proxy(byval This as IHTMLElementCollection3 ptr, byval name as BSTR, byval pdisp as IDispatch ptr ptr) as HRESULT
declare sub IHTMLElementCollection3_namedItem_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __DispHTMLElementCollection_DISPINTERFACE_DEFINED__
extern DIID_DispHTMLElementCollection as const IID
type DispHTMLElementCollection as DispHTMLElementCollection_

type DispHTMLElementCollectionVtbl
	QueryInterface as function(byval This as DispHTMLElementCollection ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as DispHTMLElementCollection ptr) as ULONG
	Release as function(byval This as DispHTMLElementCollection ptr) as ULONG
	GetTypeInfoCount as function(byval This as DispHTMLElementCollection ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as DispHTMLElementCollection ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as DispHTMLElementCollection ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as DispHTMLElementCollection ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type DispHTMLElementCollection_
	lpVtbl as DispHTMLElementCollectionVtbl ptr
end type

#define DispHTMLElementCollection_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define DispHTMLElementCollection_AddRef(This) (This)->lpVtbl->AddRef(This)
#define DispHTMLElementCollection_Release(This) (This)->lpVtbl->Release(This)
#define DispHTMLElementCollection_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define DispHTMLElementCollection_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define DispHTMLElementCollection_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define DispHTMLElementCollection_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
extern CLSID_HTMLElementCollection as const CLSID
#define __IHTMLHeaderElement_INTERFACE_DEFINED__
extern IID_IHTMLHeaderElement as const IID
type IHTMLHeaderElement as IHTMLHeaderElement_

type IHTMLHeaderElementVtbl
	QueryInterface as function(byval This as IHTMLHeaderElement ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLHeaderElement ptr) as ULONG
	Release as function(byval This as IHTMLHeaderElement ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLHeaderElement ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLHeaderElement ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLHeaderElement ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLHeaderElement ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	put_align as function(byval This as IHTMLHeaderElement ptr, byval v as BSTR) as HRESULT
	get_align as function(byval This as IHTMLHeaderElement ptr, byval p as BSTR ptr) as HRESULT
end type

type IHTMLHeaderElement_
	lpVtbl as IHTMLHeaderElementVtbl ptr
end type

#define IHTMLHeaderElement_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLHeaderElement_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLHeaderElement_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLHeaderElement_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLHeaderElement_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLHeaderElement_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLHeaderElement_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLHeaderElement_put_align(This, v) (This)->lpVtbl->put_align(This, v)
#define IHTMLHeaderElement_get_align(This, p) (This)->lpVtbl->get_align(This, p)

declare function IHTMLHeaderElement_put_align_Proxy(byval This as IHTMLHeaderElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLHeaderElement_put_align_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLHeaderElement_get_align_Proxy(byval This as IHTMLHeaderElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLHeaderElement_get_align_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __DispHTMLHeaderElement_DISPINTERFACE_DEFINED__
extern DIID_DispHTMLHeaderElement as const IID
type DispHTMLHeaderElement as DispHTMLHeaderElement_

type DispHTMLHeaderElementVtbl
	QueryInterface as function(byval This as DispHTMLHeaderElement ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as DispHTMLHeaderElement ptr) as ULONG
	Release as function(byval This as DispHTMLHeaderElement ptr) as ULONG
	GetTypeInfoCount as function(byval This as DispHTMLHeaderElement ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as DispHTMLHeaderElement ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as DispHTMLHeaderElement ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as DispHTMLHeaderElement ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type DispHTMLHeaderElement_
	lpVtbl as DispHTMLHeaderElementVtbl ptr
end type

#define DispHTMLHeaderElement_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define DispHTMLHeaderElement_AddRef(This) (This)->lpVtbl->AddRef(This)
#define DispHTMLHeaderElement_Release(This) (This)->lpVtbl->Release(This)
#define DispHTMLHeaderElement_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define DispHTMLHeaderElement_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define DispHTMLHeaderElement_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define DispHTMLHeaderElement_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
extern CLSID_HTMLHeaderElement as const CLSID
#define __HTMLSelectElementEvents2_DISPINTERFACE_DEFINED__
extern DIID_HTMLSelectElementEvents2 as const IID
type HTMLSelectElementEvents2 as HTMLSelectElementEvents2_

type HTMLSelectElementEvents2Vtbl
	QueryInterface as function(byval This as HTMLSelectElementEvents2 ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as HTMLSelectElementEvents2 ptr) as ULONG
	Release as function(byval This as HTMLSelectElementEvents2 ptr) as ULONG
	GetTypeInfoCount as function(byval This as HTMLSelectElementEvents2 ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as HTMLSelectElementEvents2 ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as HTMLSelectElementEvents2 ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as HTMLSelectElementEvents2 ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type HTMLSelectElementEvents2_
	lpVtbl as HTMLSelectElementEvents2Vtbl ptr
end type

#define HTMLSelectElementEvents2_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define HTMLSelectElementEvents2_AddRef(This) (This)->lpVtbl->AddRef(This)
#define HTMLSelectElementEvents2_Release(This) (This)->lpVtbl->Release(This)
#define HTMLSelectElementEvents2_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define HTMLSelectElementEvents2_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define HTMLSelectElementEvents2_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define HTMLSelectElementEvents2_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define __HTMLSelectElementEvents_DISPINTERFACE_DEFINED__
extern DIID_HTMLSelectElementEvents as const IID
type HTMLSelectElementEvents as HTMLSelectElementEvents_

type HTMLSelectElementEventsVtbl
	QueryInterface as function(byval This as HTMLSelectElementEvents ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as HTMLSelectElementEvents ptr) as ULONG
	Release as function(byval This as HTMLSelectElementEvents ptr) as ULONG
	GetTypeInfoCount as function(byval This as HTMLSelectElementEvents ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as HTMLSelectElementEvents ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as HTMLSelectElementEvents ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as HTMLSelectElementEvents ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type HTMLSelectElementEvents_
	lpVtbl as HTMLSelectElementEventsVtbl ptr
end type

#define HTMLSelectElementEvents_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define HTMLSelectElementEvents_AddRef(This) (This)->lpVtbl->AddRef(This)
#define HTMLSelectElementEvents_Release(This) (This)->lpVtbl->Release(This)
#define HTMLSelectElementEvents_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define HTMLSelectElementEvents_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define HTMLSelectElementEvents_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define HTMLSelectElementEvents_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define __IHTMLSelectElement_INTERFACE_DEFINED__
extern IID_IHTMLSelectElement as const IID
type IHTMLSelectElement as IHTMLSelectElement_

type IHTMLSelectElementVtbl
	QueryInterface as function(byval This as IHTMLSelectElement ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLSelectElement ptr) as ULONG
	Release as function(byval This as IHTMLSelectElement ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLSelectElement ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLSelectElement ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLSelectElement ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLSelectElement ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	put_size as function(byval This as IHTMLSelectElement ptr, byval v as long) as HRESULT
	get_size as function(byval This as IHTMLSelectElement ptr, byval p as long ptr) as HRESULT
	put_multiple as function(byval This as IHTMLSelectElement ptr, byval v as VARIANT_BOOL) as HRESULT
	get_multiple as function(byval This as IHTMLSelectElement ptr, byval p as VARIANT_BOOL ptr) as HRESULT
	put_name as function(byval This as IHTMLSelectElement ptr, byval v as BSTR) as HRESULT
	get_name as function(byval This as IHTMLSelectElement ptr, byval p as BSTR ptr) as HRESULT
	get_options as function(byval This as IHTMLSelectElement ptr, byval p as IDispatch ptr ptr) as HRESULT
	put_onchange as function(byval This as IHTMLSelectElement ptr, byval v as VARIANT) as HRESULT
	get_onchange as function(byval This as IHTMLSelectElement ptr, byval p as VARIANT ptr) as HRESULT
	put_selectedIndex as function(byval This as IHTMLSelectElement ptr, byval v as long) as HRESULT
	get_selectedIndex as function(byval This as IHTMLSelectElement ptr, byval p as long ptr) as HRESULT
	get_type as function(byval This as IHTMLSelectElement ptr, byval p as BSTR ptr) as HRESULT
	put_value as function(byval This as IHTMLSelectElement ptr, byval v as BSTR) as HRESULT
	get_value as function(byval This as IHTMLSelectElement ptr, byval p as BSTR ptr) as HRESULT
	put_disabled as function(byval This as IHTMLSelectElement ptr, byval v as VARIANT_BOOL) as HRESULT
	get_disabled as function(byval This as IHTMLSelectElement ptr, byval p as VARIANT_BOOL ptr) as HRESULT
	get_form as function(byval This as IHTMLSelectElement ptr, byval p as IHTMLFormElement ptr ptr) as HRESULT
	add as function(byval This as IHTMLSelectElement ptr, byval element as IHTMLElement ptr, byval before as VARIANT) as HRESULT
	remove as function(byval This as IHTMLSelectElement ptr, byval index as long) as HRESULT
	put_length as function(byval This as IHTMLSelectElement ptr, byval v as long) as HRESULT
	get_length as function(byval This as IHTMLSelectElement ptr, byval p as long ptr) as HRESULT
	get__newEnum as function(byval This as IHTMLSelectElement ptr, byval p as IUnknown ptr ptr) as HRESULT
	item as function(byval This as IHTMLSelectElement ptr, byval name as VARIANT, byval index as VARIANT, byval pdisp as IDispatch ptr ptr) as HRESULT
	tags as function(byval This as IHTMLSelectElement ptr, byval tagName as VARIANT, byval pdisp as IDispatch ptr ptr) as HRESULT
end type

type IHTMLSelectElement_
	lpVtbl as IHTMLSelectElementVtbl ptr
end type

#define IHTMLSelectElement_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLSelectElement_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLSelectElement_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLSelectElement_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLSelectElement_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLSelectElement_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLSelectElement_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLSelectElement_put_size(This, v) (This)->lpVtbl->put_size(This, v)
#define IHTMLSelectElement_get_size(This, p) (This)->lpVtbl->get_size(This, p)
#define IHTMLSelectElement_put_multiple(This, v) (This)->lpVtbl->put_multiple(This, v)
#define IHTMLSelectElement_get_multiple(This, p) (This)->lpVtbl->get_multiple(This, p)
#define IHTMLSelectElement_put_name(This, v) (This)->lpVtbl->put_name(This, v)
#define IHTMLSelectElement_get_name(This, p) (This)->lpVtbl->get_name(This, p)
#define IHTMLSelectElement_get_options(This, p) (This)->lpVtbl->get_options(This, p)
#define IHTMLSelectElement_put_onchange(This, v) (This)->lpVtbl->put_onchange(This, v)
#define IHTMLSelectElement_get_onchange(This, p) (This)->lpVtbl->get_onchange(This, p)
#define IHTMLSelectElement_put_selectedIndex(This, v) (This)->lpVtbl->put_selectedIndex(This, v)
#define IHTMLSelectElement_get_selectedIndex(This, p) (This)->lpVtbl->get_selectedIndex(This, p)
#define IHTMLSelectElement_get_type(This, p) (This)->lpVtbl->get_type(This, p)
#define IHTMLSelectElement_put_value(This, v) (This)->lpVtbl->put_value(This, v)
#define IHTMLSelectElement_get_value(This, p) (This)->lpVtbl->get_value(This, p)
#define IHTMLSelectElement_put_disabled(This, v) (This)->lpVtbl->put_disabled(This, v)
#define IHTMLSelectElement_get_disabled(This, p) (This)->lpVtbl->get_disabled(This, p)
#define IHTMLSelectElement_get_form(This, p) (This)->lpVtbl->get_form(This, p)
#define IHTMLSelectElement_add(This, element, before) (This)->lpVtbl->add(This, element, before)
#define IHTMLSelectElement_remove(This, index) (This)->lpVtbl->remove(This, index)
#define IHTMLSelectElement_put_length(This, v) (This)->lpVtbl->put_length(This, v)
#define IHTMLSelectElement_get_length(This, p) (This)->lpVtbl->get_length(This, p)
#define IHTMLSelectElement_get__newEnum(This, p) (This)->lpVtbl->get__newEnum(This, p)
#define IHTMLSelectElement_item(This, name, index, pdisp) (This)->lpVtbl->item(This, name, index, pdisp)
#define IHTMLSelectElement_tags(This, tagName, pdisp) (This)->lpVtbl->tags(This, tagName, pdisp)

declare function IHTMLSelectElement_put_size_Proxy(byval This as IHTMLSelectElement ptr, byval v as long) as HRESULT
declare sub IHTMLSelectElement_put_size_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLSelectElement_get_size_Proxy(byval This as IHTMLSelectElement ptr, byval p as long ptr) as HRESULT
declare sub IHTMLSelectElement_get_size_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLSelectElement_put_multiple_Proxy(byval This as IHTMLSelectElement ptr, byval v as VARIANT_BOOL) as HRESULT
declare sub IHTMLSelectElement_put_multiple_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLSelectElement_get_multiple_Proxy(byval This as IHTMLSelectElement ptr, byval p as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLSelectElement_get_multiple_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLSelectElement_put_name_Proxy(byval This as IHTMLSelectElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLSelectElement_put_name_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLSelectElement_get_name_Proxy(byval This as IHTMLSelectElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLSelectElement_get_name_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLSelectElement_get_options_Proxy(byval This as IHTMLSelectElement ptr, byval p as IDispatch ptr ptr) as HRESULT
declare sub IHTMLSelectElement_get_options_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLSelectElement_put_onchange_Proxy(byval This as IHTMLSelectElement ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLSelectElement_put_onchange_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLSelectElement_get_onchange_Proxy(byval This as IHTMLSelectElement ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLSelectElement_get_onchange_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLSelectElement_put_selectedIndex_Proxy(byval This as IHTMLSelectElement ptr, byval v as long) as HRESULT
declare sub IHTMLSelectElement_put_selectedIndex_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLSelectElement_get_selectedIndex_Proxy(byval This as IHTMLSelectElement ptr, byval p as long ptr) as HRESULT
declare sub IHTMLSelectElement_get_selectedIndex_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLSelectElement_get_type_Proxy(byval This as IHTMLSelectElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLSelectElement_get_type_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLSelectElement_put_value_Proxy(byval This as IHTMLSelectElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLSelectElement_put_value_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLSelectElement_get_value_Proxy(byval This as IHTMLSelectElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLSelectElement_get_value_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLSelectElement_put_disabled_Proxy(byval This as IHTMLSelectElement ptr, byval v as VARIANT_BOOL) as HRESULT
declare sub IHTMLSelectElement_put_disabled_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLSelectElement_get_disabled_Proxy(byval This as IHTMLSelectElement ptr, byval p as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLSelectElement_get_disabled_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLSelectElement_get_form_Proxy(byval This as IHTMLSelectElement ptr, byval p as IHTMLFormElement ptr ptr) as HRESULT
declare sub IHTMLSelectElement_get_form_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLSelectElement_add_Proxy(byval This as IHTMLSelectElement ptr, byval element as IHTMLElement ptr, byval before as VARIANT) as HRESULT
declare sub IHTMLSelectElement_add_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLSelectElement_remove_Proxy(byval This as IHTMLSelectElement ptr, byval index as long) as HRESULT
declare sub IHTMLSelectElement_remove_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLSelectElement_put_length_Proxy(byval This as IHTMLSelectElement ptr, byval v as long) as HRESULT
declare sub IHTMLSelectElement_put_length_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLSelectElement_get_length_Proxy(byval This as IHTMLSelectElement ptr, byval p as long ptr) as HRESULT
declare sub IHTMLSelectElement_get_length_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLSelectElement_get__newEnum_Proxy(byval This as IHTMLSelectElement ptr, byval p as IUnknown ptr ptr) as HRESULT
declare sub IHTMLSelectElement_get__newEnum_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLSelectElement_item_Proxy(byval This as IHTMLSelectElement ptr, byval name as VARIANT, byval index as VARIANT, byval pdisp as IDispatch ptr ptr) as HRESULT
declare sub IHTMLSelectElement_item_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLSelectElement_tags_Proxy(byval This as IHTMLSelectElement ptr, byval tagName as VARIANT, byval pdisp as IDispatch ptr ptr) as HRESULT
declare sub IHTMLSelectElement_tags_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLSelectElement2_INTERFACE_DEFINED__
extern IID_IHTMLSelectElement2 as const IID
type IHTMLSelectElement2 as IHTMLSelectElement2_

type IHTMLSelectElement2Vtbl
	QueryInterface as function(byval This as IHTMLSelectElement2 ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLSelectElement2 ptr) as ULONG
	Release as function(byval This as IHTMLSelectElement2 ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLSelectElement2 ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLSelectElement2 ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLSelectElement2 ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLSelectElement2 ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	urns as function(byval This as IHTMLSelectElement2 ptr, byval urn as VARIANT, byval pdisp as IDispatch ptr ptr) as HRESULT
end type

type IHTMLSelectElement2_
	lpVtbl as IHTMLSelectElement2Vtbl ptr
end type

#define IHTMLSelectElement2_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLSelectElement2_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLSelectElement2_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLSelectElement2_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLSelectElement2_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLSelectElement2_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLSelectElement2_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLSelectElement2_urns(This, urn, pdisp) (This)->lpVtbl->urns(This, urn, pdisp)
declare function IHTMLSelectElement2_urns_Proxy(byval This as IHTMLSelectElement2 ptr, byval urn as VARIANT, byval pdisp as IDispatch ptr ptr) as HRESULT
declare sub IHTMLSelectElement2_urns_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLSelectElement4_INTERFACE_DEFINED__
extern IID_IHTMLSelectElement4 as const IID
type IHTMLSelectElement4 as IHTMLSelectElement4_

type IHTMLSelectElement4Vtbl
	QueryInterface as function(byval This as IHTMLSelectElement4 ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLSelectElement4 ptr) as ULONG
	Release as function(byval This as IHTMLSelectElement4 ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLSelectElement4 ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLSelectElement4 ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLSelectElement4 ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLSelectElement4 ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	namedItem as function(byval This as IHTMLSelectElement4 ptr, byval name as BSTR, byval pdisp as IDispatch ptr ptr) as HRESULT
end type

type IHTMLSelectElement4_
	lpVtbl as IHTMLSelectElement4Vtbl ptr
end type

#define IHTMLSelectElement4_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLSelectElement4_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLSelectElement4_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLSelectElement4_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLSelectElement4_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLSelectElement4_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLSelectElement4_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLSelectElement4_namedItem(This, name, pdisp) (This)->lpVtbl->namedItem(This, name, pdisp)
declare function IHTMLSelectElement4_namedItem_Proxy(byval This as IHTMLSelectElement4 ptr, byval name as BSTR, byval pdisp as IDispatch ptr ptr) as HRESULT
declare sub IHTMLSelectElement4_namedItem_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __DispHTMLSelectElement_DISPINTERFACE_DEFINED__
extern DIID_DispHTMLSelectElement as const IID
type DispHTMLSelectElement as DispHTMLSelectElement_

type DispHTMLSelectElementVtbl
	QueryInterface as function(byval This as DispHTMLSelectElement ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as DispHTMLSelectElement ptr) as ULONG
	Release as function(byval This as DispHTMLSelectElement ptr) as ULONG
	GetTypeInfoCount as function(byval This as DispHTMLSelectElement ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as DispHTMLSelectElement ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as DispHTMLSelectElement ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as DispHTMLSelectElement ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type DispHTMLSelectElement_
	lpVtbl as DispHTMLSelectElementVtbl ptr
end type

#define DispHTMLSelectElement_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define DispHTMLSelectElement_AddRef(This) (This)->lpVtbl->AddRef(This)
#define DispHTMLSelectElement_Release(This) (This)->lpVtbl->Release(This)
#define DispHTMLSelectElement_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define DispHTMLSelectElement_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define DispHTMLSelectElement_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define DispHTMLSelectElement_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
extern CLSID_HTMLSelectElement as const CLSID
#define __IHTMLSelectionObject_INTERFACE_DEFINED__
extern IID_IHTMLSelectionObject as const IID
type IHTMLSelectionObject as IHTMLSelectionObject_

type IHTMLSelectionObjectVtbl
	QueryInterface as function(byval This as IHTMLSelectionObject ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLSelectionObject ptr) as ULONG
	Release as function(byval This as IHTMLSelectionObject ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLSelectionObject ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLSelectionObject ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLSelectionObject ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLSelectionObject ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	createRange as function(byval This as IHTMLSelectionObject ptr, byval range as IDispatch ptr ptr) as HRESULT
	empty as function(byval This as IHTMLSelectionObject ptr) as HRESULT
	clear as function(byval This as IHTMLSelectionObject ptr) as HRESULT
	get_type as function(byval This as IHTMLSelectionObject ptr, byval p as BSTR ptr) as HRESULT
end type

type IHTMLSelectionObject_
	lpVtbl as IHTMLSelectionObjectVtbl ptr
end type

#define IHTMLSelectionObject_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLSelectionObject_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLSelectionObject_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLSelectionObject_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLSelectionObject_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLSelectionObject_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLSelectionObject_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLSelectionObject_createRange(This, range) (This)->lpVtbl->createRange(This, range)
#define IHTMLSelectionObject_empty(This) (This)->lpVtbl->empty(This)
#define IHTMLSelectionObject_clear(This) (This)->lpVtbl->clear(This)
#define IHTMLSelectionObject_get_type(This, p) (This)->lpVtbl->get_type(This, p)

declare function IHTMLSelectionObject_createRange_Proxy(byval This as IHTMLSelectionObject ptr, byval range as IDispatch ptr ptr) as HRESULT
declare sub IHTMLSelectionObject_createRange_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLSelectionObject_empty_Proxy(byval This as IHTMLSelectionObject ptr) as HRESULT
declare sub IHTMLSelectionObject_empty_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLSelectionObject_clear_Proxy(byval This as IHTMLSelectionObject ptr) as HRESULT
declare sub IHTMLSelectionObject_clear_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLSelectionObject_get_type_Proxy(byval This as IHTMLSelectionObject ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLSelectionObject_get_type_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLSelectionObject2_INTERFACE_DEFINED__
extern IID_IHTMLSelectionObject2 as const IID
type IHTMLSelectionObject2 as IHTMLSelectionObject2_

type IHTMLSelectionObject2Vtbl
	QueryInterface as function(byval This as IHTMLSelectionObject2 ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLSelectionObject2 ptr) as ULONG
	Release as function(byval This as IHTMLSelectionObject2 ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLSelectionObject2 ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLSelectionObject2 ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLSelectionObject2 ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLSelectionObject2 ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	createRangeCollection as function(byval This as IHTMLSelectionObject2 ptr, byval rangeCollection as IDispatch ptr ptr) as HRESULT
	get_typeDetail as function(byval This as IHTMLSelectionObject2 ptr, byval p as BSTR ptr) as HRESULT
end type

type IHTMLSelectionObject2_
	lpVtbl as IHTMLSelectionObject2Vtbl ptr
end type

#define IHTMLSelectionObject2_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLSelectionObject2_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLSelectionObject2_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLSelectionObject2_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLSelectionObject2_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLSelectionObject2_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLSelectionObject2_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLSelectionObject2_createRangeCollection(This, rangeCollection) (This)->lpVtbl->createRangeCollection(This, rangeCollection)
#define IHTMLSelectionObject2_get_typeDetail(This, p) (This)->lpVtbl->get_typeDetail(This, p)

declare function IHTMLSelectionObject2_createRangeCollection_Proxy(byval This as IHTMLSelectionObject2 ptr, byval rangeCollection as IDispatch ptr ptr) as HRESULT
declare sub IHTMLSelectionObject2_createRangeCollection_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLSelectionObject2_get_typeDetail_Proxy(byval This as IHTMLSelectionObject2 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLSelectionObject2_get_typeDetail_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLOptionElement_INTERFACE_DEFINED__
extern IID_IHTMLOptionElement as const IID
type IHTMLOptionElement as IHTMLOptionElement_

type IHTMLOptionElementVtbl
	QueryInterface as function(byval This as IHTMLOptionElement ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLOptionElement ptr) as ULONG
	Release as function(byval This as IHTMLOptionElement ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLOptionElement ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLOptionElement ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLOptionElement ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLOptionElement ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	put_selected as function(byval This as IHTMLOptionElement ptr, byval v as VARIANT_BOOL) as HRESULT
	get_selected as function(byval This as IHTMLOptionElement ptr, byval p as VARIANT_BOOL ptr) as HRESULT
	put_value as function(byval This as IHTMLOptionElement ptr, byval v as BSTR) as HRESULT
	get_value as function(byval This as IHTMLOptionElement ptr, byval p as BSTR ptr) as HRESULT
	put_defaultSelected as function(byval This as IHTMLOptionElement ptr, byval v as VARIANT_BOOL) as HRESULT
	get_defaultSelected as function(byval This as IHTMLOptionElement ptr, byval p as VARIANT_BOOL ptr) as HRESULT
	put_index as function(byval This as IHTMLOptionElement ptr, byval v as LONG) as HRESULT
	get_index as function(byval This as IHTMLOptionElement ptr, byval p as LONG ptr) as HRESULT
	put_text as function(byval This as IHTMLOptionElement ptr, byval v as BSTR) as HRESULT
	get_text as function(byval This as IHTMLOptionElement ptr, byval p as BSTR ptr) as HRESULT
	get_form as function(byval This as IHTMLOptionElement ptr, byval p as IHTMLFormElement ptr ptr) as HRESULT
end type

type IHTMLOptionElement_
	lpVtbl as IHTMLOptionElementVtbl ptr
end type

#define IHTMLOptionElement_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLOptionElement_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLOptionElement_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLOptionElement_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLOptionElement_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLOptionElement_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLOptionElement_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLOptionElement_put_selected(This, v) (This)->lpVtbl->put_selected(This, v)
#define IHTMLOptionElement_get_selected(This, p) (This)->lpVtbl->get_selected(This, p)
#define IHTMLOptionElement_put_value(This, v) (This)->lpVtbl->put_value(This, v)
#define IHTMLOptionElement_get_value(This, p) (This)->lpVtbl->get_value(This, p)
#define IHTMLOptionElement_put_defaultSelected(This, v) (This)->lpVtbl->put_defaultSelected(This, v)
#define IHTMLOptionElement_get_defaultSelected(This, p) (This)->lpVtbl->get_defaultSelected(This, p)
#define IHTMLOptionElement_put_index(This, v) (This)->lpVtbl->put_index(This, v)
#define IHTMLOptionElement_get_index(This, p) (This)->lpVtbl->get_index(This, p)
#define IHTMLOptionElement_put_text(This, v) (This)->lpVtbl->put_text(This, v)
#define IHTMLOptionElement_get_text(This, p) (This)->lpVtbl->get_text(This, p)
#define IHTMLOptionElement_get_form(This, p) (This)->lpVtbl->get_form(This, p)

declare function IHTMLOptionElement_put_selected_Proxy(byval This as IHTMLOptionElement ptr, byval v as VARIANT_BOOL) as HRESULT
declare sub IHTMLOptionElement_put_selected_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLOptionElement_get_selected_Proxy(byval This as IHTMLOptionElement ptr, byval p as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLOptionElement_get_selected_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLOptionElement_put_value_Proxy(byval This as IHTMLOptionElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLOptionElement_put_value_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLOptionElement_get_value_Proxy(byval This as IHTMLOptionElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLOptionElement_get_value_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLOptionElement_put_defaultSelected_Proxy(byval This as IHTMLOptionElement ptr, byval v as VARIANT_BOOL) as HRESULT
declare sub IHTMLOptionElement_put_defaultSelected_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLOptionElement_get_defaultSelected_Proxy(byval This as IHTMLOptionElement ptr, byval p as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLOptionElement_get_defaultSelected_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLOptionElement_put_index_Proxy(byval This as IHTMLOptionElement ptr, byval v as LONG) as HRESULT
declare sub IHTMLOptionElement_put_index_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLOptionElement_get_index_Proxy(byval This as IHTMLOptionElement ptr, byval p as LONG ptr) as HRESULT
declare sub IHTMLOptionElement_get_index_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLOptionElement_put_text_Proxy(byval This as IHTMLOptionElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLOptionElement_put_text_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLOptionElement_get_text_Proxy(byval This as IHTMLOptionElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLOptionElement_get_text_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLOptionElement_get_form_Proxy(byval This as IHTMLOptionElement ptr, byval p as IHTMLFormElement ptr ptr) as HRESULT
declare sub IHTMLOptionElement_get_form_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLOptionElement3_INTERFACE_DEFINED__
extern IID_IHTMLOptionElement3 as const IID
type IHTMLOptionElement3 as IHTMLOptionElement3_

type IHTMLOptionElement3Vtbl
	QueryInterface as function(byval This as IHTMLOptionElement3 ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLOptionElement3 ptr) as ULONG
	Release as function(byval This as IHTMLOptionElement3 ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLOptionElement3 ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLOptionElement3 ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLOptionElement3 ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLOptionElement3 ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	put_label as function(byval This as IHTMLOptionElement3 ptr, byval v as BSTR) as HRESULT
	get_label as function(byval This as IHTMLOptionElement3 ptr, byval p as BSTR ptr) as HRESULT
end type

type IHTMLOptionElement3_
	lpVtbl as IHTMLOptionElement3Vtbl ptr
end type

#define IHTMLOptionElement3_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLOptionElement3_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLOptionElement3_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLOptionElement3_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLOptionElement3_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLOptionElement3_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLOptionElement3_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLOptionElement3_put_label(This, v) (This)->lpVtbl->put_label(This, v)
#define IHTMLOptionElement3_get_label(This, p) (This)->lpVtbl->get_label(This, p)

declare function IHTMLOptionElement3_put_label_Proxy(byval This as IHTMLOptionElement3 ptr, byval v as BSTR) as HRESULT
declare sub IHTMLOptionElement3_put_label_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLOptionElement3_get_label_Proxy(byval This as IHTMLOptionElement3 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLOptionElement3_get_label_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLOptionElementFactory_INTERFACE_DEFINED__
extern IID_IHTMLOptionElementFactory as const IID
type IHTMLOptionElementFactory as IHTMLOptionElementFactory_

type IHTMLOptionElementFactoryVtbl
	QueryInterface as function(byval This as IHTMLOptionElementFactory ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLOptionElementFactory ptr) as ULONG
	Release as function(byval This as IHTMLOptionElementFactory ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLOptionElementFactory ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLOptionElementFactory ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLOptionElementFactory ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLOptionElementFactory ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	create as function(byval This as IHTMLOptionElementFactory ptr, byval text as VARIANT, byval value as VARIANT, byval defaultselected as VARIANT, byval selected as VARIANT, byval __MIDL_0012 as IHTMLOptionElement ptr ptr) as HRESULT
end type

type IHTMLOptionElementFactory_
	lpVtbl as IHTMLOptionElementFactoryVtbl ptr
end type

#define IHTMLOptionElementFactory_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLOptionElementFactory_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLOptionElementFactory_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLOptionElementFactory_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLOptionElementFactory_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLOptionElementFactory_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLOptionElementFactory_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLOptionElementFactory_create(This, text, value, defaultselected, selected, __MIDL_0012) (This)->lpVtbl->create(This, text, value, defaultselected, selected, __MIDL_0012)
declare function IHTMLOptionElementFactory_create_Proxy(byval This as IHTMLOptionElementFactory ptr, byval text as VARIANT, byval value as VARIANT, byval defaultselected as VARIANT, byval selected as VARIANT, byval __MIDL_0012 as IHTMLOptionElement ptr ptr) as HRESULT
declare sub IHTMLOptionElementFactory_create_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __DispHTMLOptionElement_DISPINTERFACE_DEFINED__
extern DIID_DispHTMLOptionElement as const IID
type DispHTMLOptionElement as DispHTMLOptionElement_

type DispHTMLOptionElementVtbl
	QueryInterface as function(byval This as DispHTMLOptionElement ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as DispHTMLOptionElement ptr) as ULONG
	Release as function(byval This as DispHTMLOptionElement ptr) as ULONG
	GetTypeInfoCount as function(byval This as DispHTMLOptionElement ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as DispHTMLOptionElement ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as DispHTMLOptionElement ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as DispHTMLOptionElement ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type DispHTMLOptionElement_
	lpVtbl as DispHTMLOptionElementVtbl ptr
end type

#define DispHTMLOptionElement_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define DispHTMLOptionElement_AddRef(This) (This)->lpVtbl->AddRef(This)
#define DispHTMLOptionElement_Release(This) (This)->lpVtbl->Release(This)
#define DispHTMLOptionElement_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define DispHTMLOptionElement_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define DispHTMLOptionElement_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define DispHTMLOptionElement_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
extern CLSID_HTMLOptionElement as const CLSID
extern CLSID_HTMLOptionElementFactory as const CLSID
#define __HTMLButtonElementEvents2_DISPINTERFACE_DEFINED__
extern DIID_HTMLButtonElementEvents2 as const IID
type HTMLButtonElementEvents2 as HTMLButtonElementEvents2_

type HTMLButtonElementEvents2Vtbl
	QueryInterface as function(byval This as HTMLButtonElementEvents2 ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as HTMLButtonElementEvents2 ptr) as ULONG
	Release as function(byval This as HTMLButtonElementEvents2 ptr) as ULONG
	GetTypeInfoCount as function(byval This as HTMLButtonElementEvents2 ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as HTMLButtonElementEvents2 ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as HTMLButtonElementEvents2 ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as HTMLButtonElementEvents2 ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type HTMLButtonElementEvents2_
	lpVtbl as HTMLButtonElementEvents2Vtbl ptr
end type

#define HTMLButtonElementEvents2_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define HTMLButtonElementEvents2_AddRef(This) (This)->lpVtbl->AddRef(This)
#define HTMLButtonElementEvents2_Release(This) (This)->lpVtbl->Release(This)
#define HTMLButtonElementEvents2_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define HTMLButtonElementEvents2_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define HTMLButtonElementEvents2_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define HTMLButtonElementEvents2_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define __HTMLButtonElementEvents_DISPINTERFACE_DEFINED__
extern DIID_HTMLButtonElementEvents as const IID
type HTMLButtonElementEvents as HTMLButtonElementEvents_

type HTMLButtonElementEventsVtbl
	QueryInterface as function(byval This as HTMLButtonElementEvents ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as HTMLButtonElementEvents ptr) as ULONG
	Release as function(byval This as HTMLButtonElementEvents ptr) as ULONG
	GetTypeInfoCount as function(byval This as HTMLButtonElementEvents ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as HTMLButtonElementEvents ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as HTMLButtonElementEvents ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as HTMLButtonElementEvents ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type HTMLButtonElementEvents_
	lpVtbl as HTMLButtonElementEventsVtbl ptr
end type

#define HTMLButtonElementEvents_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define HTMLButtonElementEvents_AddRef(This) (This)->lpVtbl->AddRef(This)
#define HTMLButtonElementEvents_Release(This) (This)->lpVtbl->Release(This)
#define HTMLButtonElementEvents_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define HTMLButtonElementEvents_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define HTMLButtonElementEvents_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define HTMLButtonElementEvents_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define __HTMLInputTextElementEvents2_DISPINTERFACE_DEFINED__
extern DIID_HTMLInputTextElementEvents2 as const IID
type HTMLInputTextElementEvents2 as HTMLInputTextElementEvents2_

type HTMLInputTextElementEvents2Vtbl
	QueryInterface as function(byval This as HTMLInputTextElementEvents2 ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as HTMLInputTextElementEvents2 ptr) as ULONG
	Release as function(byval This as HTMLInputTextElementEvents2 ptr) as ULONG
	GetTypeInfoCount as function(byval This as HTMLInputTextElementEvents2 ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as HTMLInputTextElementEvents2 ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as HTMLInputTextElementEvents2 ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as HTMLInputTextElementEvents2 ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type HTMLInputTextElementEvents2_
	lpVtbl as HTMLInputTextElementEvents2Vtbl ptr
end type

#define HTMLInputTextElementEvents2_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define HTMLInputTextElementEvents2_AddRef(This) (This)->lpVtbl->AddRef(This)
#define HTMLInputTextElementEvents2_Release(This) (This)->lpVtbl->Release(This)
#define HTMLInputTextElementEvents2_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define HTMLInputTextElementEvents2_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define HTMLInputTextElementEvents2_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define HTMLInputTextElementEvents2_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define __HTMLOptionButtonElementEvents2_DISPINTERFACE_DEFINED__
extern DIID_HTMLOptionButtonElementEvents2 as const IID
type HTMLOptionButtonElementEvents2 as HTMLOptionButtonElementEvents2_

type HTMLOptionButtonElementEvents2Vtbl
	QueryInterface as function(byval This as HTMLOptionButtonElementEvents2 ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as HTMLOptionButtonElementEvents2 ptr) as ULONG
	Release as function(byval This as HTMLOptionButtonElementEvents2 ptr) as ULONG
	GetTypeInfoCount as function(byval This as HTMLOptionButtonElementEvents2 ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as HTMLOptionButtonElementEvents2 ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as HTMLOptionButtonElementEvents2 ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as HTMLOptionButtonElementEvents2 ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type HTMLOptionButtonElementEvents2_
	lpVtbl as HTMLOptionButtonElementEvents2Vtbl ptr
end type

#define HTMLOptionButtonElementEvents2_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define HTMLOptionButtonElementEvents2_AddRef(This) (This)->lpVtbl->AddRef(This)
#define HTMLOptionButtonElementEvents2_Release(This) (This)->lpVtbl->Release(This)
#define HTMLOptionButtonElementEvents2_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define HTMLOptionButtonElementEvents2_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define HTMLOptionButtonElementEvents2_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define HTMLOptionButtonElementEvents2_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define __HTMLInputFileElementEvents2_DISPINTERFACE_DEFINED__
extern DIID_HTMLInputFileElementEvents2 as const IID
type HTMLInputFileElementEvents2 as HTMLInputFileElementEvents2_

type HTMLInputFileElementEvents2Vtbl
	QueryInterface as function(byval This as HTMLInputFileElementEvents2 ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as HTMLInputFileElementEvents2 ptr) as ULONG
	Release as function(byval This as HTMLInputFileElementEvents2 ptr) as ULONG
	GetTypeInfoCount as function(byval This as HTMLInputFileElementEvents2 ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as HTMLInputFileElementEvents2 ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as HTMLInputFileElementEvents2 ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as HTMLInputFileElementEvents2 ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type HTMLInputFileElementEvents2_
	lpVtbl as HTMLInputFileElementEvents2Vtbl ptr
end type

#define HTMLInputFileElementEvents2_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define HTMLInputFileElementEvents2_AddRef(This) (This)->lpVtbl->AddRef(This)
#define HTMLInputFileElementEvents2_Release(This) (This)->lpVtbl->Release(This)
#define HTMLInputFileElementEvents2_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define HTMLInputFileElementEvents2_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define HTMLInputFileElementEvents2_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define HTMLInputFileElementEvents2_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define __HTMLInputImageEvents2_DISPINTERFACE_DEFINED__
extern DIID_HTMLInputImageEvents2 as const IID
type HTMLInputImageEvents2 as HTMLInputImageEvents2_

type HTMLInputImageEvents2Vtbl
	QueryInterface as function(byval This as HTMLInputImageEvents2 ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as HTMLInputImageEvents2 ptr) as ULONG
	Release as function(byval This as HTMLInputImageEvents2 ptr) as ULONG
	GetTypeInfoCount as function(byval This as HTMLInputImageEvents2 ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as HTMLInputImageEvents2 ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as HTMLInputImageEvents2 ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as HTMLInputImageEvents2 ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type HTMLInputImageEvents2_
	lpVtbl as HTMLInputImageEvents2Vtbl ptr
end type

#define HTMLInputImageEvents2_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define HTMLInputImageEvents2_AddRef(This) (This)->lpVtbl->AddRef(This)
#define HTMLInputImageEvents2_Release(This) (This)->lpVtbl->Release(This)
#define HTMLInputImageEvents2_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define HTMLInputImageEvents2_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define HTMLInputImageEvents2_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define HTMLInputImageEvents2_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define __HTMLInputTextElementEvents_DISPINTERFACE_DEFINED__
extern DIID_HTMLInputTextElementEvents as const IID
type HTMLInputTextElementEvents as HTMLInputTextElementEvents_

type HTMLInputTextElementEventsVtbl
	QueryInterface as function(byval This as HTMLInputTextElementEvents ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as HTMLInputTextElementEvents ptr) as ULONG
	Release as function(byval This as HTMLInputTextElementEvents ptr) as ULONG
	GetTypeInfoCount as function(byval This as HTMLInputTextElementEvents ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as HTMLInputTextElementEvents ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as HTMLInputTextElementEvents ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as HTMLInputTextElementEvents ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type HTMLInputTextElementEvents_
	lpVtbl as HTMLInputTextElementEventsVtbl ptr
end type

#define HTMLInputTextElementEvents_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define HTMLInputTextElementEvents_AddRef(This) (This)->lpVtbl->AddRef(This)
#define HTMLInputTextElementEvents_Release(This) (This)->lpVtbl->Release(This)
#define HTMLInputTextElementEvents_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define HTMLInputTextElementEvents_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define HTMLInputTextElementEvents_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define HTMLInputTextElementEvents_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define __HTMLOptionButtonElementEvents_DISPINTERFACE_DEFINED__
extern DIID_HTMLOptionButtonElementEvents as const IID
type HTMLOptionButtonElementEvents as HTMLOptionButtonElementEvents_

type HTMLOptionButtonElementEventsVtbl
	QueryInterface as function(byval This as HTMLOptionButtonElementEvents ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as HTMLOptionButtonElementEvents ptr) as ULONG
	Release as function(byval This as HTMLOptionButtonElementEvents ptr) as ULONG
	GetTypeInfoCount as function(byval This as HTMLOptionButtonElementEvents ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as HTMLOptionButtonElementEvents ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as HTMLOptionButtonElementEvents ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as HTMLOptionButtonElementEvents ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type HTMLOptionButtonElementEvents_
	lpVtbl as HTMLOptionButtonElementEventsVtbl ptr
end type

#define HTMLOptionButtonElementEvents_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define HTMLOptionButtonElementEvents_AddRef(This) (This)->lpVtbl->AddRef(This)
#define HTMLOptionButtonElementEvents_Release(This) (This)->lpVtbl->Release(This)
#define HTMLOptionButtonElementEvents_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define HTMLOptionButtonElementEvents_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define HTMLOptionButtonElementEvents_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define HTMLOptionButtonElementEvents_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define __HTMLInputFileElementEvents_DISPINTERFACE_DEFINED__
extern DIID_HTMLInputFileElementEvents as const IID
type HTMLInputFileElementEvents as HTMLInputFileElementEvents_

type HTMLInputFileElementEventsVtbl
	QueryInterface as function(byval This as HTMLInputFileElementEvents ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as HTMLInputFileElementEvents ptr) as ULONG
	Release as function(byval This as HTMLInputFileElementEvents ptr) as ULONG
	GetTypeInfoCount as function(byval This as HTMLInputFileElementEvents ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as HTMLInputFileElementEvents ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as HTMLInputFileElementEvents ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as HTMLInputFileElementEvents ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type HTMLInputFileElementEvents_
	lpVtbl as HTMLInputFileElementEventsVtbl ptr
end type

#define HTMLInputFileElementEvents_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define HTMLInputFileElementEvents_AddRef(This) (This)->lpVtbl->AddRef(This)
#define HTMLInputFileElementEvents_Release(This) (This)->lpVtbl->Release(This)
#define HTMLInputFileElementEvents_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define HTMLInputFileElementEvents_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define HTMLInputFileElementEvents_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define HTMLInputFileElementEvents_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define __HTMLInputImageEvents_DISPINTERFACE_DEFINED__
extern DIID_HTMLInputImageEvents as const IID
type HTMLInputImageEvents as HTMLInputImageEvents_

type HTMLInputImageEventsVtbl
	QueryInterface as function(byval This as HTMLInputImageEvents ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as HTMLInputImageEvents ptr) as ULONG
	Release as function(byval This as HTMLInputImageEvents ptr) as ULONG
	GetTypeInfoCount as function(byval This as HTMLInputImageEvents ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as HTMLInputImageEvents ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as HTMLInputImageEvents ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as HTMLInputImageEvents ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type HTMLInputImageEvents_
	lpVtbl as HTMLInputImageEventsVtbl ptr
end type

#define HTMLInputImageEvents_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define HTMLInputImageEvents_AddRef(This) (This)->lpVtbl->AddRef(This)
#define HTMLInputImageEvents_Release(This) (This)->lpVtbl->Release(This)
#define HTMLInputImageEvents_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define HTMLInputImageEvents_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define HTMLInputImageEvents_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define HTMLInputImageEvents_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define __IHTMLInputElement_INTERFACE_DEFINED__
extern IID_IHTMLInputElement as const IID
type IHTMLInputElement as IHTMLInputElement_

type IHTMLInputElementVtbl
	QueryInterface as function(byval This as IHTMLInputElement ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLInputElement ptr) as ULONG
	Release as function(byval This as IHTMLInputElement ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLInputElement ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLInputElement ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLInputElement ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLInputElement ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	put_type as function(byval This as IHTMLInputElement ptr, byval v as BSTR) as HRESULT
	get_type as function(byval This as IHTMLInputElement ptr, byval p as BSTR ptr) as HRESULT
	put_value as function(byval This as IHTMLInputElement ptr, byval v as BSTR) as HRESULT
	get_value as function(byval This as IHTMLInputElement ptr, byval p as BSTR ptr) as HRESULT
	put_name as function(byval This as IHTMLInputElement ptr, byval v as BSTR) as HRESULT
	get_name as function(byval This as IHTMLInputElement ptr, byval p as BSTR ptr) as HRESULT
	put_status as function(byval This as IHTMLInputElement ptr, byval v as VARIANT_BOOL) as HRESULT
	get_status as function(byval This as IHTMLInputElement ptr, byval p as VARIANT_BOOL ptr) as HRESULT
	put_disabled as function(byval This as IHTMLInputElement ptr, byval v as VARIANT_BOOL) as HRESULT
	get_disabled as function(byval This as IHTMLInputElement ptr, byval p as VARIANT_BOOL ptr) as HRESULT
	get_form as function(byval This as IHTMLInputElement ptr, byval p as IHTMLFormElement ptr ptr) as HRESULT
	put_size as function(byval This as IHTMLInputElement ptr, byval v as long) as HRESULT
	get_size as function(byval This as IHTMLInputElement ptr, byval p as long ptr) as HRESULT
	put_maxLength as function(byval This as IHTMLInputElement ptr, byval v as long) as HRESULT
	get_maxLength as function(byval This as IHTMLInputElement ptr, byval p as long ptr) as HRESULT
	select as function(byval This as IHTMLInputElement ptr) as HRESULT
	put_onchange as function(byval This as IHTMLInputElement ptr, byval v as VARIANT) as HRESULT
	get_onchange as function(byval This as IHTMLInputElement ptr, byval p as VARIANT ptr) as HRESULT
	put_onselect as function(byval This as IHTMLInputElement ptr, byval v as VARIANT) as HRESULT
	get_onselect as function(byval This as IHTMLInputElement ptr, byval p as VARIANT ptr) as HRESULT
	put_defaultValue as function(byval This as IHTMLInputElement ptr, byval v as BSTR) as HRESULT
	get_defaultValue as function(byval This as IHTMLInputElement ptr, byval p as BSTR ptr) as HRESULT
	put_readOnly as function(byval This as IHTMLInputElement ptr, byval v as VARIANT_BOOL) as HRESULT
	get_readOnly as function(byval This as IHTMLInputElement ptr, byval p as VARIANT_BOOL ptr) as HRESULT
	createTextRange as function(byval This as IHTMLInputElement ptr, byval range as IHTMLTxtRange ptr ptr) as HRESULT
	put_indeterminate as function(byval This as IHTMLInputElement ptr, byval v as VARIANT_BOOL) as HRESULT
	get_indeterminate as function(byval This as IHTMLInputElement ptr, byval p as VARIANT_BOOL ptr) as HRESULT
	put_defaultChecked as function(byval This as IHTMLInputElement ptr, byval v as VARIANT_BOOL) as HRESULT
	get_defaultChecked as function(byval This as IHTMLInputElement ptr, byval p as VARIANT_BOOL ptr) as HRESULT
	put_checked as function(byval This as IHTMLInputElement ptr, byval v as VARIANT_BOOL) as HRESULT
	get_checked as function(byval This as IHTMLInputElement ptr, byval p as VARIANT_BOOL ptr) as HRESULT
	put_border as function(byval This as IHTMLInputElement ptr, byval v as VARIANT) as HRESULT
	get_border as function(byval This as IHTMLInputElement ptr, byval p as VARIANT ptr) as HRESULT
	put_vspace as function(byval This as IHTMLInputElement ptr, byval v as long) as HRESULT
	get_vspace as function(byval This as IHTMLInputElement ptr, byval p as long ptr) as HRESULT
	put_hspace as function(byval This as IHTMLInputElement ptr, byval v as long) as HRESULT
	get_hspace as function(byval This as IHTMLInputElement ptr, byval p as long ptr) as HRESULT
	put_alt as function(byval This as IHTMLInputElement ptr, byval v as BSTR) as HRESULT
	get_alt as function(byval This as IHTMLInputElement ptr, byval p as BSTR ptr) as HRESULT
	put_src as function(byval This as IHTMLInputElement ptr, byval v as BSTR) as HRESULT
	get_src as function(byval This as IHTMLInputElement ptr, byval p as BSTR ptr) as HRESULT
	put_lowsrc as function(byval This as IHTMLInputElement ptr, byval v as BSTR) as HRESULT
	get_lowsrc as function(byval This as IHTMLInputElement ptr, byval p as BSTR ptr) as HRESULT
	put_vrml as function(byval This as IHTMLInputElement ptr, byval v as BSTR) as HRESULT
	get_vrml as function(byval This as IHTMLInputElement ptr, byval p as BSTR ptr) as HRESULT
	put_dynsrc as function(byval This as IHTMLInputElement ptr, byval v as BSTR) as HRESULT
	get_dynsrc as function(byval This as IHTMLInputElement ptr, byval p as BSTR ptr) as HRESULT
	get_readyState as function(byval This as IHTMLInputElement ptr, byval p as BSTR ptr) as HRESULT
	get_complete as function(byval This as IHTMLInputElement ptr, byval p as VARIANT_BOOL ptr) as HRESULT
	put_loop as function(byval This as IHTMLInputElement ptr, byval v as VARIANT) as HRESULT
	get_loop as function(byval This as IHTMLInputElement ptr, byval p as VARIANT ptr) as HRESULT
	put_align as function(byval This as IHTMLInputElement ptr, byval v as BSTR) as HRESULT
	get_align as function(byval This as IHTMLInputElement ptr, byval p as BSTR ptr) as HRESULT
	put_onload as function(byval This as IHTMLInputElement ptr, byval v as VARIANT) as HRESULT
	get_onload as function(byval This as IHTMLInputElement ptr, byval p as VARIANT ptr) as HRESULT
	put_onerror as function(byval This as IHTMLInputElement ptr, byval v as VARIANT) as HRESULT
	get_onerror as function(byval This as IHTMLInputElement ptr, byval p as VARIANT ptr) as HRESULT
	put_onabort as function(byval This as IHTMLInputElement ptr, byval v as VARIANT) as HRESULT
	get_onabort as function(byval This as IHTMLInputElement ptr, byval p as VARIANT ptr) as HRESULT
	put_width as function(byval This as IHTMLInputElement ptr, byval v as long) as HRESULT
	get_width as function(byval This as IHTMLInputElement ptr, byval p as long ptr) as HRESULT
	put_height as function(byval This as IHTMLInputElement ptr, byval v as long) as HRESULT
	get_height as function(byval This as IHTMLInputElement ptr, byval p as long ptr) as HRESULT
	put_start as function(byval This as IHTMLInputElement ptr, byval v as BSTR) as HRESULT
	get_start as function(byval This as IHTMLInputElement ptr, byval p as BSTR ptr) as HRESULT
end type

type IHTMLInputElement_
	lpVtbl as IHTMLInputElementVtbl ptr
end type

#define IHTMLInputElement_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLInputElement_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLInputElement_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLInputElement_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLInputElement_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLInputElement_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLInputElement_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLInputElement_put_type(This, v) (This)->lpVtbl->put_type(This, v)
#define IHTMLInputElement_get_type(This, p) (This)->lpVtbl->get_type(This, p)
#define IHTMLInputElement_put_value(This, v) (This)->lpVtbl->put_value(This, v)
#define IHTMLInputElement_get_value(This, p) (This)->lpVtbl->get_value(This, p)
#define IHTMLInputElement_put_name(This, v) (This)->lpVtbl->put_name(This, v)
#define IHTMLInputElement_get_name(This, p) (This)->lpVtbl->get_name(This, p)
#define IHTMLInputElement_put_status(This, v) (This)->lpVtbl->put_status(This, v)
#define IHTMLInputElement_get_status(This, p) (This)->lpVtbl->get_status(This, p)
#define IHTMLInputElement_put_disabled(This, v) (This)->lpVtbl->put_disabled(This, v)
#define IHTMLInputElement_get_disabled(This, p) (This)->lpVtbl->get_disabled(This, p)
#define IHTMLInputElement_get_form(This, p) (This)->lpVtbl->get_form(This, p)
#define IHTMLInputElement_put_size(This, v) (This)->lpVtbl->put_size(This, v)
#define IHTMLInputElement_get_size(This, p) (This)->lpVtbl->get_size(This, p)
#define IHTMLInputElement_put_maxLength(This, v) (This)->lpVtbl->put_maxLength(This, v)
#define IHTMLInputElement_get_maxLength(This, p) (This)->lpVtbl->get_maxLength(This, p)
#define IHTMLInputElement_select(This) (This)->lpVtbl->select(This)
#define IHTMLInputElement_put_onchange(This, v) (This)->lpVtbl->put_onchange(This, v)
#define IHTMLInputElement_get_onchange(This, p) (This)->lpVtbl->get_onchange(This, p)
#define IHTMLInputElement_put_onselect(This, v) (This)->lpVtbl->put_onselect(This, v)
#define IHTMLInputElement_get_onselect(This, p) (This)->lpVtbl->get_onselect(This, p)
#define IHTMLInputElement_put_defaultValue(This, v) (This)->lpVtbl->put_defaultValue(This, v)
#define IHTMLInputElement_get_defaultValue(This, p) (This)->lpVtbl->get_defaultValue(This, p)
#define IHTMLInputElement_put_readOnly(This, v) (This)->lpVtbl->put_readOnly(This, v)
#define IHTMLInputElement_get_readOnly(This, p) (This)->lpVtbl->get_readOnly(This, p)
#define IHTMLInputElement_createTextRange(This, range) (This)->lpVtbl->createTextRange(This, range)
#define IHTMLInputElement_put_indeterminate(This, v) (This)->lpVtbl->put_indeterminate(This, v)
#define IHTMLInputElement_get_indeterminate(This, p) (This)->lpVtbl->get_indeterminate(This, p)
#define IHTMLInputElement_put_defaultChecked(This, v) (This)->lpVtbl->put_defaultChecked(This, v)
#define IHTMLInputElement_get_defaultChecked(This, p) (This)->lpVtbl->get_defaultChecked(This, p)
#define IHTMLInputElement_put_checked(This, v) (This)->lpVtbl->put_checked(This, v)
#define IHTMLInputElement_get_checked(This, p) (This)->lpVtbl->get_checked(This, p)
#define IHTMLInputElement_put_border(This, v) (This)->lpVtbl->put_border(This, v)
#define IHTMLInputElement_get_border(This, p) (This)->lpVtbl->get_border(This, p)
#define IHTMLInputElement_put_vspace(This, v) (This)->lpVtbl->put_vspace(This, v)
#define IHTMLInputElement_get_vspace(This, p) (This)->lpVtbl->get_vspace(This, p)
#define IHTMLInputElement_put_hspace(This, v) (This)->lpVtbl->put_hspace(This, v)
#define IHTMLInputElement_get_hspace(This, p) (This)->lpVtbl->get_hspace(This, p)
#define IHTMLInputElement_put_alt(This, v) (This)->lpVtbl->put_alt(This, v)
#define IHTMLInputElement_get_alt(This, p) (This)->lpVtbl->get_alt(This, p)
#define IHTMLInputElement_put_src(This, v) (This)->lpVtbl->put_src(This, v)
#define IHTMLInputElement_get_src(This, p) (This)->lpVtbl->get_src(This, p)
#define IHTMLInputElement_put_lowsrc(This, v) (This)->lpVtbl->put_lowsrc(This, v)
#define IHTMLInputElement_get_lowsrc(This, p) (This)->lpVtbl->get_lowsrc(This, p)
#define IHTMLInputElement_put_vrml(This, v) (This)->lpVtbl->put_vrml(This, v)
#define IHTMLInputElement_get_vrml(This, p) (This)->lpVtbl->get_vrml(This, p)
#define IHTMLInputElement_put_dynsrc(This, v) (This)->lpVtbl->put_dynsrc(This, v)
#define IHTMLInputElement_get_dynsrc(This, p) (This)->lpVtbl->get_dynsrc(This, p)
#define IHTMLInputElement_get_readyState(This, p) (This)->lpVtbl->get_readyState(This, p)
#define IHTMLInputElement_get_complete(This, p) (This)->lpVtbl->get_complete(This, p)
#define IHTMLInputElement_put_loop(This, v) (This)->lpVtbl->put_loop(This, v)
#define IHTMLInputElement_get_loop(This, p) (This)->lpVtbl->get_loop(This, p)
#define IHTMLInputElement_put_align(This, v) (This)->lpVtbl->put_align(This, v)
#define IHTMLInputElement_get_align(This, p) (This)->lpVtbl->get_align(This, p)
#define IHTMLInputElement_put_onload(This, v) (This)->lpVtbl->put_onload(This, v)
#define IHTMLInputElement_get_onload(This, p) (This)->lpVtbl->get_onload(This, p)
#define IHTMLInputElement_put_onerror(This, v) (This)->lpVtbl->put_onerror(This, v)
#define IHTMLInputElement_get_onerror(This, p) (This)->lpVtbl->get_onerror(This, p)
#define IHTMLInputElement_put_onabort(This, v) (This)->lpVtbl->put_onabort(This, v)
#define IHTMLInputElement_get_onabort(This, p) (This)->lpVtbl->get_onabort(This, p)
#define IHTMLInputElement_put_width(This, v) (This)->lpVtbl->put_width(This, v)
#define IHTMLInputElement_get_width(This, p) (This)->lpVtbl->get_width(This, p)
#define IHTMLInputElement_put_height(This, v) (This)->lpVtbl->put_height(This, v)
#define IHTMLInputElement_get_height(This, p) (This)->lpVtbl->get_height(This, p)
#define IHTMLInputElement_put_start(This, v) (This)->lpVtbl->put_start(This, v)
#define IHTMLInputElement_get_start(This, p) (This)->lpVtbl->get_start(This, p)

declare function IHTMLInputElement_put_type_Proxy(byval This as IHTMLInputElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLInputElement_put_type_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputElement_get_type_Proxy(byval This as IHTMLInputElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLInputElement_get_type_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputElement_put_value_Proxy(byval This as IHTMLInputElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLInputElement_put_value_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputElement_get_value_Proxy(byval This as IHTMLInputElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLInputElement_get_value_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputElement_put_name_Proxy(byval This as IHTMLInputElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLInputElement_put_name_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputElement_get_name_Proxy(byval This as IHTMLInputElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLInputElement_get_name_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputElement_put_status_Proxy(byval This as IHTMLInputElement ptr, byval v as VARIANT_BOOL) as HRESULT
declare sub IHTMLInputElement_put_status_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputElement_get_status_Proxy(byval This as IHTMLInputElement ptr, byval p as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLInputElement_get_status_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputElement_put_disabled_Proxy(byval This as IHTMLInputElement ptr, byval v as VARIANT_BOOL) as HRESULT
declare sub IHTMLInputElement_put_disabled_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputElement_get_disabled_Proxy(byval This as IHTMLInputElement ptr, byval p as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLInputElement_get_disabled_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputElement_get_form_Proxy(byval This as IHTMLInputElement ptr, byval p as IHTMLFormElement ptr ptr) as HRESULT
declare sub IHTMLInputElement_get_form_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputElement_put_size_Proxy(byval This as IHTMLInputElement ptr, byval v as long) as HRESULT
declare sub IHTMLInputElement_put_size_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputElement_get_size_Proxy(byval This as IHTMLInputElement ptr, byval p as long ptr) as HRESULT
declare sub IHTMLInputElement_get_size_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputElement_put_maxLength_Proxy(byval This as IHTMLInputElement ptr, byval v as long) as HRESULT
declare sub IHTMLInputElement_put_maxLength_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputElement_get_maxLength_Proxy(byval This as IHTMLInputElement ptr, byval p as long ptr) as HRESULT
declare sub IHTMLInputElement_get_maxLength_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputElement_select_Proxy(byval This as IHTMLInputElement ptr) as HRESULT
declare sub IHTMLInputElement_select_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputElement_put_onchange_Proxy(byval This as IHTMLInputElement ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLInputElement_put_onchange_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputElement_get_onchange_Proxy(byval This as IHTMLInputElement ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLInputElement_get_onchange_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputElement_put_onselect_Proxy(byval This as IHTMLInputElement ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLInputElement_put_onselect_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputElement_get_onselect_Proxy(byval This as IHTMLInputElement ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLInputElement_get_onselect_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputElement_put_defaultValue_Proxy(byval This as IHTMLInputElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLInputElement_put_defaultValue_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputElement_get_defaultValue_Proxy(byval This as IHTMLInputElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLInputElement_get_defaultValue_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputElement_put_readOnly_Proxy(byval This as IHTMLInputElement ptr, byval v as VARIANT_BOOL) as HRESULT
declare sub IHTMLInputElement_put_readOnly_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputElement_get_readOnly_Proxy(byval This as IHTMLInputElement ptr, byval p as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLInputElement_get_readOnly_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputElement_createTextRange_Proxy(byval This as IHTMLInputElement ptr, byval range as IHTMLTxtRange ptr ptr) as HRESULT
declare sub IHTMLInputElement_createTextRange_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputElement_put_indeterminate_Proxy(byval This as IHTMLInputElement ptr, byval v as VARIANT_BOOL) as HRESULT
declare sub IHTMLInputElement_put_indeterminate_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputElement_get_indeterminate_Proxy(byval This as IHTMLInputElement ptr, byval p as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLInputElement_get_indeterminate_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputElement_put_defaultChecked_Proxy(byval This as IHTMLInputElement ptr, byval v as VARIANT_BOOL) as HRESULT
declare sub IHTMLInputElement_put_defaultChecked_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputElement_get_defaultChecked_Proxy(byval This as IHTMLInputElement ptr, byval p as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLInputElement_get_defaultChecked_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputElement_put_checked_Proxy(byval This as IHTMLInputElement ptr, byval v as VARIANT_BOOL) as HRESULT
declare sub IHTMLInputElement_put_checked_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputElement_get_checked_Proxy(byval This as IHTMLInputElement ptr, byval p as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLInputElement_get_checked_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputElement_put_border_Proxy(byval This as IHTMLInputElement ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLInputElement_put_border_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputElement_get_border_Proxy(byval This as IHTMLInputElement ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLInputElement_get_border_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputElement_put_vspace_Proxy(byval This as IHTMLInputElement ptr, byval v as long) as HRESULT
declare sub IHTMLInputElement_put_vspace_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputElement_get_vspace_Proxy(byval This as IHTMLInputElement ptr, byval p as long ptr) as HRESULT
declare sub IHTMLInputElement_get_vspace_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputElement_put_hspace_Proxy(byval This as IHTMLInputElement ptr, byval v as long) as HRESULT
declare sub IHTMLInputElement_put_hspace_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputElement_get_hspace_Proxy(byval This as IHTMLInputElement ptr, byval p as long ptr) as HRESULT
declare sub IHTMLInputElement_get_hspace_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputElement_put_alt_Proxy(byval This as IHTMLInputElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLInputElement_put_alt_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputElement_get_alt_Proxy(byval This as IHTMLInputElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLInputElement_get_alt_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputElement_put_src_Proxy(byval This as IHTMLInputElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLInputElement_put_src_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputElement_get_src_Proxy(byval This as IHTMLInputElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLInputElement_get_src_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputElement_put_lowsrc_Proxy(byval This as IHTMLInputElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLInputElement_put_lowsrc_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputElement_get_lowsrc_Proxy(byval This as IHTMLInputElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLInputElement_get_lowsrc_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputElement_put_vrml_Proxy(byval This as IHTMLInputElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLInputElement_put_vrml_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputElement_get_vrml_Proxy(byval This as IHTMLInputElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLInputElement_get_vrml_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputElement_put_dynsrc_Proxy(byval This as IHTMLInputElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLInputElement_put_dynsrc_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputElement_get_dynsrc_Proxy(byval This as IHTMLInputElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLInputElement_get_dynsrc_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputElement_get_readyState_Proxy(byval This as IHTMLInputElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLInputElement_get_readyState_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputElement_get_complete_Proxy(byval This as IHTMLInputElement ptr, byval p as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLInputElement_get_complete_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputElement_put_loop_Proxy(byval This as IHTMLInputElement ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLInputElement_put_loop_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputElement_get_loop_Proxy(byval This as IHTMLInputElement ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLInputElement_get_loop_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputElement_put_align_Proxy(byval This as IHTMLInputElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLInputElement_put_align_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputElement_get_align_Proxy(byval This as IHTMLInputElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLInputElement_get_align_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputElement_put_onload_Proxy(byval This as IHTMLInputElement ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLInputElement_put_onload_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputElement_get_onload_Proxy(byval This as IHTMLInputElement ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLInputElement_get_onload_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputElement_put_onerror_Proxy(byval This as IHTMLInputElement ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLInputElement_put_onerror_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputElement_get_onerror_Proxy(byval This as IHTMLInputElement ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLInputElement_get_onerror_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputElement_put_onabort_Proxy(byval This as IHTMLInputElement ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLInputElement_put_onabort_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputElement_get_onabort_Proxy(byval This as IHTMLInputElement ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLInputElement_get_onabort_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputElement_put_width_Proxy(byval This as IHTMLInputElement ptr, byval v as long) as HRESULT
declare sub IHTMLInputElement_put_width_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputElement_get_width_Proxy(byval This as IHTMLInputElement ptr, byval p as long ptr) as HRESULT
declare sub IHTMLInputElement_get_width_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputElement_put_height_Proxy(byval This as IHTMLInputElement ptr, byval v as long) as HRESULT
declare sub IHTMLInputElement_put_height_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputElement_get_height_Proxy(byval This as IHTMLInputElement ptr, byval p as long ptr) as HRESULT
declare sub IHTMLInputElement_get_height_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputElement_put_start_Proxy(byval This as IHTMLInputElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLInputElement_put_start_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputElement_get_start_Proxy(byval This as IHTMLInputElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLInputElement_get_start_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLInputElement2_INTERFACE_DEFINED__
extern IID_IHTMLInputElement2 as const IID
type IHTMLInputElement2 as IHTMLInputElement2_

type IHTMLInputElement2Vtbl
	QueryInterface as function(byval This as IHTMLInputElement2 ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLInputElement2 ptr) as ULONG
	Release as function(byval This as IHTMLInputElement2 ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLInputElement2 ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLInputElement2 ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLInputElement2 ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLInputElement2 ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	put_accept as function(byval This as IHTMLInputElement2 ptr, byval v as BSTR) as HRESULT
	get_accept as function(byval This as IHTMLInputElement2 ptr, byval p as BSTR ptr) as HRESULT
	put_useMap as function(byval This as IHTMLInputElement2 ptr, byval v as BSTR) as HRESULT
	get_useMap as function(byval This as IHTMLInputElement2 ptr, byval p as BSTR ptr) as HRESULT
end type

type IHTMLInputElement2_
	lpVtbl as IHTMLInputElement2Vtbl ptr
end type

#define IHTMLInputElement2_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLInputElement2_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLInputElement2_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLInputElement2_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLInputElement2_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLInputElement2_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLInputElement2_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLInputElement2_put_accept(This, v) (This)->lpVtbl->put_accept(This, v)
#define IHTMLInputElement2_get_accept(This, p) (This)->lpVtbl->get_accept(This, p)
#define IHTMLInputElement2_put_useMap(This, v) (This)->lpVtbl->put_useMap(This, v)
#define IHTMLInputElement2_get_useMap(This, p) (This)->lpVtbl->get_useMap(This, p)

declare function IHTMLInputElement2_put_accept_Proxy(byval This as IHTMLInputElement2 ptr, byval v as BSTR) as HRESULT
declare sub IHTMLInputElement2_put_accept_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputElement2_get_accept_Proxy(byval This as IHTMLInputElement2 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLInputElement2_get_accept_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputElement2_put_useMap_Proxy(byval This as IHTMLInputElement2 ptr, byval v as BSTR) as HRESULT
declare sub IHTMLInputElement2_put_useMap_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputElement2_get_useMap_Proxy(byval This as IHTMLInputElement2 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLInputElement2_get_useMap_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLInputButtonElement_INTERFACE_DEFINED__
extern IID_IHTMLInputButtonElement as const IID
type IHTMLInputButtonElement as IHTMLInputButtonElement_

type IHTMLInputButtonElementVtbl
	QueryInterface as function(byval This as IHTMLInputButtonElement ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLInputButtonElement ptr) as ULONG
	Release as function(byval This as IHTMLInputButtonElement ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLInputButtonElement ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLInputButtonElement ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLInputButtonElement ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLInputButtonElement ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	get_type as function(byval This as IHTMLInputButtonElement ptr, byval p as BSTR ptr) as HRESULT
	put_value as function(byval This as IHTMLInputButtonElement ptr, byval v as BSTR) as HRESULT
	get_value as function(byval This as IHTMLInputButtonElement ptr, byval p as BSTR ptr) as HRESULT
	put_name as function(byval This as IHTMLInputButtonElement ptr, byval v as BSTR) as HRESULT
	get_name as function(byval This as IHTMLInputButtonElement ptr, byval p as BSTR ptr) as HRESULT
	put_status as function(byval This as IHTMLInputButtonElement ptr, byval v as VARIANT) as HRESULT
	get_status as function(byval This as IHTMLInputButtonElement ptr, byval p as VARIANT ptr) as HRESULT
	put_disabled as function(byval This as IHTMLInputButtonElement ptr, byval v as VARIANT_BOOL) as HRESULT
	get_disabled as function(byval This as IHTMLInputButtonElement ptr, byval p as VARIANT_BOOL ptr) as HRESULT
	get_form as function(byval This as IHTMLInputButtonElement ptr, byval p as IHTMLFormElement ptr ptr) as HRESULT
	createTextRange as function(byval This as IHTMLInputButtonElement ptr, byval range as IHTMLTxtRange ptr ptr) as HRESULT
end type

type IHTMLInputButtonElement_
	lpVtbl as IHTMLInputButtonElementVtbl ptr
end type

#define IHTMLInputButtonElement_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLInputButtonElement_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLInputButtonElement_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLInputButtonElement_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLInputButtonElement_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLInputButtonElement_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLInputButtonElement_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLInputButtonElement_get_type(This, p) (This)->lpVtbl->get_type(This, p)
#define IHTMLInputButtonElement_put_value(This, v) (This)->lpVtbl->put_value(This, v)
#define IHTMLInputButtonElement_get_value(This, p) (This)->lpVtbl->get_value(This, p)
#define IHTMLInputButtonElement_put_name(This, v) (This)->lpVtbl->put_name(This, v)
#define IHTMLInputButtonElement_get_name(This, p) (This)->lpVtbl->get_name(This, p)
#define IHTMLInputButtonElement_put_status(This, v) (This)->lpVtbl->put_status(This, v)
#define IHTMLInputButtonElement_get_status(This, p) (This)->lpVtbl->get_status(This, p)
#define IHTMLInputButtonElement_put_disabled(This, v) (This)->lpVtbl->put_disabled(This, v)
#define IHTMLInputButtonElement_get_disabled(This, p) (This)->lpVtbl->get_disabled(This, p)
#define IHTMLInputButtonElement_get_form(This, p) (This)->lpVtbl->get_form(This, p)
#define IHTMLInputButtonElement_createTextRange(This, range) (This)->lpVtbl->createTextRange(This, range)

declare function IHTMLInputButtonElement_get_type_Proxy(byval This as IHTMLInputButtonElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLInputButtonElement_get_type_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputButtonElement_put_value_Proxy(byval This as IHTMLInputButtonElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLInputButtonElement_put_value_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputButtonElement_get_value_Proxy(byval This as IHTMLInputButtonElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLInputButtonElement_get_value_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputButtonElement_put_name_Proxy(byval This as IHTMLInputButtonElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLInputButtonElement_put_name_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputButtonElement_get_name_Proxy(byval This as IHTMLInputButtonElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLInputButtonElement_get_name_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputButtonElement_put_status_Proxy(byval This as IHTMLInputButtonElement ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLInputButtonElement_put_status_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputButtonElement_get_status_Proxy(byval This as IHTMLInputButtonElement ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLInputButtonElement_get_status_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputButtonElement_put_disabled_Proxy(byval This as IHTMLInputButtonElement ptr, byval v as VARIANT_BOOL) as HRESULT
declare sub IHTMLInputButtonElement_put_disabled_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputButtonElement_get_disabled_Proxy(byval This as IHTMLInputButtonElement ptr, byval p as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLInputButtonElement_get_disabled_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputButtonElement_get_form_Proxy(byval This as IHTMLInputButtonElement ptr, byval p as IHTMLFormElement ptr ptr) as HRESULT
declare sub IHTMLInputButtonElement_get_form_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputButtonElement_createTextRange_Proxy(byval This as IHTMLInputButtonElement ptr, byval range as IHTMLTxtRange ptr ptr) as HRESULT
declare sub IHTMLInputButtonElement_createTextRange_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLInputHiddenElement_INTERFACE_DEFINED__
extern IID_IHTMLInputHiddenElement as const IID
type IHTMLInputHiddenElement as IHTMLInputHiddenElement_

type IHTMLInputHiddenElementVtbl
	QueryInterface as function(byval This as IHTMLInputHiddenElement ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLInputHiddenElement ptr) as ULONG
	Release as function(byval This as IHTMLInputHiddenElement ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLInputHiddenElement ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLInputHiddenElement ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLInputHiddenElement ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLInputHiddenElement ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	get_type as function(byval This as IHTMLInputHiddenElement ptr, byval p as BSTR ptr) as HRESULT
	put_value as function(byval This as IHTMLInputHiddenElement ptr, byval v as BSTR) as HRESULT
	get_value as function(byval This as IHTMLInputHiddenElement ptr, byval p as BSTR ptr) as HRESULT
	put_name as function(byval This as IHTMLInputHiddenElement ptr, byval v as BSTR) as HRESULT
	get_name as function(byval This as IHTMLInputHiddenElement ptr, byval p as BSTR ptr) as HRESULT
	put_status as function(byval This as IHTMLInputHiddenElement ptr, byval v as VARIANT) as HRESULT
	get_status as function(byval This as IHTMLInputHiddenElement ptr, byval p as VARIANT ptr) as HRESULT
	put_disabled as function(byval This as IHTMLInputHiddenElement ptr, byval v as VARIANT_BOOL) as HRESULT
	get_disabled as function(byval This as IHTMLInputHiddenElement ptr, byval p as VARIANT_BOOL ptr) as HRESULT
	get_form as function(byval This as IHTMLInputHiddenElement ptr, byval p as IHTMLFormElement ptr ptr) as HRESULT
	createTextRange as function(byval This as IHTMLInputHiddenElement ptr, byval range as IHTMLTxtRange ptr ptr) as HRESULT
end type

type IHTMLInputHiddenElement_
	lpVtbl as IHTMLInputHiddenElementVtbl ptr
end type

#define IHTMLInputHiddenElement_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLInputHiddenElement_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLInputHiddenElement_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLInputHiddenElement_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLInputHiddenElement_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLInputHiddenElement_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLInputHiddenElement_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLInputHiddenElement_get_type(This, p) (This)->lpVtbl->get_type(This, p)
#define IHTMLInputHiddenElement_put_value(This, v) (This)->lpVtbl->put_value(This, v)
#define IHTMLInputHiddenElement_get_value(This, p) (This)->lpVtbl->get_value(This, p)
#define IHTMLInputHiddenElement_put_name(This, v) (This)->lpVtbl->put_name(This, v)
#define IHTMLInputHiddenElement_get_name(This, p) (This)->lpVtbl->get_name(This, p)
#define IHTMLInputHiddenElement_put_status(This, v) (This)->lpVtbl->put_status(This, v)
#define IHTMLInputHiddenElement_get_status(This, p) (This)->lpVtbl->get_status(This, p)
#define IHTMLInputHiddenElement_put_disabled(This, v) (This)->lpVtbl->put_disabled(This, v)
#define IHTMLInputHiddenElement_get_disabled(This, p) (This)->lpVtbl->get_disabled(This, p)
#define IHTMLInputHiddenElement_get_form(This, p) (This)->lpVtbl->get_form(This, p)
#define IHTMLInputHiddenElement_createTextRange(This, range) (This)->lpVtbl->createTextRange(This, range)

declare function IHTMLInputHiddenElement_get_type_Proxy(byval This as IHTMLInputHiddenElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLInputHiddenElement_get_type_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputHiddenElement_put_value_Proxy(byval This as IHTMLInputHiddenElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLInputHiddenElement_put_value_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputHiddenElement_get_value_Proxy(byval This as IHTMLInputHiddenElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLInputHiddenElement_get_value_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputHiddenElement_put_name_Proxy(byval This as IHTMLInputHiddenElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLInputHiddenElement_put_name_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputHiddenElement_get_name_Proxy(byval This as IHTMLInputHiddenElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLInputHiddenElement_get_name_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputHiddenElement_put_status_Proxy(byval This as IHTMLInputHiddenElement ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLInputHiddenElement_put_status_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputHiddenElement_get_status_Proxy(byval This as IHTMLInputHiddenElement ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLInputHiddenElement_get_status_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputHiddenElement_put_disabled_Proxy(byval This as IHTMLInputHiddenElement ptr, byval v as VARIANT_BOOL) as HRESULT
declare sub IHTMLInputHiddenElement_put_disabled_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputHiddenElement_get_disabled_Proxy(byval This as IHTMLInputHiddenElement ptr, byval p as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLInputHiddenElement_get_disabled_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputHiddenElement_get_form_Proxy(byval This as IHTMLInputHiddenElement ptr, byval p as IHTMLFormElement ptr ptr) as HRESULT
declare sub IHTMLInputHiddenElement_get_form_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputHiddenElement_createTextRange_Proxy(byval This as IHTMLInputHiddenElement ptr, byval range as IHTMLTxtRange ptr ptr) as HRESULT
declare sub IHTMLInputHiddenElement_createTextRange_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLInputTextElement_INTERFACE_DEFINED__
extern IID_IHTMLInputTextElement as const IID
type IHTMLInputTextElement as IHTMLInputTextElement_

type IHTMLInputTextElementVtbl
	QueryInterface as function(byval This as IHTMLInputTextElement ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLInputTextElement ptr) as ULONG
	Release as function(byval This as IHTMLInputTextElement ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLInputTextElement ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLInputTextElement ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLInputTextElement ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLInputTextElement ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	get_type as function(byval This as IHTMLInputTextElement ptr, byval p as BSTR ptr) as HRESULT
	put_value as function(byval This as IHTMLInputTextElement ptr, byval v as BSTR) as HRESULT
	get_value as function(byval This as IHTMLInputTextElement ptr, byval p as BSTR ptr) as HRESULT
	put_name as function(byval This as IHTMLInputTextElement ptr, byval v as BSTR) as HRESULT
	get_name as function(byval This as IHTMLInputTextElement ptr, byval p as BSTR ptr) as HRESULT
	put_status as function(byval This as IHTMLInputTextElement ptr, byval v as VARIANT) as HRESULT
	get_status as function(byval This as IHTMLInputTextElement ptr, byval p as VARIANT ptr) as HRESULT
	put_disabled as function(byval This as IHTMLInputTextElement ptr, byval v as VARIANT_BOOL) as HRESULT
	get_disabled as function(byval This as IHTMLInputTextElement ptr, byval p as VARIANT_BOOL ptr) as HRESULT
	get_form as function(byval This as IHTMLInputTextElement ptr, byval p as IHTMLFormElement ptr ptr) as HRESULT
	put_defaultValue as function(byval This as IHTMLInputTextElement ptr, byval v as BSTR) as HRESULT
	get_defaultValue as function(byval This as IHTMLInputTextElement ptr, byval p as BSTR ptr) as HRESULT
	put_size as function(byval This as IHTMLInputTextElement ptr, byval v as long) as HRESULT
	get_size as function(byval This as IHTMLInputTextElement ptr, byval p as long ptr) as HRESULT
	put_maxLength as function(byval This as IHTMLInputTextElement ptr, byval v as long) as HRESULT
	get_maxLength as function(byval This as IHTMLInputTextElement ptr, byval p as long ptr) as HRESULT
	select as function(byval This as IHTMLInputTextElement ptr) as HRESULT
	put_onchange as function(byval This as IHTMLInputTextElement ptr, byval v as VARIANT) as HRESULT
	get_onchange as function(byval This as IHTMLInputTextElement ptr, byval p as VARIANT ptr) as HRESULT
	put_onselect as function(byval This as IHTMLInputTextElement ptr, byval v as VARIANT) as HRESULT
	get_onselect as function(byval This as IHTMLInputTextElement ptr, byval p as VARIANT ptr) as HRESULT
	put_readOnly as function(byval This as IHTMLInputTextElement ptr, byval v as VARIANT_BOOL) as HRESULT
	get_readOnly as function(byval This as IHTMLInputTextElement ptr, byval p as VARIANT_BOOL ptr) as HRESULT
	createTextRange as function(byval This as IHTMLInputTextElement ptr, byval range as IHTMLTxtRange ptr ptr) as HRESULT
end type

type IHTMLInputTextElement_
	lpVtbl as IHTMLInputTextElementVtbl ptr
end type

#define IHTMLInputTextElement_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLInputTextElement_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLInputTextElement_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLInputTextElement_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLInputTextElement_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLInputTextElement_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLInputTextElement_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLInputTextElement_get_type(This, p) (This)->lpVtbl->get_type(This, p)
#define IHTMLInputTextElement_put_value(This, v) (This)->lpVtbl->put_value(This, v)
#define IHTMLInputTextElement_get_value(This, p) (This)->lpVtbl->get_value(This, p)
#define IHTMLInputTextElement_put_name(This, v) (This)->lpVtbl->put_name(This, v)
#define IHTMLInputTextElement_get_name(This, p) (This)->lpVtbl->get_name(This, p)
#define IHTMLInputTextElement_put_status(This, v) (This)->lpVtbl->put_status(This, v)
#define IHTMLInputTextElement_get_status(This, p) (This)->lpVtbl->get_status(This, p)
#define IHTMLInputTextElement_put_disabled(This, v) (This)->lpVtbl->put_disabled(This, v)
#define IHTMLInputTextElement_get_disabled(This, p) (This)->lpVtbl->get_disabled(This, p)
#define IHTMLInputTextElement_get_form(This, p) (This)->lpVtbl->get_form(This, p)
#define IHTMLInputTextElement_put_defaultValue(This, v) (This)->lpVtbl->put_defaultValue(This, v)
#define IHTMLInputTextElement_get_defaultValue(This, p) (This)->lpVtbl->get_defaultValue(This, p)
#define IHTMLInputTextElement_put_size(This, v) (This)->lpVtbl->put_size(This, v)
#define IHTMLInputTextElement_get_size(This, p) (This)->lpVtbl->get_size(This, p)
#define IHTMLInputTextElement_put_maxLength(This, v) (This)->lpVtbl->put_maxLength(This, v)
#define IHTMLInputTextElement_get_maxLength(This, p) (This)->lpVtbl->get_maxLength(This, p)
#define IHTMLInputTextElement_select(This) (This)->lpVtbl->select(This)
#define IHTMLInputTextElement_put_onchange(This, v) (This)->lpVtbl->put_onchange(This, v)
#define IHTMLInputTextElement_get_onchange(This, p) (This)->lpVtbl->get_onchange(This, p)
#define IHTMLInputTextElement_put_onselect(This, v) (This)->lpVtbl->put_onselect(This, v)
#define IHTMLInputTextElement_get_onselect(This, p) (This)->lpVtbl->get_onselect(This, p)
#define IHTMLInputTextElement_put_readOnly(This, v) (This)->lpVtbl->put_readOnly(This, v)
#define IHTMLInputTextElement_get_readOnly(This, p) (This)->lpVtbl->get_readOnly(This, p)
#define IHTMLInputTextElement_createTextRange(This, range) (This)->lpVtbl->createTextRange(This, range)

declare function IHTMLInputTextElement_get_type_Proxy(byval This as IHTMLInputTextElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLInputTextElement_get_type_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputTextElement_put_value_Proxy(byval This as IHTMLInputTextElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLInputTextElement_put_value_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputTextElement_get_value_Proxy(byval This as IHTMLInputTextElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLInputTextElement_get_value_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputTextElement_put_name_Proxy(byval This as IHTMLInputTextElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLInputTextElement_put_name_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputTextElement_get_name_Proxy(byval This as IHTMLInputTextElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLInputTextElement_get_name_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputTextElement_put_status_Proxy(byval This as IHTMLInputTextElement ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLInputTextElement_put_status_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputTextElement_get_status_Proxy(byval This as IHTMLInputTextElement ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLInputTextElement_get_status_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputTextElement_put_disabled_Proxy(byval This as IHTMLInputTextElement ptr, byval v as VARIANT_BOOL) as HRESULT
declare sub IHTMLInputTextElement_put_disabled_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputTextElement_get_disabled_Proxy(byval This as IHTMLInputTextElement ptr, byval p as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLInputTextElement_get_disabled_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputTextElement_get_form_Proxy(byval This as IHTMLInputTextElement ptr, byval p as IHTMLFormElement ptr ptr) as HRESULT
declare sub IHTMLInputTextElement_get_form_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputTextElement_put_defaultValue_Proxy(byval This as IHTMLInputTextElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLInputTextElement_put_defaultValue_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputTextElement_get_defaultValue_Proxy(byval This as IHTMLInputTextElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLInputTextElement_get_defaultValue_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputTextElement_put_size_Proxy(byval This as IHTMLInputTextElement ptr, byval v as long) as HRESULT
declare sub IHTMLInputTextElement_put_size_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputTextElement_get_size_Proxy(byval This as IHTMLInputTextElement ptr, byval p as long ptr) as HRESULT
declare sub IHTMLInputTextElement_get_size_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputTextElement_put_maxLength_Proxy(byval This as IHTMLInputTextElement ptr, byval v as long) as HRESULT
declare sub IHTMLInputTextElement_put_maxLength_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputTextElement_get_maxLength_Proxy(byval This as IHTMLInputTextElement ptr, byval p as long ptr) as HRESULT
declare sub IHTMLInputTextElement_get_maxLength_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputTextElement_select_Proxy(byval This as IHTMLInputTextElement ptr) as HRESULT
declare sub IHTMLInputTextElement_select_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputTextElement_put_onchange_Proxy(byval This as IHTMLInputTextElement ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLInputTextElement_put_onchange_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputTextElement_get_onchange_Proxy(byval This as IHTMLInputTextElement ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLInputTextElement_get_onchange_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputTextElement_put_onselect_Proxy(byval This as IHTMLInputTextElement ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLInputTextElement_put_onselect_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputTextElement_get_onselect_Proxy(byval This as IHTMLInputTextElement ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLInputTextElement_get_onselect_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputTextElement_put_readOnly_Proxy(byval This as IHTMLInputTextElement ptr, byval v as VARIANT_BOOL) as HRESULT
declare sub IHTMLInputTextElement_put_readOnly_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputTextElement_get_readOnly_Proxy(byval This as IHTMLInputTextElement ptr, byval p as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLInputTextElement_get_readOnly_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputTextElement_createTextRange_Proxy(byval This as IHTMLInputTextElement ptr, byval range as IHTMLTxtRange ptr ptr) as HRESULT
declare sub IHTMLInputTextElement_createTextRange_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLInputFileElement_INTERFACE_DEFINED__
extern IID_IHTMLInputFileElement as const IID
type IHTMLInputFileElement as IHTMLInputFileElement_

type IHTMLInputFileElementVtbl
	QueryInterface as function(byval This as IHTMLInputFileElement ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLInputFileElement ptr) as ULONG
	Release as function(byval This as IHTMLInputFileElement ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLInputFileElement ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLInputFileElement ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLInputFileElement ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLInputFileElement ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	get_type as function(byval This as IHTMLInputFileElement ptr, byval p as BSTR ptr) as HRESULT
	put_name as function(byval This as IHTMLInputFileElement ptr, byval v as BSTR) as HRESULT
	get_name as function(byval This as IHTMLInputFileElement ptr, byval p as BSTR ptr) as HRESULT
	put_status as function(byval This as IHTMLInputFileElement ptr, byval v as VARIANT) as HRESULT
	get_status as function(byval This as IHTMLInputFileElement ptr, byval p as VARIANT ptr) as HRESULT
	put_disabled as function(byval This as IHTMLInputFileElement ptr, byval v as VARIANT_BOOL) as HRESULT
	get_disabled as function(byval This as IHTMLInputFileElement ptr, byval p as VARIANT_BOOL ptr) as HRESULT
	get_form as function(byval This as IHTMLInputFileElement ptr, byval p as IHTMLFormElement ptr ptr) as HRESULT
	put_size as function(byval This as IHTMLInputFileElement ptr, byval v as long) as HRESULT
	get_size as function(byval This as IHTMLInputFileElement ptr, byval p as long ptr) as HRESULT
	put_maxLength as function(byval This as IHTMLInputFileElement ptr, byval v as long) as HRESULT
	get_maxLength as function(byval This as IHTMLInputFileElement ptr, byval p as long ptr) as HRESULT
	select as function(byval This as IHTMLInputFileElement ptr) as HRESULT
	put_onchange as function(byval This as IHTMLInputFileElement ptr, byval v as VARIANT) as HRESULT
	get_onchange as function(byval This as IHTMLInputFileElement ptr, byval p as VARIANT ptr) as HRESULT
	put_onselect as function(byval This as IHTMLInputFileElement ptr, byval v as VARIANT) as HRESULT
	get_onselect as function(byval This as IHTMLInputFileElement ptr, byval p as VARIANT ptr) as HRESULT
	put_value as function(byval This as IHTMLInputFileElement ptr, byval v as BSTR) as HRESULT
	get_value as function(byval This as IHTMLInputFileElement ptr, byval p as BSTR ptr) as HRESULT
end type

type IHTMLInputFileElement_
	lpVtbl as IHTMLInputFileElementVtbl ptr
end type

#define IHTMLInputFileElement_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLInputFileElement_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLInputFileElement_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLInputFileElement_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLInputFileElement_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLInputFileElement_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLInputFileElement_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLInputFileElement_get_type(This, p) (This)->lpVtbl->get_type(This, p)
#define IHTMLInputFileElement_put_name(This, v) (This)->lpVtbl->put_name(This, v)
#define IHTMLInputFileElement_get_name(This, p) (This)->lpVtbl->get_name(This, p)
#define IHTMLInputFileElement_put_status(This, v) (This)->lpVtbl->put_status(This, v)
#define IHTMLInputFileElement_get_status(This, p) (This)->lpVtbl->get_status(This, p)
#define IHTMLInputFileElement_put_disabled(This, v) (This)->lpVtbl->put_disabled(This, v)
#define IHTMLInputFileElement_get_disabled(This, p) (This)->lpVtbl->get_disabled(This, p)
#define IHTMLInputFileElement_get_form(This, p) (This)->lpVtbl->get_form(This, p)
#define IHTMLInputFileElement_put_size(This, v) (This)->lpVtbl->put_size(This, v)
#define IHTMLInputFileElement_get_size(This, p) (This)->lpVtbl->get_size(This, p)
#define IHTMLInputFileElement_put_maxLength(This, v) (This)->lpVtbl->put_maxLength(This, v)
#define IHTMLInputFileElement_get_maxLength(This, p) (This)->lpVtbl->get_maxLength(This, p)
#define IHTMLInputFileElement_select(This) (This)->lpVtbl->select(This)
#define IHTMLInputFileElement_put_onchange(This, v) (This)->lpVtbl->put_onchange(This, v)
#define IHTMLInputFileElement_get_onchange(This, p) (This)->lpVtbl->get_onchange(This, p)
#define IHTMLInputFileElement_put_onselect(This, v) (This)->lpVtbl->put_onselect(This, v)
#define IHTMLInputFileElement_get_onselect(This, p) (This)->lpVtbl->get_onselect(This, p)
#define IHTMLInputFileElement_put_value(This, v) (This)->lpVtbl->put_value(This, v)
#define IHTMLInputFileElement_get_value(This, p) (This)->lpVtbl->get_value(This, p)

declare function IHTMLInputFileElement_get_type_Proxy(byval This as IHTMLInputFileElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLInputFileElement_get_type_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputFileElement_put_name_Proxy(byval This as IHTMLInputFileElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLInputFileElement_put_name_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputFileElement_get_name_Proxy(byval This as IHTMLInputFileElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLInputFileElement_get_name_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputFileElement_put_status_Proxy(byval This as IHTMLInputFileElement ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLInputFileElement_put_status_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputFileElement_get_status_Proxy(byval This as IHTMLInputFileElement ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLInputFileElement_get_status_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputFileElement_put_disabled_Proxy(byval This as IHTMLInputFileElement ptr, byval v as VARIANT_BOOL) as HRESULT
declare sub IHTMLInputFileElement_put_disabled_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputFileElement_get_disabled_Proxy(byval This as IHTMLInputFileElement ptr, byval p as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLInputFileElement_get_disabled_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputFileElement_get_form_Proxy(byval This as IHTMLInputFileElement ptr, byval p as IHTMLFormElement ptr ptr) as HRESULT
declare sub IHTMLInputFileElement_get_form_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputFileElement_put_size_Proxy(byval This as IHTMLInputFileElement ptr, byval v as long) as HRESULT
declare sub IHTMLInputFileElement_put_size_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputFileElement_get_size_Proxy(byval This as IHTMLInputFileElement ptr, byval p as long ptr) as HRESULT
declare sub IHTMLInputFileElement_get_size_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputFileElement_put_maxLength_Proxy(byval This as IHTMLInputFileElement ptr, byval v as long) as HRESULT
declare sub IHTMLInputFileElement_put_maxLength_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputFileElement_get_maxLength_Proxy(byval This as IHTMLInputFileElement ptr, byval p as long ptr) as HRESULT
declare sub IHTMLInputFileElement_get_maxLength_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputFileElement_select_Proxy(byval This as IHTMLInputFileElement ptr) as HRESULT
declare sub IHTMLInputFileElement_select_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputFileElement_put_onchange_Proxy(byval This as IHTMLInputFileElement ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLInputFileElement_put_onchange_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputFileElement_get_onchange_Proxy(byval This as IHTMLInputFileElement ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLInputFileElement_get_onchange_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputFileElement_put_onselect_Proxy(byval This as IHTMLInputFileElement ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLInputFileElement_put_onselect_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputFileElement_get_onselect_Proxy(byval This as IHTMLInputFileElement ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLInputFileElement_get_onselect_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputFileElement_put_value_Proxy(byval This as IHTMLInputFileElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLInputFileElement_put_value_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputFileElement_get_value_Proxy(byval This as IHTMLInputFileElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLInputFileElement_get_value_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLOptionButtonElement_INTERFACE_DEFINED__
extern IID_IHTMLOptionButtonElement as const IID
type IHTMLOptionButtonElement as IHTMLOptionButtonElement_

type IHTMLOptionButtonElementVtbl
	QueryInterface as function(byval This as IHTMLOptionButtonElement ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLOptionButtonElement ptr) as ULONG
	Release as function(byval This as IHTMLOptionButtonElement ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLOptionButtonElement ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLOptionButtonElement ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLOptionButtonElement ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLOptionButtonElement ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	put_value as function(byval This as IHTMLOptionButtonElement ptr, byval v as BSTR) as HRESULT
	get_value as function(byval This as IHTMLOptionButtonElement ptr, byval p as BSTR ptr) as HRESULT
	get_type as function(byval This as IHTMLOptionButtonElement ptr, byval p as BSTR ptr) as HRESULT
	put_name as function(byval This as IHTMLOptionButtonElement ptr, byval v as BSTR) as HRESULT
	get_name as function(byval This as IHTMLOptionButtonElement ptr, byval p as BSTR ptr) as HRESULT
	put_checked as function(byval This as IHTMLOptionButtonElement ptr, byval v as VARIANT_BOOL) as HRESULT
	get_checked as function(byval This as IHTMLOptionButtonElement ptr, byval p as VARIANT_BOOL ptr) as HRESULT
	put_defaultChecked as function(byval This as IHTMLOptionButtonElement ptr, byval v as VARIANT_BOOL) as HRESULT
	get_defaultChecked as function(byval This as IHTMLOptionButtonElement ptr, byval p as VARIANT_BOOL ptr) as HRESULT
	put_onchange as function(byval This as IHTMLOptionButtonElement ptr, byval v as VARIANT) as HRESULT
	get_onchange as function(byval This as IHTMLOptionButtonElement ptr, byval p as VARIANT ptr) as HRESULT
	put_disabled as function(byval This as IHTMLOptionButtonElement ptr, byval v as VARIANT_BOOL) as HRESULT
	get_disabled as function(byval This as IHTMLOptionButtonElement ptr, byval p as VARIANT_BOOL ptr) as HRESULT
	put_status as function(byval This as IHTMLOptionButtonElement ptr, byval v as VARIANT_BOOL) as HRESULT
	get_status as function(byval This as IHTMLOptionButtonElement ptr, byval p as VARIANT_BOOL ptr) as HRESULT
	put_indeterminate as function(byval This as IHTMLOptionButtonElement ptr, byval v as VARIANT_BOOL) as HRESULT
	get_indeterminate as function(byval This as IHTMLOptionButtonElement ptr, byval p as VARIANT_BOOL ptr) as HRESULT
	get_form as function(byval This as IHTMLOptionButtonElement ptr, byval p as IHTMLFormElement ptr ptr) as HRESULT
end type

type IHTMLOptionButtonElement_
	lpVtbl as IHTMLOptionButtonElementVtbl ptr
end type

#define IHTMLOptionButtonElement_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLOptionButtonElement_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLOptionButtonElement_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLOptionButtonElement_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLOptionButtonElement_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLOptionButtonElement_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLOptionButtonElement_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLOptionButtonElement_put_value(This, v) (This)->lpVtbl->put_value(This, v)
#define IHTMLOptionButtonElement_get_value(This, p) (This)->lpVtbl->get_value(This, p)
#define IHTMLOptionButtonElement_get_type(This, p) (This)->lpVtbl->get_type(This, p)
#define IHTMLOptionButtonElement_put_name(This, v) (This)->lpVtbl->put_name(This, v)
#define IHTMLOptionButtonElement_get_name(This, p) (This)->lpVtbl->get_name(This, p)
#define IHTMLOptionButtonElement_put_checked(This, v) (This)->lpVtbl->put_checked(This, v)
#define IHTMLOptionButtonElement_get_checked(This, p) (This)->lpVtbl->get_checked(This, p)
#define IHTMLOptionButtonElement_put_defaultChecked(This, v) (This)->lpVtbl->put_defaultChecked(This, v)
#define IHTMLOptionButtonElement_get_defaultChecked(This, p) (This)->lpVtbl->get_defaultChecked(This, p)
#define IHTMLOptionButtonElement_put_onchange(This, v) (This)->lpVtbl->put_onchange(This, v)
#define IHTMLOptionButtonElement_get_onchange(This, p) (This)->lpVtbl->get_onchange(This, p)
#define IHTMLOptionButtonElement_put_disabled(This, v) (This)->lpVtbl->put_disabled(This, v)
#define IHTMLOptionButtonElement_get_disabled(This, p) (This)->lpVtbl->get_disabled(This, p)
#define IHTMLOptionButtonElement_put_status(This, v) (This)->lpVtbl->put_status(This, v)
#define IHTMLOptionButtonElement_get_status(This, p) (This)->lpVtbl->get_status(This, p)
#define IHTMLOptionButtonElement_put_indeterminate(This, v) (This)->lpVtbl->put_indeterminate(This, v)
#define IHTMLOptionButtonElement_get_indeterminate(This, p) (This)->lpVtbl->get_indeterminate(This, p)
#define IHTMLOptionButtonElement_get_form(This, p) (This)->lpVtbl->get_form(This, p)

declare function IHTMLOptionButtonElement_put_value_Proxy(byval This as IHTMLOptionButtonElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLOptionButtonElement_put_value_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLOptionButtonElement_get_value_Proxy(byval This as IHTMLOptionButtonElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLOptionButtonElement_get_value_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLOptionButtonElement_get_type_Proxy(byval This as IHTMLOptionButtonElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLOptionButtonElement_get_type_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLOptionButtonElement_put_name_Proxy(byval This as IHTMLOptionButtonElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLOptionButtonElement_put_name_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLOptionButtonElement_get_name_Proxy(byval This as IHTMLOptionButtonElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLOptionButtonElement_get_name_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLOptionButtonElement_put_checked_Proxy(byval This as IHTMLOptionButtonElement ptr, byval v as VARIANT_BOOL) as HRESULT
declare sub IHTMLOptionButtonElement_put_checked_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLOptionButtonElement_get_checked_Proxy(byval This as IHTMLOptionButtonElement ptr, byval p as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLOptionButtonElement_get_checked_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLOptionButtonElement_put_defaultChecked_Proxy(byval This as IHTMLOptionButtonElement ptr, byval v as VARIANT_BOOL) as HRESULT
declare sub IHTMLOptionButtonElement_put_defaultChecked_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLOptionButtonElement_get_defaultChecked_Proxy(byval This as IHTMLOptionButtonElement ptr, byval p as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLOptionButtonElement_get_defaultChecked_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLOptionButtonElement_put_onchange_Proxy(byval This as IHTMLOptionButtonElement ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLOptionButtonElement_put_onchange_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLOptionButtonElement_get_onchange_Proxy(byval This as IHTMLOptionButtonElement ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLOptionButtonElement_get_onchange_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLOptionButtonElement_put_disabled_Proxy(byval This as IHTMLOptionButtonElement ptr, byval v as VARIANT_BOOL) as HRESULT
declare sub IHTMLOptionButtonElement_put_disabled_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLOptionButtonElement_get_disabled_Proxy(byval This as IHTMLOptionButtonElement ptr, byval p as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLOptionButtonElement_get_disabled_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLOptionButtonElement_put_status_Proxy(byval This as IHTMLOptionButtonElement ptr, byval v as VARIANT_BOOL) as HRESULT
declare sub IHTMLOptionButtonElement_put_status_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLOptionButtonElement_get_status_Proxy(byval This as IHTMLOptionButtonElement ptr, byval p as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLOptionButtonElement_get_status_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLOptionButtonElement_put_indeterminate_Proxy(byval This as IHTMLOptionButtonElement ptr, byval v as VARIANT_BOOL) as HRESULT
declare sub IHTMLOptionButtonElement_put_indeterminate_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLOptionButtonElement_get_indeterminate_Proxy(byval This as IHTMLOptionButtonElement ptr, byval p as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLOptionButtonElement_get_indeterminate_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLOptionButtonElement_get_form_Proxy(byval This as IHTMLOptionButtonElement ptr, byval p as IHTMLFormElement ptr ptr) as HRESULT
declare sub IHTMLOptionButtonElement_get_form_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLInputImage_INTERFACE_DEFINED__
extern IID_IHTMLInputImage as const IID
type IHTMLInputImage as IHTMLInputImage_

type IHTMLInputImageVtbl
	QueryInterface as function(byval This as IHTMLInputImage ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLInputImage ptr) as ULONG
	Release as function(byval This as IHTMLInputImage ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLInputImage ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLInputImage ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLInputImage ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLInputImage ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	get_type as function(byval This as IHTMLInputImage ptr, byval p as BSTR ptr) as HRESULT
	put_disabled as function(byval This as IHTMLInputImage ptr, byval v as VARIANT_BOOL) as HRESULT
	get_disabled as function(byval This as IHTMLInputImage ptr, byval p as VARIANT_BOOL ptr) as HRESULT
	put_border as function(byval This as IHTMLInputImage ptr, byval v as VARIANT) as HRESULT
	get_border as function(byval This as IHTMLInputImage ptr, byval p as VARIANT ptr) as HRESULT
	put_vspace as function(byval This as IHTMLInputImage ptr, byval v as long) as HRESULT
	get_vspace as function(byval This as IHTMLInputImage ptr, byval p as long ptr) as HRESULT
	put_hspace as function(byval This as IHTMLInputImage ptr, byval v as long) as HRESULT
	get_hspace as function(byval This as IHTMLInputImage ptr, byval p as long ptr) as HRESULT
	put_alt as function(byval This as IHTMLInputImage ptr, byval v as BSTR) as HRESULT
	get_alt as function(byval This as IHTMLInputImage ptr, byval p as BSTR ptr) as HRESULT
	put_src as function(byval This as IHTMLInputImage ptr, byval v as BSTR) as HRESULT
	get_src as function(byval This as IHTMLInputImage ptr, byval p as BSTR ptr) as HRESULT
	put_lowsrc as function(byval This as IHTMLInputImage ptr, byval v as BSTR) as HRESULT
	get_lowsrc as function(byval This as IHTMLInputImage ptr, byval p as BSTR ptr) as HRESULT
	put_vrml as function(byval This as IHTMLInputImage ptr, byval v as BSTR) as HRESULT
	get_vrml as function(byval This as IHTMLInputImage ptr, byval p as BSTR ptr) as HRESULT
	put_dynsrc as function(byval This as IHTMLInputImage ptr, byval v as BSTR) as HRESULT
	get_dynsrc as function(byval This as IHTMLInputImage ptr, byval p as BSTR ptr) as HRESULT
	get_readyState as function(byval This as IHTMLInputImage ptr, byval p as BSTR ptr) as HRESULT
	get_complete as function(byval This as IHTMLInputImage ptr, byval p as VARIANT_BOOL ptr) as HRESULT
	put_loop as function(byval This as IHTMLInputImage ptr, byval v as VARIANT) as HRESULT
	get_loop as function(byval This as IHTMLInputImage ptr, byval p as VARIANT ptr) as HRESULT
	put_align as function(byval This as IHTMLInputImage ptr, byval v as BSTR) as HRESULT
	get_align as function(byval This as IHTMLInputImage ptr, byval p as BSTR ptr) as HRESULT
	put_onload as function(byval This as IHTMLInputImage ptr, byval v as VARIANT) as HRESULT
	get_onload as function(byval This as IHTMLInputImage ptr, byval p as VARIANT ptr) as HRESULT
	put_onerror as function(byval This as IHTMLInputImage ptr, byval v as VARIANT) as HRESULT
	get_onerror as function(byval This as IHTMLInputImage ptr, byval p as VARIANT ptr) as HRESULT
	put_onabort as function(byval This as IHTMLInputImage ptr, byval v as VARIANT) as HRESULT
	get_onabort as function(byval This as IHTMLInputImage ptr, byval p as VARIANT ptr) as HRESULT
	put_name as function(byval This as IHTMLInputImage ptr, byval v as BSTR) as HRESULT
	get_name as function(byval This as IHTMLInputImage ptr, byval p as BSTR ptr) as HRESULT
	put_width as function(byval This as IHTMLInputImage ptr, byval v as long) as HRESULT
	get_width as function(byval This as IHTMLInputImage ptr, byval p as long ptr) as HRESULT
	put_height as function(byval This as IHTMLInputImage ptr, byval v as long) as HRESULT
	get_height as function(byval This as IHTMLInputImage ptr, byval p as long ptr) as HRESULT
	put_start as function(byval This as IHTMLInputImage ptr, byval v as BSTR) as HRESULT
	get_start as function(byval This as IHTMLInputImage ptr, byval p as BSTR ptr) as HRESULT
end type

type IHTMLInputImage_
	lpVtbl as IHTMLInputImageVtbl ptr
end type

#define IHTMLInputImage_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLInputImage_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLInputImage_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLInputImage_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLInputImage_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLInputImage_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLInputImage_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLInputImage_get_type(This, p) (This)->lpVtbl->get_type(This, p)
#define IHTMLInputImage_put_disabled(This, v) (This)->lpVtbl->put_disabled(This, v)
#define IHTMLInputImage_get_disabled(This, p) (This)->lpVtbl->get_disabled(This, p)
#define IHTMLInputImage_put_border(This, v) (This)->lpVtbl->put_border(This, v)
#define IHTMLInputImage_get_border(This, p) (This)->lpVtbl->get_border(This, p)
#define IHTMLInputImage_put_vspace(This, v) (This)->lpVtbl->put_vspace(This, v)
#define IHTMLInputImage_get_vspace(This, p) (This)->lpVtbl->get_vspace(This, p)
#define IHTMLInputImage_put_hspace(This, v) (This)->lpVtbl->put_hspace(This, v)
#define IHTMLInputImage_get_hspace(This, p) (This)->lpVtbl->get_hspace(This, p)
#define IHTMLInputImage_put_alt(This, v) (This)->lpVtbl->put_alt(This, v)
#define IHTMLInputImage_get_alt(This, p) (This)->lpVtbl->get_alt(This, p)
#define IHTMLInputImage_put_src(This, v) (This)->lpVtbl->put_src(This, v)
#define IHTMLInputImage_get_src(This, p) (This)->lpVtbl->get_src(This, p)
#define IHTMLInputImage_put_lowsrc(This, v) (This)->lpVtbl->put_lowsrc(This, v)
#define IHTMLInputImage_get_lowsrc(This, p) (This)->lpVtbl->get_lowsrc(This, p)
#define IHTMLInputImage_put_vrml(This, v) (This)->lpVtbl->put_vrml(This, v)
#define IHTMLInputImage_get_vrml(This, p) (This)->lpVtbl->get_vrml(This, p)
#define IHTMLInputImage_put_dynsrc(This, v) (This)->lpVtbl->put_dynsrc(This, v)
#define IHTMLInputImage_get_dynsrc(This, p) (This)->lpVtbl->get_dynsrc(This, p)
#define IHTMLInputImage_get_readyState(This, p) (This)->lpVtbl->get_readyState(This, p)
#define IHTMLInputImage_get_complete(This, p) (This)->lpVtbl->get_complete(This, p)
#define IHTMLInputImage_put_loop(This, v) (This)->lpVtbl->put_loop(This, v)
#define IHTMLInputImage_get_loop(This, p) (This)->lpVtbl->get_loop(This, p)
#define IHTMLInputImage_put_align(This, v) (This)->lpVtbl->put_align(This, v)
#define IHTMLInputImage_get_align(This, p) (This)->lpVtbl->get_align(This, p)
#define IHTMLInputImage_put_onload(This, v) (This)->lpVtbl->put_onload(This, v)
#define IHTMLInputImage_get_onload(This, p) (This)->lpVtbl->get_onload(This, p)
#define IHTMLInputImage_put_onerror(This, v) (This)->lpVtbl->put_onerror(This, v)
#define IHTMLInputImage_get_onerror(This, p) (This)->lpVtbl->get_onerror(This, p)
#define IHTMLInputImage_put_onabort(This, v) (This)->lpVtbl->put_onabort(This, v)
#define IHTMLInputImage_get_onabort(This, p) (This)->lpVtbl->get_onabort(This, p)
#define IHTMLInputImage_put_name(This, v) (This)->lpVtbl->put_name(This, v)
#define IHTMLInputImage_get_name(This, p) (This)->lpVtbl->get_name(This, p)
#define IHTMLInputImage_put_width(This, v) (This)->lpVtbl->put_width(This, v)
#define IHTMLInputImage_get_width(This, p) (This)->lpVtbl->get_width(This, p)
#define IHTMLInputImage_put_height(This, v) (This)->lpVtbl->put_height(This, v)
#define IHTMLInputImage_get_height(This, p) (This)->lpVtbl->get_height(This, p)
#define IHTMLInputImage_put_start(This, v) (This)->lpVtbl->put_start(This, v)
#define IHTMLInputImage_get_start(This, p) (This)->lpVtbl->get_start(This, p)

declare function IHTMLInputImage_get_type_Proxy(byval This as IHTMLInputImage ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLInputImage_get_type_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputImage_put_disabled_Proxy(byval This as IHTMLInputImage ptr, byval v as VARIANT_BOOL) as HRESULT
declare sub IHTMLInputImage_put_disabled_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputImage_get_disabled_Proxy(byval This as IHTMLInputImage ptr, byval p as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLInputImage_get_disabled_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputImage_put_border_Proxy(byval This as IHTMLInputImage ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLInputImage_put_border_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputImage_get_border_Proxy(byval This as IHTMLInputImage ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLInputImage_get_border_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputImage_put_vspace_Proxy(byval This as IHTMLInputImage ptr, byval v as long) as HRESULT
declare sub IHTMLInputImage_put_vspace_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputImage_get_vspace_Proxy(byval This as IHTMLInputImage ptr, byval p as long ptr) as HRESULT
declare sub IHTMLInputImage_get_vspace_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputImage_put_hspace_Proxy(byval This as IHTMLInputImage ptr, byval v as long) as HRESULT
declare sub IHTMLInputImage_put_hspace_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputImage_get_hspace_Proxy(byval This as IHTMLInputImage ptr, byval p as long ptr) as HRESULT
declare sub IHTMLInputImage_get_hspace_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputImage_put_alt_Proxy(byval This as IHTMLInputImage ptr, byval v as BSTR) as HRESULT
declare sub IHTMLInputImage_put_alt_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputImage_get_alt_Proxy(byval This as IHTMLInputImage ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLInputImage_get_alt_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputImage_put_src_Proxy(byval This as IHTMLInputImage ptr, byval v as BSTR) as HRESULT
declare sub IHTMLInputImage_put_src_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputImage_get_src_Proxy(byval This as IHTMLInputImage ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLInputImage_get_src_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputImage_put_lowsrc_Proxy(byval This as IHTMLInputImage ptr, byval v as BSTR) as HRESULT
declare sub IHTMLInputImage_put_lowsrc_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputImage_get_lowsrc_Proxy(byval This as IHTMLInputImage ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLInputImage_get_lowsrc_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputImage_put_vrml_Proxy(byval This as IHTMLInputImage ptr, byval v as BSTR) as HRESULT
declare sub IHTMLInputImage_put_vrml_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputImage_get_vrml_Proxy(byval This as IHTMLInputImage ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLInputImage_get_vrml_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputImage_put_dynsrc_Proxy(byval This as IHTMLInputImage ptr, byval v as BSTR) as HRESULT
declare sub IHTMLInputImage_put_dynsrc_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputImage_get_dynsrc_Proxy(byval This as IHTMLInputImage ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLInputImage_get_dynsrc_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputImage_get_readyState_Proxy(byval This as IHTMLInputImage ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLInputImage_get_readyState_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputImage_get_complete_Proxy(byval This as IHTMLInputImage ptr, byval p as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLInputImage_get_complete_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputImage_put_loop_Proxy(byval This as IHTMLInputImage ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLInputImage_put_loop_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputImage_get_loop_Proxy(byval This as IHTMLInputImage ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLInputImage_get_loop_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputImage_put_align_Proxy(byval This as IHTMLInputImage ptr, byval v as BSTR) as HRESULT
declare sub IHTMLInputImage_put_align_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputImage_get_align_Proxy(byval This as IHTMLInputImage ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLInputImage_get_align_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputImage_put_onload_Proxy(byval This as IHTMLInputImage ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLInputImage_put_onload_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputImage_get_onload_Proxy(byval This as IHTMLInputImage ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLInputImage_get_onload_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputImage_put_onerror_Proxy(byval This as IHTMLInputImage ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLInputImage_put_onerror_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputImage_get_onerror_Proxy(byval This as IHTMLInputImage ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLInputImage_get_onerror_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputImage_put_onabort_Proxy(byval This as IHTMLInputImage ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLInputImage_put_onabort_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputImage_get_onabort_Proxy(byval This as IHTMLInputImage ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLInputImage_get_onabort_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputImage_put_name_Proxy(byval This as IHTMLInputImage ptr, byval v as BSTR) as HRESULT
declare sub IHTMLInputImage_put_name_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputImage_get_name_Proxy(byval This as IHTMLInputImage ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLInputImage_get_name_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputImage_put_width_Proxy(byval This as IHTMLInputImage ptr, byval v as long) as HRESULT
declare sub IHTMLInputImage_put_width_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputImage_get_width_Proxy(byval This as IHTMLInputImage ptr, byval p as long ptr) as HRESULT
declare sub IHTMLInputImage_get_width_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputImage_put_height_Proxy(byval This as IHTMLInputImage ptr, byval v as long) as HRESULT
declare sub IHTMLInputImage_put_height_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputImage_get_height_Proxy(byval This as IHTMLInputImage ptr, byval p as long ptr) as HRESULT
declare sub IHTMLInputImage_get_height_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputImage_put_start_Proxy(byval This as IHTMLInputImage ptr, byval v as BSTR) as HRESULT
declare sub IHTMLInputImage_put_start_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLInputImage_get_start_Proxy(byval This as IHTMLInputImage ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLInputImage_get_start_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __DispHTMLInputElement_DISPINTERFACE_DEFINED__
extern DIID_DispHTMLInputElement as const IID
type DispHTMLInputElement as DispHTMLInputElement_

type DispHTMLInputElementVtbl
	QueryInterface as function(byval This as DispHTMLInputElement ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as DispHTMLInputElement ptr) as ULONG
	Release as function(byval This as DispHTMLInputElement ptr) as ULONG
	GetTypeInfoCount as function(byval This as DispHTMLInputElement ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as DispHTMLInputElement ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as DispHTMLInputElement ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as DispHTMLInputElement ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type DispHTMLInputElement_
	lpVtbl as DispHTMLInputElementVtbl ptr
end type

#define DispHTMLInputElement_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define DispHTMLInputElement_AddRef(This) (This)->lpVtbl->AddRef(This)
#define DispHTMLInputElement_Release(This) (This)->lpVtbl->Release(This)
#define DispHTMLInputElement_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define DispHTMLInputElement_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define DispHTMLInputElement_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define DispHTMLInputElement_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
extern CLSID_HTMLInputElement as const CLSID
#define __IHTMLTextAreaElement_INTERFACE_DEFINED__
extern IID_IHTMLTextAreaElement as const IID
type IHTMLTextAreaElement as IHTMLTextAreaElement_

type IHTMLTextAreaElementVtbl
	QueryInterface as function(byval This as IHTMLTextAreaElement ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLTextAreaElement ptr) as ULONG
	Release as function(byval This as IHTMLTextAreaElement ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLTextAreaElement ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLTextAreaElement ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLTextAreaElement ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLTextAreaElement ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	get_type as function(byval This as IHTMLTextAreaElement ptr, byval p as BSTR ptr) as HRESULT
	put_value as function(byval This as IHTMLTextAreaElement ptr, byval v as BSTR) as HRESULT
	get_value as function(byval This as IHTMLTextAreaElement ptr, byval p as BSTR ptr) as HRESULT
	put_name as function(byval This as IHTMLTextAreaElement ptr, byval v as BSTR) as HRESULT
	get_name as function(byval This as IHTMLTextAreaElement ptr, byval p as BSTR ptr) as HRESULT
	put_status as function(byval This as IHTMLTextAreaElement ptr, byval v as VARIANT) as HRESULT
	get_status as function(byval This as IHTMLTextAreaElement ptr, byval p as VARIANT ptr) as HRESULT
	put_disabled as function(byval This as IHTMLTextAreaElement ptr, byval v as VARIANT_BOOL) as HRESULT
	get_disabled as function(byval This as IHTMLTextAreaElement ptr, byval p as VARIANT_BOOL ptr) as HRESULT
	get_form as function(byval This as IHTMLTextAreaElement ptr, byval p as IHTMLFormElement ptr ptr) as HRESULT
	put_defaultValue as function(byval This as IHTMLTextAreaElement ptr, byval v as BSTR) as HRESULT
	get_defaultValue as function(byval This as IHTMLTextAreaElement ptr, byval p as BSTR ptr) as HRESULT
	select as function(byval This as IHTMLTextAreaElement ptr) as HRESULT
	put_onchange as function(byval This as IHTMLTextAreaElement ptr, byval v as VARIANT) as HRESULT
	get_onchange as function(byval This as IHTMLTextAreaElement ptr, byval p as VARIANT ptr) as HRESULT
	put_onselect as function(byval This as IHTMLTextAreaElement ptr, byval v as VARIANT) as HRESULT
	get_onselect as function(byval This as IHTMLTextAreaElement ptr, byval p as VARIANT ptr) as HRESULT
	put_readOnly as function(byval This as IHTMLTextAreaElement ptr, byval v as VARIANT_BOOL) as HRESULT
	get_readOnly as function(byval This as IHTMLTextAreaElement ptr, byval p as VARIANT_BOOL ptr) as HRESULT
	put_rows as function(byval This as IHTMLTextAreaElement ptr, byval v as long) as HRESULT
	get_rows as function(byval This as IHTMLTextAreaElement ptr, byval p as long ptr) as HRESULT
	put_cols as function(byval This as IHTMLTextAreaElement ptr, byval v as long) as HRESULT
	get_cols as function(byval This as IHTMLTextAreaElement ptr, byval p as long ptr) as HRESULT
	put_wrap as function(byval This as IHTMLTextAreaElement ptr, byval v as BSTR) as HRESULT
	get_wrap as function(byval This as IHTMLTextAreaElement ptr, byval p as BSTR ptr) as HRESULT
	createTextRange as function(byval This as IHTMLTextAreaElement ptr, byval range as IHTMLTxtRange ptr ptr) as HRESULT
end type

type IHTMLTextAreaElement_
	lpVtbl as IHTMLTextAreaElementVtbl ptr
end type

#define IHTMLTextAreaElement_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLTextAreaElement_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLTextAreaElement_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLTextAreaElement_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLTextAreaElement_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLTextAreaElement_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLTextAreaElement_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLTextAreaElement_get_type(This, p) (This)->lpVtbl->get_type(This, p)
#define IHTMLTextAreaElement_put_value(This, v) (This)->lpVtbl->put_value(This, v)
#define IHTMLTextAreaElement_get_value(This, p) (This)->lpVtbl->get_value(This, p)
#define IHTMLTextAreaElement_put_name(This, v) (This)->lpVtbl->put_name(This, v)
#define IHTMLTextAreaElement_get_name(This, p) (This)->lpVtbl->get_name(This, p)
#define IHTMLTextAreaElement_put_status(This, v) (This)->lpVtbl->put_status(This, v)
#define IHTMLTextAreaElement_get_status(This, p) (This)->lpVtbl->get_status(This, p)
#define IHTMLTextAreaElement_put_disabled(This, v) (This)->lpVtbl->put_disabled(This, v)
#define IHTMLTextAreaElement_get_disabled(This, p) (This)->lpVtbl->get_disabled(This, p)
#define IHTMLTextAreaElement_get_form(This, p) (This)->lpVtbl->get_form(This, p)
#define IHTMLTextAreaElement_put_defaultValue(This, v) (This)->lpVtbl->put_defaultValue(This, v)
#define IHTMLTextAreaElement_get_defaultValue(This, p) (This)->lpVtbl->get_defaultValue(This, p)
#define IHTMLTextAreaElement_select(This) (This)->lpVtbl->select(This)
#define IHTMLTextAreaElement_put_onchange(This, v) (This)->lpVtbl->put_onchange(This, v)
#define IHTMLTextAreaElement_get_onchange(This, p) (This)->lpVtbl->get_onchange(This, p)
#define IHTMLTextAreaElement_put_onselect(This, v) (This)->lpVtbl->put_onselect(This, v)
#define IHTMLTextAreaElement_get_onselect(This, p) (This)->lpVtbl->get_onselect(This, p)
#define IHTMLTextAreaElement_put_readOnly(This, v) (This)->lpVtbl->put_readOnly(This, v)
#define IHTMLTextAreaElement_get_readOnly(This, p) (This)->lpVtbl->get_readOnly(This, p)
#define IHTMLTextAreaElement_put_rows(This, v) (This)->lpVtbl->put_rows(This, v)
#define IHTMLTextAreaElement_get_rows(This, p) (This)->lpVtbl->get_rows(This, p)
#define IHTMLTextAreaElement_put_cols(This, v) (This)->lpVtbl->put_cols(This, v)
#define IHTMLTextAreaElement_get_cols(This, p) (This)->lpVtbl->get_cols(This, p)
#define IHTMLTextAreaElement_put_wrap(This, v) (This)->lpVtbl->put_wrap(This, v)
#define IHTMLTextAreaElement_get_wrap(This, p) (This)->lpVtbl->get_wrap(This, p)
#define IHTMLTextAreaElement_createTextRange(This, range) (This)->lpVtbl->createTextRange(This, range)

declare function IHTMLTextAreaElement_get_type_Proxy(byval This as IHTMLTextAreaElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLTextAreaElement_get_type_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTextAreaElement_put_value_Proxy(byval This as IHTMLTextAreaElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLTextAreaElement_put_value_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTextAreaElement_get_value_Proxy(byval This as IHTMLTextAreaElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLTextAreaElement_get_value_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTextAreaElement_put_name_Proxy(byval This as IHTMLTextAreaElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLTextAreaElement_put_name_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTextAreaElement_get_name_Proxy(byval This as IHTMLTextAreaElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLTextAreaElement_get_name_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTextAreaElement_put_status_Proxy(byval This as IHTMLTextAreaElement ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLTextAreaElement_put_status_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTextAreaElement_get_status_Proxy(byval This as IHTMLTextAreaElement ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLTextAreaElement_get_status_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTextAreaElement_put_disabled_Proxy(byval This as IHTMLTextAreaElement ptr, byval v as VARIANT_BOOL) as HRESULT
declare sub IHTMLTextAreaElement_put_disabled_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTextAreaElement_get_disabled_Proxy(byval This as IHTMLTextAreaElement ptr, byval p as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLTextAreaElement_get_disabled_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTextAreaElement_get_form_Proxy(byval This as IHTMLTextAreaElement ptr, byval p as IHTMLFormElement ptr ptr) as HRESULT
declare sub IHTMLTextAreaElement_get_form_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTextAreaElement_put_defaultValue_Proxy(byval This as IHTMLTextAreaElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLTextAreaElement_put_defaultValue_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTextAreaElement_get_defaultValue_Proxy(byval This as IHTMLTextAreaElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLTextAreaElement_get_defaultValue_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTextAreaElement_select_Proxy(byval This as IHTMLTextAreaElement ptr) as HRESULT
declare sub IHTMLTextAreaElement_select_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTextAreaElement_put_onchange_Proxy(byval This as IHTMLTextAreaElement ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLTextAreaElement_put_onchange_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTextAreaElement_get_onchange_Proxy(byval This as IHTMLTextAreaElement ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLTextAreaElement_get_onchange_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTextAreaElement_put_onselect_Proxy(byval This as IHTMLTextAreaElement ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLTextAreaElement_put_onselect_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTextAreaElement_get_onselect_Proxy(byval This as IHTMLTextAreaElement ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLTextAreaElement_get_onselect_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTextAreaElement_put_readOnly_Proxy(byval This as IHTMLTextAreaElement ptr, byval v as VARIANT_BOOL) as HRESULT
declare sub IHTMLTextAreaElement_put_readOnly_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTextAreaElement_get_readOnly_Proxy(byval This as IHTMLTextAreaElement ptr, byval p as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLTextAreaElement_get_readOnly_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTextAreaElement_put_rows_Proxy(byval This as IHTMLTextAreaElement ptr, byval v as long) as HRESULT
declare sub IHTMLTextAreaElement_put_rows_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTextAreaElement_get_rows_Proxy(byval This as IHTMLTextAreaElement ptr, byval p as long ptr) as HRESULT
declare sub IHTMLTextAreaElement_get_rows_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTextAreaElement_put_cols_Proxy(byval This as IHTMLTextAreaElement ptr, byval v as long) as HRESULT
declare sub IHTMLTextAreaElement_put_cols_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTextAreaElement_get_cols_Proxy(byval This as IHTMLTextAreaElement ptr, byval p as long ptr) as HRESULT
declare sub IHTMLTextAreaElement_get_cols_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTextAreaElement_put_wrap_Proxy(byval This as IHTMLTextAreaElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLTextAreaElement_put_wrap_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTextAreaElement_get_wrap_Proxy(byval This as IHTMLTextAreaElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLTextAreaElement_get_wrap_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTextAreaElement_createTextRange_Proxy(byval This as IHTMLTextAreaElement ptr, byval range as IHTMLTxtRange ptr ptr) as HRESULT
declare sub IHTMLTextAreaElement_createTextRange_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __DispHTMLTextAreaElement_DISPINTERFACE_DEFINED__
extern DIID_DispHTMLTextAreaElement as const IID
type DispHTMLTextAreaElement as DispHTMLTextAreaElement_

type DispHTMLTextAreaElementVtbl
	QueryInterface as function(byval This as DispHTMLTextAreaElement ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as DispHTMLTextAreaElement ptr) as ULONG
	Release as function(byval This as DispHTMLTextAreaElement ptr) as ULONG
	GetTypeInfoCount as function(byval This as DispHTMLTextAreaElement ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as DispHTMLTextAreaElement ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as DispHTMLTextAreaElement ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as DispHTMLTextAreaElement ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type DispHTMLTextAreaElement_
	lpVtbl as DispHTMLTextAreaElementVtbl ptr
end type

#define DispHTMLTextAreaElement_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define DispHTMLTextAreaElement_AddRef(This) (This)->lpVtbl->AddRef(This)
#define DispHTMLTextAreaElement_Release(This) (This)->lpVtbl->Release(This)
#define DispHTMLTextAreaElement_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define DispHTMLTextAreaElement_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define DispHTMLTextAreaElement_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define DispHTMLTextAreaElement_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
extern CLSID_HTMLTextAreaElement as const CLSID
#define __DispHTMLRichtextElement_DISPINTERFACE_DEFINED__
extern DIID_DispHTMLRichtextElement as const IID
type DispHTMLRichtextElement as DispHTMLRichtextElement_

type DispHTMLRichtextElementVtbl
	QueryInterface as function(byval This as DispHTMLRichtextElement ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as DispHTMLRichtextElement ptr) as ULONG
	Release as function(byval This as DispHTMLRichtextElement ptr) as ULONG
	GetTypeInfoCount as function(byval This as DispHTMLRichtextElement ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as DispHTMLRichtextElement ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as DispHTMLRichtextElement ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as DispHTMLRichtextElement ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type DispHTMLRichtextElement_
	lpVtbl as DispHTMLRichtextElementVtbl ptr
end type

#define DispHTMLRichtextElement_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define DispHTMLRichtextElement_AddRef(This) (This)->lpVtbl->AddRef(This)
#define DispHTMLRichtextElement_Release(This) (This)->lpVtbl->Release(This)
#define DispHTMLRichtextElement_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define DispHTMLRichtextElement_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define DispHTMLRichtextElement_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define DispHTMLRichtextElement_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
extern CLSID_HTMLRichtextElement as const CLSID
#define __IHTMLButtonElement_INTERFACE_DEFINED__
extern IID_IHTMLButtonElement as const IID
type IHTMLButtonElement as IHTMLButtonElement_

type IHTMLButtonElementVtbl
	QueryInterface as function(byval This as IHTMLButtonElement ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLButtonElement ptr) as ULONG
	Release as function(byval This as IHTMLButtonElement ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLButtonElement ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLButtonElement ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLButtonElement ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLButtonElement ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	get_type as function(byval This as IHTMLButtonElement ptr, byval p as BSTR ptr) as HRESULT
	put_value as function(byval This as IHTMLButtonElement ptr, byval v as BSTR) as HRESULT
	get_value as function(byval This as IHTMLButtonElement ptr, byval p as BSTR ptr) as HRESULT
	put_name as function(byval This as IHTMLButtonElement ptr, byval v as BSTR) as HRESULT
	get_name as function(byval This as IHTMLButtonElement ptr, byval p as BSTR ptr) as HRESULT
	put_status as function(byval This as IHTMLButtonElement ptr, byval v as VARIANT) as HRESULT
	get_status as function(byval This as IHTMLButtonElement ptr, byval p as VARIANT ptr) as HRESULT
	put_disabled as function(byval This as IHTMLButtonElement ptr, byval v as VARIANT_BOOL) as HRESULT
	get_disabled as function(byval This as IHTMLButtonElement ptr, byval p as VARIANT_BOOL ptr) as HRESULT
	get_form as function(byval This as IHTMLButtonElement ptr, byval p as IHTMLFormElement ptr ptr) as HRESULT
	createTextRange as function(byval This as IHTMLButtonElement ptr, byval range as IHTMLTxtRange ptr ptr) as HRESULT
end type

type IHTMLButtonElement_
	lpVtbl as IHTMLButtonElementVtbl ptr
end type

#define IHTMLButtonElement_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLButtonElement_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLButtonElement_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLButtonElement_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLButtonElement_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLButtonElement_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLButtonElement_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLButtonElement_get_type(This, p) (This)->lpVtbl->get_type(This, p)
#define IHTMLButtonElement_put_value(This, v) (This)->lpVtbl->put_value(This, v)
#define IHTMLButtonElement_get_value(This, p) (This)->lpVtbl->get_value(This, p)
#define IHTMLButtonElement_put_name(This, v) (This)->lpVtbl->put_name(This, v)
#define IHTMLButtonElement_get_name(This, p) (This)->lpVtbl->get_name(This, p)
#define IHTMLButtonElement_put_status(This, v) (This)->lpVtbl->put_status(This, v)
#define IHTMLButtonElement_get_status(This, p) (This)->lpVtbl->get_status(This, p)
#define IHTMLButtonElement_put_disabled(This, v) (This)->lpVtbl->put_disabled(This, v)
#define IHTMLButtonElement_get_disabled(This, p) (This)->lpVtbl->get_disabled(This, p)
#define IHTMLButtonElement_get_form(This, p) (This)->lpVtbl->get_form(This, p)
#define IHTMLButtonElement_createTextRange(This, range) (This)->lpVtbl->createTextRange(This, range)

declare function IHTMLButtonElement_get_type_Proxy(byval This as IHTMLButtonElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLButtonElement_get_type_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLButtonElement_put_value_Proxy(byval This as IHTMLButtonElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLButtonElement_put_value_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLButtonElement_get_value_Proxy(byval This as IHTMLButtonElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLButtonElement_get_value_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLButtonElement_put_name_Proxy(byval This as IHTMLButtonElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLButtonElement_put_name_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLButtonElement_get_name_Proxy(byval This as IHTMLButtonElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLButtonElement_get_name_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLButtonElement_put_status_Proxy(byval This as IHTMLButtonElement ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLButtonElement_put_status_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLButtonElement_get_status_Proxy(byval This as IHTMLButtonElement ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLButtonElement_get_status_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLButtonElement_put_disabled_Proxy(byval This as IHTMLButtonElement ptr, byval v as VARIANT_BOOL) as HRESULT
declare sub IHTMLButtonElement_put_disabled_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLButtonElement_get_disabled_Proxy(byval This as IHTMLButtonElement ptr, byval p as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLButtonElement_get_disabled_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLButtonElement_get_form_Proxy(byval This as IHTMLButtonElement ptr, byval p as IHTMLFormElement ptr ptr) as HRESULT
declare sub IHTMLButtonElement_get_form_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLButtonElement_createTextRange_Proxy(byval This as IHTMLButtonElement ptr, byval range as IHTMLTxtRange ptr ptr) as HRESULT
declare sub IHTMLButtonElement_createTextRange_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __DispHTMLButtonElement_DISPINTERFACE_DEFINED__
extern DIID_DispHTMLButtonElement as const IID
type DispHTMLButtonElement as DispHTMLButtonElement_

type DispHTMLButtonElementVtbl
	QueryInterface as function(byval This as DispHTMLButtonElement ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as DispHTMLButtonElement ptr) as ULONG
	Release as function(byval This as DispHTMLButtonElement ptr) as ULONG
	GetTypeInfoCount as function(byval This as DispHTMLButtonElement ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as DispHTMLButtonElement ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as DispHTMLButtonElement ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as DispHTMLButtonElement ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type DispHTMLButtonElement_
	lpVtbl as DispHTMLButtonElementVtbl ptr
end type

#define DispHTMLButtonElement_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define DispHTMLButtonElement_AddRef(This) (This)->lpVtbl->AddRef(This)
#define DispHTMLButtonElement_Release(This) (This)->lpVtbl->Release(This)
#define DispHTMLButtonElement_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define DispHTMLButtonElement_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define DispHTMLButtonElement_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define DispHTMLButtonElement_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
extern CLSID_HTMLButtonElement as const CLSID
#define __HTMLMarqueeElementEvents2_DISPINTERFACE_DEFINED__
extern DIID_HTMLMarqueeElementEvents2 as const IID
type HTMLMarqueeElementEvents2 as HTMLMarqueeElementEvents2_

type HTMLMarqueeElementEvents2Vtbl
	QueryInterface as function(byval This as HTMLMarqueeElementEvents2 ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as HTMLMarqueeElementEvents2 ptr) as ULONG
	Release as function(byval This as HTMLMarqueeElementEvents2 ptr) as ULONG
	GetTypeInfoCount as function(byval This as HTMLMarqueeElementEvents2 ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as HTMLMarqueeElementEvents2 ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as HTMLMarqueeElementEvents2 ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as HTMLMarqueeElementEvents2 ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type HTMLMarqueeElementEvents2_
	lpVtbl as HTMLMarqueeElementEvents2Vtbl ptr
end type

#define HTMLMarqueeElementEvents2_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define HTMLMarqueeElementEvents2_AddRef(This) (This)->lpVtbl->AddRef(This)
#define HTMLMarqueeElementEvents2_Release(This) (This)->lpVtbl->Release(This)
#define HTMLMarqueeElementEvents2_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define HTMLMarqueeElementEvents2_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define HTMLMarqueeElementEvents2_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define HTMLMarqueeElementEvents2_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define __HTMLMarqueeElementEvents_DISPINTERFACE_DEFINED__
extern DIID_HTMLMarqueeElementEvents as const IID
type HTMLMarqueeElementEvents as HTMLMarqueeElementEvents_

type HTMLMarqueeElementEventsVtbl
	QueryInterface as function(byval This as HTMLMarqueeElementEvents ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as HTMLMarqueeElementEvents ptr) as ULONG
	Release as function(byval This as HTMLMarqueeElementEvents ptr) as ULONG
	GetTypeInfoCount as function(byval This as HTMLMarqueeElementEvents ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as HTMLMarqueeElementEvents ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as HTMLMarqueeElementEvents ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as HTMLMarqueeElementEvents ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type HTMLMarqueeElementEvents_
	lpVtbl as HTMLMarqueeElementEventsVtbl ptr
end type

#define HTMLMarqueeElementEvents_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define HTMLMarqueeElementEvents_AddRef(This) (This)->lpVtbl->AddRef(This)
#define HTMLMarqueeElementEvents_Release(This) (This)->lpVtbl->Release(This)
#define HTMLMarqueeElementEvents_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define HTMLMarqueeElementEvents_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define HTMLMarqueeElementEvents_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define HTMLMarqueeElementEvents_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define __IHTMLMarqueeElement_INTERFACE_DEFINED__
extern IID_IHTMLMarqueeElement as const IID
type IHTMLMarqueeElement as IHTMLMarqueeElement_

type IHTMLMarqueeElementVtbl
	QueryInterface as function(byval This as IHTMLMarqueeElement ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLMarqueeElement ptr) as ULONG
	Release as function(byval This as IHTMLMarqueeElement ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLMarqueeElement ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLMarqueeElement ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLMarqueeElement ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLMarqueeElement ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	put_bgColor as function(byval This as IHTMLMarqueeElement ptr, byval v as VARIANT) as HRESULT
	get_bgColor as function(byval This as IHTMLMarqueeElement ptr, byval p as VARIANT ptr) as HRESULT
	put_scrollDelay as function(byval This as IHTMLMarqueeElement ptr, byval v as long) as HRESULT
	get_scrollDelay as function(byval This as IHTMLMarqueeElement ptr, byval p as long ptr) as HRESULT
	put_direction as function(byval This as IHTMLMarqueeElement ptr, byval v as BSTR) as HRESULT
	get_direction as function(byval This as IHTMLMarqueeElement ptr, byval p as BSTR ptr) as HRESULT
	put_behavior as function(byval This as IHTMLMarqueeElement ptr, byval v as BSTR) as HRESULT
	get_behavior as function(byval This as IHTMLMarqueeElement ptr, byval p as BSTR ptr) as HRESULT
	put_scrollAmount as function(byval This as IHTMLMarqueeElement ptr, byval v as long) as HRESULT
	get_scrollAmount as function(byval This as IHTMLMarqueeElement ptr, byval p as long ptr) as HRESULT
	put_loop as function(byval This as IHTMLMarqueeElement ptr, byval v as long) as HRESULT
	get_loop as function(byval This as IHTMLMarqueeElement ptr, byval p as long ptr) as HRESULT
	put_vspace as function(byval This as IHTMLMarqueeElement ptr, byval v as long) as HRESULT
	get_vspace as function(byval This as IHTMLMarqueeElement ptr, byval p as long ptr) as HRESULT
	put_hspace as function(byval This as IHTMLMarqueeElement ptr, byval v as long) as HRESULT
	get_hspace as function(byval This as IHTMLMarqueeElement ptr, byval p as long ptr) as HRESULT
	put_onfinish as function(byval This as IHTMLMarqueeElement ptr, byval v as VARIANT) as HRESULT
	get_onfinish as function(byval This as IHTMLMarqueeElement ptr, byval p as VARIANT ptr) as HRESULT
	put_onstart as function(byval This as IHTMLMarqueeElement ptr, byval v as VARIANT) as HRESULT
	get_onstart as function(byval This as IHTMLMarqueeElement ptr, byval p as VARIANT ptr) as HRESULT
	put_onbounce as function(byval This as IHTMLMarqueeElement ptr, byval v as VARIANT) as HRESULT
	get_onbounce as function(byval This as IHTMLMarqueeElement ptr, byval p as VARIANT ptr) as HRESULT
	put_width as function(byval This as IHTMLMarqueeElement ptr, byval v as VARIANT) as HRESULT
	get_width as function(byval This as IHTMLMarqueeElement ptr, byval p as VARIANT ptr) as HRESULT
	put_height as function(byval This as IHTMLMarqueeElement ptr, byval v as VARIANT) as HRESULT
	get_height as function(byval This as IHTMLMarqueeElement ptr, byval p as VARIANT ptr) as HRESULT
	put_trueSpeed as function(byval This as IHTMLMarqueeElement ptr, byval v as VARIANT_BOOL) as HRESULT
	get_trueSpeed as function(byval This as IHTMLMarqueeElement ptr, byval p as VARIANT_BOOL ptr) as HRESULT
	start as function(byval This as IHTMLMarqueeElement ptr) as HRESULT
	stop as function(byval This as IHTMLMarqueeElement ptr) as HRESULT
end type

type IHTMLMarqueeElement_
	lpVtbl as IHTMLMarqueeElementVtbl ptr
end type

#define IHTMLMarqueeElement_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLMarqueeElement_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLMarqueeElement_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLMarqueeElement_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLMarqueeElement_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLMarqueeElement_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLMarqueeElement_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLMarqueeElement_put_bgColor(This, v) (This)->lpVtbl->put_bgColor(This, v)
#define IHTMLMarqueeElement_get_bgColor(This, p) (This)->lpVtbl->get_bgColor(This, p)
#define IHTMLMarqueeElement_put_scrollDelay(This, v) (This)->lpVtbl->put_scrollDelay(This, v)
#define IHTMLMarqueeElement_get_scrollDelay(This, p) (This)->lpVtbl->get_scrollDelay(This, p)
#define IHTMLMarqueeElement_put_direction(This, v) (This)->lpVtbl->put_direction(This, v)
#define IHTMLMarqueeElement_get_direction(This, p) (This)->lpVtbl->get_direction(This, p)
#define IHTMLMarqueeElement_put_behavior(This, v) (This)->lpVtbl->put_behavior(This, v)
#define IHTMLMarqueeElement_get_behavior(This, p) (This)->lpVtbl->get_behavior(This, p)
#define IHTMLMarqueeElement_put_scrollAmount(This, v) (This)->lpVtbl->put_scrollAmount(This, v)
#define IHTMLMarqueeElement_get_scrollAmount(This, p) (This)->lpVtbl->get_scrollAmount(This, p)
#define IHTMLMarqueeElement_put_loop(This, v) (This)->lpVtbl->put_loop(This, v)
#define IHTMLMarqueeElement_get_loop(This, p) (This)->lpVtbl->get_loop(This, p)
#define IHTMLMarqueeElement_put_vspace(This, v) (This)->lpVtbl->put_vspace(This, v)
#define IHTMLMarqueeElement_get_vspace(This, p) (This)->lpVtbl->get_vspace(This, p)
#define IHTMLMarqueeElement_put_hspace(This, v) (This)->lpVtbl->put_hspace(This, v)
#define IHTMLMarqueeElement_get_hspace(This, p) (This)->lpVtbl->get_hspace(This, p)
#define IHTMLMarqueeElement_put_onfinish(This, v) (This)->lpVtbl->put_onfinish(This, v)
#define IHTMLMarqueeElement_get_onfinish(This, p) (This)->lpVtbl->get_onfinish(This, p)
#define IHTMLMarqueeElement_put_onstart(This, v) (This)->lpVtbl->put_onstart(This, v)
#define IHTMLMarqueeElement_get_onstart(This, p) (This)->lpVtbl->get_onstart(This, p)
#define IHTMLMarqueeElement_put_onbounce(This, v) (This)->lpVtbl->put_onbounce(This, v)
#define IHTMLMarqueeElement_get_onbounce(This, p) (This)->lpVtbl->get_onbounce(This, p)
#define IHTMLMarqueeElement_put_width(This, v) (This)->lpVtbl->put_width(This, v)
#define IHTMLMarqueeElement_get_width(This, p) (This)->lpVtbl->get_width(This, p)
#define IHTMLMarqueeElement_put_height(This, v) (This)->lpVtbl->put_height(This, v)
#define IHTMLMarqueeElement_get_height(This, p) (This)->lpVtbl->get_height(This, p)
#define IHTMLMarqueeElement_put_trueSpeed(This, v) (This)->lpVtbl->put_trueSpeed(This, v)
#define IHTMLMarqueeElement_get_trueSpeed(This, p) (This)->lpVtbl->get_trueSpeed(This, p)
#define IHTMLMarqueeElement_start(This) (This)->lpVtbl->start(This)
#define IHTMLMarqueeElement_stop(This) (This)->lpVtbl->stop(This)

declare function IHTMLMarqueeElement_put_bgColor_Proxy(byval This as IHTMLMarqueeElement ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLMarqueeElement_put_bgColor_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLMarqueeElement_get_bgColor_Proxy(byval This as IHTMLMarqueeElement ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLMarqueeElement_get_bgColor_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLMarqueeElement_put_scrollDelay_Proxy(byval This as IHTMLMarqueeElement ptr, byval v as long) as HRESULT
declare sub IHTMLMarqueeElement_put_scrollDelay_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLMarqueeElement_get_scrollDelay_Proxy(byval This as IHTMLMarqueeElement ptr, byval p as long ptr) as HRESULT
declare sub IHTMLMarqueeElement_get_scrollDelay_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLMarqueeElement_put_direction_Proxy(byval This as IHTMLMarqueeElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLMarqueeElement_put_direction_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLMarqueeElement_get_direction_Proxy(byval This as IHTMLMarqueeElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLMarqueeElement_get_direction_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLMarqueeElement_put_behavior_Proxy(byval This as IHTMLMarqueeElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLMarqueeElement_put_behavior_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLMarqueeElement_get_behavior_Proxy(byval This as IHTMLMarqueeElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLMarqueeElement_get_behavior_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLMarqueeElement_put_scrollAmount_Proxy(byval This as IHTMLMarqueeElement ptr, byval v as long) as HRESULT
declare sub IHTMLMarqueeElement_put_scrollAmount_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLMarqueeElement_get_scrollAmount_Proxy(byval This as IHTMLMarqueeElement ptr, byval p as long ptr) as HRESULT
declare sub IHTMLMarqueeElement_get_scrollAmount_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLMarqueeElement_put_loop_Proxy(byval This as IHTMLMarqueeElement ptr, byval v as long) as HRESULT
declare sub IHTMLMarqueeElement_put_loop_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLMarqueeElement_get_loop_Proxy(byval This as IHTMLMarqueeElement ptr, byval p as long ptr) as HRESULT
declare sub IHTMLMarqueeElement_get_loop_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLMarqueeElement_put_vspace_Proxy(byval This as IHTMLMarqueeElement ptr, byval v as long) as HRESULT
declare sub IHTMLMarqueeElement_put_vspace_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLMarqueeElement_get_vspace_Proxy(byval This as IHTMLMarqueeElement ptr, byval p as long ptr) as HRESULT
declare sub IHTMLMarqueeElement_get_vspace_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLMarqueeElement_put_hspace_Proxy(byval This as IHTMLMarqueeElement ptr, byval v as long) as HRESULT
declare sub IHTMLMarqueeElement_put_hspace_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLMarqueeElement_get_hspace_Proxy(byval This as IHTMLMarqueeElement ptr, byval p as long ptr) as HRESULT
declare sub IHTMLMarqueeElement_get_hspace_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLMarqueeElement_put_onfinish_Proxy(byval This as IHTMLMarqueeElement ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLMarqueeElement_put_onfinish_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLMarqueeElement_get_onfinish_Proxy(byval This as IHTMLMarqueeElement ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLMarqueeElement_get_onfinish_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLMarqueeElement_put_onstart_Proxy(byval This as IHTMLMarqueeElement ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLMarqueeElement_put_onstart_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLMarqueeElement_get_onstart_Proxy(byval This as IHTMLMarqueeElement ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLMarqueeElement_get_onstart_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLMarqueeElement_put_onbounce_Proxy(byval This as IHTMLMarqueeElement ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLMarqueeElement_put_onbounce_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLMarqueeElement_get_onbounce_Proxy(byval This as IHTMLMarqueeElement ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLMarqueeElement_get_onbounce_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLMarqueeElement_put_width_Proxy(byval This as IHTMLMarqueeElement ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLMarqueeElement_put_width_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLMarqueeElement_get_width_Proxy(byval This as IHTMLMarqueeElement ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLMarqueeElement_get_width_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLMarqueeElement_put_height_Proxy(byval This as IHTMLMarqueeElement ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLMarqueeElement_put_height_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLMarqueeElement_get_height_Proxy(byval This as IHTMLMarqueeElement ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLMarqueeElement_get_height_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLMarqueeElement_put_trueSpeed_Proxy(byval This as IHTMLMarqueeElement ptr, byval v as VARIANT_BOOL) as HRESULT
declare sub IHTMLMarqueeElement_put_trueSpeed_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLMarqueeElement_get_trueSpeed_Proxy(byval This as IHTMLMarqueeElement ptr, byval p as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLMarqueeElement_get_trueSpeed_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLMarqueeElement_start_Proxy(byval This as IHTMLMarqueeElement ptr) as HRESULT
declare sub IHTMLMarqueeElement_start_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLMarqueeElement_stop_Proxy(byval This as IHTMLMarqueeElement ptr) as HRESULT
declare sub IHTMLMarqueeElement_stop_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __DispHTMLMarqueeElement_DISPINTERFACE_DEFINED__
extern DIID_DispHTMLMarqueeElement as const IID
type DispHTMLMarqueeElement as DispHTMLMarqueeElement_

type DispHTMLMarqueeElementVtbl
	QueryInterface as function(byval This as DispHTMLMarqueeElement ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as DispHTMLMarqueeElement ptr) as ULONG
	Release as function(byval This as DispHTMLMarqueeElement ptr) as ULONG
	GetTypeInfoCount as function(byval This as DispHTMLMarqueeElement ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as DispHTMLMarqueeElement ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as DispHTMLMarqueeElement ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as DispHTMLMarqueeElement ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type DispHTMLMarqueeElement_
	lpVtbl as DispHTMLMarqueeElementVtbl ptr
end type

#define DispHTMLMarqueeElement_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define DispHTMLMarqueeElement_AddRef(This) (This)->lpVtbl->AddRef(This)
#define DispHTMLMarqueeElement_Release(This) (This)->lpVtbl->Release(This)
#define DispHTMLMarqueeElement_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define DispHTMLMarqueeElement_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define DispHTMLMarqueeElement_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define DispHTMLMarqueeElement_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
extern CLSID_HTMLMarqueeElement as const CLSID
#define __IHTMLHtmlElement_INTERFACE_DEFINED__
extern IID_IHTMLHtmlElement as const IID
type IHTMLHtmlElement as IHTMLHtmlElement_

type IHTMLHtmlElementVtbl
	QueryInterface as function(byval This as IHTMLHtmlElement ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLHtmlElement ptr) as ULONG
	Release as function(byval This as IHTMLHtmlElement ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLHtmlElement ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLHtmlElement ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLHtmlElement ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLHtmlElement ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	put_version as function(byval This as IHTMLHtmlElement ptr, byval v as BSTR) as HRESULT
	get_version as function(byval This as IHTMLHtmlElement ptr, byval p as BSTR ptr) as HRESULT
end type

type IHTMLHtmlElement_
	lpVtbl as IHTMLHtmlElementVtbl ptr
end type

#define IHTMLHtmlElement_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLHtmlElement_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLHtmlElement_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLHtmlElement_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLHtmlElement_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLHtmlElement_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLHtmlElement_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLHtmlElement_put_version(This, v) (This)->lpVtbl->put_version(This, v)
#define IHTMLHtmlElement_get_version(This, p) (This)->lpVtbl->get_version(This, p)

declare function IHTMLHtmlElement_put_version_Proxy(byval This as IHTMLHtmlElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLHtmlElement_put_version_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLHtmlElement_get_version_Proxy(byval This as IHTMLHtmlElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLHtmlElement_get_version_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLHeadElement_INTERFACE_DEFINED__
extern IID_IHTMLHeadElement as const IID
type IHTMLHeadElement as IHTMLHeadElement_

type IHTMLHeadElementVtbl
	QueryInterface as function(byval This as IHTMLHeadElement ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLHeadElement ptr) as ULONG
	Release as function(byval This as IHTMLHeadElement ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLHeadElement ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLHeadElement ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLHeadElement ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLHeadElement ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	put_profile as function(byval This as IHTMLHeadElement ptr, byval v as BSTR) as HRESULT
	get_profile as function(byval This as IHTMLHeadElement ptr, byval p as BSTR ptr) as HRESULT
end type

type IHTMLHeadElement_
	lpVtbl as IHTMLHeadElementVtbl ptr
end type

#define IHTMLHeadElement_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLHeadElement_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLHeadElement_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLHeadElement_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLHeadElement_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLHeadElement_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLHeadElement_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLHeadElement_put_profile(This, v) (This)->lpVtbl->put_profile(This, v)
#define IHTMLHeadElement_get_profile(This, p) (This)->lpVtbl->get_profile(This, p)

declare function IHTMLHeadElement_put_profile_Proxy(byval This as IHTMLHeadElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLHeadElement_put_profile_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLHeadElement_get_profile_Proxy(byval This as IHTMLHeadElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLHeadElement_get_profile_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLTitleElement_INTERFACE_DEFINED__
extern IID_IHTMLTitleElement as const IID
type IHTMLTitleElement as IHTMLTitleElement_

type IHTMLTitleElementVtbl
	QueryInterface as function(byval This as IHTMLTitleElement ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLTitleElement ptr) as ULONG
	Release as function(byval This as IHTMLTitleElement ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLTitleElement ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLTitleElement ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLTitleElement ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLTitleElement ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	put_text as function(byval This as IHTMLTitleElement ptr, byval v as BSTR) as HRESULT
	get_text as function(byval This as IHTMLTitleElement ptr, byval p as BSTR ptr) as HRESULT
end type

type IHTMLTitleElement_
	lpVtbl as IHTMLTitleElementVtbl ptr
end type

#define IHTMLTitleElement_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLTitleElement_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLTitleElement_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLTitleElement_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLTitleElement_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLTitleElement_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLTitleElement_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLTitleElement_put_text(This, v) (This)->lpVtbl->put_text(This, v)
#define IHTMLTitleElement_get_text(This, p) (This)->lpVtbl->get_text(This, p)

declare function IHTMLTitleElement_put_text_Proxy(byval This as IHTMLTitleElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLTitleElement_put_text_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTitleElement_get_text_Proxy(byval This as IHTMLTitleElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLTitleElement_get_text_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLMetaElement_INTERFACE_DEFINED__
extern IID_IHTMLMetaElement as const IID
type IHTMLMetaElement as IHTMLMetaElement_

type IHTMLMetaElementVtbl
	QueryInterface as function(byval This as IHTMLMetaElement ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLMetaElement ptr) as ULONG
	Release as function(byval This as IHTMLMetaElement ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLMetaElement ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLMetaElement ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLMetaElement ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLMetaElement ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	put_httpEquiv as function(byval This as IHTMLMetaElement ptr, byval v as BSTR) as HRESULT
	get_httpEquiv as function(byval This as IHTMLMetaElement ptr, byval p as BSTR ptr) as HRESULT
	put_content as function(byval This as IHTMLMetaElement ptr, byval v as BSTR) as HRESULT
	get_content as function(byval This as IHTMLMetaElement ptr, byval p as BSTR ptr) as HRESULT
	put_name as function(byval This as IHTMLMetaElement ptr, byval v as BSTR) as HRESULT
	get_name as function(byval This as IHTMLMetaElement ptr, byval p as BSTR ptr) as HRESULT
	put_url as function(byval This as IHTMLMetaElement ptr, byval v as BSTR) as HRESULT
	get_url as function(byval This as IHTMLMetaElement ptr, byval p as BSTR ptr) as HRESULT
	put_charset as function(byval This as IHTMLMetaElement ptr, byval v as BSTR) as HRESULT
	get_charset as function(byval This as IHTMLMetaElement ptr, byval p as BSTR ptr) as HRESULT
end type

type IHTMLMetaElement_
	lpVtbl as IHTMLMetaElementVtbl ptr
end type

#define IHTMLMetaElement_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLMetaElement_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLMetaElement_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLMetaElement_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLMetaElement_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLMetaElement_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLMetaElement_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLMetaElement_put_httpEquiv(This, v) (This)->lpVtbl->put_httpEquiv(This, v)
#define IHTMLMetaElement_get_httpEquiv(This, p) (This)->lpVtbl->get_httpEquiv(This, p)
#define IHTMLMetaElement_put_content(This, v) (This)->lpVtbl->put_content(This, v)
#define IHTMLMetaElement_get_content(This, p) (This)->lpVtbl->get_content(This, p)
#define IHTMLMetaElement_put_name(This, v) (This)->lpVtbl->put_name(This, v)
#define IHTMLMetaElement_get_name(This, p) (This)->lpVtbl->get_name(This, p)
#define IHTMLMetaElement_put_url(This, v) (This)->lpVtbl->put_url(This, v)
#define IHTMLMetaElement_get_url(This, p) (This)->lpVtbl->get_url(This, p)
#define IHTMLMetaElement_put_charset(This, v) (This)->lpVtbl->put_charset(This, v)
#define IHTMLMetaElement_get_charset(This, p) (This)->lpVtbl->get_charset(This, p)

declare function IHTMLMetaElement_put_httpEquiv_Proxy(byval This as IHTMLMetaElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLMetaElement_put_httpEquiv_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLMetaElement_get_httpEquiv_Proxy(byval This as IHTMLMetaElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLMetaElement_get_httpEquiv_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLMetaElement_put_content_Proxy(byval This as IHTMLMetaElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLMetaElement_put_content_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLMetaElement_get_content_Proxy(byval This as IHTMLMetaElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLMetaElement_get_content_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLMetaElement_put_name_Proxy(byval This as IHTMLMetaElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLMetaElement_put_name_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLMetaElement_get_name_Proxy(byval This as IHTMLMetaElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLMetaElement_get_name_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLMetaElement_put_url_Proxy(byval This as IHTMLMetaElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLMetaElement_put_url_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLMetaElement_get_url_Proxy(byval This as IHTMLMetaElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLMetaElement_get_url_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLMetaElement_put_charset_Proxy(byval This as IHTMLMetaElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLMetaElement_put_charset_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLMetaElement_get_charset_Proxy(byval This as IHTMLMetaElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLMetaElement_get_charset_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLMetaElement2_INTERFACE_DEFINED__
extern IID_IHTMLMetaElement2 as const IID
type IHTMLMetaElement2 as IHTMLMetaElement2_

type IHTMLMetaElement2Vtbl
	QueryInterface as function(byval This as IHTMLMetaElement2 ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLMetaElement2 ptr) as ULONG
	Release as function(byval This as IHTMLMetaElement2 ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLMetaElement2 ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLMetaElement2 ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLMetaElement2 ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLMetaElement2 ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	put_scheme as function(byval This as IHTMLMetaElement2 ptr, byval v as BSTR) as HRESULT
	get_scheme as function(byval This as IHTMLMetaElement2 ptr, byval p as BSTR ptr) as HRESULT
end type

type IHTMLMetaElement2_
	lpVtbl as IHTMLMetaElement2Vtbl ptr
end type

#define IHTMLMetaElement2_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLMetaElement2_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLMetaElement2_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLMetaElement2_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLMetaElement2_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLMetaElement2_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLMetaElement2_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLMetaElement2_put_scheme(This, v) (This)->lpVtbl->put_scheme(This, v)
#define IHTMLMetaElement2_get_scheme(This, p) (This)->lpVtbl->get_scheme(This, p)

declare function IHTMLMetaElement2_put_scheme_Proxy(byval This as IHTMLMetaElement2 ptr, byval v as BSTR) as HRESULT
declare sub IHTMLMetaElement2_put_scheme_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLMetaElement2_get_scheme_Proxy(byval This as IHTMLMetaElement2 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLMetaElement2_get_scheme_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLBaseElement_INTERFACE_DEFINED__
extern IID_IHTMLBaseElement as const IID
type IHTMLBaseElement as IHTMLBaseElement_

type IHTMLBaseElementVtbl
	QueryInterface as function(byval This as IHTMLBaseElement ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLBaseElement ptr) as ULONG
	Release as function(byval This as IHTMLBaseElement ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLBaseElement ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLBaseElement ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLBaseElement ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLBaseElement ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	put_href as function(byval This as IHTMLBaseElement ptr, byval v as BSTR) as HRESULT
	get_href as function(byval This as IHTMLBaseElement ptr, byval p as BSTR ptr) as HRESULT
	put_target as function(byval This as IHTMLBaseElement ptr, byval v as BSTR) as HRESULT
	get_target as function(byval This as IHTMLBaseElement ptr, byval p as BSTR ptr) as HRESULT
end type

type IHTMLBaseElement_
	lpVtbl as IHTMLBaseElementVtbl ptr
end type

#define IHTMLBaseElement_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLBaseElement_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLBaseElement_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLBaseElement_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLBaseElement_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLBaseElement_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLBaseElement_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLBaseElement_put_href(This, v) (This)->lpVtbl->put_href(This, v)
#define IHTMLBaseElement_get_href(This, p) (This)->lpVtbl->get_href(This, p)
#define IHTMLBaseElement_put_target(This, v) (This)->lpVtbl->put_target(This, v)
#define IHTMLBaseElement_get_target(This, p) (This)->lpVtbl->get_target(This, p)

declare function IHTMLBaseElement_put_href_Proxy(byval This as IHTMLBaseElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLBaseElement_put_href_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLBaseElement_get_href_Proxy(byval This as IHTMLBaseElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLBaseElement_get_href_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLBaseElement_put_target_Proxy(byval This as IHTMLBaseElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLBaseElement_put_target_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLBaseElement_get_target_Proxy(byval This as IHTMLBaseElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLBaseElement_get_target_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLIsIndexElement_INTERFACE_DEFINED__
extern IID_IHTMLIsIndexElement as const IID
type IHTMLIsIndexElement as IHTMLIsIndexElement_

type IHTMLIsIndexElementVtbl
	QueryInterface as function(byval This as IHTMLIsIndexElement ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLIsIndexElement ptr) as ULONG
	Release as function(byval This as IHTMLIsIndexElement ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLIsIndexElement ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLIsIndexElement ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLIsIndexElement ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLIsIndexElement ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	put_prompt as function(byval This as IHTMLIsIndexElement ptr, byval v as BSTR) as HRESULT
	get_prompt as function(byval This as IHTMLIsIndexElement ptr, byval p as BSTR ptr) as HRESULT
	put_action as function(byval This as IHTMLIsIndexElement ptr, byval v as BSTR) as HRESULT
	get_action as function(byval This as IHTMLIsIndexElement ptr, byval p as BSTR ptr) as HRESULT
end type

type IHTMLIsIndexElement_
	lpVtbl as IHTMLIsIndexElementVtbl ptr
end type

#define IHTMLIsIndexElement_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLIsIndexElement_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLIsIndexElement_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLIsIndexElement_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLIsIndexElement_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLIsIndexElement_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLIsIndexElement_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLIsIndexElement_put_prompt(This, v) (This)->lpVtbl->put_prompt(This, v)
#define IHTMLIsIndexElement_get_prompt(This, p) (This)->lpVtbl->get_prompt(This, p)
#define IHTMLIsIndexElement_put_action(This, v) (This)->lpVtbl->put_action(This, v)
#define IHTMLIsIndexElement_get_action(This, p) (This)->lpVtbl->get_action(This, p)

declare function IHTMLIsIndexElement_put_prompt_Proxy(byval This as IHTMLIsIndexElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLIsIndexElement_put_prompt_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLIsIndexElement_get_prompt_Proxy(byval This as IHTMLIsIndexElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLIsIndexElement_get_prompt_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLIsIndexElement_put_action_Proxy(byval This as IHTMLIsIndexElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLIsIndexElement_put_action_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLIsIndexElement_get_action_Proxy(byval This as IHTMLIsIndexElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLIsIndexElement_get_action_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLIsIndexElement2_INTERFACE_DEFINED__
extern IID_IHTMLIsIndexElement2 as const IID
type IHTMLIsIndexElement2 as IHTMLIsIndexElement2_

type IHTMLIsIndexElement2Vtbl
	QueryInterface as function(byval This as IHTMLIsIndexElement2 ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLIsIndexElement2 ptr) as ULONG
	Release as function(byval This as IHTMLIsIndexElement2 ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLIsIndexElement2 ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLIsIndexElement2 ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLIsIndexElement2 ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLIsIndexElement2 ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	get_form as function(byval This as IHTMLIsIndexElement2 ptr, byval p as IHTMLFormElement ptr ptr) as HRESULT
end type

type IHTMLIsIndexElement2_
	lpVtbl as IHTMLIsIndexElement2Vtbl ptr
end type

#define IHTMLIsIndexElement2_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLIsIndexElement2_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLIsIndexElement2_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLIsIndexElement2_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLIsIndexElement2_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLIsIndexElement2_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLIsIndexElement2_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLIsIndexElement2_get_form(This, p) (This)->lpVtbl->get_form(This, p)
declare function IHTMLIsIndexElement2_get_form_Proxy(byval This as IHTMLIsIndexElement2 ptr, byval p as IHTMLFormElement ptr ptr) as HRESULT
declare sub IHTMLIsIndexElement2_get_form_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLNextIdElement_INTERFACE_DEFINED__
extern IID_IHTMLNextIdElement as const IID
type IHTMLNextIdElement as IHTMLNextIdElement_

type IHTMLNextIdElementVtbl
	QueryInterface as function(byval This as IHTMLNextIdElement ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLNextIdElement ptr) as ULONG
	Release as function(byval This as IHTMLNextIdElement ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLNextIdElement ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLNextIdElement ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLNextIdElement ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLNextIdElement ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	put_n as function(byval This as IHTMLNextIdElement ptr, byval v as BSTR) as HRESULT
	get_n as function(byval This as IHTMLNextIdElement ptr, byval p as BSTR ptr) as HRESULT
end type

type IHTMLNextIdElement_
	lpVtbl as IHTMLNextIdElementVtbl ptr
end type

#define IHTMLNextIdElement_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLNextIdElement_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLNextIdElement_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLNextIdElement_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLNextIdElement_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLNextIdElement_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLNextIdElement_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLNextIdElement_put_n(This, v) (This)->lpVtbl->put_n(This, v)
#define IHTMLNextIdElement_get_n(This, p) (This)->lpVtbl->get_n(This, p)

declare function IHTMLNextIdElement_put_n_Proxy(byval This as IHTMLNextIdElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLNextIdElement_put_n_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLNextIdElement_get_n_Proxy(byval This as IHTMLNextIdElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLNextIdElement_get_n_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __DispHTMLHtmlElement_DISPINTERFACE_DEFINED__
extern DIID_DispHTMLHtmlElement as const IID
type DispHTMLHtmlElement as DispHTMLHtmlElement_

type DispHTMLHtmlElementVtbl
	QueryInterface as function(byval This as DispHTMLHtmlElement ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as DispHTMLHtmlElement ptr) as ULONG
	Release as function(byval This as DispHTMLHtmlElement ptr) as ULONG
	GetTypeInfoCount as function(byval This as DispHTMLHtmlElement ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as DispHTMLHtmlElement ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as DispHTMLHtmlElement ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as DispHTMLHtmlElement ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type DispHTMLHtmlElement_
	lpVtbl as DispHTMLHtmlElementVtbl ptr
end type

#define DispHTMLHtmlElement_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define DispHTMLHtmlElement_AddRef(This) (This)->lpVtbl->AddRef(This)
#define DispHTMLHtmlElement_Release(This) (This)->lpVtbl->Release(This)
#define DispHTMLHtmlElement_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define DispHTMLHtmlElement_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define DispHTMLHtmlElement_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define DispHTMLHtmlElement_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
extern CLSID_HTMLHtmlElement as const CLSID
#define __DispHTMLHeadElement_DISPINTERFACE_DEFINED__
extern DIID_DispHTMLHeadElement as const IID
type DispHTMLHeadElement as DispHTMLHeadElement_

type DispHTMLHeadElementVtbl
	QueryInterface as function(byval This as DispHTMLHeadElement ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as DispHTMLHeadElement ptr) as ULONG
	Release as function(byval This as DispHTMLHeadElement ptr) as ULONG
	GetTypeInfoCount as function(byval This as DispHTMLHeadElement ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as DispHTMLHeadElement ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as DispHTMLHeadElement ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as DispHTMLHeadElement ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type DispHTMLHeadElement_
	lpVtbl as DispHTMLHeadElementVtbl ptr
end type

#define DispHTMLHeadElement_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define DispHTMLHeadElement_AddRef(This) (This)->lpVtbl->AddRef(This)
#define DispHTMLHeadElement_Release(This) (This)->lpVtbl->Release(This)
#define DispHTMLHeadElement_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define DispHTMLHeadElement_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define DispHTMLHeadElement_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define DispHTMLHeadElement_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
extern CLSID_HTMLHeadElement as const CLSID
#define __DispHTMLTitleElement_DISPINTERFACE_DEFINED__
extern DIID_DispHTMLTitleElement as const IID
type DispHTMLTitleElement as DispHTMLTitleElement_

type DispHTMLTitleElementVtbl
	QueryInterface as function(byval This as DispHTMLTitleElement ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as DispHTMLTitleElement ptr) as ULONG
	Release as function(byval This as DispHTMLTitleElement ptr) as ULONG
	GetTypeInfoCount as function(byval This as DispHTMLTitleElement ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as DispHTMLTitleElement ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as DispHTMLTitleElement ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as DispHTMLTitleElement ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type DispHTMLTitleElement_
	lpVtbl as DispHTMLTitleElementVtbl ptr
end type

#define DispHTMLTitleElement_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define DispHTMLTitleElement_AddRef(This) (This)->lpVtbl->AddRef(This)
#define DispHTMLTitleElement_Release(This) (This)->lpVtbl->Release(This)
#define DispHTMLTitleElement_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define DispHTMLTitleElement_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define DispHTMLTitleElement_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define DispHTMLTitleElement_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
extern CLSID_HTMLTitleElement as const CLSID
#define __DispHTMLMetaElement_DISPINTERFACE_DEFINED__
extern DIID_DispHTMLMetaElement as const IID
type DispHTMLMetaElement as DispHTMLMetaElement_

type DispHTMLMetaElementVtbl
	QueryInterface as function(byval This as DispHTMLMetaElement ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as DispHTMLMetaElement ptr) as ULONG
	Release as function(byval This as DispHTMLMetaElement ptr) as ULONG
	GetTypeInfoCount as function(byval This as DispHTMLMetaElement ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as DispHTMLMetaElement ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as DispHTMLMetaElement ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as DispHTMLMetaElement ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type DispHTMLMetaElement_
	lpVtbl as DispHTMLMetaElementVtbl ptr
end type

#define DispHTMLMetaElement_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define DispHTMLMetaElement_AddRef(This) (This)->lpVtbl->AddRef(This)
#define DispHTMLMetaElement_Release(This) (This)->lpVtbl->Release(This)
#define DispHTMLMetaElement_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define DispHTMLMetaElement_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define DispHTMLMetaElement_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define DispHTMLMetaElement_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
extern CLSID_HTMLMetaElement as const CLSID
#define __DispHTMLBaseElement_DISPINTERFACE_DEFINED__
extern DIID_DispHTMLBaseElement as const IID
type DispHTMLBaseElement as DispHTMLBaseElement_

type DispHTMLBaseElementVtbl
	QueryInterface as function(byval This as DispHTMLBaseElement ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as DispHTMLBaseElement ptr) as ULONG
	Release as function(byval This as DispHTMLBaseElement ptr) as ULONG
	GetTypeInfoCount as function(byval This as DispHTMLBaseElement ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as DispHTMLBaseElement ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as DispHTMLBaseElement ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as DispHTMLBaseElement ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type DispHTMLBaseElement_
	lpVtbl as DispHTMLBaseElementVtbl ptr
end type

#define DispHTMLBaseElement_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define DispHTMLBaseElement_AddRef(This) (This)->lpVtbl->AddRef(This)
#define DispHTMLBaseElement_Release(This) (This)->lpVtbl->Release(This)
#define DispHTMLBaseElement_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define DispHTMLBaseElement_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define DispHTMLBaseElement_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define DispHTMLBaseElement_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
extern CLSID_HTMLBaseElement as const CLSID
#define __DispHTMLIsIndexElement_DISPINTERFACE_DEFINED__
extern DIID_DispHTMLIsIndexElement as const IID
type DispHTMLIsIndexElement as DispHTMLIsIndexElement_

type DispHTMLIsIndexElementVtbl
	QueryInterface as function(byval This as DispHTMLIsIndexElement ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as DispHTMLIsIndexElement ptr) as ULONG
	Release as function(byval This as DispHTMLIsIndexElement ptr) as ULONG
	GetTypeInfoCount as function(byval This as DispHTMLIsIndexElement ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as DispHTMLIsIndexElement ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as DispHTMLIsIndexElement ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as DispHTMLIsIndexElement ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type DispHTMLIsIndexElement_
	lpVtbl as DispHTMLIsIndexElementVtbl ptr
end type

#define DispHTMLIsIndexElement_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define DispHTMLIsIndexElement_AddRef(This) (This)->lpVtbl->AddRef(This)
#define DispHTMLIsIndexElement_Release(This) (This)->lpVtbl->Release(This)
#define DispHTMLIsIndexElement_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define DispHTMLIsIndexElement_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define DispHTMLIsIndexElement_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define DispHTMLIsIndexElement_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
extern CLSID_HTMLIsIndexElement as const CLSID
#define __DispHTMLNextIdElement_DISPINTERFACE_DEFINED__
extern DIID_DispHTMLNextIdElement as const IID
type DispHTMLNextIdElement as DispHTMLNextIdElement_

type DispHTMLNextIdElementVtbl
	QueryInterface as function(byval This as DispHTMLNextIdElement ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as DispHTMLNextIdElement ptr) as ULONG
	Release as function(byval This as DispHTMLNextIdElement ptr) as ULONG
	GetTypeInfoCount as function(byval This as DispHTMLNextIdElement ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as DispHTMLNextIdElement ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as DispHTMLNextIdElement ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as DispHTMLNextIdElement ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type DispHTMLNextIdElement_
	lpVtbl as DispHTMLNextIdElementVtbl ptr
end type

#define DispHTMLNextIdElement_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define DispHTMLNextIdElement_AddRef(This) (This)->lpVtbl->AddRef(This)
#define DispHTMLNextIdElement_Release(This) (This)->lpVtbl->Release(This)
#define DispHTMLNextIdElement_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define DispHTMLNextIdElement_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define DispHTMLNextIdElement_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define DispHTMLNextIdElement_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
extern CLSID_HTMLNextIdElement as const CLSID
#define __IHTMLBaseFontElement_INTERFACE_DEFINED__
extern IID_IHTMLBaseFontElement as const IID
type IHTMLBaseFontElement as IHTMLBaseFontElement_

type IHTMLBaseFontElementVtbl
	QueryInterface as function(byval This as IHTMLBaseFontElement ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLBaseFontElement ptr) as ULONG
	Release as function(byval This as IHTMLBaseFontElement ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLBaseFontElement ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLBaseFontElement ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLBaseFontElement ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLBaseFontElement ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	put_color as function(byval This as IHTMLBaseFontElement ptr, byval v as VARIANT) as HRESULT
	get_color as function(byval This as IHTMLBaseFontElement ptr, byval p as VARIANT ptr) as HRESULT
	put_face as function(byval This as IHTMLBaseFontElement ptr, byval v as BSTR) as HRESULT
	get_face as function(byval This as IHTMLBaseFontElement ptr, byval p as BSTR ptr) as HRESULT
	put_size as function(byval This as IHTMLBaseFontElement ptr, byval v as long) as HRESULT
	get_size as function(byval This as IHTMLBaseFontElement ptr, byval p as long ptr) as HRESULT
end type

type IHTMLBaseFontElement_
	lpVtbl as IHTMLBaseFontElementVtbl ptr
end type

#define IHTMLBaseFontElement_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLBaseFontElement_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLBaseFontElement_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLBaseFontElement_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLBaseFontElement_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLBaseFontElement_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLBaseFontElement_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLBaseFontElement_put_color(This, v) (This)->lpVtbl->put_color(This, v)
#define IHTMLBaseFontElement_get_color(This, p) (This)->lpVtbl->get_color(This, p)
#define IHTMLBaseFontElement_put_face(This, v) (This)->lpVtbl->put_face(This, v)
#define IHTMLBaseFontElement_get_face(This, p) (This)->lpVtbl->get_face(This, p)
#define IHTMLBaseFontElement_put_size(This, v) (This)->lpVtbl->put_size(This, v)
#define IHTMLBaseFontElement_get_size(This, p) (This)->lpVtbl->get_size(This, p)

declare function IHTMLBaseFontElement_put_color_Proxy(byval This as IHTMLBaseFontElement ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLBaseFontElement_put_color_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLBaseFontElement_get_color_Proxy(byval This as IHTMLBaseFontElement ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLBaseFontElement_get_color_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLBaseFontElement_put_face_Proxy(byval This as IHTMLBaseFontElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLBaseFontElement_put_face_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLBaseFontElement_get_face_Proxy(byval This as IHTMLBaseFontElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLBaseFontElement_get_face_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLBaseFontElement_put_size_Proxy(byval This as IHTMLBaseFontElement ptr, byval v as long) as HRESULT
declare sub IHTMLBaseFontElement_put_size_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLBaseFontElement_get_size_Proxy(byval This as IHTMLBaseFontElement ptr, byval p as long ptr) as HRESULT
declare sub IHTMLBaseFontElement_get_size_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __DispHTMLBaseFontElement_DISPINTERFACE_DEFINED__
extern DIID_DispHTMLBaseFontElement as const IID
type DispHTMLBaseFontElement as DispHTMLBaseFontElement_

type DispHTMLBaseFontElementVtbl
	QueryInterface as function(byval This as DispHTMLBaseFontElement ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as DispHTMLBaseFontElement ptr) as ULONG
	Release as function(byval This as DispHTMLBaseFontElement ptr) as ULONG
	GetTypeInfoCount as function(byval This as DispHTMLBaseFontElement ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as DispHTMLBaseFontElement ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as DispHTMLBaseFontElement ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as DispHTMLBaseFontElement ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type DispHTMLBaseFontElement_
	lpVtbl as DispHTMLBaseFontElementVtbl ptr
end type

#define DispHTMLBaseFontElement_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define DispHTMLBaseFontElement_AddRef(This) (This)->lpVtbl->AddRef(This)
#define DispHTMLBaseFontElement_Release(This) (This)->lpVtbl->Release(This)
#define DispHTMLBaseFontElement_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define DispHTMLBaseFontElement_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define DispHTMLBaseFontElement_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define DispHTMLBaseFontElement_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
extern CLSID_HTMLBaseFontElement as const CLSID
#define __IHTMLUnknownElement_INTERFACE_DEFINED__
extern IID_IHTMLUnknownElement as const IID
type IHTMLUnknownElement as IHTMLUnknownElement_

type IHTMLUnknownElementVtbl
	QueryInterface as function(byval This as IHTMLUnknownElement ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLUnknownElement ptr) as ULONG
	Release as function(byval This as IHTMLUnknownElement ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLUnknownElement ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLUnknownElement ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLUnknownElement ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLUnknownElement ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type IHTMLUnknownElement_
	lpVtbl as IHTMLUnknownElementVtbl ptr
end type

#define IHTMLUnknownElement_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLUnknownElement_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLUnknownElement_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLUnknownElement_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLUnknownElement_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLUnknownElement_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLUnknownElement_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define __DispHTMLUnknownElement_DISPINTERFACE_DEFINED__
extern DIID_DispHTMLUnknownElement as const IID
type DispHTMLUnknownElement as DispHTMLUnknownElement_

type DispHTMLUnknownElementVtbl
	QueryInterface as function(byval This as DispHTMLUnknownElement ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as DispHTMLUnknownElement ptr) as ULONG
	Release as function(byval This as DispHTMLUnknownElement ptr) as ULONG
	GetTypeInfoCount as function(byval This as DispHTMLUnknownElement ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as DispHTMLUnknownElement ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as DispHTMLUnknownElement ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as DispHTMLUnknownElement ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type DispHTMLUnknownElement_
	lpVtbl as DispHTMLUnknownElementVtbl ptr
end type

#define DispHTMLUnknownElement_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define DispHTMLUnknownElement_AddRef(This) (This)->lpVtbl->AddRef(This)
#define DispHTMLUnknownElement_Release(This) (This)->lpVtbl->Release(This)
#define DispHTMLUnknownElement_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define DispHTMLUnknownElement_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define DispHTMLUnknownElement_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define DispHTMLUnknownElement_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
extern CLSID_HTMLUnknownElement as const CLSID
#define __IOmHistory_INTERFACE_DEFINED__
extern IID_IOmHistory as const IID
type IOmHistory as IOmHistory_

type IOmHistoryVtbl
	QueryInterface as function(byval This as IOmHistory ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IOmHistory ptr) as ULONG
	Release as function(byval This as IOmHistory ptr) as ULONG
	GetTypeInfoCount as function(byval This as IOmHistory ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IOmHistory ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IOmHistory ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IOmHistory ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	get_length as function(byval This as IOmHistory ptr, byval p as short ptr) as HRESULT
	back as function(byval This as IOmHistory ptr, byval pvargdistance as VARIANT ptr) as HRESULT
	forward as function(byval This as IOmHistory ptr, byval pvargdistance as VARIANT ptr) as HRESULT
	go as function(byval This as IOmHistory ptr, byval pvargdistance as VARIANT ptr) as HRESULT
end type

type IOmHistory_
	lpVtbl as IOmHistoryVtbl ptr
end type

#define IOmHistory_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IOmHistory_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IOmHistory_Release(This) (This)->lpVtbl->Release(This)
#define IOmHistory_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IOmHistory_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IOmHistory_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IOmHistory_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IOmHistory_get_length(This, p) (This)->lpVtbl->get_length(This, p)
#define IOmHistory_back(This, pvargdistance) (This)->lpVtbl->back(This, pvargdistance)
#define IOmHistory_forward(This, pvargdistance) (This)->lpVtbl->forward(This, pvargdistance)
#define IOmHistory_go(This, pvargdistance) (This)->lpVtbl->go(This, pvargdistance)

declare function IOmHistory_get_length_Proxy(byval This as IOmHistory ptr, byval p as short ptr) as HRESULT
declare sub IOmHistory_get_length_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IOmHistory_back_Proxy(byval This as IOmHistory ptr, byval pvargdistance as VARIANT ptr) as HRESULT
declare sub IOmHistory_back_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IOmHistory_forward_Proxy(byval This as IOmHistory ptr, byval pvargdistance as VARIANT ptr) as HRESULT
declare sub IOmHistory_forward_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IOmHistory_go_Proxy(byval This as IOmHistory ptr, byval pvargdistance as VARIANT ptr) as HRESULT
declare sub IOmHistory_go_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLMimeTypesCollection_INTERFACE_DEFINED__
extern IID_IHTMLMimeTypesCollection as const IID
type IHTMLMimeTypesCollection as IHTMLMimeTypesCollection_

type IHTMLMimeTypesCollectionVtbl
	QueryInterface as function(byval This as IHTMLMimeTypesCollection ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLMimeTypesCollection ptr) as ULONG
	Release as function(byval This as IHTMLMimeTypesCollection ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLMimeTypesCollection ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLMimeTypesCollection ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLMimeTypesCollection ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLMimeTypesCollection ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	get_length as function(byval This as IHTMLMimeTypesCollection ptr, byval p as long ptr) as HRESULT
end type

type IHTMLMimeTypesCollection_
	lpVtbl as IHTMLMimeTypesCollectionVtbl ptr
end type

#define IHTMLMimeTypesCollection_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLMimeTypesCollection_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLMimeTypesCollection_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLMimeTypesCollection_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLMimeTypesCollection_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLMimeTypesCollection_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLMimeTypesCollection_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLMimeTypesCollection_get_length(This, p) (This)->lpVtbl->get_length(This, p)
declare function IHTMLMimeTypesCollection_get_length_Proxy(byval This as IHTMLMimeTypesCollection ptr, byval p as long ptr) as HRESULT
declare sub IHTMLMimeTypesCollection_get_length_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLPluginsCollection_INTERFACE_DEFINED__
extern IID_IHTMLPluginsCollection as const IID
type IHTMLPluginsCollection as IHTMLPluginsCollection_

type IHTMLPluginsCollectionVtbl
	QueryInterface as function(byval This as IHTMLPluginsCollection ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLPluginsCollection ptr) as ULONG
	Release as function(byval This as IHTMLPluginsCollection ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLPluginsCollection ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLPluginsCollection ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLPluginsCollection ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLPluginsCollection ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	get_length as function(byval This as IHTMLPluginsCollection ptr, byval p as long ptr) as HRESULT
	refresh as function(byval This as IHTMLPluginsCollection ptr, byval reload as VARIANT_BOOL) as HRESULT
end type

type IHTMLPluginsCollection_
	lpVtbl as IHTMLPluginsCollectionVtbl ptr
end type

#define IHTMLPluginsCollection_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLPluginsCollection_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLPluginsCollection_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLPluginsCollection_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLPluginsCollection_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLPluginsCollection_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLPluginsCollection_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLPluginsCollection_get_length(This, p) (This)->lpVtbl->get_length(This, p)
#define IHTMLPluginsCollection_refresh(This, reload) (This)->lpVtbl->refresh(This, reload)

declare function IHTMLPluginsCollection_get_length_Proxy(byval This as IHTMLPluginsCollection ptr, byval p as long ptr) as HRESULT
declare sub IHTMLPluginsCollection_get_length_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLPluginsCollection_refresh_Proxy(byval This as IHTMLPluginsCollection ptr, byval reload as VARIANT_BOOL) as HRESULT
declare sub IHTMLPluginsCollection_refresh_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLOpsProfile_INTERFACE_DEFINED__
extern IID_IHTMLOpsProfile as const IID
type IHTMLOpsProfile as IHTMLOpsProfile_

type IHTMLOpsProfileVtbl
	QueryInterface as function(byval This as IHTMLOpsProfile ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLOpsProfile ptr) as ULONG
	Release as function(byval This as IHTMLOpsProfile ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLOpsProfile ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLOpsProfile ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLOpsProfile ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLOpsProfile ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	addRequest as function(byval This as IHTMLOpsProfile ptr, byval name as BSTR, byval reserved as VARIANT, byval success as VARIANT_BOOL ptr) as HRESULT
	clearRequest as function(byval This as IHTMLOpsProfile ptr) as HRESULT
	doRequest as function(byval This as IHTMLOpsProfile ptr, byval usage as VARIANT, byval fname as VARIANT, byval domain as VARIANT, byval path as VARIANT, byval expire as VARIANT, byval reserved as VARIANT) as HRESULT
	getAttribute as function(byval This as IHTMLOpsProfile ptr, byval name as BSTR, byval value as BSTR ptr) as HRESULT
	setAttribute as function(byval This as IHTMLOpsProfile ptr, byval name as BSTR, byval value as BSTR, byval prefs as VARIANT, byval success as VARIANT_BOOL ptr) as HRESULT
	commitChanges as function(byval This as IHTMLOpsProfile ptr, byval success as VARIANT_BOOL ptr) as HRESULT
	addReadRequest as function(byval This as IHTMLOpsProfile ptr, byval name as BSTR, byval reserved as VARIANT, byval success as VARIANT_BOOL ptr) as HRESULT
	doReadRequest as function(byval This as IHTMLOpsProfile ptr, byval usage as VARIANT, byval fname as VARIANT, byval domain as VARIANT, byval path as VARIANT, byval expire as VARIANT, byval reserved as VARIANT) as HRESULT
	doWriteRequest as function(byval This as IHTMLOpsProfile ptr, byval success as VARIANT_BOOL ptr) as HRESULT
end type

type IHTMLOpsProfile_
	lpVtbl as IHTMLOpsProfileVtbl ptr
end type

#define IHTMLOpsProfile_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLOpsProfile_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLOpsProfile_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLOpsProfile_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLOpsProfile_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLOpsProfile_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLOpsProfile_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLOpsProfile_addRequest(This, name, reserved, success) (This)->lpVtbl->addRequest(This, name, reserved, success)
#define IHTMLOpsProfile_clearRequest(This) (This)->lpVtbl->clearRequest(This)
#define IHTMLOpsProfile_doRequest(This, usage, fname, domain, path, expire, reserved) (This)->lpVtbl->doRequest(This, usage, fname, domain, path, expire, reserved)
#define IHTMLOpsProfile_getAttribute(This, name, value) (This)->lpVtbl->getAttribute(This, name, value)
#define IHTMLOpsProfile_setAttribute(This, name, value, prefs, success) (This)->lpVtbl->setAttribute(This, name, value, prefs, success)
#define IHTMLOpsProfile_commitChanges(This, success) (This)->lpVtbl->commitChanges(This, success)
#define IHTMLOpsProfile_addReadRequest(This, name, reserved, success) (This)->lpVtbl->addReadRequest(This, name, reserved, success)
#define IHTMLOpsProfile_doReadRequest(This, usage, fname, domain, path, expire, reserved) (This)->lpVtbl->doReadRequest(This, usage, fname, domain, path, expire, reserved)
#define IHTMLOpsProfile_doWriteRequest(This, success) (This)->lpVtbl->doWriteRequest(This, success)

declare function IHTMLOpsProfile_addRequest_Proxy(byval This as IHTMLOpsProfile ptr, byval name as BSTR, byval reserved as VARIANT, byval success as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLOpsProfile_addRequest_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLOpsProfile_clearRequest_Proxy(byval This as IHTMLOpsProfile ptr) as HRESULT
declare sub IHTMLOpsProfile_clearRequest_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLOpsProfile_doRequest_Proxy(byval This as IHTMLOpsProfile ptr, byval usage as VARIANT, byval fname as VARIANT, byval domain as VARIANT, byval path as VARIANT, byval expire as VARIANT, byval reserved as VARIANT) as HRESULT
declare sub IHTMLOpsProfile_doRequest_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLOpsProfile_getAttribute_Proxy(byval This as IHTMLOpsProfile ptr, byval name as BSTR, byval value as BSTR ptr) as HRESULT
declare sub IHTMLOpsProfile_getAttribute_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLOpsProfile_setAttribute_Proxy(byval This as IHTMLOpsProfile ptr, byval name as BSTR, byval value as BSTR, byval prefs as VARIANT, byval success as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLOpsProfile_setAttribute_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLOpsProfile_commitChanges_Proxy(byval This as IHTMLOpsProfile ptr, byval success as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLOpsProfile_commitChanges_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLOpsProfile_addReadRequest_Proxy(byval This as IHTMLOpsProfile ptr, byval name as BSTR, byval reserved as VARIANT, byval success as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLOpsProfile_addReadRequest_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLOpsProfile_doReadRequest_Proxy(byval This as IHTMLOpsProfile ptr, byval usage as VARIANT, byval fname as VARIANT, byval domain as VARIANT, byval path as VARIANT, byval expire as VARIANT, byval reserved as VARIANT) as HRESULT
declare sub IHTMLOpsProfile_doReadRequest_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLOpsProfile_doWriteRequest_Proxy(byval This as IHTMLOpsProfile ptr, byval success as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLOpsProfile_doWriteRequest_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IOmNavigator_INTERFACE_DEFINED__
extern IID_IOmNavigator as const IID
type IOmNavigator as IOmNavigator_

type IOmNavigatorVtbl
	QueryInterface as function(byval This as IOmNavigator ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IOmNavigator ptr) as ULONG
	Release as function(byval This as IOmNavigator ptr) as ULONG
	GetTypeInfoCount as function(byval This as IOmNavigator ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IOmNavigator ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IOmNavigator ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IOmNavigator ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	get_appCodeName as function(byval This as IOmNavigator ptr, byval p as BSTR ptr) as HRESULT
	get_appName as function(byval This as IOmNavigator ptr, byval p as BSTR ptr) as HRESULT
	get_appVersion as function(byval This as IOmNavigator ptr, byval p as BSTR ptr) as HRESULT
	get_userAgent as function(byval This as IOmNavigator ptr, byval p as BSTR ptr) as HRESULT
	javaEnabled as function(byval This as IOmNavigator ptr, byval enabled as VARIANT_BOOL ptr) as HRESULT
	taintEnabled as function(byval This as IOmNavigator ptr, byval enabled as VARIANT_BOOL ptr) as HRESULT
	get_mimeTypes as function(byval This as IOmNavigator ptr, byval p as IHTMLMimeTypesCollection ptr ptr) as HRESULT
	get_plugins as function(byval This as IOmNavigator ptr, byval p as IHTMLPluginsCollection ptr ptr) as HRESULT
	get_cookieEnabled as function(byval This as IOmNavigator ptr, byval p as VARIANT_BOOL ptr) as HRESULT
	get_opsProfile as function(byval This as IOmNavigator ptr, byval p as IHTMLOpsProfile ptr ptr) as HRESULT
	toString as function(byval This as IOmNavigator ptr, byval string as BSTR ptr) as HRESULT
	get_cpuClass as function(byval This as IOmNavigator ptr, byval p as BSTR ptr) as HRESULT
	get_systemLanguage as function(byval This as IOmNavigator ptr, byval p as BSTR ptr) as HRESULT
	get_browserLanguage as function(byval This as IOmNavigator ptr, byval p as BSTR ptr) as HRESULT
	get_userLanguage as function(byval This as IOmNavigator ptr, byval p as BSTR ptr) as HRESULT
	get_platform as function(byval This as IOmNavigator ptr, byval p as BSTR ptr) as HRESULT
	get_appMinorVersion as function(byval This as IOmNavigator ptr, byval p as BSTR ptr) as HRESULT
	get_connectionSpeed as function(byval This as IOmNavigator ptr, byval p as long ptr) as HRESULT
	get_onLine as function(byval This as IOmNavigator ptr, byval p as VARIANT_BOOL ptr) as HRESULT
	get_userProfile as function(byval This as IOmNavigator ptr, byval p as IHTMLOpsProfile ptr ptr) as HRESULT
end type

type IOmNavigator_
	lpVtbl as IOmNavigatorVtbl ptr
end type

#define IOmNavigator_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IOmNavigator_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IOmNavigator_Release(This) (This)->lpVtbl->Release(This)
#define IOmNavigator_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IOmNavigator_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IOmNavigator_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IOmNavigator_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IOmNavigator_get_appCodeName(This, p) (This)->lpVtbl->get_appCodeName(This, p)
#define IOmNavigator_get_appName(This, p) (This)->lpVtbl->get_appName(This, p)
#define IOmNavigator_get_appVersion(This, p) (This)->lpVtbl->get_appVersion(This, p)
#define IOmNavigator_get_userAgent(This, p) (This)->lpVtbl->get_userAgent(This, p)
#define IOmNavigator_javaEnabled(This, enabled) (This)->lpVtbl->javaEnabled(This, enabled)
#define IOmNavigator_taintEnabled(This, enabled) (This)->lpVtbl->taintEnabled(This, enabled)
#define IOmNavigator_get_mimeTypes(This, p) (This)->lpVtbl->get_mimeTypes(This, p)
#define IOmNavigator_get_plugins(This, p) (This)->lpVtbl->get_plugins(This, p)
#define IOmNavigator_get_cookieEnabled(This, p) (This)->lpVtbl->get_cookieEnabled(This, p)
#define IOmNavigator_get_opsProfile(This, p) (This)->lpVtbl->get_opsProfile(This, p)
#define IOmNavigator_toString(This, string) (This)->lpVtbl->toString(This, string)
#define IOmNavigator_get_cpuClass(This, p) (This)->lpVtbl->get_cpuClass(This, p)
#define IOmNavigator_get_systemLanguage(This, p) (This)->lpVtbl->get_systemLanguage(This, p)
#define IOmNavigator_get_browserLanguage(This, p) (This)->lpVtbl->get_browserLanguage(This, p)
#define IOmNavigator_get_userLanguage(This, p) (This)->lpVtbl->get_userLanguage(This, p)
#define IOmNavigator_get_platform(This, p) (This)->lpVtbl->get_platform(This, p)
#define IOmNavigator_get_appMinorVersion(This, p) (This)->lpVtbl->get_appMinorVersion(This, p)
#define IOmNavigator_get_connectionSpeed(This, p) (This)->lpVtbl->get_connectionSpeed(This, p)
#define IOmNavigator_get_onLine(This, p) (This)->lpVtbl->get_onLine(This, p)
#define IOmNavigator_get_userProfile(This, p) (This)->lpVtbl->get_userProfile(This, p)

declare function IOmNavigator_get_appCodeName_Proxy(byval This as IOmNavigator ptr, byval p as BSTR ptr) as HRESULT
declare sub IOmNavigator_get_appCodeName_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IOmNavigator_get_appName_Proxy(byval This as IOmNavigator ptr, byval p as BSTR ptr) as HRESULT
declare sub IOmNavigator_get_appName_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IOmNavigator_get_appVersion_Proxy(byval This as IOmNavigator ptr, byval p as BSTR ptr) as HRESULT
declare sub IOmNavigator_get_appVersion_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IOmNavigator_get_userAgent_Proxy(byval This as IOmNavigator ptr, byval p as BSTR ptr) as HRESULT
declare sub IOmNavigator_get_userAgent_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IOmNavigator_javaEnabled_Proxy(byval This as IOmNavigator ptr, byval enabled as VARIANT_BOOL ptr) as HRESULT
declare sub IOmNavigator_javaEnabled_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IOmNavigator_taintEnabled_Proxy(byval This as IOmNavigator ptr, byval enabled as VARIANT_BOOL ptr) as HRESULT
declare sub IOmNavigator_taintEnabled_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IOmNavigator_get_mimeTypes_Proxy(byval This as IOmNavigator ptr, byval p as IHTMLMimeTypesCollection ptr ptr) as HRESULT
declare sub IOmNavigator_get_mimeTypes_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IOmNavigator_get_plugins_Proxy(byval This as IOmNavigator ptr, byval p as IHTMLPluginsCollection ptr ptr) as HRESULT
declare sub IOmNavigator_get_plugins_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IOmNavigator_get_cookieEnabled_Proxy(byval This as IOmNavigator ptr, byval p as VARIANT_BOOL ptr) as HRESULT
declare sub IOmNavigator_get_cookieEnabled_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IOmNavigator_get_opsProfile_Proxy(byval This as IOmNavigator ptr, byval p as IHTMLOpsProfile ptr ptr) as HRESULT
declare sub IOmNavigator_get_opsProfile_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IOmNavigator_toString_Proxy(byval This as IOmNavigator ptr, byval string as BSTR ptr) as HRESULT
declare sub IOmNavigator_toString_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IOmNavigator_get_cpuClass_Proxy(byval This as IOmNavigator ptr, byval p as BSTR ptr) as HRESULT
declare sub IOmNavigator_get_cpuClass_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IOmNavigator_get_systemLanguage_Proxy(byval This as IOmNavigator ptr, byval p as BSTR ptr) as HRESULT
declare sub IOmNavigator_get_systemLanguage_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IOmNavigator_get_browserLanguage_Proxy(byval This as IOmNavigator ptr, byval p as BSTR ptr) as HRESULT
declare sub IOmNavigator_get_browserLanguage_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IOmNavigator_get_userLanguage_Proxy(byval This as IOmNavigator ptr, byval p as BSTR ptr) as HRESULT
declare sub IOmNavigator_get_userLanguage_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IOmNavigator_get_platform_Proxy(byval This as IOmNavigator ptr, byval p as BSTR ptr) as HRESULT
declare sub IOmNavigator_get_platform_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IOmNavigator_get_appMinorVersion_Proxy(byval This as IOmNavigator ptr, byval p as BSTR ptr) as HRESULT
declare sub IOmNavigator_get_appMinorVersion_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IOmNavigator_get_connectionSpeed_Proxy(byval This as IOmNavigator ptr, byval p as long ptr) as HRESULT
declare sub IOmNavigator_get_connectionSpeed_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IOmNavigator_get_onLine_Proxy(byval This as IOmNavigator ptr, byval p as VARIANT_BOOL ptr) as HRESULT
declare sub IOmNavigator_get_onLine_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IOmNavigator_get_userProfile_Proxy(byval This as IOmNavigator ptr, byval p as IHTMLOpsProfile ptr ptr) as HRESULT
declare sub IOmNavigator_get_userProfile_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLLocation_INTERFACE_DEFINED__
extern IID_IHTMLLocation as const IID
type IHTMLLocation as IHTMLLocation_

type IHTMLLocationVtbl
	QueryInterface as function(byval This as IHTMLLocation ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLLocation ptr) as ULONG
	Release as function(byval This as IHTMLLocation ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLLocation ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLLocation ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLLocation ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLLocation ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	put_href as function(byval This as IHTMLLocation ptr, byval v as BSTR) as HRESULT
	get_href as function(byval This as IHTMLLocation ptr, byval p as BSTR ptr) as HRESULT
	put_protocol as function(byval This as IHTMLLocation ptr, byval v as BSTR) as HRESULT
	get_protocol as function(byval This as IHTMLLocation ptr, byval p as BSTR ptr) as HRESULT
	put_host as function(byval This as IHTMLLocation ptr, byval v as BSTR) as HRESULT
	get_host as function(byval This as IHTMLLocation ptr, byval p as BSTR ptr) as HRESULT
	put_hostname as function(byval This as IHTMLLocation ptr, byval v as BSTR) as HRESULT
	get_hostname as function(byval This as IHTMLLocation ptr, byval p as BSTR ptr) as HRESULT
	put_port as function(byval This as IHTMLLocation ptr, byval v as BSTR) as HRESULT
	get_port as function(byval This as IHTMLLocation ptr, byval p as BSTR ptr) as HRESULT
	put_pathname as function(byval This as IHTMLLocation ptr, byval v as BSTR) as HRESULT
	get_pathname as function(byval This as IHTMLLocation ptr, byval p as BSTR ptr) as HRESULT
	put_search as function(byval This as IHTMLLocation ptr, byval v as BSTR) as HRESULT
	get_search as function(byval This as IHTMLLocation ptr, byval p as BSTR ptr) as HRESULT
	put_hash as function(byval This as IHTMLLocation ptr, byval v as BSTR) as HRESULT
	get_hash as function(byval This as IHTMLLocation ptr, byval p as BSTR ptr) as HRESULT
	reload as function(byval This as IHTMLLocation ptr, byval flag as VARIANT_BOOL) as HRESULT
	replace as function(byval This as IHTMLLocation ptr, byval bstr as BSTR) as HRESULT
	assign as function(byval This as IHTMLLocation ptr, byval bstr as BSTR) as HRESULT
	toString as function(byval This as IHTMLLocation ptr, byval string as BSTR ptr) as HRESULT
end type

type IHTMLLocation_
	lpVtbl as IHTMLLocationVtbl ptr
end type

#define IHTMLLocation_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLLocation_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLLocation_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLLocation_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLLocation_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLLocation_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLLocation_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLLocation_put_href(This, v) (This)->lpVtbl->put_href(This, v)
#define IHTMLLocation_get_href(This, p) (This)->lpVtbl->get_href(This, p)
#define IHTMLLocation_put_protocol(This, v) (This)->lpVtbl->put_protocol(This, v)
#define IHTMLLocation_get_protocol(This, p) (This)->lpVtbl->get_protocol(This, p)
#define IHTMLLocation_put_host(This, v) (This)->lpVtbl->put_host(This, v)
#define IHTMLLocation_get_host(This, p) (This)->lpVtbl->get_host(This, p)
#define IHTMLLocation_put_hostname(This, v) (This)->lpVtbl->put_hostname(This, v)
#define IHTMLLocation_get_hostname(This, p) (This)->lpVtbl->get_hostname(This, p)
#define IHTMLLocation_put_port(This, v) (This)->lpVtbl->put_port(This, v)
#define IHTMLLocation_get_port(This, p) (This)->lpVtbl->get_port(This, p)
#define IHTMLLocation_put_pathname(This, v) (This)->lpVtbl->put_pathname(This, v)
#define IHTMLLocation_get_pathname(This, p) (This)->lpVtbl->get_pathname(This, p)
#define IHTMLLocation_put_search(This, v) (This)->lpVtbl->put_search(This, v)
#define IHTMLLocation_get_search(This, p) (This)->lpVtbl->get_search(This, p)
#define IHTMLLocation_put_hash(This, v) (This)->lpVtbl->put_hash(This, v)
#define IHTMLLocation_get_hash(This, p) (This)->lpVtbl->get_hash(This, p)
#define IHTMLLocation_reload(This, flag) (This)->lpVtbl->reload(This, flag)
#define IHTMLLocation_replace(This, bstr) (This)->lpVtbl->replace(This, bstr)
#define IHTMLLocation_assign(This, bstr) (This)->lpVtbl->assign(This, bstr)
#define IHTMLLocation_toString(This, string) (This)->lpVtbl->toString(This, string)

declare function IHTMLLocation_put_href_Proxy(byval This as IHTMLLocation ptr, byval v as BSTR) as HRESULT
declare sub IHTMLLocation_put_href_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLLocation_get_href_Proxy(byval This as IHTMLLocation ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLLocation_get_href_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLLocation_put_protocol_Proxy(byval This as IHTMLLocation ptr, byval v as BSTR) as HRESULT
declare sub IHTMLLocation_put_protocol_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLLocation_get_protocol_Proxy(byval This as IHTMLLocation ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLLocation_get_protocol_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLLocation_put_host_Proxy(byval This as IHTMLLocation ptr, byval v as BSTR) as HRESULT
declare sub IHTMLLocation_put_host_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLLocation_get_host_Proxy(byval This as IHTMLLocation ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLLocation_get_host_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLLocation_put_hostname_Proxy(byval This as IHTMLLocation ptr, byval v as BSTR) as HRESULT
declare sub IHTMLLocation_put_hostname_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLLocation_get_hostname_Proxy(byval This as IHTMLLocation ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLLocation_get_hostname_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLLocation_put_port_Proxy(byval This as IHTMLLocation ptr, byval v as BSTR) as HRESULT
declare sub IHTMLLocation_put_port_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLLocation_get_port_Proxy(byval This as IHTMLLocation ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLLocation_get_port_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLLocation_put_pathname_Proxy(byval This as IHTMLLocation ptr, byval v as BSTR) as HRESULT
declare sub IHTMLLocation_put_pathname_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLLocation_get_pathname_Proxy(byval This as IHTMLLocation ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLLocation_get_pathname_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLLocation_put_search_Proxy(byval This as IHTMLLocation ptr, byval v as BSTR) as HRESULT
declare sub IHTMLLocation_put_search_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLLocation_get_search_Proxy(byval This as IHTMLLocation ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLLocation_get_search_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLLocation_put_hash_Proxy(byval This as IHTMLLocation ptr, byval v as BSTR) as HRESULT
declare sub IHTMLLocation_put_hash_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLLocation_get_hash_Proxy(byval This as IHTMLLocation ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLLocation_get_hash_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLLocation_reload_Proxy(byval This as IHTMLLocation ptr, byval flag as VARIANT_BOOL) as HRESULT
declare sub IHTMLLocation_reload_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLLocation_replace_Proxy(byval This as IHTMLLocation ptr, byval bstr as BSTR) as HRESULT
declare sub IHTMLLocation_replace_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLLocation_assign_Proxy(byval This as IHTMLLocation ptr, byval bstr as BSTR) as HRESULT
declare sub IHTMLLocation_assign_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLLocation_toString_Proxy(byval This as IHTMLLocation ptr, byval string as BSTR ptr) as HRESULT
declare sub IHTMLLocation_toString_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)

extern CLSID_HTMLHistory as const CLSID
extern CLSID_CMimeTypes as const CLSID
extern CLSID_CPlugins as const CLSID
extern CLSID_COpsProfile as const CLSID
extern CLSID_HTMLNavigator as const CLSID
extern CLSID_HTMLLocation as const CLSID
#define __IHTMLBookmarkCollection_INTERFACE_DEFINED__
extern IID_IHTMLBookmarkCollection as const IID
type IHTMLBookmarkCollection as IHTMLBookmarkCollection_

type IHTMLBookmarkCollectionVtbl
	QueryInterface as function(byval This as IHTMLBookmarkCollection ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLBookmarkCollection ptr) as ULONG
	Release as function(byval This as IHTMLBookmarkCollection ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLBookmarkCollection ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLBookmarkCollection ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLBookmarkCollection ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLBookmarkCollection ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	get_length as function(byval This as IHTMLBookmarkCollection ptr, byval p as long ptr) as HRESULT
	get__newEnum as function(byval This as IHTMLBookmarkCollection ptr, byval p as IUnknown ptr ptr) as HRESULT
	item as function(byval This as IHTMLBookmarkCollection ptr, byval index as long, byval pVarBookmark as VARIANT ptr) as HRESULT
end type

type IHTMLBookmarkCollection_
	lpVtbl as IHTMLBookmarkCollectionVtbl ptr
end type

#define IHTMLBookmarkCollection_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLBookmarkCollection_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLBookmarkCollection_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLBookmarkCollection_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLBookmarkCollection_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLBookmarkCollection_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLBookmarkCollection_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLBookmarkCollection_get_length(This, p) (This)->lpVtbl->get_length(This, p)
#define IHTMLBookmarkCollection_get__newEnum(This, p) (This)->lpVtbl->get__newEnum(This, p)
#define IHTMLBookmarkCollection_item(This, index, pVarBookmark) (This)->lpVtbl->item(This, index, pVarBookmark)

declare function IHTMLBookmarkCollection_get_length_Proxy(byval This as IHTMLBookmarkCollection ptr, byval p as long ptr) as HRESULT
declare sub IHTMLBookmarkCollection_get_length_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLBookmarkCollection_get__newEnum_Proxy(byval This as IHTMLBookmarkCollection ptr, byval p as IUnknown ptr ptr) as HRESULT
declare sub IHTMLBookmarkCollection_get__newEnum_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLBookmarkCollection_item_Proxy(byval This as IHTMLBookmarkCollection ptr, byval index as long, byval pVarBookmark as VARIANT ptr) as HRESULT
declare sub IHTMLBookmarkCollection_item_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLDataTransfer_INTERFACE_DEFINED__
extern IID_IHTMLDataTransfer as const IID
type IHTMLDataTransfer as IHTMLDataTransfer_

type IHTMLDataTransferVtbl
	QueryInterface as function(byval This as IHTMLDataTransfer ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLDataTransfer ptr) as ULONG
	Release as function(byval This as IHTMLDataTransfer ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLDataTransfer ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLDataTransfer ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLDataTransfer ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLDataTransfer ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	setData as function(byval This as IHTMLDataTransfer ptr, byval format as BSTR, byval data as VARIANT ptr, byval pret as VARIANT_BOOL ptr) as HRESULT
	getData as function(byval This as IHTMLDataTransfer ptr, byval format as BSTR, byval pvarRet as VARIANT ptr) as HRESULT
	clearData as function(byval This as IHTMLDataTransfer ptr, byval format as BSTR, byval pret as VARIANT_BOOL ptr) as HRESULT
	put_dropEffect as function(byval This as IHTMLDataTransfer ptr, byval v as BSTR) as HRESULT
	get_dropEffect as function(byval This as IHTMLDataTransfer ptr, byval p as BSTR ptr) as HRESULT
	put_effectAllowed as function(byval This as IHTMLDataTransfer ptr, byval v as BSTR) as HRESULT
	get_effectAllowed as function(byval This as IHTMLDataTransfer ptr, byval p as BSTR ptr) as HRESULT
end type

type IHTMLDataTransfer_
	lpVtbl as IHTMLDataTransferVtbl ptr
end type

#define IHTMLDataTransfer_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLDataTransfer_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLDataTransfer_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLDataTransfer_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLDataTransfer_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLDataTransfer_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLDataTransfer_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLDataTransfer_setData(This, format, data, pret) (This)->lpVtbl->setData(This, format, data, pret)
#define IHTMLDataTransfer_getData(This, format, pvarRet) (This)->lpVtbl->getData(This, format, pvarRet)
#define IHTMLDataTransfer_clearData(This, format, pret) (This)->lpVtbl->clearData(This, format, pret)
#define IHTMLDataTransfer_put_dropEffect(This, v) (This)->lpVtbl->put_dropEffect(This, v)
#define IHTMLDataTransfer_get_dropEffect(This, p) (This)->lpVtbl->get_dropEffect(This, p)
#define IHTMLDataTransfer_put_effectAllowed(This, v) (This)->lpVtbl->put_effectAllowed(This, v)
#define IHTMLDataTransfer_get_effectAllowed(This, p) (This)->lpVtbl->get_effectAllowed(This, p)

declare function IHTMLDataTransfer_setData_Proxy(byval This as IHTMLDataTransfer ptr, byval format as BSTR, byval data as VARIANT ptr, byval pret as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLDataTransfer_setData_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDataTransfer_getData_Proxy(byval This as IHTMLDataTransfer ptr, byval format as BSTR, byval pvarRet as VARIANT ptr) as HRESULT
declare sub IHTMLDataTransfer_getData_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDataTransfer_clearData_Proxy(byval This as IHTMLDataTransfer ptr, byval format as BSTR, byval pret as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLDataTransfer_clearData_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDataTransfer_put_dropEffect_Proxy(byval This as IHTMLDataTransfer ptr, byval v as BSTR) as HRESULT
declare sub IHTMLDataTransfer_put_dropEffect_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDataTransfer_get_dropEffect_Proxy(byval This as IHTMLDataTransfer ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLDataTransfer_get_dropEffect_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDataTransfer_put_effectAllowed_Proxy(byval This as IHTMLDataTransfer ptr, byval v as BSTR) as HRESULT
declare sub IHTMLDataTransfer_put_effectAllowed_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDataTransfer_get_effectAllowed_Proxy(byval This as IHTMLDataTransfer ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLDataTransfer_get_effectAllowed_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLEventObj2_INTERFACE_DEFINED__
extern IID_IHTMLEventObj2 as const IID
type IHTMLEventObj2 as IHTMLEventObj2_

type IHTMLEventObj2Vtbl
	QueryInterface as function(byval This as IHTMLEventObj2 ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLEventObj2 ptr) as ULONG
	Release as function(byval This as IHTMLEventObj2 ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLEventObj2 ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLEventObj2 ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLEventObj2 ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLEventObj2 ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	setAttribute as function(byval This as IHTMLEventObj2 ptr, byval strAttributeName as BSTR, byval AttributeValue as VARIANT, byval lFlags as LONG) as HRESULT
	getAttribute as function(byval This as IHTMLEventObj2 ptr, byval strAttributeName as BSTR, byval lFlags as LONG, byval AttributeValue as VARIANT ptr) as HRESULT
	removeAttribute as function(byval This as IHTMLEventObj2 ptr, byval strAttributeName as BSTR, byval lFlags as LONG, byval pfSuccess as VARIANT_BOOL ptr) as HRESULT
	put_propertyName as function(byval This as IHTMLEventObj2 ptr, byval v as BSTR) as HRESULT
	get_propertyName as function(byval This as IHTMLEventObj2 ptr, byval p as BSTR ptr) as HRESULT
	putref_bookmarks as function(byval This as IHTMLEventObj2 ptr, byval v as IHTMLBookmarkCollection ptr) as HRESULT
	get_bookmarks as function(byval This as IHTMLEventObj2 ptr, byval p as IHTMLBookmarkCollection ptr ptr) as HRESULT
	putref_recordset as function(byval This as IHTMLEventObj2 ptr, byval v as IDispatch ptr) as HRESULT
	get_recordset as function(byval This as IHTMLEventObj2 ptr, byval p as IDispatch ptr ptr) as HRESULT
	put_dataFld as function(byval This as IHTMLEventObj2 ptr, byval v as BSTR) as HRESULT
	get_dataFld as function(byval This as IHTMLEventObj2 ptr, byval p as BSTR ptr) as HRESULT
	putref_boundElements as function(byval This as IHTMLEventObj2 ptr, byval v as IHTMLElementCollection ptr) as HRESULT
	get_boundElements as function(byval This as IHTMLEventObj2 ptr, byval p as IHTMLElementCollection ptr ptr) as HRESULT
	put_repeat as function(byval This as IHTMLEventObj2 ptr, byval v as VARIANT_BOOL) as HRESULT
	get_repeat as function(byval This as IHTMLEventObj2 ptr, byval p as VARIANT_BOOL ptr) as HRESULT
	put_srcUrn as function(byval This as IHTMLEventObj2 ptr, byval v as BSTR) as HRESULT
	get_srcUrn as function(byval This as IHTMLEventObj2 ptr, byval p as BSTR ptr) as HRESULT
	putref_srcElement as function(byval This as IHTMLEventObj2 ptr, byval v as IHTMLElement ptr) as HRESULT
	get_srcElement as function(byval This as IHTMLEventObj2 ptr, byval p as IHTMLElement ptr ptr) as HRESULT
	put_altKey as function(byval This as IHTMLEventObj2 ptr, byval v as VARIANT_BOOL) as HRESULT
	get_altKey as function(byval This as IHTMLEventObj2 ptr, byval p as VARIANT_BOOL ptr) as HRESULT
	put_ctrlKey as function(byval This as IHTMLEventObj2 ptr, byval v as VARIANT_BOOL) as HRESULT
	get_ctrlKey as function(byval This as IHTMLEventObj2 ptr, byval p as VARIANT_BOOL ptr) as HRESULT
	put_shiftKey as function(byval This as IHTMLEventObj2 ptr, byval v as VARIANT_BOOL) as HRESULT
	get_shiftKey as function(byval This as IHTMLEventObj2 ptr, byval p as VARIANT_BOOL ptr) as HRESULT
	putref_fromElement as function(byval This as IHTMLEventObj2 ptr, byval v as IHTMLElement ptr) as HRESULT
	get_fromElement as function(byval This as IHTMLEventObj2 ptr, byval p as IHTMLElement ptr ptr) as HRESULT
	putref_toElement as function(byval This as IHTMLEventObj2 ptr, byval v as IHTMLElement ptr) as HRESULT
	get_toElement as function(byval This as IHTMLEventObj2 ptr, byval p as IHTMLElement ptr ptr) as HRESULT
	put_button as function(byval This as IHTMLEventObj2 ptr, byval v as long) as HRESULT
	get_button as function(byval This as IHTMLEventObj2 ptr, byval p as long ptr) as HRESULT
	put_type as function(byval This as IHTMLEventObj2 ptr, byval v as BSTR) as HRESULT
	get_type as function(byval This as IHTMLEventObj2 ptr, byval p as BSTR ptr) as HRESULT
	put_qualifier as function(byval This as IHTMLEventObj2 ptr, byval v as BSTR) as HRESULT
	get_qualifier as function(byval This as IHTMLEventObj2 ptr, byval p as BSTR ptr) as HRESULT
	put_reason as function(byval This as IHTMLEventObj2 ptr, byval v as long) as HRESULT
	get_reason as function(byval This as IHTMLEventObj2 ptr, byval p as long ptr) as HRESULT
	put_x as function(byval This as IHTMLEventObj2 ptr, byval v as long) as HRESULT
	get_x as function(byval This as IHTMLEventObj2 ptr, byval p as long ptr) as HRESULT
	put_y as function(byval This as IHTMLEventObj2 ptr, byval v as long) as HRESULT
	get_y as function(byval This as IHTMLEventObj2 ptr, byval p as long ptr) as HRESULT
	put_clientX as function(byval This as IHTMLEventObj2 ptr, byval v as long) as HRESULT
	get_clientX as function(byval This as IHTMLEventObj2 ptr, byval p as long ptr) as HRESULT
	put_clientY as function(byval This as IHTMLEventObj2 ptr, byval v as long) as HRESULT
	get_clientY as function(byval This as IHTMLEventObj2 ptr, byval p as long ptr) as HRESULT
	put_offsetX as function(byval This as IHTMLEventObj2 ptr, byval v as long) as HRESULT
	get_offsetX as function(byval This as IHTMLEventObj2 ptr, byval p as long ptr) as HRESULT
	put_offsetY as function(byval This as IHTMLEventObj2 ptr, byval v as long) as HRESULT
	get_offsetY as function(byval This as IHTMLEventObj2 ptr, byval p as long ptr) as HRESULT
	put_screenX as function(byval This as IHTMLEventObj2 ptr, byval v as long) as HRESULT
	get_screenX as function(byval This as IHTMLEventObj2 ptr, byval p as long ptr) as HRESULT
	put_screenY as function(byval This as IHTMLEventObj2 ptr, byval v as long) as HRESULT
	get_screenY as function(byval This as IHTMLEventObj2 ptr, byval p as long ptr) as HRESULT
	putref_srcFilter as function(byval This as IHTMLEventObj2 ptr, byval v as IDispatch ptr) as HRESULT
	get_srcFilter as function(byval This as IHTMLEventObj2 ptr, byval p as IDispatch ptr ptr) as HRESULT
	get_dataTransfer as function(byval This as IHTMLEventObj2 ptr, byval p as IHTMLDataTransfer ptr ptr) as HRESULT
end type

type IHTMLEventObj2_
	lpVtbl as IHTMLEventObj2Vtbl ptr
end type

#define IHTMLEventObj2_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLEventObj2_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLEventObj2_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLEventObj2_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLEventObj2_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLEventObj2_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLEventObj2_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLEventObj2_setAttribute(This, strAttributeName, AttributeValue, lFlags) (This)->lpVtbl->setAttribute(This, strAttributeName, AttributeValue, lFlags)
#define IHTMLEventObj2_getAttribute(This, strAttributeName, lFlags, AttributeValue) (This)->lpVtbl->getAttribute(This, strAttributeName, lFlags, AttributeValue)
#define IHTMLEventObj2_removeAttribute(This, strAttributeName, lFlags, pfSuccess) (This)->lpVtbl->removeAttribute(This, strAttributeName, lFlags, pfSuccess)
#define IHTMLEventObj2_put_propertyName(This, v) (This)->lpVtbl->put_propertyName(This, v)
#define IHTMLEventObj2_get_propertyName(This, p) (This)->lpVtbl->get_propertyName(This, p)
#define IHTMLEventObj2_putref_bookmarks(This, v) (This)->lpVtbl->putref_bookmarks(This, v)
#define IHTMLEventObj2_get_bookmarks(This, p) (This)->lpVtbl->get_bookmarks(This, p)
#define IHTMLEventObj2_putref_recordset(This, v) (This)->lpVtbl->putref_recordset(This, v)
#define IHTMLEventObj2_get_recordset(This, p) (This)->lpVtbl->get_recordset(This, p)
#define IHTMLEventObj2_put_dataFld(This, v) (This)->lpVtbl->put_dataFld(This, v)
#define IHTMLEventObj2_get_dataFld(This, p) (This)->lpVtbl->get_dataFld(This, p)
#define IHTMLEventObj2_putref_boundElements(This, v) (This)->lpVtbl->putref_boundElements(This, v)
#define IHTMLEventObj2_get_boundElements(This, p) (This)->lpVtbl->get_boundElements(This, p)
#define IHTMLEventObj2_put_repeat(This, v) (This)->lpVtbl->put_repeat(This, v)
#define IHTMLEventObj2_get_repeat(This, p) (This)->lpVtbl->get_repeat(This, p)
#define IHTMLEventObj2_put_srcUrn(This, v) (This)->lpVtbl->put_srcUrn(This, v)
#define IHTMLEventObj2_get_srcUrn(This, p) (This)->lpVtbl->get_srcUrn(This, p)
#define IHTMLEventObj2_putref_srcElement(This, v) (This)->lpVtbl->putref_srcElement(This, v)
#define IHTMLEventObj2_get_srcElement(This, p) (This)->lpVtbl->get_srcElement(This, p)
#define IHTMLEventObj2_put_altKey(This, v) (This)->lpVtbl->put_altKey(This, v)
#define IHTMLEventObj2_get_altKey(This, p) (This)->lpVtbl->get_altKey(This, p)
#define IHTMLEventObj2_put_ctrlKey(This, v) (This)->lpVtbl->put_ctrlKey(This, v)
#define IHTMLEventObj2_get_ctrlKey(This, p) (This)->lpVtbl->get_ctrlKey(This, p)
#define IHTMLEventObj2_put_shiftKey(This, v) (This)->lpVtbl->put_shiftKey(This, v)
#define IHTMLEventObj2_get_shiftKey(This, p) (This)->lpVtbl->get_shiftKey(This, p)
#define IHTMLEventObj2_putref_fromElement(This, v) (This)->lpVtbl->putref_fromElement(This, v)
#define IHTMLEventObj2_get_fromElement(This, p) (This)->lpVtbl->get_fromElement(This, p)
#define IHTMLEventObj2_putref_toElement(This, v) (This)->lpVtbl->putref_toElement(This, v)
#define IHTMLEventObj2_get_toElement(This, p) (This)->lpVtbl->get_toElement(This, p)
#define IHTMLEventObj2_put_button(This, v) (This)->lpVtbl->put_button(This, v)
#define IHTMLEventObj2_get_button(This, p) (This)->lpVtbl->get_button(This, p)
#define IHTMLEventObj2_put_type(This, v) (This)->lpVtbl->put_type(This, v)
#define IHTMLEventObj2_get_type(This, p) (This)->lpVtbl->get_type(This, p)
#define IHTMLEventObj2_put_qualifier(This, v) (This)->lpVtbl->put_qualifier(This, v)
#define IHTMLEventObj2_get_qualifier(This, p) (This)->lpVtbl->get_qualifier(This, p)
#define IHTMLEventObj2_put_reason(This, v) (This)->lpVtbl->put_reason(This, v)
#define IHTMLEventObj2_get_reason(This, p) (This)->lpVtbl->get_reason(This, p)
#define IHTMLEventObj2_put_x(This, v) (This)->lpVtbl->put_x(This, v)
#define IHTMLEventObj2_get_x(This, p) (This)->lpVtbl->get_x(This, p)
#define IHTMLEventObj2_put_y(This, v) (This)->lpVtbl->put_y(This, v)
#define IHTMLEventObj2_get_y(This, p) (This)->lpVtbl->get_y(This, p)
#define IHTMLEventObj2_put_clientX(This, v) (This)->lpVtbl->put_clientX(This, v)
#define IHTMLEventObj2_get_clientX(This, p) (This)->lpVtbl->get_clientX(This, p)
#define IHTMLEventObj2_put_clientY(This, v) (This)->lpVtbl->put_clientY(This, v)
#define IHTMLEventObj2_get_clientY(This, p) (This)->lpVtbl->get_clientY(This, p)
#define IHTMLEventObj2_put_offsetX(This, v) (This)->lpVtbl->put_offsetX(This, v)
#define IHTMLEventObj2_get_offsetX(This, p) (This)->lpVtbl->get_offsetX(This, p)
#define IHTMLEventObj2_put_offsetY(This, v) (This)->lpVtbl->put_offsetY(This, v)
#define IHTMLEventObj2_get_offsetY(This, p) (This)->lpVtbl->get_offsetY(This, p)
#define IHTMLEventObj2_put_screenX(This, v) (This)->lpVtbl->put_screenX(This, v)
#define IHTMLEventObj2_get_screenX(This, p) (This)->lpVtbl->get_screenX(This, p)
#define IHTMLEventObj2_put_screenY(This, v) (This)->lpVtbl->put_screenY(This, v)
#define IHTMLEventObj2_get_screenY(This, p) (This)->lpVtbl->get_screenY(This, p)
#define IHTMLEventObj2_putref_srcFilter(This, v) (This)->lpVtbl->putref_srcFilter(This, v)
#define IHTMLEventObj2_get_srcFilter(This, p) (This)->lpVtbl->get_srcFilter(This, p)
#define IHTMLEventObj2_get_dataTransfer(This, p) (This)->lpVtbl->get_dataTransfer(This, p)

declare function IHTMLEventObj2_setAttribute_Proxy(byval This as IHTMLEventObj2 ptr, byval strAttributeName as BSTR, byval AttributeValue as VARIANT, byval lFlags as LONG) as HRESULT
declare sub IHTMLEventObj2_setAttribute_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLEventObj2_getAttribute_Proxy(byval This as IHTMLEventObj2 ptr, byval strAttributeName as BSTR, byval lFlags as LONG, byval AttributeValue as VARIANT ptr) as HRESULT
declare sub IHTMLEventObj2_getAttribute_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLEventObj2_removeAttribute_Proxy(byval This as IHTMLEventObj2 ptr, byval strAttributeName as BSTR, byval lFlags as LONG, byval pfSuccess as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLEventObj2_removeAttribute_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLEventObj2_put_propertyName_Proxy(byval This as IHTMLEventObj2 ptr, byval v as BSTR) as HRESULT
declare sub IHTMLEventObj2_put_propertyName_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLEventObj2_get_propertyName_Proxy(byval This as IHTMLEventObj2 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLEventObj2_get_propertyName_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLEventObj2_putref_bookmarks_Proxy(byval This as IHTMLEventObj2 ptr, byval v as IHTMLBookmarkCollection ptr) as HRESULT
declare sub IHTMLEventObj2_putref_bookmarks_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLEventObj2_get_bookmarks_Proxy(byval This as IHTMLEventObj2 ptr, byval p as IHTMLBookmarkCollection ptr ptr) as HRESULT
declare sub IHTMLEventObj2_get_bookmarks_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLEventObj2_putref_recordset_Proxy(byval This as IHTMLEventObj2 ptr, byval v as IDispatch ptr) as HRESULT
declare sub IHTMLEventObj2_putref_recordset_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLEventObj2_get_recordset_Proxy(byval This as IHTMLEventObj2 ptr, byval p as IDispatch ptr ptr) as HRESULT
declare sub IHTMLEventObj2_get_recordset_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLEventObj2_put_dataFld_Proxy(byval This as IHTMLEventObj2 ptr, byval v as BSTR) as HRESULT
declare sub IHTMLEventObj2_put_dataFld_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLEventObj2_get_dataFld_Proxy(byval This as IHTMLEventObj2 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLEventObj2_get_dataFld_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLEventObj2_putref_boundElements_Proxy(byval This as IHTMLEventObj2 ptr, byval v as IHTMLElementCollection ptr) as HRESULT
declare sub IHTMLEventObj2_putref_boundElements_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLEventObj2_get_boundElements_Proxy(byval This as IHTMLEventObj2 ptr, byval p as IHTMLElementCollection ptr ptr) as HRESULT
declare sub IHTMLEventObj2_get_boundElements_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLEventObj2_put_repeat_Proxy(byval This as IHTMLEventObj2 ptr, byval v as VARIANT_BOOL) as HRESULT
declare sub IHTMLEventObj2_put_repeat_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLEventObj2_get_repeat_Proxy(byval This as IHTMLEventObj2 ptr, byval p as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLEventObj2_get_repeat_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLEventObj2_put_srcUrn_Proxy(byval This as IHTMLEventObj2 ptr, byval v as BSTR) as HRESULT
declare sub IHTMLEventObj2_put_srcUrn_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLEventObj2_get_srcUrn_Proxy(byval This as IHTMLEventObj2 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLEventObj2_get_srcUrn_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLEventObj2_putref_srcElement_Proxy(byval This as IHTMLEventObj2 ptr, byval v as IHTMLElement ptr) as HRESULT
declare sub IHTMLEventObj2_putref_srcElement_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLEventObj2_get_srcElement_Proxy(byval This as IHTMLEventObj2 ptr, byval p as IHTMLElement ptr ptr) as HRESULT
declare sub IHTMLEventObj2_get_srcElement_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLEventObj2_put_altKey_Proxy(byval This as IHTMLEventObj2 ptr, byval v as VARIANT_BOOL) as HRESULT
declare sub IHTMLEventObj2_put_altKey_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLEventObj2_get_altKey_Proxy(byval This as IHTMLEventObj2 ptr, byval p as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLEventObj2_get_altKey_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLEventObj2_put_ctrlKey_Proxy(byval This as IHTMLEventObj2 ptr, byval v as VARIANT_BOOL) as HRESULT
declare sub IHTMLEventObj2_put_ctrlKey_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLEventObj2_get_ctrlKey_Proxy(byval This as IHTMLEventObj2 ptr, byval p as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLEventObj2_get_ctrlKey_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLEventObj2_put_shiftKey_Proxy(byval This as IHTMLEventObj2 ptr, byval v as VARIANT_BOOL) as HRESULT
declare sub IHTMLEventObj2_put_shiftKey_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLEventObj2_get_shiftKey_Proxy(byval This as IHTMLEventObj2 ptr, byval p as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLEventObj2_get_shiftKey_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLEventObj2_putref_fromElement_Proxy(byval This as IHTMLEventObj2 ptr, byval v as IHTMLElement ptr) as HRESULT
declare sub IHTMLEventObj2_putref_fromElement_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLEventObj2_get_fromElement_Proxy(byval This as IHTMLEventObj2 ptr, byval p as IHTMLElement ptr ptr) as HRESULT
declare sub IHTMLEventObj2_get_fromElement_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLEventObj2_putref_toElement_Proxy(byval This as IHTMLEventObj2 ptr, byval v as IHTMLElement ptr) as HRESULT
declare sub IHTMLEventObj2_putref_toElement_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLEventObj2_get_toElement_Proxy(byval This as IHTMLEventObj2 ptr, byval p as IHTMLElement ptr ptr) as HRESULT
declare sub IHTMLEventObj2_get_toElement_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLEventObj2_put_button_Proxy(byval This as IHTMLEventObj2 ptr, byval v as long) as HRESULT
declare sub IHTMLEventObj2_put_button_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLEventObj2_get_button_Proxy(byval This as IHTMLEventObj2 ptr, byval p as long ptr) as HRESULT
declare sub IHTMLEventObj2_get_button_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLEventObj2_put_type_Proxy(byval This as IHTMLEventObj2 ptr, byval v as BSTR) as HRESULT
declare sub IHTMLEventObj2_put_type_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLEventObj2_get_type_Proxy(byval This as IHTMLEventObj2 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLEventObj2_get_type_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLEventObj2_put_qualifier_Proxy(byval This as IHTMLEventObj2 ptr, byval v as BSTR) as HRESULT
declare sub IHTMLEventObj2_put_qualifier_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLEventObj2_get_qualifier_Proxy(byval This as IHTMLEventObj2 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLEventObj2_get_qualifier_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLEventObj2_put_reason_Proxy(byval This as IHTMLEventObj2 ptr, byval v as long) as HRESULT
declare sub IHTMLEventObj2_put_reason_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLEventObj2_get_reason_Proxy(byval This as IHTMLEventObj2 ptr, byval p as long ptr) as HRESULT
declare sub IHTMLEventObj2_get_reason_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLEventObj2_put_x_Proxy(byval This as IHTMLEventObj2 ptr, byval v as long) as HRESULT
declare sub IHTMLEventObj2_put_x_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLEventObj2_get_x_Proxy(byval This as IHTMLEventObj2 ptr, byval p as long ptr) as HRESULT
declare sub IHTMLEventObj2_get_x_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLEventObj2_put_y_Proxy(byval This as IHTMLEventObj2 ptr, byval v as long) as HRESULT
declare sub IHTMLEventObj2_put_y_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLEventObj2_get_y_Proxy(byval This as IHTMLEventObj2 ptr, byval p as long ptr) as HRESULT
declare sub IHTMLEventObj2_get_y_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLEventObj2_put_clientX_Proxy(byval This as IHTMLEventObj2 ptr, byval v as long) as HRESULT
declare sub IHTMLEventObj2_put_clientX_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLEventObj2_get_clientX_Proxy(byval This as IHTMLEventObj2 ptr, byval p as long ptr) as HRESULT
declare sub IHTMLEventObj2_get_clientX_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLEventObj2_put_clientY_Proxy(byval This as IHTMLEventObj2 ptr, byval v as long) as HRESULT
declare sub IHTMLEventObj2_put_clientY_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLEventObj2_get_clientY_Proxy(byval This as IHTMLEventObj2 ptr, byval p as long ptr) as HRESULT
declare sub IHTMLEventObj2_get_clientY_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLEventObj2_put_offsetX_Proxy(byval This as IHTMLEventObj2 ptr, byval v as long) as HRESULT
declare sub IHTMLEventObj2_put_offsetX_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLEventObj2_get_offsetX_Proxy(byval This as IHTMLEventObj2 ptr, byval p as long ptr) as HRESULT
declare sub IHTMLEventObj2_get_offsetX_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLEventObj2_put_offsetY_Proxy(byval This as IHTMLEventObj2 ptr, byval v as long) as HRESULT
declare sub IHTMLEventObj2_put_offsetY_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLEventObj2_get_offsetY_Proxy(byval This as IHTMLEventObj2 ptr, byval p as long ptr) as HRESULT
declare sub IHTMLEventObj2_get_offsetY_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLEventObj2_put_screenX_Proxy(byval This as IHTMLEventObj2 ptr, byval v as long) as HRESULT
declare sub IHTMLEventObj2_put_screenX_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLEventObj2_get_screenX_Proxy(byval This as IHTMLEventObj2 ptr, byval p as long ptr) as HRESULT
declare sub IHTMLEventObj2_get_screenX_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLEventObj2_put_screenY_Proxy(byval This as IHTMLEventObj2 ptr, byval v as long) as HRESULT
declare sub IHTMLEventObj2_put_screenY_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLEventObj2_get_screenY_Proxy(byval This as IHTMLEventObj2 ptr, byval p as long ptr) as HRESULT
declare sub IHTMLEventObj2_get_screenY_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLEventObj2_putref_srcFilter_Proxy(byval This as IHTMLEventObj2 ptr, byval v as IDispatch ptr) as HRESULT
declare sub IHTMLEventObj2_putref_srcFilter_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLEventObj2_get_srcFilter_Proxy(byval This as IHTMLEventObj2 ptr, byval p as IDispatch ptr ptr) as HRESULT
declare sub IHTMLEventObj2_get_srcFilter_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLEventObj2_get_dataTransfer_Proxy(byval This as IHTMLEventObj2 ptr, byval p as IHTMLDataTransfer ptr ptr) as HRESULT
declare sub IHTMLEventObj2_get_dataTransfer_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLEventObj3_INTERFACE_DEFINED__
extern IID_IHTMLEventObj3 as const IID
type IHTMLEventObj3 as IHTMLEventObj3_

type IHTMLEventObj3Vtbl
	QueryInterface as function(byval This as IHTMLEventObj3 ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLEventObj3 ptr) as ULONG
	Release as function(byval This as IHTMLEventObj3 ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLEventObj3 ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLEventObj3 ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLEventObj3 ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLEventObj3 ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	get_contentOverflow as function(byval This as IHTMLEventObj3 ptr, byval p as VARIANT_BOOL ptr) as HRESULT
	put_shiftLeft as function(byval This as IHTMLEventObj3 ptr, byval v as VARIANT_BOOL) as HRESULT
	get_shiftLeft as function(byval This as IHTMLEventObj3 ptr, byval p as VARIANT_BOOL ptr) as HRESULT
	put_altLeft as function(byval This as IHTMLEventObj3 ptr, byval v as VARIANT_BOOL) as HRESULT
	get_altLeft as function(byval This as IHTMLEventObj3 ptr, byval p as VARIANT_BOOL ptr) as HRESULT
	put_ctrlLeft as function(byval This as IHTMLEventObj3 ptr, byval v as VARIANT_BOOL) as HRESULT
	get_ctrlLeft as function(byval This as IHTMLEventObj3 ptr, byval p as VARIANT_BOOL ptr) as HRESULT
	get_imeCompositionChange as function(byval This as IHTMLEventObj3 ptr, byval p as LONG_PTR ptr) as HRESULT
	get_imeNotifyCommand as function(byval This as IHTMLEventObj3 ptr, byval p as LONG_PTR ptr) as HRESULT
	get_imeNotifyData as function(byval This as IHTMLEventObj3 ptr, byval p as LONG_PTR ptr) as HRESULT
	get_imeRequest as function(byval This as IHTMLEventObj3 ptr, byval p as LONG_PTR ptr) as HRESULT
	get_imeRequestData as function(byval This as IHTMLEventObj3 ptr, byval p as LONG_PTR ptr) as HRESULT
	get_keyboardLayout as function(byval This as IHTMLEventObj3 ptr, byval p as LONG_PTR ptr) as HRESULT
	get_behaviorCookie as function(byval This as IHTMLEventObj3 ptr, byval p as long ptr) as HRESULT
	get_behaviorPart as function(byval This as IHTMLEventObj3 ptr, byval p as long ptr) as HRESULT
	get_nextPage as function(byval This as IHTMLEventObj3 ptr, byval p as BSTR ptr) as HRESULT
end type

type IHTMLEventObj3_
	lpVtbl as IHTMLEventObj3Vtbl ptr
end type

#define IHTMLEventObj3_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLEventObj3_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLEventObj3_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLEventObj3_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLEventObj3_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLEventObj3_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLEventObj3_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLEventObj3_get_contentOverflow(This, p) (This)->lpVtbl->get_contentOverflow(This, p)
#define IHTMLEventObj3_put_shiftLeft(This, v) (This)->lpVtbl->put_shiftLeft(This, v)
#define IHTMLEventObj3_get_shiftLeft(This, p) (This)->lpVtbl->get_shiftLeft(This, p)
#define IHTMLEventObj3_put_altLeft(This, v) (This)->lpVtbl->put_altLeft(This, v)
#define IHTMLEventObj3_get_altLeft(This, p) (This)->lpVtbl->get_altLeft(This, p)
#define IHTMLEventObj3_put_ctrlLeft(This, v) (This)->lpVtbl->put_ctrlLeft(This, v)
#define IHTMLEventObj3_get_ctrlLeft(This, p) (This)->lpVtbl->get_ctrlLeft(This, p)
#define IHTMLEventObj3_get_imeCompositionChange(This, p) (This)->lpVtbl->get_imeCompositionChange(This, p)
#define IHTMLEventObj3_get_imeNotifyCommand(This, p) (This)->lpVtbl->get_imeNotifyCommand(This, p)
#define IHTMLEventObj3_get_imeNotifyData(This, p) (This)->lpVtbl->get_imeNotifyData(This, p)
#define IHTMLEventObj3_get_imeRequest(This, p) (This)->lpVtbl->get_imeRequest(This, p)
#define IHTMLEventObj3_get_imeRequestData(This, p) (This)->lpVtbl->get_imeRequestData(This, p)
#define IHTMLEventObj3_get_keyboardLayout(This, p) (This)->lpVtbl->get_keyboardLayout(This, p)
#define IHTMLEventObj3_get_behaviorCookie(This, p) (This)->lpVtbl->get_behaviorCookie(This, p)
#define IHTMLEventObj3_get_behaviorPart(This, p) (This)->lpVtbl->get_behaviorPart(This, p)
#define IHTMLEventObj3_get_nextPage(This, p) (This)->lpVtbl->get_nextPage(This, p)

declare function IHTMLEventObj3_get_contentOverflow_Proxy(byval This as IHTMLEventObj3 ptr, byval p as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLEventObj3_get_contentOverflow_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLEventObj3_put_shiftLeft_Proxy(byval This as IHTMLEventObj3 ptr, byval v as VARIANT_BOOL) as HRESULT
declare sub IHTMLEventObj3_put_shiftLeft_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLEventObj3_get_shiftLeft_Proxy(byval This as IHTMLEventObj3 ptr, byval p as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLEventObj3_get_shiftLeft_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLEventObj3_put_altLeft_Proxy(byval This as IHTMLEventObj3 ptr, byval v as VARIANT_BOOL) as HRESULT
declare sub IHTMLEventObj3_put_altLeft_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLEventObj3_get_altLeft_Proxy(byval This as IHTMLEventObj3 ptr, byval p as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLEventObj3_get_altLeft_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLEventObj3_put_ctrlLeft_Proxy(byval This as IHTMLEventObj3 ptr, byval v as VARIANT_BOOL) as HRESULT
declare sub IHTMLEventObj3_put_ctrlLeft_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLEventObj3_get_ctrlLeft_Proxy(byval This as IHTMLEventObj3 ptr, byval p as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLEventObj3_get_ctrlLeft_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLEventObj3_get_imeCompositionChange_Proxy(byval This as IHTMLEventObj3 ptr, byval p as LONG_PTR ptr) as HRESULT
declare sub IHTMLEventObj3_get_imeCompositionChange_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLEventObj3_get_imeNotifyCommand_Proxy(byval This as IHTMLEventObj3 ptr, byval p as LONG_PTR ptr) as HRESULT
declare sub IHTMLEventObj3_get_imeNotifyCommand_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLEventObj3_get_imeNotifyData_Proxy(byval This as IHTMLEventObj3 ptr, byval p as LONG_PTR ptr) as HRESULT
declare sub IHTMLEventObj3_get_imeNotifyData_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLEventObj3_get_imeRequest_Proxy(byval This as IHTMLEventObj3 ptr, byval p as LONG_PTR ptr) as HRESULT
declare sub IHTMLEventObj3_get_imeRequest_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLEventObj3_get_imeRequestData_Proxy(byval This as IHTMLEventObj3 ptr, byval p as LONG_PTR ptr) as HRESULT
declare sub IHTMLEventObj3_get_imeRequestData_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLEventObj3_get_keyboardLayout_Proxy(byval This as IHTMLEventObj3 ptr, byval p as LONG_PTR ptr) as HRESULT
declare sub IHTMLEventObj3_get_keyboardLayout_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLEventObj3_get_behaviorCookie_Proxy(byval This as IHTMLEventObj3 ptr, byval p as long ptr) as HRESULT
declare sub IHTMLEventObj3_get_behaviorCookie_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLEventObj3_get_behaviorPart_Proxy(byval This as IHTMLEventObj3 ptr, byval p as long ptr) as HRESULT
declare sub IHTMLEventObj3_get_behaviorPart_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLEventObj3_get_nextPage_Proxy(byval This as IHTMLEventObj3 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLEventObj3_get_nextPage_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLEventObj4_INTERFACE_DEFINED__
extern IID_IHTMLEventObj4 as const IID
type IHTMLEventObj4 as IHTMLEventObj4_

type IHTMLEventObj4Vtbl
	QueryInterface as function(byval This as IHTMLEventObj4 ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLEventObj4 ptr) as ULONG
	Release as function(byval This as IHTMLEventObj4 ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLEventObj4 ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLEventObj4 ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLEventObj4 ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLEventObj4 ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	get_wheelDelta as function(byval This as IHTMLEventObj4 ptr, byval p as long ptr) as HRESULT
end type

type IHTMLEventObj4_
	lpVtbl as IHTMLEventObj4Vtbl ptr
end type

#define IHTMLEventObj4_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLEventObj4_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLEventObj4_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLEventObj4_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLEventObj4_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLEventObj4_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLEventObj4_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLEventObj4_get_wheelDelta(This, p) (This)->lpVtbl->get_wheelDelta(This, p)
declare function IHTMLEventObj4_get_wheelDelta_Proxy(byval This as IHTMLEventObj4 ptr, byval p as long ptr) as HRESULT
declare sub IHTMLEventObj4_get_wheelDelta_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __DispCEventObj_DISPINTERFACE_DEFINED__
extern DIID_DispCEventObj as const IID
type DispCEventObj as DispCEventObj_

type DispCEventObjVtbl
	QueryInterface as function(byval This as DispCEventObj ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as DispCEventObj ptr) as ULONG
	Release as function(byval This as DispCEventObj ptr) as ULONG
	GetTypeInfoCount as function(byval This as DispCEventObj ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as DispCEventObj ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as DispCEventObj ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as DispCEventObj ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type DispCEventObj_
	lpVtbl as DispCEventObjVtbl ptr
end type

#define DispCEventObj_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define DispCEventObj_AddRef(This) (This)->lpVtbl->AddRef(This)
#define DispCEventObj_Release(This) (This)->lpVtbl->Release(This)
#define DispCEventObj_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define DispCEventObj_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define DispCEventObj_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define DispCEventObj_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
extern CLSID_CEventObj as const CLSID
#define __HTMLWindowEvents2_DISPINTERFACE_DEFINED__
extern DIID_HTMLWindowEvents2 as const IID
type HTMLWindowEvents2 as HTMLWindowEvents2_

type HTMLWindowEvents2Vtbl
	QueryInterface as function(byval This as HTMLWindowEvents2 ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as HTMLWindowEvents2 ptr) as ULONG
	Release as function(byval This as HTMLWindowEvents2 ptr) as ULONG
	GetTypeInfoCount as function(byval This as HTMLWindowEvents2 ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as HTMLWindowEvents2 ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as HTMLWindowEvents2 ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as HTMLWindowEvents2 ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type HTMLWindowEvents2_
	lpVtbl as HTMLWindowEvents2Vtbl ptr
end type

#define HTMLWindowEvents2_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define HTMLWindowEvents2_AddRef(This) (This)->lpVtbl->AddRef(This)
#define HTMLWindowEvents2_Release(This) (This)->lpVtbl->Release(This)
#define HTMLWindowEvents2_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define HTMLWindowEvents2_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define HTMLWindowEvents2_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define HTMLWindowEvents2_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define __HTMLWindowEvents_DISPINTERFACE_DEFINED__
extern DIID_HTMLWindowEvents as const IID
type HTMLWindowEvents as HTMLWindowEvents_

type HTMLWindowEventsVtbl
	QueryInterface as function(byval This as HTMLWindowEvents ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as HTMLWindowEvents ptr) as ULONG
	Release as function(byval This as HTMLWindowEvents ptr) as ULONG
	GetTypeInfoCount as function(byval This as HTMLWindowEvents ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as HTMLWindowEvents ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as HTMLWindowEvents ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as HTMLWindowEvents ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type HTMLWindowEvents_
	lpVtbl as HTMLWindowEventsVtbl ptr
end type

#define HTMLWindowEvents_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define HTMLWindowEvents_AddRef(This) (This)->lpVtbl->AddRef(This)
#define HTMLWindowEvents_Release(This) (This)->lpVtbl->Release(This)
#define HTMLWindowEvents_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define HTMLWindowEvents_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define HTMLWindowEvents_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define HTMLWindowEvents_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define __IHTMLDocument2_INTERFACE_DEFINED__
extern IID_IHTMLDocument2 as const IID
type IHTMLDocument2 as IHTMLDocument2_
type IHTMLFramesCollection2 as IHTMLFramesCollection2_

type IHTMLDocument2Vtbl
	QueryInterface as function(byval This as IHTMLDocument2 ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLDocument2 ptr) as ULONG
	Release as function(byval This as IHTMLDocument2 ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLDocument2 ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLDocument2 ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLDocument2 ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLDocument2 ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	get_Script as function(byval This as IHTMLDocument2 ptr, byval p as IDispatch ptr ptr) as HRESULT
	get_all as function(byval This as IHTMLDocument2 ptr, byval p as IHTMLElementCollection ptr ptr) as HRESULT
	get_body as function(byval This as IHTMLDocument2 ptr, byval p as IHTMLElement ptr ptr) as HRESULT
	get_activeElement as function(byval This as IHTMLDocument2 ptr, byval p as IHTMLElement ptr ptr) as HRESULT
	get_images as function(byval This as IHTMLDocument2 ptr, byval p as IHTMLElementCollection ptr ptr) as HRESULT
	get_applets as function(byval This as IHTMLDocument2 ptr, byval p as IHTMLElementCollection ptr ptr) as HRESULT
	get_links as function(byval This as IHTMLDocument2 ptr, byval p as IHTMLElementCollection ptr ptr) as HRESULT
	get_forms as function(byval This as IHTMLDocument2 ptr, byval p as IHTMLElementCollection ptr ptr) as HRESULT
	get_anchors as function(byval This as IHTMLDocument2 ptr, byval p as IHTMLElementCollection ptr ptr) as HRESULT
	put_title as function(byval This as IHTMLDocument2 ptr, byval v as BSTR) as HRESULT
	get_title as function(byval This as IHTMLDocument2 ptr, byval p as BSTR ptr) as HRESULT
	get_scripts as function(byval This as IHTMLDocument2 ptr, byval p as IHTMLElementCollection ptr ptr) as HRESULT
	put_designMode as function(byval This as IHTMLDocument2 ptr, byval v as BSTR) as HRESULT
	get_designMode as function(byval This as IHTMLDocument2 ptr, byval p as BSTR ptr) as HRESULT
	get_selection as function(byval This as IHTMLDocument2 ptr, byval p as IHTMLSelectionObject ptr ptr) as HRESULT
	get_readyState as function(byval This as IHTMLDocument2 ptr, byval p as BSTR ptr) as HRESULT
	get_frames as function(byval This as IHTMLDocument2 ptr, byval p as IHTMLFramesCollection2 ptr ptr) as HRESULT
	get_embeds as function(byval This as IHTMLDocument2 ptr, byval p as IHTMLElementCollection ptr ptr) as HRESULT
	get_plugins as function(byval This as IHTMLDocument2 ptr, byval p as IHTMLElementCollection ptr ptr) as HRESULT
	put_alinkColor as function(byval This as IHTMLDocument2 ptr, byval v as VARIANT) as HRESULT
	get_alinkColor as function(byval This as IHTMLDocument2 ptr, byval p as VARIANT ptr) as HRESULT
	put_bgColor as function(byval This as IHTMLDocument2 ptr, byval v as VARIANT) as HRESULT
	get_bgColor as function(byval This as IHTMLDocument2 ptr, byval p as VARIANT ptr) as HRESULT
	put_fgColor as function(byval This as IHTMLDocument2 ptr, byval v as VARIANT) as HRESULT
	get_fgColor as function(byval This as IHTMLDocument2 ptr, byval p as VARIANT ptr) as HRESULT
	put_linkColor as function(byval This as IHTMLDocument2 ptr, byval v as VARIANT) as HRESULT
	get_linkColor as function(byval This as IHTMLDocument2 ptr, byval p as VARIANT ptr) as HRESULT
	put_vlinkColor as function(byval This as IHTMLDocument2 ptr, byval v as VARIANT) as HRESULT
	get_vlinkColor as function(byval This as IHTMLDocument2 ptr, byval p as VARIANT ptr) as HRESULT
	get_referrer as function(byval This as IHTMLDocument2 ptr, byval p as BSTR ptr) as HRESULT
	get_location as function(byval This as IHTMLDocument2 ptr, byval p as IHTMLLocation ptr ptr) as HRESULT
	get_lastModified as function(byval This as IHTMLDocument2 ptr, byval p as BSTR ptr) as HRESULT
	put_URL as function(byval This as IHTMLDocument2 ptr, byval v as BSTR) as HRESULT
	get_URL as function(byval This as IHTMLDocument2 ptr, byval p as BSTR ptr) as HRESULT
	put_domain as function(byval This as IHTMLDocument2 ptr, byval v as BSTR) as HRESULT
	get_domain as function(byval This as IHTMLDocument2 ptr, byval p as BSTR ptr) as HRESULT
	put_cookie as function(byval This as IHTMLDocument2 ptr, byval v as BSTR) as HRESULT
	get_cookie as function(byval This as IHTMLDocument2 ptr, byval p as BSTR ptr) as HRESULT
	put_expando as function(byval This as IHTMLDocument2 ptr, byval v as VARIANT_BOOL) as HRESULT
	get_expando as function(byval This as IHTMLDocument2 ptr, byval p as VARIANT_BOOL ptr) as HRESULT
	put_charset as function(byval This as IHTMLDocument2 ptr, byval v as BSTR) as HRESULT
	get_charset as function(byval This as IHTMLDocument2 ptr, byval p as BSTR ptr) as HRESULT
	put_defaultCharset as function(byval This as IHTMLDocument2 ptr, byval v as BSTR) as HRESULT
	get_defaultCharset as function(byval This as IHTMLDocument2 ptr, byval p as BSTR ptr) as HRESULT
	get_mimeType as function(byval This as IHTMLDocument2 ptr, byval p as BSTR ptr) as HRESULT
	get_fileSize as function(byval This as IHTMLDocument2 ptr, byval p as BSTR ptr) as HRESULT
	get_fileCreatedDate as function(byval This as IHTMLDocument2 ptr, byval p as BSTR ptr) as HRESULT
	get_fileModifiedDate as function(byval This as IHTMLDocument2 ptr, byval p as BSTR ptr) as HRESULT
	get_fileUpdatedDate as function(byval This as IHTMLDocument2 ptr, byval p as BSTR ptr) as HRESULT
	get_security as function(byval This as IHTMLDocument2 ptr, byval p as BSTR ptr) as HRESULT
	get_protocol as function(byval This as IHTMLDocument2 ptr, byval p as BSTR ptr) as HRESULT
	get_nameProp as function(byval This as IHTMLDocument2 ptr, byval p as BSTR ptr) as HRESULT
	write as function(byval This as IHTMLDocument2 ptr, byval psarray as SAFEARRAY ptr) as HRESULT
	writeln as function(byval This as IHTMLDocument2 ptr, byval psarray as SAFEARRAY ptr) as HRESULT
	open as function(byval This as IHTMLDocument2 ptr, byval url as BSTR, byval name as VARIANT, byval features as VARIANT, byval replace as VARIANT, byval pomWindowResult as IDispatch ptr ptr) as HRESULT
	close as function(byval This as IHTMLDocument2 ptr) as HRESULT
	clear as function(byval This as IHTMLDocument2 ptr) as HRESULT
	queryCommandSupported as function(byval This as IHTMLDocument2 ptr, byval cmdID as BSTR, byval pfRet as VARIANT_BOOL ptr) as HRESULT
	queryCommandEnabled as function(byval This as IHTMLDocument2 ptr, byval cmdID as BSTR, byval pfRet as VARIANT_BOOL ptr) as HRESULT
	queryCommandState as function(byval This as IHTMLDocument2 ptr, byval cmdID as BSTR, byval pfRet as VARIANT_BOOL ptr) as HRESULT
	queryCommandIndeterm as function(byval This as IHTMLDocument2 ptr, byval cmdID as BSTR, byval pfRet as VARIANT_BOOL ptr) as HRESULT
	queryCommandText as function(byval This as IHTMLDocument2 ptr, byval cmdID as BSTR, byval pcmdText as BSTR ptr) as HRESULT
	queryCommandValue as function(byval This as IHTMLDocument2 ptr, byval cmdID as BSTR, byval pcmdValue as VARIANT ptr) as HRESULT
	execCommand as function(byval This as IHTMLDocument2 ptr, byval cmdID as BSTR, byval showUI as VARIANT_BOOL, byval value as VARIANT, byval pfRet as VARIANT_BOOL ptr) as HRESULT
	execCommandShowHelp as function(byval This as IHTMLDocument2 ptr, byval cmdID as BSTR, byval pfRet as VARIANT_BOOL ptr) as HRESULT
	createElement as function(byval This as IHTMLDocument2 ptr, byval eTag as BSTR, byval newElem as IHTMLElement ptr ptr) as HRESULT
	put_onhelp as function(byval This as IHTMLDocument2 ptr, byval v as VARIANT) as HRESULT
	get_onhelp as function(byval This as IHTMLDocument2 ptr, byval p as VARIANT ptr) as HRESULT
	put_onclick as function(byval This as IHTMLDocument2 ptr, byval v as VARIANT) as HRESULT
	get_onclick as function(byval This as IHTMLDocument2 ptr, byval p as VARIANT ptr) as HRESULT
	put_ondblclick as function(byval This as IHTMLDocument2 ptr, byval v as VARIANT) as HRESULT
	get_ondblclick as function(byval This as IHTMLDocument2 ptr, byval p as VARIANT ptr) as HRESULT
	put_onkeyup as function(byval This as IHTMLDocument2 ptr, byval v as VARIANT) as HRESULT
	get_onkeyup as function(byval This as IHTMLDocument2 ptr, byval p as VARIANT ptr) as HRESULT
	put_onkeydown as function(byval This as IHTMLDocument2 ptr, byval v as VARIANT) as HRESULT
	get_onkeydown as function(byval This as IHTMLDocument2 ptr, byval p as VARIANT ptr) as HRESULT
	put_onkeypress as function(byval This as IHTMLDocument2 ptr, byval v as VARIANT) as HRESULT
	get_onkeypress as function(byval This as IHTMLDocument2 ptr, byval p as VARIANT ptr) as HRESULT
	put_onmouseup as function(byval This as IHTMLDocument2 ptr, byval v as VARIANT) as HRESULT
	get_onmouseup as function(byval This as IHTMLDocument2 ptr, byval p as VARIANT ptr) as HRESULT
	put_onmousedown as function(byval This as IHTMLDocument2 ptr, byval v as VARIANT) as HRESULT
	get_onmousedown as function(byval This as IHTMLDocument2 ptr, byval p as VARIANT ptr) as HRESULT
	put_onmousemove as function(byval This as IHTMLDocument2 ptr, byval v as VARIANT) as HRESULT
	get_onmousemove as function(byval This as IHTMLDocument2 ptr, byval p as VARIANT ptr) as HRESULT
	put_onmouseout as function(byval This as IHTMLDocument2 ptr, byval v as VARIANT) as HRESULT
	get_onmouseout as function(byval This as IHTMLDocument2 ptr, byval p as VARIANT ptr) as HRESULT
	put_onmouseover as function(byval This as IHTMLDocument2 ptr, byval v as VARIANT) as HRESULT
	get_onmouseover as function(byval This as IHTMLDocument2 ptr, byval p as VARIANT ptr) as HRESULT
	put_onreadystatechange as function(byval This as IHTMLDocument2 ptr, byval v as VARIANT) as HRESULT
	get_onreadystatechange as function(byval This as IHTMLDocument2 ptr, byval p as VARIANT ptr) as HRESULT
	put_onafterupdate as function(byval This as IHTMLDocument2 ptr, byval v as VARIANT) as HRESULT
	get_onafterupdate as function(byval This as IHTMLDocument2 ptr, byval p as VARIANT ptr) as HRESULT
	put_onrowexit as function(byval This as IHTMLDocument2 ptr, byval v as VARIANT) as HRESULT
	get_onrowexit as function(byval This as IHTMLDocument2 ptr, byval p as VARIANT ptr) as HRESULT
	put_onrowenter as function(byval This as IHTMLDocument2 ptr, byval v as VARIANT) as HRESULT
	get_onrowenter as function(byval This as IHTMLDocument2 ptr, byval p as VARIANT ptr) as HRESULT
	put_ondragstart as function(byval This as IHTMLDocument2 ptr, byval v as VARIANT) as HRESULT
	get_ondragstart as function(byval This as IHTMLDocument2 ptr, byval p as VARIANT ptr) as HRESULT
	put_onselectstart as function(byval This as IHTMLDocument2 ptr, byval v as VARIANT) as HRESULT
	get_onselectstart as function(byval This as IHTMLDocument2 ptr, byval p as VARIANT ptr) as HRESULT
	elementFromPoint as function(byval This as IHTMLDocument2 ptr, byval x as long, byval y as long, byval elementHit as IHTMLElement ptr ptr) as HRESULT
	get_parentWindow as function(byval This as IHTMLDocument2 ptr, byval p as IHTMLWindow2 ptr ptr) as HRESULT
	get_styleSheets as function(byval This as IHTMLDocument2 ptr, byval p as IHTMLStyleSheetsCollection ptr ptr) as HRESULT
	put_onbeforeupdate as function(byval This as IHTMLDocument2 ptr, byval v as VARIANT) as HRESULT
	get_onbeforeupdate as function(byval This as IHTMLDocument2 ptr, byval p as VARIANT ptr) as HRESULT
	put_onerrorupdate as function(byval This as IHTMLDocument2 ptr, byval v as VARIANT) as HRESULT
	get_onerrorupdate as function(byval This as IHTMLDocument2 ptr, byval p as VARIANT ptr) as HRESULT
	toString as function(byval This as IHTMLDocument2 ptr, byval String as BSTR ptr) as HRESULT
	createStyleSheet as function(byval This as IHTMLDocument2 ptr, byval bstrHref as BSTR, byval lIndex as long, byval ppnewStyleSheet as IHTMLStyleSheet ptr ptr) as HRESULT
end type

type IHTMLDocument2_
	lpVtbl as IHTMLDocument2Vtbl ptr
end type

#define IHTMLDocument2_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLDocument2_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLDocument2_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLDocument2_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLDocument2_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLDocument2_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLDocument2_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLDocument2_get_Script(This, p) (This)->lpVtbl->get_Script(This, p)
#define IHTMLDocument2_get_all(This, p) (This)->lpVtbl->get_all(This, p)
#define IHTMLDocument2_get_body(This, p) (This)->lpVtbl->get_body(This, p)
#define IHTMLDocument2_get_activeElement(This, p) (This)->lpVtbl->get_activeElement(This, p)
#define IHTMLDocument2_get_images(This, p) (This)->lpVtbl->get_images(This, p)
#define IHTMLDocument2_get_applets(This, p) (This)->lpVtbl->get_applets(This, p)
#define IHTMLDocument2_get_links(This, p) (This)->lpVtbl->get_links(This, p)
#define IHTMLDocument2_get_forms(This, p) (This)->lpVtbl->get_forms(This, p)
#define IHTMLDocument2_get_anchors(This, p) (This)->lpVtbl->get_anchors(This, p)
#define IHTMLDocument2_put_title(This, v) (This)->lpVtbl->put_title(This, v)
#define IHTMLDocument2_get_title(This, p) (This)->lpVtbl->get_title(This, p)
#define IHTMLDocument2_get_scripts(This, p) (This)->lpVtbl->get_scripts(This, p)
#define IHTMLDocument2_put_designMode(This, v) (This)->lpVtbl->put_designMode(This, v)
#define IHTMLDocument2_get_designMode(This, p) (This)->lpVtbl->get_designMode(This, p)
#define IHTMLDocument2_get_selection(This, p) (This)->lpVtbl->get_selection(This, p)
#define IHTMLDocument2_get_readyState(This, p) (This)->lpVtbl->get_readyState(This, p)
#define IHTMLDocument2_get_frames(This, p) (This)->lpVtbl->get_frames(This, p)
#define IHTMLDocument2_get_embeds(This, p) (This)->lpVtbl->get_embeds(This, p)
#define IHTMLDocument2_get_plugins(This, p) (This)->lpVtbl->get_plugins(This, p)
#define IHTMLDocument2_put_alinkColor(This, v) (This)->lpVtbl->put_alinkColor(This, v)
#define IHTMLDocument2_get_alinkColor(This, p) (This)->lpVtbl->get_alinkColor(This, p)
#define IHTMLDocument2_put_bgColor(This, v) (This)->lpVtbl->put_bgColor(This, v)
#define IHTMLDocument2_get_bgColor(This, p) (This)->lpVtbl->get_bgColor(This, p)
#define IHTMLDocument2_put_fgColor(This, v) (This)->lpVtbl->put_fgColor(This, v)
#define IHTMLDocument2_get_fgColor(This, p) (This)->lpVtbl->get_fgColor(This, p)
#define IHTMLDocument2_put_linkColor(This, v) (This)->lpVtbl->put_linkColor(This, v)
#define IHTMLDocument2_get_linkColor(This, p) (This)->lpVtbl->get_linkColor(This, p)
#define IHTMLDocument2_put_vlinkColor(This, v) (This)->lpVtbl->put_vlinkColor(This, v)
#define IHTMLDocument2_get_vlinkColor(This, p) (This)->lpVtbl->get_vlinkColor(This, p)
#define IHTMLDocument2_get_referrer(This, p) (This)->lpVtbl->get_referrer(This, p)
#define IHTMLDocument2_get_location(This, p) (This)->lpVtbl->get_location(This, p)
#define IHTMLDocument2_get_lastModified(This, p) (This)->lpVtbl->get_lastModified(This, p)
#define IHTMLDocument2_put_URL(This, v) (This)->lpVtbl->put_URL(This, v)
#define IHTMLDocument2_get_URL(This, p) (This)->lpVtbl->get_URL(This, p)
#define IHTMLDocument2_put_domain(This, v) (This)->lpVtbl->put_domain(This, v)
#define IHTMLDocument2_get_domain(This, p) (This)->lpVtbl->get_domain(This, p)
#define IHTMLDocument2_put_cookie(This, v) (This)->lpVtbl->put_cookie(This, v)
#define IHTMLDocument2_get_cookie(This, p) (This)->lpVtbl->get_cookie(This, p)
#define IHTMLDocument2_put_expando(This, v) (This)->lpVtbl->put_expando(This, v)
#define IHTMLDocument2_get_expando(This, p) (This)->lpVtbl->get_expando(This, p)
#define IHTMLDocument2_put_charset(This, v) (This)->lpVtbl->put_charset(This, v)
#define IHTMLDocument2_get_charset(This, p) (This)->lpVtbl->get_charset(This, p)
#define IHTMLDocument2_put_defaultCharset(This, v) (This)->lpVtbl->put_defaultCharset(This, v)
#define IHTMLDocument2_get_defaultCharset(This, p) (This)->lpVtbl->get_defaultCharset(This, p)
#define IHTMLDocument2_get_mimeType(This, p) (This)->lpVtbl->get_mimeType(This, p)
#define IHTMLDocument2_get_fileSize(This, p) (This)->lpVtbl->get_fileSize(This, p)
#define IHTMLDocument2_get_fileCreatedDate(This, p) (This)->lpVtbl->get_fileCreatedDate(This, p)
#define IHTMLDocument2_get_fileModifiedDate(This, p) (This)->lpVtbl->get_fileModifiedDate(This, p)
#define IHTMLDocument2_get_fileUpdatedDate(This, p) (This)->lpVtbl->get_fileUpdatedDate(This, p)
#define IHTMLDocument2_get_security(This, p) (This)->lpVtbl->get_security(This, p)
#define IHTMLDocument2_get_protocol(This, p) (This)->lpVtbl->get_protocol(This, p)
#define IHTMLDocument2_get_nameProp(This, p) (This)->lpVtbl->get_nameProp(This, p)
#define IHTMLDocument2_write(This, psarray) (This)->lpVtbl->write(This, psarray)
#define IHTMLDocument2_writeln(This, psarray) (This)->lpVtbl->writeln(This, psarray)
#define IHTMLDocument2_open(This, url, name, features, replace, pomWindowResult) (This)->lpVtbl->open(This, url, name, features, replace, pomWindowResult)
#define IHTMLDocument2_close(This) (This)->lpVtbl->close(This)
#define IHTMLDocument2_clear(This) (This)->lpVtbl->clear(This)
#define IHTMLDocument2_queryCommandSupported(This, cmdID, pfRet) (This)->lpVtbl->queryCommandSupported(This, cmdID, pfRet)
#define IHTMLDocument2_queryCommandEnabled(This, cmdID, pfRet) (This)->lpVtbl->queryCommandEnabled(This, cmdID, pfRet)
#define IHTMLDocument2_queryCommandState(This, cmdID, pfRet) (This)->lpVtbl->queryCommandState(This, cmdID, pfRet)
#define IHTMLDocument2_queryCommandIndeterm(This, cmdID, pfRet) (This)->lpVtbl->queryCommandIndeterm(This, cmdID, pfRet)
#define IHTMLDocument2_queryCommandText(This, cmdID, pcmdText) (This)->lpVtbl->queryCommandText(This, cmdID, pcmdText)
#define IHTMLDocument2_queryCommandValue(This, cmdID, pcmdValue) (This)->lpVtbl->queryCommandValue(This, cmdID, pcmdValue)
#define IHTMLDocument2_execCommand(This, cmdID, showUI, value, pfRet) (This)->lpVtbl->execCommand(This, cmdID, showUI, value, pfRet)
#define IHTMLDocument2_execCommandShowHelp(This, cmdID, pfRet) (This)->lpVtbl->execCommandShowHelp(This, cmdID, pfRet)
#define IHTMLDocument2_createElement(This, eTag, newElem) (This)->lpVtbl->createElement(This, eTag, newElem)
#define IHTMLDocument2_put_onhelp(This, v) (This)->lpVtbl->put_onhelp(This, v)
#define IHTMLDocument2_get_onhelp(This, p) (This)->lpVtbl->get_onhelp(This, p)
#define IHTMLDocument2_put_onclick(This, v) (This)->lpVtbl->put_onclick(This, v)
#define IHTMLDocument2_get_onclick(This, p) (This)->lpVtbl->get_onclick(This, p)
#define IHTMLDocument2_put_ondblclick(This, v) (This)->lpVtbl->put_ondblclick(This, v)
#define IHTMLDocument2_get_ondblclick(This, p) (This)->lpVtbl->get_ondblclick(This, p)
#define IHTMLDocument2_put_onkeyup(This, v) (This)->lpVtbl->put_onkeyup(This, v)
#define IHTMLDocument2_get_onkeyup(This, p) (This)->lpVtbl->get_onkeyup(This, p)
#define IHTMLDocument2_put_onkeydown(This, v) (This)->lpVtbl->put_onkeydown(This, v)
#define IHTMLDocument2_get_onkeydown(This, p) (This)->lpVtbl->get_onkeydown(This, p)
#define IHTMLDocument2_put_onkeypress(This, v) (This)->lpVtbl->put_onkeypress(This, v)
#define IHTMLDocument2_get_onkeypress(This, p) (This)->lpVtbl->get_onkeypress(This, p)
#define IHTMLDocument2_put_onmouseup(This, v) (This)->lpVtbl->put_onmouseup(This, v)
#define IHTMLDocument2_get_onmouseup(This, p) (This)->lpVtbl->get_onmouseup(This, p)
#define IHTMLDocument2_put_onmousedown(This, v) (This)->lpVtbl->put_onmousedown(This, v)
#define IHTMLDocument2_get_onmousedown(This, p) (This)->lpVtbl->get_onmousedown(This, p)
#define IHTMLDocument2_put_onmousemove(This, v) (This)->lpVtbl->put_onmousemove(This, v)
#define IHTMLDocument2_get_onmousemove(This, p) (This)->lpVtbl->get_onmousemove(This, p)
#define IHTMLDocument2_put_onmouseout(This, v) (This)->lpVtbl->put_onmouseout(This, v)
#define IHTMLDocument2_get_onmouseout(This, p) (This)->lpVtbl->get_onmouseout(This, p)
#define IHTMLDocument2_put_onmouseover(This, v) (This)->lpVtbl->put_onmouseover(This, v)
#define IHTMLDocument2_get_onmouseover(This, p) (This)->lpVtbl->get_onmouseover(This, p)
#define IHTMLDocument2_put_onreadystatechange(This, v) (This)->lpVtbl->put_onreadystatechange(This, v)
#define IHTMLDocument2_get_onreadystatechange(This, p) (This)->lpVtbl->get_onreadystatechange(This, p)
#define IHTMLDocument2_put_onafterupdate(This, v) (This)->lpVtbl->put_onafterupdate(This, v)
#define IHTMLDocument2_get_onafterupdate(This, p) (This)->lpVtbl->get_onafterupdate(This, p)
#define IHTMLDocument2_put_onrowexit(This, v) (This)->lpVtbl->put_onrowexit(This, v)
#define IHTMLDocument2_get_onrowexit(This, p) (This)->lpVtbl->get_onrowexit(This, p)
#define IHTMLDocument2_put_onrowenter(This, v) (This)->lpVtbl->put_onrowenter(This, v)
#define IHTMLDocument2_get_onrowenter(This, p) (This)->lpVtbl->get_onrowenter(This, p)
#define IHTMLDocument2_put_ondragstart(This, v) (This)->lpVtbl->put_ondragstart(This, v)
#define IHTMLDocument2_get_ondragstart(This, p) (This)->lpVtbl->get_ondragstart(This, p)
#define IHTMLDocument2_put_onselectstart(This, v) (This)->lpVtbl->put_onselectstart(This, v)
#define IHTMLDocument2_get_onselectstart(This, p) (This)->lpVtbl->get_onselectstart(This, p)
#define IHTMLDocument2_elementFromPoint(This, x, y, elementHit) (This)->lpVtbl->elementFromPoint(This, x, y, elementHit)
#define IHTMLDocument2_get_parentWindow(This, p) (This)->lpVtbl->get_parentWindow(This, p)
#define IHTMLDocument2_get_styleSheets(This, p) (This)->lpVtbl->get_styleSheets(This, p)
#define IHTMLDocument2_put_onbeforeupdate(This, v) (This)->lpVtbl->put_onbeforeupdate(This, v)
#define IHTMLDocument2_get_onbeforeupdate(This, p) (This)->lpVtbl->get_onbeforeupdate(This, p)
#define IHTMLDocument2_put_onerrorupdate(This, v) (This)->lpVtbl->put_onerrorupdate(This, v)
#define IHTMLDocument2_get_onerrorupdate(This, p) (This)->lpVtbl->get_onerrorupdate(This, p)
#define IHTMLDocument2_toString(This, String) (This)->lpVtbl->toString(This, String)
#define IHTMLDocument2_createStyleSheet(This, bstrHref, lIndex, ppnewStyleSheet) (This)->lpVtbl->createStyleSheet(This, bstrHref, lIndex, ppnewStyleSheet)

declare function IHTMLDocument2_get_all_Proxy(byval This as IHTMLDocument2 ptr, byval p as IHTMLElementCollection ptr ptr) as HRESULT
declare sub IHTMLDocument2_get_all_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument2_get_body_Proxy(byval This as IHTMLDocument2 ptr, byval p as IHTMLElement ptr ptr) as HRESULT
declare sub IHTMLDocument2_get_body_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument2_get_activeElement_Proxy(byval This as IHTMLDocument2 ptr, byval p as IHTMLElement ptr ptr) as HRESULT
declare sub IHTMLDocument2_get_activeElement_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument2_get_images_Proxy(byval This as IHTMLDocument2 ptr, byval p as IHTMLElementCollection ptr ptr) as HRESULT
declare sub IHTMLDocument2_get_images_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument2_get_applets_Proxy(byval This as IHTMLDocument2 ptr, byval p as IHTMLElementCollection ptr ptr) as HRESULT
declare sub IHTMLDocument2_get_applets_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument2_get_links_Proxy(byval This as IHTMLDocument2 ptr, byval p as IHTMLElementCollection ptr ptr) as HRESULT
declare sub IHTMLDocument2_get_links_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument2_get_forms_Proxy(byval This as IHTMLDocument2 ptr, byval p as IHTMLElementCollection ptr ptr) as HRESULT
declare sub IHTMLDocument2_get_forms_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument2_get_anchors_Proxy(byval This as IHTMLDocument2 ptr, byval p as IHTMLElementCollection ptr ptr) as HRESULT
declare sub IHTMLDocument2_get_anchors_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument2_put_title_Proxy(byval This as IHTMLDocument2 ptr, byval v as BSTR) as HRESULT
declare sub IHTMLDocument2_put_title_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument2_get_title_Proxy(byval This as IHTMLDocument2 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLDocument2_get_title_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument2_get_scripts_Proxy(byval This as IHTMLDocument2 ptr, byval p as IHTMLElementCollection ptr ptr) as HRESULT
declare sub IHTMLDocument2_get_scripts_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument2_put_designMode_Proxy(byval This as IHTMLDocument2 ptr, byval v as BSTR) as HRESULT
declare sub IHTMLDocument2_put_designMode_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument2_get_designMode_Proxy(byval This as IHTMLDocument2 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLDocument2_get_designMode_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument2_get_selection_Proxy(byval This as IHTMLDocument2 ptr, byval p as IHTMLSelectionObject ptr ptr) as HRESULT
declare sub IHTMLDocument2_get_selection_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument2_get_readyState_Proxy(byval This as IHTMLDocument2 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLDocument2_get_readyState_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument2_get_frames_Proxy(byval This as IHTMLDocument2 ptr, byval p as IHTMLFramesCollection2 ptr ptr) as HRESULT
declare sub IHTMLDocument2_get_frames_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument2_get_embeds_Proxy(byval This as IHTMLDocument2 ptr, byval p as IHTMLElementCollection ptr ptr) as HRESULT
declare sub IHTMLDocument2_get_embeds_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument2_get_plugins_Proxy(byval This as IHTMLDocument2 ptr, byval p as IHTMLElementCollection ptr ptr) as HRESULT
declare sub IHTMLDocument2_get_plugins_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument2_put_alinkColor_Proxy(byval This as IHTMLDocument2 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLDocument2_put_alinkColor_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument2_get_alinkColor_Proxy(byval This as IHTMLDocument2 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLDocument2_get_alinkColor_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument2_put_bgColor_Proxy(byval This as IHTMLDocument2 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLDocument2_put_bgColor_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument2_get_bgColor_Proxy(byval This as IHTMLDocument2 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLDocument2_get_bgColor_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument2_put_fgColor_Proxy(byval This as IHTMLDocument2 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLDocument2_put_fgColor_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument2_get_fgColor_Proxy(byval This as IHTMLDocument2 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLDocument2_get_fgColor_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument2_put_linkColor_Proxy(byval This as IHTMLDocument2 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLDocument2_put_linkColor_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument2_get_linkColor_Proxy(byval This as IHTMLDocument2 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLDocument2_get_linkColor_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument2_put_vlinkColor_Proxy(byval This as IHTMLDocument2 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLDocument2_put_vlinkColor_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument2_get_vlinkColor_Proxy(byval This as IHTMLDocument2 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLDocument2_get_vlinkColor_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument2_get_referrer_Proxy(byval This as IHTMLDocument2 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLDocument2_get_referrer_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument2_get_location_Proxy(byval This as IHTMLDocument2 ptr, byval p as IHTMLLocation ptr ptr) as HRESULT
declare sub IHTMLDocument2_get_location_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument2_get_lastModified_Proxy(byval This as IHTMLDocument2 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLDocument2_get_lastModified_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument2_put_URL_Proxy(byval This as IHTMLDocument2 ptr, byval v as BSTR) as HRESULT
declare sub IHTMLDocument2_put_URL_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument2_get_URL_Proxy(byval This as IHTMLDocument2 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLDocument2_get_URL_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument2_put_domain_Proxy(byval This as IHTMLDocument2 ptr, byval v as BSTR) as HRESULT
declare sub IHTMLDocument2_put_domain_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument2_get_domain_Proxy(byval This as IHTMLDocument2 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLDocument2_get_domain_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument2_put_cookie_Proxy(byval This as IHTMLDocument2 ptr, byval v as BSTR) as HRESULT
declare sub IHTMLDocument2_put_cookie_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument2_get_cookie_Proxy(byval This as IHTMLDocument2 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLDocument2_get_cookie_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument2_put_expando_Proxy(byval This as IHTMLDocument2 ptr, byval v as VARIANT_BOOL) as HRESULT
declare sub IHTMLDocument2_put_expando_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument2_get_expando_Proxy(byval This as IHTMLDocument2 ptr, byval p as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLDocument2_get_expando_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument2_put_charset_Proxy(byval This as IHTMLDocument2 ptr, byval v as BSTR) as HRESULT
declare sub IHTMLDocument2_put_charset_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument2_get_charset_Proxy(byval This as IHTMLDocument2 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLDocument2_get_charset_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument2_put_defaultCharset_Proxy(byval This as IHTMLDocument2 ptr, byval v as BSTR) as HRESULT
declare sub IHTMLDocument2_put_defaultCharset_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument2_get_defaultCharset_Proxy(byval This as IHTMLDocument2 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLDocument2_get_defaultCharset_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument2_get_mimeType_Proxy(byval This as IHTMLDocument2 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLDocument2_get_mimeType_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument2_get_fileSize_Proxy(byval This as IHTMLDocument2 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLDocument2_get_fileSize_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument2_get_fileCreatedDate_Proxy(byval This as IHTMLDocument2 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLDocument2_get_fileCreatedDate_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument2_get_fileModifiedDate_Proxy(byval This as IHTMLDocument2 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLDocument2_get_fileModifiedDate_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument2_get_fileUpdatedDate_Proxy(byval This as IHTMLDocument2 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLDocument2_get_fileUpdatedDate_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument2_get_security_Proxy(byval This as IHTMLDocument2 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLDocument2_get_security_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument2_get_protocol_Proxy(byval This as IHTMLDocument2 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLDocument2_get_protocol_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument2_get_nameProp_Proxy(byval This as IHTMLDocument2 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLDocument2_get_nameProp_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument2_write_Proxy(byval This as IHTMLDocument2 ptr, byval psarray as SAFEARRAY ptr) as HRESULT
declare sub IHTMLDocument2_write_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument2_writeln_Proxy(byval This as IHTMLDocument2 ptr, byval psarray as SAFEARRAY ptr) as HRESULT
declare sub IHTMLDocument2_writeln_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument2_open_Proxy(byval This as IHTMLDocument2 ptr, byval url as BSTR, byval name as VARIANT, byval features as VARIANT, byval replace as VARIANT, byval pomWindowResult as IDispatch ptr ptr) as HRESULT
declare sub IHTMLDocument2_open_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument2_close_Proxy(byval This as IHTMLDocument2 ptr) as HRESULT
declare sub IHTMLDocument2_close_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument2_clear_Proxy(byval This as IHTMLDocument2 ptr) as HRESULT
declare sub IHTMLDocument2_clear_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument2_queryCommandSupported_Proxy(byval This as IHTMLDocument2 ptr, byval cmdID as BSTR, byval pfRet as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLDocument2_queryCommandSupported_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument2_queryCommandEnabled_Proxy(byval This as IHTMLDocument2 ptr, byval cmdID as BSTR, byval pfRet as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLDocument2_queryCommandEnabled_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument2_queryCommandState_Proxy(byval This as IHTMLDocument2 ptr, byval cmdID as BSTR, byval pfRet as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLDocument2_queryCommandState_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument2_queryCommandIndeterm_Proxy(byval This as IHTMLDocument2 ptr, byval cmdID as BSTR, byval pfRet as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLDocument2_queryCommandIndeterm_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument2_queryCommandText_Proxy(byval This as IHTMLDocument2 ptr, byval cmdID as BSTR, byval pcmdText as BSTR ptr) as HRESULT
declare sub IHTMLDocument2_queryCommandText_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument2_queryCommandValue_Proxy(byval This as IHTMLDocument2 ptr, byval cmdID as BSTR, byval pcmdValue as VARIANT ptr) as HRESULT
declare sub IHTMLDocument2_queryCommandValue_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument2_execCommand_Proxy(byval This as IHTMLDocument2 ptr, byval cmdID as BSTR, byval showUI as VARIANT_BOOL, byval value as VARIANT, byval pfRet as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLDocument2_execCommand_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument2_execCommandShowHelp_Proxy(byval This as IHTMLDocument2 ptr, byval cmdID as BSTR, byval pfRet as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLDocument2_execCommandShowHelp_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument2_createElement_Proxy(byval This as IHTMLDocument2 ptr, byval eTag as BSTR, byval newElem as IHTMLElement ptr ptr) as HRESULT
declare sub IHTMLDocument2_createElement_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument2_put_onhelp_Proxy(byval This as IHTMLDocument2 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLDocument2_put_onhelp_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument2_get_onhelp_Proxy(byval This as IHTMLDocument2 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLDocument2_get_onhelp_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument2_put_onclick_Proxy(byval This as IHTMLDocument2 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLDocument2_put_onclick_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument2_get_onclick_Proxy(byval This as IHTMLDocument2 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLDocument2_get_onclick_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument2_put_ondblclick_Proxy(byval This as IHTMLDocument2 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLDocument2_put_ondblclick_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument2_get_ondblclick_Proxy(byval This as IHTMLDocument2 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLDocument2_get_ondblclick_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument2_put_onkeyup_Proxy(byval This as IHTMLDocument2 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLDocument2_put_onkeyup_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument2_get_onkeyup_Proxy(byval This as IHTMLDocument2 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLDocument2_get_onkeyup_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument2_put_onkeydown_Proxy(byval This as IHTMLDocument2 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLDocument2_put_onkeydown_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument2_get_onkeydown_Proxy(byval This as IHTMLDocument2 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLDocument2_get_onkeydown_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument2_put_onkeypress_Proxy(byval This as IHTMLDocument2 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLDocument2_put_onkeypress_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument2_get_onkeypress_Proxy(byval This as IHTMLDocument2 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLDocument2_get_onkeypress_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument2_put_onmouseup_Proxy(byval This as IHTMLDocument2 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLDocument2_put_onmouseup_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument2_get_onmouseup_Proxy(byval This as IHTMLDocument2 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLDocument2_get_onmouseup_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument2_put_onmousedown_Proxy(byval This as IHTMLDocument2 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLDocument2_put_onmousedown_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument2_get_onmousedown_Proxy(byval This as IHTMLDocument2 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLDocument2_get_onmousedown_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument2_put_onmousemove_Proxy(byval This as IHTMLDocument2 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLDocument2_put_onmousemove_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument2_get_onmousemove_Proxy(byval This as IHTMLDocument2 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLDocument2_get_onmousemove_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument2_put_onmouseout_Proxy(byval This as IHTMLDocument2 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLDocument2_put_onmouseout_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument2_get_onmouseout_Proxy(byval This as IHTMLDocument2 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLDocument2_get_onmouseout_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument2_put_onmouseover_Proxy(byval This as IHTMLDocument2 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLDocument2_put_onmouseover_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument2_get_onmouseover_Proxy(byval This as IHTMLDocument2 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLDocument2_get_onmouseover_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument2_put_onreadystatechange_Proxy(byval This as IHTMLDocument2 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLDocument2_put_onreadystatechange_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument2_get_onreadystatechange_Proxy(byval This as IHTMLDocument2 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLDocument2_get_onreadystatechange_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument2_put_onafterupdate_Proxy(byval This as IHTMLDocument2 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLDocument2_put_onafterupdate_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument2_get_onafterupdate_Proxy(byval This as IHTMLDocument2 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLDocument2_get_onafterupdate_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument2_put_onrowexit_Proxy(byval This as IHTMLDocument2 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLDocument2_put_onrowexit_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument2_get_onrowexit_Proxy(byval This as IHTMLDocument2 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLDocument2_get_onrowexit_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument2_put_onrowenter_Proxy(byval This as IHTMLDocument2 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLDocument2_put_onrowenter_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument2_get_onrowenter_Proxy(byval This as IHTMLDocument2 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLDocument2_get_onrowenter_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument2_put_ondragstart_Proxy(byval This as IHTMLDocument2 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLDocument2_put_ondragstart_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument2_get_ondragstart_Proxy(byval This as IHTMLDocument2 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLDocument2_get_ondragstart_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument2_put_onselectstart_Proxy(byval This as IHTMLDocument2 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLDocument2_put_onselectstart_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument2_get_onselectstart_Proxy(byval This as IHTMLDocument2 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLDocument2_get_onselectstart_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument2_elementFromPoint_Proxy(byval This as IHTMLDocument2 ptr, byval x as long, byval y as long, byval elementHit as IHTMLElement ptr ptr) as HRESULT
declare sub IHTMLDocument2_elementFromPoint_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument2_get_parentWindow_Proxy(byval This as IHTMLDocument2 ptr, byval p as IHTMLWindow2 ptr ptr) as HRESULT
declare sub IHTMLDocument2_get_parentWindow_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument2_get_styleSheets_Proxy(byval This as IHTMLDocument2 ptr, byval p as IHTMLStyleSheetsCollection ptr ptr) as HRESULT
declare sub IHTMLDocument2_get_styleSheets_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument2_put_onbeforeupdate_Proxy(byval This as IHTMLDocument2 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLDocument2_put_onbeforeupdate_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument2_get_onbeforeupdate_Proxy(byval This as IHTMLDocument2 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLDocument2_get_onbeforeupdate_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument2_put_onerrorupdate_Proxy(byval This as IHTMLDocument2 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLDocument2_put_onerrorupdate_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument2_get_onerrorupdate_Proxy(byval This as IHTMLDocument2 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLDocument2_get_onerrorupdate_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument2_toString_Proxy(byval This as IHTMLDocument2 ptr, byval String as BSTR ptr) as HRESULT
declare sub IHTMLDocument2_toString_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument2_createStyleSheet_Proxy(byval This as IHTMLDocument2 ptr, byval bstrHref as BSTR, byval lIndex as long, byval ppnewStyleSheet as IHTMLStyleSheet ptr ptr) as HRESULT
declare sub IHTMLDocument2_createStyleSheet_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLFramesCollection2_INTERFACE_DEFINED__
extern IID_IHTMLFramesCollection2 as const IID

type IHTMLFramesCollection2Vtbl
	QueryInterface as function(byval This as IHTMLFramesCollection2 ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLFramesCollection2 ptr) as ULONG
	Release as function(byval This as IHTMLFramesCollection2 ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLFramesCollection2 ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLFramesCollection2 ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLFramesCollection2 ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLFramesCollection2 ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	item as function(byval This as IHTMLFramesCollection2 ptr, byval pvarIndex as VARIANT ptr, byval pvarResult as VARIANT ptr) as HRESULT
	get_length as function(byval This as IHTMLFramesCollection2 ptr, byval p as long ptr) as HRESULT
end type

type IHTMLFramesCollection2_
	lpVtbl as IHTMLFramesCollection2Vtbl ptr
end type

#define IHTMLFramesCollection2_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLFramesCollection2_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLFramesCollection2_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLFramesCollection2_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLFramesCollection2_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLFramesCollection2_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLFramesCollection2_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLFramesCollection2_item(This, pvarIndex, pvarResult) (This)->lpVtbl->item(This, pvarIndex, pvarResult)
#define IHTMLFramesCollection2_get_length(This, p) (This)->lpVtbl->get_length(This, p)

declare function IHTMLFramesCollection2_item_Proxy(byval This as IHTMLFramesCollection2 ptr, byval pvarIndex as VARIANT ptr, byval pvarResult as VARIANT ptr) as HRESULT
declare sub IHTMLFramesCollection2_item_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLFramesCollection2_get_length_Proxy(byval This as IHTMLFramesCollection2 ptr, byval p as long ptr) as HRESULT
declare sub IHTMLFramesCollection2_get_length_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLWindow2_INTERFACE_DEFINED__
extern IID_IHTMLWindow2 as const IID
extern SID_SHTMLWindow alias "IID_IHTMLWindow2" as const IID
type IHTMLScreen as IHTMLScreen_

type IHTMLWindow2Vtbl
	QueryInterface as function(byval This as IHTMLWindow2 ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLWindow2 ptr) as ULONG
	Release as function(byval This as IHTMLWindow2 ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLWindow2 ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLWindow2 ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLWindow2 ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLWindow2 ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	item as function(byval This as IHTMLWindow2 ptr, byval pvarIndex as VARIANT ptr, byval pvarResult as VARIANT ptr) as HRESULT
	get_length as function(byval This as IHTMLWindow2 ptr, byval p as long ptr) as HRESULT
	get_frames as function(byval This as IHTMLWindow2 ptr, byval p as IHTMLFramesCollection2 ptr ptr) as HRESULT
	put_defaultStatus as function(byval This as IHTMLWindow2 ptr, byval v as BSTR) as HRESULT
	get_defaultStatus as function(byval This as IHTMLWindow2 ptr, byval p as BSTR ptr) as HRESULT
	put_status as function(byval This as IHTMLWindow2 ptr, byval v as BSTR) as HRESULT
	get_status as function(byval This as IHTMLWindow2 ptr, byval p as BSTR ptr) as HRESULT
	setTimeout as function(byval This as IHTMLWindow2 ptr, byval expression as BSTR, byval msec as long, byval language as VARIANT ptr, byval timerID as long ptr) as HRESULT
	clearTimeout as function(byval This as IHTMLWindow2 ptr, byval timerID as long) as HRESULT
	alert as function(byval This as IHTMLWindow2 ptr, byval message as BSTR) as HRESULT
	confirm as function(byval This as IHTMLWindow2 ptr, byval message as BSTR, byval confirmed as VARIANT_BOOL ptr) as HRESULT
	prompt as function(byval This as IHTMLWindow2 ptr, byval message as BSTR, byval defstr as BSTR, byval textdata as VARIANT ptr) as HRESULT
	get_Image as function(byval This as IHTMLWindow2 ptr, byval p as IHTMLImageElementFactory ptr ptr) as HRESULT
	get_location as function(byval This as IHTMLWindow2 ptr, byval p as IHTMLLocation ptr ptr) as HRESULT
	get_history as function(byval This as IHTMLWindow2 ptr, byval p as IOmHistory ptr ptr) as HRESULT
	close as function(byval This as IHTMLWindow2 ptr) as HRESULT
	put_opener as function(byval This as IHTMLWindow2 ptr, byval v as VARIANT) as HRESULT
	get_opener as function(byval This as IHTMLWindow2 ptr, byval p as VARIANT ptr) as HRESULT
	get_navigator as function(byval This as IHTMLWindow2 ptr, byval p as IOmNavigator ptr ptr) as HRESULT
	put_name as function(byval This as IHTMLWindow2 ptr, byval v as BSTR) as HRESULT
	get_name as function(byval This as IHTMLWindow2 ptr, byval p as BSTR ptr) as HRESULT
	get_parent as function(byval This as IHTMLWindow2 ptr, byval p as IHTMLWindow2 ptr ptr) as HRESULT
	open as function(byval This as IHTMLWindow2 ptr, byval url as BSTR, byval name as BSTR, byval features as BSTR, byval replace as VARIANT_BOOL, byval pomWindowResult as IHTMLWindow2 ptr ptr) as HRESULT
	get_self as function(byval This as IHTMLWindow2 ptr, byval p as IHTMLWindow2 ptr ptr) as HRESULT
	get_top as function(byval This as IHTMLWindow2 ptr, byval p as IHTMLWindow2 ptr ptr) as HRESULT
	get_window as function(byval This as IHTMLWindow2 ptr, byval p as IHTMLWindow2 ptr ptr) as HRESULT
	navigate as function(byval This as IHTMLWindow2 ptr, byval url as BSTR) as HRESULT
	put_onfocus as function(byval This as IHTMLWindow2 ptr, byval v as VARIANT) as HRESULT
	get_onfocus as function(byval This as IHTMLWindow2 ptr, byval p as VARIANT ptr) as HRESULT
	put_onblur as function(byval This as IHTMLWindow2 ptr, byval v as VARIANT) as HRESULT
	get_onblur as function(byval This as IHTMLWindow2 ptr, byval p as VARIANT ptr) as HRESULT
	put_onload as function(byval This as IHTMLWindow2 ptr, byval v as VARIANT) as HRESULT
	get_onload as function(byval This as IHTMLWindow2 ptr, byval p as VARIANT ptr) as HRESULT
	put_onbeforeunload as function(byval This as IHTMLWindow2 ptr, byval v as VARIANT) as HRESULT
	get_onbeforeunload as function(byval This as IHTMLWindow2 ptr, byval p as VARIANT ptr) as HRESULT
	put_onunload as function(byval This as IHTMLWindow2 ptr, byval v as VARIANT) as HRESULT
	get_onunload as function(byval This as IHTMLWindow2 ptr, byval p as VARIANT ptr) as HRESULT
	put_onhelp as function(byval This as IHTMLWindow2 ptr, byval v as VARIANT) as HRESULT
	get_onhelp as function(byval This as IHTMLWindow2 ptr, byval p as VARIANT ptr) as HRESULT
	put_onerror as function(byval This as IHTMLWindow2 ptr, byval v as VARIANT) as HRESULT
	get_onerror as function(byval This as IHTMLWindow2 ptr, byval p as VARIANT ptr) as HRESULT
	put_onresize as function(byval This as IHTMLWindow2 ptr, byval v as VARIANT) as HRESULT
	get_onresize as function(byval This as IHTMLWindow2 ptr, byval p as VARIANT ptr) as HRESULT
	put_onscroll as function(byval This as IHTMLWindow2 ptr, byval v as VARIANT) as HRESULT
	get_onscroll as function(byval This as IHTMLWindow2 ptr, byval p as VARIANT ptr) as HRESULT
	get_document as function(byval This as IHTMLWindow2 ptr, byval p as IHTMLDocument2 ptr ptr) as HRESULT
	get_event as function(byval This as IHTMLWindow2 ptr, byval p as IHTMLEventObj ptr ptr) as HRESULT
	get__newEnum as function(byval This as IHTMLWindow2 ptr, byval p as IUnknown ptr ptr) as HRESULT
	showModalDialog as function(byval This as IHTMLWindow2 ptr, byval dialog as BSTR, byval varArgIn as VARIANT ptr, byval varOptions as VARIANT ptr, byval varArgOut as VARIANT ptr) as HRESULT
	showHelp as function(byval This as IHTMLWindow2 ptr, byval helpURL as BSTR, byval helpArg as VARIANT, byval features as BSTR) as HRESULT
	get_screen as function(byval This as IHTMLWindow2 ptr, byval p as IHTMLScreen ptr ptr) as HRESULT
	get_Option as function(byval This as IHTMLWindow2 ptr, byval p as IHTMLOptionElementFactory ptr ptr) as HRESULT
	focus as function(byval This as IHTMLWindow2 ptr) as HRESULT
	get_closed as function(byval This as IHTMLWindow2 ptr, byval p as VARIANT_BOOL ptr) as HRESULT
	blur as function(byval This as IHTMLWindow2 ptr) as HRESULT
	scroll as function(byval This as IHTMLWindow2 ptr, byval x as long, byval y as long) as HRESULT
	get_clientInformation as function(byval This as IHTMLWindow2 ptr, byval p as IOmNavigator ptr ptr) as HRESULT
	setInterval as function(byval This as IHTMLWindow2 ptr, byval expression as BSTR, byval msec as long, byval language as VARIANT ptr, byval timerID as long ptr) as HRESULT
	clearInterval as function(byval This as IHTMLWindow2 ptr, byval timerID as long) as HRESULT
	put_offscreenBuffering as function(byval This as IHTMLWindow2 ptr, byval v as VARIANT) as HRESULT
	get_offscreenBuffering as function(byval This as IHTMLWindow2 ptr, byval p as VARIANT ptr) as HRESULT
	execScript as function(byval This as IHTMLWindow2 ptr, byval code as BSTR, byval language as BSTR, byval pvarRet as VARIANT ptr) as HRESULT
	toString as function(byval This as IHTMLWindow2 ptr, byval String as BSTR ptr) as HRESULT
	scrollBy as function(byval This as IHTMLWindow2 ptr, byval x as long, byval y as long) as HRESULT
	scrollTo as function(byval This as IHTMLWindow2 ptr, byval x as long, byval y as long) as HRESULT
	moveTo as function(byval This as IHTMLWindow2 ptr, byval x as long, byval y as long) as HRESULT
	moveBy as function(byval This as IHTMLWindow2 ptr, byval x as long, byval y as long) as HRESULT
	resizeTo as function(byval This as IHTMLWindow2 ptr, byval x as long, byval y as long) as HRESULT
	resizeBy as function(byval This as IHTMLWindow2 ptr, byval x as long, byval y as long) as HRESULT
	get_external as function(byval This as IHTMLWindow2 ptr, byval p as IDispatch ptr ptr) as HRESULT
end type

type IHTMLWindow2_
	lpVtbl as IHTMLWindow2Vtbl ptr
end type

#define IHTMLWindow2_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLWindow2_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLWindow2_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLWindow2_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLWindow2_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLWindow2_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLWindow2_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLWindow2_item(This, pvarIndex, pvarResult) (This)->lpVtbl->item(This, pvarIndex, pvarResult)
#define IHTMLWindow2_get_length(This, p) (This)->lpVtbl->get_length(This, p)
#define IHTMLWindow2_get_frames(This, p) (This)->lpVtbl->get_frames(This, p)
#define IHTMLWindow2_put_defaultStatus(This, v) (This)->lpVtbl->put_defaultStatus(This, v)
#define IHTMLWindow2_get_defaultStatus(This, p) (This)->lpVtbl->get_defaultStatus(This, p)
#define IHTMLWindow2_put_status(This, v) (This)->lpVtbl->put_status(This, v)
#define IHTMLWindow2_get_status(This, p) (This)->lpVtbl->get_status(This, p)
#define IHTMLWindow2_setTimeout(This, expression, msec, language, timerID) (This)->lpVtbl->setTimeout(This, expression, msec, language, timerID)
#define IHTMLWindow2_clearTimeout(This, timerID) (This)->lpVtbl->clearTimeout(This, timerID)
#define IHTMLWindow2_alert(This, message) (This)->lpVtbl->alert(This, message)
#define IHTMLWindow2_confirm(This, message, confirmed) (This)->lpVtbl->confirm(This, message, confirmed)
#define IHTMLWindow2_prompt(This, message, defstr, textdata) (This)->lpVtbl->prompt(This, message, defstr, textdata)
#define IHTMLWindow2_get_Image(This, p) (This)->lpVtbl->get_Image(This, p)
#define IHTMLWindow2_get_location(This, p) (This)->lpVtbl->get_location(This, p)
#define IHTMLWindow2_get_history(This, p) (This)->lpVtbl->get_history(This, p)
#define IHTMLWindow2_close(This) (This)->lpVtbl->close(This)
#define IHTMLWindow2_put_opener(This, v) (This)->lpVtbl->put_opener(This, v)
#define IHTMLWindow2_get_opener(This, p) (This)->lpVtbl->get_opener(This, p)
#define IHTMLWindow2_get_navigator(This, p) (This)->lpVtbl->get_navigator(This, p)
#define IHTMLWindow2_put_name(This, v) (This)->lpVtbl->put_name(This, v)
#define IHTMLWindow2_get_name(This, p) (This)->lpVtbl->get_name(This, p)
#define IHTMLWindow2_get_parent(This, p) (This)->lpVtbl->get_parent(This, p)
#define IHTMLWindow2_open(This, url, name, features, replace, pomWindowResult) (This)->lpVtbl->open(This, url, name, features, replace, pomWindowResult)
#define IHTMLWindow2_get_self(This, p) (This)->lpVtbl->get_self(This, p)
#define IHTMLWindow2_get_top(This, p) (This)->lpVtbl->get_top(This, p)
#define IHTMLWindow2_get_window(This, p) (This)->lpVtbl->get_window(This, p)
#define IHTMLWindow2_navigate(This, url) (This)->lpVtbl->navigate(This, url)
#define IHTMLWindow2_put_onfocus(This, v) (This)->lpVtbl->put_onfocus(This, v)
#define IHTMLWindow2_get_onfocus(This, p) (This)->lpVtbl->get_onfocus(This, p)
#define IHTMLWindow2_put_onblur(This, v) (This)->lpVtbl->put_onblur(This, v)
#define IHTMLWindow2_get_onblur(This, p) (This)->lpVtbl->get_onblur(This, p)
#define IHTMLWindow2_put_onload(This, v) (This)->lpVtbl->put_onload(This, v)
#define IHTMLWindow2_get_onload(This, p) (This)->lpVtbl->get_onload(This, p)
#define IHTMLWindow2_put_onbeforeunload(This, v) (This)->lpVtbl->put_onbeforeunload(This, v)
#define IHTMLWindow2_get_onbeforeunload(This, p) (This)->lpVtbl->get_onbeforeunload(This, p)
#define IHTMLWindow2_put_onunload(This, v) (This)->lpVtbl->put_onunload(This, v)
#define IHTMLWindow2_get_onunload(This, p) (This)->lpVtbl->get_onunload(This, p)
#define IHTMLWindow2_put_onhelp(This, v) (This)->lpVtbl->put_onhelp(This, v)
#define IHTMLWindow2_get_onhelp(This, p) (This)->lpVtbl->get_onhelp(This, p)
#define IHTMLWindow2_put_onerror(This, v) (This)->lpVtbl->put_onerror(This, v)
#define IHTMLWindow2_get_onerror(This, p) (This)->lpVtbl->get_onerror(This, p)
#define IHTMLWindow2_put_onresize(This, v) (This)->lpVtbl->put_onresize(This, v)
#define IHTMLWindow2_get_onresize(This, p) (This)->lpVtbl->get_onresize(This, p)
#define IHTMLWindow2_put_onscroll(This, v) (This)->lpVtbl->put_onscroll(This, v)
#define IHTMLWindow2_get_onscroll(This, p) (This)->lpVtbl->get_onscroll(This, p)
#define IHTMLWindow2_get_document(This, p) (This)->lpVtbl->get_document(This, p)
#define IHTMLWindow2_get_event(This, p) (This)->lpVtbl->get_event(This, p)
#define IHTMLWindow2_get__newEnum(This, p) (This)->lpVtbl->get__newEnum(This, p)
#define IHTMLWindow2_showModalDialog(This, dialog, varArgIn, varOptions, varArgOut) (This)->lpVtbl->showModalDialog(This, dialog, varArgIn, varOptions, varArgOut)
#define IHTMLWindow2_showHelp(This, helpURL, helpArg, features) (This)->lpVtbl->showHelp(This, helpURL, helpArg, features)
#define IHTMLWindow2_get_screen(This, p) (This)->lpVtbl->get_screen(This, p)
#define IHTMLWindow2_get_Option(This, p) (This)->lpVtbl->get_Option(This, p)
#define IHTMLWindow2_focus(This) (This)->lpVtbl->focus(This)
#define IHTMLWindow2_get_closed(This, p) (This)->lpVtbl->get_closed(This, p)
#define IHTMLWindow2_blur(This) (This)->lpVtbl->blur(This)
#define IHTMLWindow2_scroll(This, x, y) (This)->lpVtbl->scroll(This, x, y)
#define IHTMLWindow2_get_clientInformation(This, p) (This)->lpVtbl->get_clientInformation(This, p)
#define IHTMLWindow2_setInterval(This, expression, msec, language, timerID) (This)->lpVtbl->setInterval(This, expression, msec, language, timerID)
#define IHTMLWindow2_clearInterval(This, timerID) (This)->lpVtbl->clearInterval(This, timerID)
#define IHTMLWindow2_put_offscreenBuffering(This, v) (This)->lpVtbl->put_offscreenBuffering(This, v)
#define IHTMLWindow2_get_offscreenBuffering(This, p) (This)->lpVtbl->get_offscreenBuffering(This, p)
#define IHTMLWindow2_execScript(This, code, language, pvarRet) (This)->lpVtbl->execScript(This, code, language, pvarRet)
#define IHTMLWindow2_toString(This, String) (This)->lpVtbl->toString(This, String)
#define IHTMLWindow2_scrollBy(This, x, y) (This)->lpVtbl->scrollBy(This, x, y)
#define IHTMLWindow2_scrollTo(This, x, y) (This)->lpVtbl->scrollTo(This, x, y)
#define IHTMLWindow2_moveTo(This, x, y) (This)->lpVtbl->moveTo(This, x, y)
#define IHTMLWindow2_moveBy(This, x, y) (This)->lpVtbl->moveBy(This, x, y)
#define IHTMLWindow2_resizeTo(This, x, y) (This)->lpVtbl->resizeTo(This, x, y)
#define IHTMLWindow2_resizeBy(This, x, y) (This)->lpVtbl->resizeBy(This, x, y)
#define IHTMLWindow2_get_external(This, p) (This)->lpVtbl->get_external(This, p)

declare function IHTMLWindow2_get_frames_Proxy(byval This as IHTMLWindow2 ptr, byval p as IHTMLFramesCollection2 ptr ptr) as HRESULT
declare sub IHTMLWindow2_get_frames_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLWindow2_put_defaultStatus_Proxy(byval This as IHTMLWindow2 ptr, byval v as BSTR) as HRESULT
declare sub IHTMLWindow2_put_defaultStatus_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLWindow2_get_defaultStatus_Proxy(byval This as IHTMLWindow2 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLWindow2_get_defaultStatus_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLWindow2_put_status_Proxy(byval This as IHTMLWindow2 ptr, byval v as BSTR) as HRESULT
declare sub IHTMLWindow2_put_status_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLWindow2_get_status_Proxy(byval This as IHTMLWindow2 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLWindow2_get_status_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLWindow2_setTimeout_Proxy(byval This as IHTMLWindow2 ptr, byval expression as BSTR, byval msec as long, byval language as VARIANT ptr, byval timerID as long ptr) as HRESULT
declare sub IHTMLWindow2_setTimeout_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLWindow2_clearTimeout_Proxy(byval This as IHTMLWindow2 ptr, byval timerID as long) as HRESULT
declare sub IHTMLWindow2_clearTimeout_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLWindow2_alert_Proxy(byval This as IHTMLWindow2 ptr, byval message as BSTR) as HRESULT
declare sub IHTMLWindow2_alert_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLWindow2_confirm_Proxy(byval This as IHTMLWindow2 ptr, byval message as BSTR, byval confirmed as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLWindow2_confirm_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLWindow2_prompt_Proxy(byval This as IHTMLWindow2 ptr, byval message as BSTR, byval defstr as BSTR, byval textdata as VARIANT ptr) as HRESULT
declare sub IHTMLWindow2_prompt_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLWindow2_get_Image_Proxy(byval This as IHTMLWindow2 ptr, byval p as IHTMLImageElementFactory ptr ptr) as HRESULT
declare sub IHTMLWindow2_get_Image_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLWindow2_get_location_Proxy(byval This as IHTMLWindow2 ptr, byval p as IHTMLLocation ptr ptr) as HRESULT
declare sub IHTMLWindow2_get_location_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLWindow2_get_history_Proxy(byval This as IHTMLWindow2 ptr, byval p as IOmHistory ptr ptr) as HRESULT
declare sub IHTMLWindow2_get_history_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLWindow2_close_Proxy(byval This as IHTMLWindow2 ptr) as HRESULT
declare sub IHTMLWindow2_close_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLWindow2_put_opener_Proxy(byval This as IHTMLWindow2 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLWindow2_put_opener_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLWindow2_get_opener_Proxy(byval This as IHTMLWindow2 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLWindow2_get_opener_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLWindow2_get_navigator_Proxy(byval This as IHTMLWindow2 ptr, byval p as IOmNavigator ptr ptr) as HRESULT
declare sub IHTMLWindow2_get_navigator_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLWindow2_put_name_Proxy(byval This as IHTMLWindow2 ptr, byval v as BSTR) as HRESULT
declare sub IHTMLWindow2_put_name_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLWindow2_get_name_Proxy(byval This as IHTMLWindow2 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLWindow2_get_name_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLWindow2_get_parent_Proxy(byval This as IHTMLWindow2 ptr, byval p as IHTMLWindow2 ptr ptr) as HRESULT
declare sub IHTMLWindow2_get_parent_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLWindow2_open_Proxy(byval This as IHTMLWindow2 ptr, byval url as BSTR, byval name as BSTR, byval features as BSTR, byval replace as VARIANT_BOOL, byval pomWindowResult as IHTMLWindow2 ptr ptr) as HRESULT
declare sub IHTMLWindow2_open_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLWindow2_get_self_Proxy(byval This as IHTMLWindow2 ptr, byval p as IHTMLWindow2 ptr ptr) as HRESULT
declare sub IHTMLWindow2_get_self_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLWindow2_get_top_Proxy(byval This as IHTMLWindow2 ptr, byval p as IHTMLWindow2 ptr ptr) as HRESULT
declare sub IHTMLWindow2_get_top_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLWindow2_get_window_Proxy(byval This as IHTMLWindow2 ptr, byval p as IHTMLWindow2 ptr ptr) as HRESULT
declare sub IHTMLWindow2_get_window_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLWindow2_navigate_Proxy(byval This as IHTMLWindow2 ptr, byval url as BSTR) as HRESULT
declare sub IHTMLWindow2_navigate_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLWindow2_put_onfocus_Proxy(byval This as IHTMLWindow2 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLWindow2_put_onfocus_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLWindow2_get_onfocus_Proxy(byval This as IHTMLWindow2 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLWindow2_get_onfocus_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLWindow2_put_onblur_Proxy(byval This as IHTMLWindow2 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLWindow2_put_onblur_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLWindow2_get_onblur_Proxy(byval This as IHTMLWindow2 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLWindow2_get_onblur_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLWindow2_put_onload_Proxy(byval This as IHTMLWindow2 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLWindow2_put_onload_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLWindow2_get_onload_Proxy(byval This as IHTMLWindow2 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLWindow2_get_onload_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLWindow2_put_onbeforeunload_Proxy(byval This as IHTMLWindow2 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLWindow2_put_onbeforeunload_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLWindow2_get_onbeforeunload_Proxy(byval This as IHTMLWindow2 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLWindow2_get_onbeforeunload_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLWindow2_put_onunload_Proxy(byval This as IHTMLWindow2 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLWindow2_put_onunload_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLWindow2_get_onunload_Proxy(byval This as IHTMLWindow2 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLWindow2_get_onunload_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLWindow2_put_onhelp_Proxy(byval This as IHTMLWindow2 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLWindow2_put_onhelp_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLWindow2_get_onhelp_Proxy(byval This as IHTMLWindow2 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLWindow2_get_onhelp_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLWindow2_put_onerror_Proxy(byval This as IHTMLWindow2 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLWindow2_put_onerror_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLWindow2_get_onerror_Proxy(byval This as IHTMLWindow2 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLWindow2_get_onerror_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLWindow2_put_onresize_Proxy(byval This as IHTMLWindow2 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLWindow2_put_onresize_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLWindow2_get_onresize_Proxy(byval This as IHTMLWindow2 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLWindow2_get_onresize_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLWindow2_put_onscroll_Proxy(byval This as IHTMLWindow2 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLWindow2_put_onscroll_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLWindow2_get_onscroll_Proxy(byval This as IHTMLWindow2 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLWindow2_get_onscroll_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLWindow2_get_document_Proxy(byval This as IHTMLWindow2 ptr, byval p as IHTMLDocument2 ptr ptr) as HRESULT
declare sub IHTMLWindow2_get_document_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLWindow2_get_event_Proxy(byval This as IHTMLWindow2 ptr, byval p as IHTMLEventObj ptr ptr) as HRESULT
declare sub IHTMLWindow2_get_event_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLWindow2_get__newEnum_Proxy(byval This as IHTMLWindow2 ptr, byval p as IUnknown ptr ptr) as HRESULT
declare sub IHTMLWindow2_get__newEnum_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLWindow2_showModalDialog_Proxy(byval This as IHTMLWindow2 ptr, byval dialog as BSTR, byval varArgIn as VARIANT ptr, byval varOptions as VARIANT ptr, byval varArgOut as VARIANT ptr) as HRESULT
declare sub IHTMLWindow2_showModalDialog_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLWindow2_showHelp_Proxy(byval This as IHTMLWindow2 ptr, byval helpURL as BSTR, byval helpArg as VARIANT, byval features as BSTR) as HRESULT
declare sub IHTMLWindow2_showHelp_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLWindow2_get_screen_Proxy(byval This as IHTMLWindow2 ptr, byval p as IHTMLScreen ptr ptr) as HRESULT
declare sub IHTMLWindow2_get_screen_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLWindow2_get_Option_Proxy(byval This as IHTMLWindow2 ptr, byval p as IHTMLOptionElementFactory ptr ptr) as HRESULT
declare sub IHTMLWindow2_get_Option_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLWindow2_focus_Proxy(byval This as IHTMLWindow2 ptr) as HRESULT
declare sub IHTMLWindow2_focus_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLWindow2_get_closed_Proxy(byval This as IHTMLWindow2 ptr, byval p as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLWindow2_get_closed_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLWindow2_blur_Proxy(byval This as IHTMLWindow2 ptr) as HRESULT
declare sub IHTMLWindow2_blur_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLWindow2_scroll_Proxy(byval This as IHTMLWindow2 ptr, byval x as long, byval y as long) as HRESULT
declare sub IHTMLWindow2_scroll_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLWindow2_get_clientInformation_Proxy(byval This as IHTMLWindow2 ptr, byval p as IOmNavigator ptr ptr) as HRESULT
declare sub IHTMLWindow2_get_clientInformation_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLWindow2_setInterval_Proxy(byval This as IHTMLWindow2 ptr, byval expression as BSTR, byval msec as long, byval language as VARIANT ptr, byval timerID as long ptr) as HRESULT
declare sub IHTMLWindow2_setInterval_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLWindow2_clearInterval_Proxy(byval This as IHTMLWindow2 ptr, byval timerID as long) as HRESULT
declare sub IHTMLWindow2_clearInterval_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLWindow2_put_offscreenBuffering_Proxy(byval This as IHTMLWindow2 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLWindow2_put_offscreenBuffering_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLWindow2_get_offscreenBuffering_Proxy(byval This as IHTMLWindow2 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLWindow2_get_offscreenBuffering_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLWindow2_execScript_Proxy(byval This as IHTMLWindow2 ptr, byval code as BSTR, byval language as BSTR, byval pvarRet as VARIANT ptr) as HRESULT
declare sub IHTMLWindow2_execScript_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLWindow2_toString_Proxy(byval This as IHTMLWindow2 ptr, byval String as BSTR ptr) as HRESULT
declare sub IHTMLWindow2_toString_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLWindow2_scrollBy_Proxy(byval This as IHTMLWindow2 ptr, byval x as long, byval y as long) as HRESULT
declare sub IHTMLWindow2_scrollBy_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLWindow2_scrollTo_Proxy(byval This as IHTMLWindow2 ptr, byval x as long, byval y as long) as HRESULT
declare sub IHTMLWindow2_scrollTo_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLWindow2_moveTo_Proxy(byval This as IHTMLWindow2 ptr, byval x as long, byval y as long) as HRESULT
declare sub IHTMLWindow2_moveTo_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLWindow2_moveBy_Proxy(byval This as IHTMLWindow2 ptr, byval x as long, byval y as long) as HRESULT
declare sub IHTMLWindow2_moveBy_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLWindow2_resizeTo_Proxy(byval This as IHTMLWindow2 ptr, byval x as long, byval y as long) as HRESULT
declare sub IHTMLWindow2_resizeTo_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLWindow2_resizeBy_Proxy(byval This as IHTMLWindow2 ptr, byval x as long, byval y as long) as HRESULT
declare sub IHTMLWindow2_resizeBy_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLWindow2_get_external_Proxy(byval This as IHTMLWindow2 ptr, byval p as IDispatch ptr ptr) as HRESULT
declare sub IHTMLWindow2_get_external_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLWindow3_INTERFACE_DEFINED__
extern IID_IHTMLWindow3 as const IID
type IHTMLWindow3 as IHTMLWindow3_

type IHTMLWindow3Vtbl
	QueryInterface as function(byval This as IHTMLWindow3 ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLWindow3 ptr) as ULONG
	Release as function(byval This as IHTMLWindow3 ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLWindow3 ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLWindow3 ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLWindow3 ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLWindow3 ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	get_screenLeft as function(byval This as IHTMLWindow3 ptr, byval p as long ptr) as HRESULT
	get_screenTop as function(byval This as IHTMLWindow3 ptr, byval p as long ptr) as HRESULT
	attachEvent as function(byval This as IHTMLWindow3 ptr, byval event as BSTR, byval pDisp as IDispatch ptr, byval pfResult as VARIANT_BOOL ptr) as HRESULT
	detachEvent as function(byval This as IHTMLWindow3 ptr, byval event as BSTR, byval pDisp as IDispatch ptr) as HRESULT
	setTimeout as function(byval This as IHTMLWindow3 ptr, byval expression as VARIANT ptr, byval msec as long, byval language as VARIANT ptr, byval timerID as long ptr) as HRESULT
	setInterval as function(byval This as IHTMLWindow3 ptr, byval expression as VARIANT ptr, byval msec as long, byval language as VARIANT ptr, byval timerID as long ptr) as HRESULT
	print as function(byval This as IHTMLWindow3 ptr) as HRESULT
	put_onbeforeprint as function(byval This as IHTMLWindow3 ptr, byval v as VARIANT) as HRESULT
	get_onbeforeprint as function(byval This as IHTMLWindow3 ptr, byval p as VARIANT ptr) as HRESULT
	put_onafterprint as function(byval This as IHTMLWindow3 ptr, byval v as VARIANT) as HRESULT
	get_onafterprint as function(byval This as IHTMLWindow3 ptr, byval p as VARIANT ptr) as HRESULT
	get_clipboardData as function(byval This as IHTMLWindow3 ptr, byval p as IHTMLDataTransfer ptr ptr) as HRESULT
	showModelessDialog as function(byval This as IHTMLWindow3 ptr, byval url as BSTR, byval varArgIn as VARIANT ptr, byval options as VARIANT ptr, byval pDialog as IHTMLWindow2 ptr ptr) as HRESULT
end type

type IHTMLWindow3_
	lpVtbl as IHTMLWindow3Vtbl ptr
end type

#define IHTMLWindow3_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLWindow3_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLWindow3_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLWindow3_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLWindow3_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLWindow3_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLWindow3_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLWindow3_get_screenLeft(This, p) (This)->lpVtbl->get_screenLeft(This, p)
#define IHTMLWindow3_get_screenTop(This, p) (This)->lpVtbl->get_screenTop(This, p)
#define IHTMLWindow3_attachEvent(This, event, pDisp, pfResult) (This)->lpVtbl->attachEvent(This, event, pDisp, pfResult)
#define IHTMLWindow3_detachEvent(This, event, pDisp) (This)->lpVtbl->detachEvent(This, event, pDisp)
#define IHTMLWindow3_setTimeout(This, expression, msec, language, timerID) (This)->lpVtbl->setTimeout(This, expression, msec, language, timerID)
#define IHTMLWindow3_setInterval(This, expression, msec, language, timerID) (This)->lpVtbl->setInterval(This, expression, msec, language, timerID)
#define IHTMLWindow3_print(This) (This)->lpVtbl->print(This)
#define IHTMLWindow3_put_onbeforeprint(This, v) (This)->lpVtbl->put_onbeforeprint(This, v)
#define IHTMLWindow3_get_onbeforeprint(This, p) (This)->lpVtbl->get_onbeforeprint(This, p)
#define IHTMLWindow3_put_onafterprint(This, v) (This)->lpVtbl->put_onafterprint(This, v)
#define IHTMLWindow3_get_onafterprint(This, p) (This)->lpVtbl->get_onafterprint(This, p)
#define IHTMLWindow3_get_clipboardData(This, p) (This)->lpVtbl->get_clipboardData(This, p)
#define IHTMLWindow3_showModelessDialog(This, url, varArgIn, options, pDialog) (This)->lpVtbl->showModelessDialog(This, url, varArgIn, options, pDialog)

declare function IHTMLWindow3_get_screenLeft_Proxy(byval This as IHTMLWindow3 ptr, byval p as long ptr) as HRESULT
declare sub IHTMLWindow3_get_screenLeft_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLWindow3_get_screenTop_Proxy(byval This as IHTMLWindow3 ptr, byval p as long ptr) as HRESULT
declare sub IHTMLWindow3_get_screenTop_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLWindow3_attachEvent_Proxy(byval This as IHTMLWindow3 ptr, byval event as BSTR, byval pDisp as IDispatch ptr, byval pfResult as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLWindow3_attachEvent_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLWindow3_detachEvent_Proxy(byval This as IHTMLWindow3 ptr, byval event as BSTR, byval pDisp as IDispatch ptr) as HRESULT
declare sub IHTMLWindow3_detachEvent_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLWindow3_setTimeout_Proxy(byval This as IHTMLWindow3 ptr, byval expression as VARIANT ptr, byval msec as long, byval language as VARIANT ptr, byval timerID as long ptr) as HRESULT
declare sub IHTMLWindow3_setTimeout_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLWindow3_setInterval_Proxy(byval This as IHTMLWindow3 ptr, byval expression as VARIANT ptr, byval msec as long, byval language as VARIANT ptr, byval timerID as long ptr) as HRESULT
declare sub IHTMLWindow3_setInterval_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLWindow3_print_Proxy(byval This as IHTMLWindow3 ptr) as HRESULT
declare sub IHTMLWindow3_print_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLWindow3_put_onbeforeprint_Proxy(byval This as IHTMLWindow3 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLWindow3_put_onbeforeprint_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLWindow3_get_onbeforeprint_Proxy(byval This as IHTMLWindow3 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLWindow3_get_onbeforeprint_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLWindow3_put_onafterprint_Proxy(byval This as IHTMLWindow3 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLWindow3_put_onafterprint_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLWindow3_get_onafterprint_Proxy(byval This as IHTMLWindow3 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLWindow3_get_onafterprint_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLWindow3_get_clipboardData_Proxy(byval This as IHTMLWindow3 ptr, byval p as IHTMLDataTransfer ptr ptr) as HRESULT
declare sub IHTMLWindow3_get_clipboardData_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLWindow3_showModelessDialog_Proxy(byval This as IHTMLWindow3 ptr, byval url as BSTR, byval varArgIn as VARIANT ptr, byval options as VARIANT ptr, byval pDialog as IHTMLWindow2 ptr ptr) as HRESULT
declare sub IHTMLWindow3_showModelessDialog_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLFrameBase_INTERFACE_DEFINED__
extern IID_IHTMLFrameBase as const IID
type IHTMLFrameBase as IHTMLFrameBase_

type IHTMLFrameBaseVtbl
	QueryInterface as function(byval This as IHTMLFrameBase ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLFrameBase ptr) as ULONG
	Release as function(byval This as IHTMLFrameBase ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLFrameBase ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLFrameBase ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLFrameBase ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLFrameBase ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	put_src as function(byval This as IHTMLFrameBase ptr, byval v as BSTR) as HRESULT
	get_src as function(byval This as IHTMLFrameBase ptr, byval p as BSTR ptr) as HRESULT
	put_name as function(byval This as IHTMLFrameBase ptr, byval v as BSTR) as HRESULT
	get_name as function(byval This as IHTMLFrameBase ptr, byval p as BSTR ptr) as HRESULT
	put_border as function(byval This as IHTMLFrameBase ptr, byval v as VARIANT) as HRESULT
	get_border as function(byval This as IHTMLFrameBase ptr, byval p as VARIANT ptr) as HRESULT
	put_frameBorder as function(byval This as IHTMLFrameBase ptr, byval v as BSTR) as HRESULT
	get_frameBorder as function(byval This as IHTMLFrameBase ptr, byval p as BSTR ptr) as HRESULT
	put_frameSpacing as function(byval This as IHTMLFrameBase ptr, byval v as VARIANT) as HRESULT
	get_frameSpacing as function(byval This as IHTMLFrameBase ptr, byval p as VARIANT ptr) as HRESULT
	put_marginWidth as function(byval This as IHTMLFrameBase ptr, byval v as VARIANT) as HRESULT
	get_marginWidth as function(byval This as IHTMLFrameBase ptr, byval p as VARIANT ptr) as HRESULT
	put_marginHeight as function(byval This as IHTMLFrameBase ptr, byval v as VARIANT) as HRESULT
	get_marginHeight as function(byval This as IHTMLFrameBase ptr, byval p as VARIANT ptr) as HRESULT
	put_noResize as function(byval This as IHTMLFrameBase ptr, byval v as VARIANT_BOOL) as HRESULT
	get_noResize as function(byval This as IHTMLFrameBase ptr, byval p as VARIANT_BOOL ptr) as HRESULT
	put_scrolling as function(byval This as IHTMLFrameBase ptr, byval v as BSTR) as HRESULT
	get_scrolling as function(byval This as IHTMLFrameBase ptr, byval p as BSTR ptr) as HRESULT
end type

type IHTMLFrameBase_
	lpVtbl as IHTMLFrameBaseVtbl ptr
end type

#define IHTMLFrameBase_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLFrameBase_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLFrameBase_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLFrameBase_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLFrameBase_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLFrameBase_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLFrameBase_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLFrameBase_put_src(This, v) (This)->lpVtbl->put_src(This, v)
#define IHTMLFrameBase_get_src(This, p) (This)->lpVtbl->get_src(This, p)
#define IHTMLFrameBase_put_name(This, v) (This)->lpVtbl->put_name(This, v)
#define IHTMLFrameBase_get_name(This, p) (This)->lpVtbl->get_name(This, p)
#define IHTMLFrameBase_put_border(This, v) (This)->lpVtbl->put_border(This, v)
#define IHTMLFrameBase_get_border(This, p) (This)->lpVtbl->get_border(This, p)
#define IHTMLFrameBase_put_frameBorder(This, v) (This)->lpVtbl->put_frameBorder(This, v)
#define IHTMLFrameBase_get_frameBorder(This, p) (This)->lpVtbl->get_frameBorder(This, p)
#define IHTMLFrameBase_put_frameSpacing(This, v) (This)->lpVtbl->put_frameSpacing(This, v)
#define IHTMLFrameBase_get_frameSpacing(This, p) (This)->lpVtbl->get_frameSpacing(This, p)
#define IHTMLFrameBase_put_marginWidth(This, v) (This)->lpVtbl->put_marginWidth(This, v)
#define IHTMLFrameBase_get_marginWidth(This, p) (This)->lpVtbl->get_marginWidth(This, p)
#define IHTMLFrameBase_put_marginHeight(This, v) (This)->lpVtbl->put_marginHeight(This, v)
#define IHTMLFrameBase_get_marginHeight(This, p) (This)->lpVtbl->get_marginHeight(This, p)
#define IHTMLFrameBase_put_noResize(This, v) (This)->lpVtbl->put_noResize(This, v)
#define IHTMLFrameBase_get_noResize(This, p) (This)->lpVtbl->get_noResize(This, p)
#define IHTMLFrameBase_put_scrolling(This, v) (This)->lpVtbl->put_scrolling(This, v)
#define IHTMLFrameBase_get_scrolling(This, p) (This)->lpVtbl->get_scrolling(This, p)

declare function IHTMLFrameBase_put_src_Proxy(byval This as IHTMLFrameBase ptr, byval v as BSTR) as HRESULT
declare sub IHTMLFrameBase_put_src_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLFrameBase_get_src_Proxy(byval This as IHTMLFrameBase ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLFrameBase_get_src_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLFrameBase_put_name_Proxy(byval This as IHTMLFrameBase ptr, byval v as BSTR) as HRESULT
declare sub IHTMLFrameBase_put_name_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLFrameBase_get_name_Proxy(byval This as IHTMLFrameBase ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLFrameBase_get_name_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLFrameBase_put_border_Proxy(byval This as IHTMLFrameBase ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLFrameBase_put_border_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLFrameBase_get_border_Proxy(byval This as IHTMLFrameBase ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLFrameBase_get_border_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLFrameBase_put_frameBorder_Proxy(byval This as IHTMLFrameBase ptr, byval v as BSTR) as HRESULT
declare sub IHTMLFrameBase_put_frameBorder_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLFrameBase_get_frameBorder_Proxy(byval This as IHTMLFrameBase ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLFrameBase_get_frameBorder_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLFrameBase_put_frameSpacing_Proxy(byval This as IHTMLFrameBase ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLFrameBase_put_frameSpacing_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLFrameBase_get_frameSpacing_Proxy(byval This as IHTMLFrameBase ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLFrameBase_get_frameSpacing_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLFrameBase_put_marginWidth_Proxy(byval This as IHTMLFrameBase ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLFrameBase_put_marginWidth_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLFrameBase_get_marginWidth_Proxy(byval This as IHTMLFrameBase ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLFrameBase_get_marginWidth_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLFrameBase_put_marginHeight_Proxy(byval This as IHTMLFrameBase ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLFrameBase_put_marginHeight_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLFrameBase_get_marginHeight_Proxy(byval This as IHTMLFrameBase ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLFrameBase_get_marginHeight_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLFrameBase_put_noResize_Proxy(byval This as IHTMLFrameBase ptr, byval v as VARIANT_BOOL) as HRESULT
declare sub IHTMLFrameBase_put_noResize_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLFrameBase_get_noResize_Proxy(byval This as IHTMLFrameBase ptr, byval p as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLFrameBase_get_noResize_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLFrameBase_put_scrolling_Proxy(byval This as IHTMLFrameBase ptr, byval v as BSTR) as HRESULT
declare sub IHTMLFrameBase_put_scrolling_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLFrameBase_get_scrolling_Proxy(byval This as IHTMLFrameBase ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLFrameBase_get_scrolling_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLScreen_INTERFACE_DEFINED__
extern IID_IHTMLScreen as const IID

type IHTMLScreenVtbl
	QueryInterface as function(byval This as IHTMLScreen ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLScreen ptr) as ULONG
	Release as function(byval This as IHTMLScreen ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLScreen ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLScreen ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLScreen ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLScreen ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	get_colorDepth as function(byval This as IHTMLScreen ptr, byval p as long ptr) as HRESULT
	put_bufferDepth as function(byval This as IHTMLScreen ptr, byval v as long) as HRESULT
	get_bufferDepth as function(byval This as IHTMLScreen ptr, byval p as long ptr) as HRESULT
	get_width as function(byval This as IHTMLScreen ptr, byval p as long ptr) as HRESULT
	get_height as function(byval This as IHTMLScreen ptr, byval p as long ptr) as HRESULT
	put_updateInterval as function(byval This as IHTMLScreen ptr, byval v as long) as HRESULT
	get_updateInterval as function(byval This as IHTMLScreen ptr, byval p as long ptr) as HRESULT
	get_availHeight as function(byval This as IHTMLScreen ptr, byval p as long ptr) as HRESULT
	get_availWidth as function(byval This as IHTMLScreen ptr, byval p as long ptr) as HRESULT
	get_fontSmoothingEnabled as function(byval This as IHTMLScreen ptr, byval p as VARIANT_BOOL ptr) as HRESULT
end type

type IHTMLScreen_
	lpVtbl as IHTMLScreenVtbl ptr
end type

#define IHTMLScreen_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLScreen_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLScreen_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLScreen_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLScreen_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLScreen_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLScreen_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLScreen_get_colorDepth(This, p) (This)->lpVtbl->get_colorDepth(This, p)
#define IHTMLScreen_put_bufferDepth(This, v) (This)->lpVtbl->put_bufferDepth(This, v)
#define IHTMLScreen_get_bufferDepth(This, p) (This)->lpVtbl->get_bufferDepth(This, p)
#define IHTMLScreen_get_width(This, p) (This)->lpVtbl->get_width(This, p)
#define IHTMLScreen_get_height(This, p) (This)->lpVtbl->get_height(This, p)
#define IHTMLScreen_put_updateInterval(This, v) (This)->lpVtbl->put_updateInterval(This, v)
#define IHTMLScreen_get_updateInterval(This, p) (This)->lpVtbl->get_updateInterval(This, p)
#define IHTMLScreen_get_availHeight(This, p) (This)->lpVtbl->get_availHeight(This, p)
#define IHTMLScreen_get_availWidth(This, p) (This)->lpVtbl->get_availWidth(This, p)
#define IHTMLScreen_get_fontSmoothingEnabled(This, p) (This)->lpVtbl->get_fontSmoothingEnabled(This, p)

declare function IHTMLScreen_get_colorDepth_Proxy(byval This as IHTMLScreen ptr, byval p as long ptr) as HRESULT
declare sub IHTMLScreen_get_colorDepth_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLScreen_put_bufferDepth_Proxy(byval This as IHTMLScreen ptr, byval v as long) as HRESULT
declare sub IHTMLScreen_put_bufferDepth_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLScreen_get_bufferDepth_Proxy(byval This as IHTMLScreen ptr, byval p as long ptr) as HRESULT
declare sub IHTMLScreen_get_bufferDepth_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLScreen_get_width_Proxy(byval This as IHTMLScreen ptr, byval p as long ptr) as HRESULT
declare sub IHTMLScreen_get_width_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLScreen_get_height_Proxy(byval This as IHTMLScreen ptr, byval p as long ptr) as HRESULT
declare sub IHTMLScreen_get_height_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLScreen_put_updateInterval_Proxy(byval This as IHTMLScreen ptr, byval v as long) as HRESULT
declare sub IHTMLScreen_put_updateInterval_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLScreen_get_updateInterval_Proxy(byval This as IHTMLScreen ptr, byval p as long ptr) as HRESULT
declare sub IHTMLScreen_get_updateInterval_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLScreen_get_availHeight_Proxy(byval This as IHTMLScreen ptr, byval p as long ptr) as HRESULT
declare sub IHTMLScreen_get_availHeight_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLScreen_get_availWidth_Proxy(byval This as IHTMLScreen ptr, byval p as long ptr) as HRESULT
declare sub IHTMLScreen_get_availWidth_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLScreen_get_fontSmoothingEnabled_Proxy(byval This as IHTMLScreen ptr, byval p as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLScreen_get_fontSmoothingEnabled_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLScreen2_INTERFACE_DEFINED__
extern IID_IHTMLScreen2 as const IID
type IHTMLScreen2 as IHTMLScreen2_

type IHTMLScreen2Vtbl
	QueryInterface as function(byval This as IHTMLScreen2 ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLScreen2 ptr) as ULONG
	Release as function(byval This as IHTMLScreen2 ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLScreen2 ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLScreen2 ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLScreen2 ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLScreen2 ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	get_logicalXDPI as function(byval This as IHTMLScreen2 ptr, byval p as long ptr) as HRESULT
	get_logicalYDPI as function(byval This as IHTMLScreen2 ptr, byval p as long ptr) as HRESULT
	get_deviceXDPI as function(byval This as IHTMLScreen2 ptr, byval p as long ptr) as HRESULT
	get_deviceYDPI as function(byval This as IHTMLScreen2 ptr, byval p as long ptr) as HRESULT
end type

type IHTMLScreen2_
	lpVtbl as IHTMLScreen2Vtbl ptr
end type

#define IHTMLScreen2_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLScreen2_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLScreen2_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLScreen2_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLScreen2_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLScreen2_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLScreen2_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLScreen2_get_logicalXDPI(This, p) (This)->lpVtbl->get_logicalXDPI(This, p)
#define IHTMLScreen2_get_logicalYDPI(This, p) (This)->lpVtbl->get_logicalYDPI(This, p)
#define IHTMLScreen2_get_deviceXDPI(This, p) (This)->lpVtbl->get_deviceXDPI(This, p)
#define IHTMLScreen2_get_deviceYDPI(This, p) (This)->lpVtbl->get_deviceYDPI(This, p)

declare function IHTMLScreen2_get_logicalXDPI_Proxy(byval This as IHTMLScreen2 ptr, byval p as long ptr) as HRESULT
declare sub IHTMLScreen2_get_logicalXDPI_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLScreen2_get_logicalYDPI_Proxy(byval This as IHTMLScreen2 ptr, byval p as long ptr) as HRESULT
declare sub IHTMLScreen2_get_logicalYDPI_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLScreen2_get_deviceXDPI_Proxy(byval This as IHTMLScreen2 ptr, byval p as long ptr) as HRESULT
declare sub IHTMLScreen2_get_deviceXDPI_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLScreen2_get_deviceYDPI_Proxy(byval This as IHTMLScreen2 ptr, byval p as long ptr) as HRESULT
declare sub IHTMLScreen2_get_deviceYDPI_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLWindow4_INTERFACE_DEFINED__
extern IID_IHTMLWindow4 as const IID
type IHTMLWindow4 as IHTMLWindow4_

type IHTMLWindow4Vtbl
	QueryInterface as function(byval This as IHTMLWindow4 ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLWindow4 ptr) as ULONG
	Release as function(byval This as IHTMLWindow4 ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLWindow4 ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLWindow4 ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLWindow4 ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLWindow4 ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	createPopup as function(byval This as IHTMLWindow4 ptr, byval varArgIn as VARIANT ptr, byval ppPopup as IDispatch ptr ptr) as HRESULT
	get_frameElement as function(byval This as IHTMLWindow4 ptr, byval p as IHTMLFrameBase ptr ptr) as HRESULT
end type

type IHTMLWindow4_
	lpVtbl as IHTMLWindow4Vtbl ptr
end type

#define IHTMLWindow4_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLWindow4_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLWindow4_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLWindow4_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLWindow4_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLWindow4_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLWindow4_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLWindow4_createPopup(This, varArgIn, ppPopup) (This)->lpVtbl->createPopup(This, varArgIn, ppPopup)
#define IHTMLWindow4_get_frameElement(This, p) (This)->lpVtbl->get_frameElement(This, p)

declare function IHTMLWindow4_createPopup_Proxy(byval This as IHTMLWindow4 ptr, byval varArgIn as VARIANT ptr, byval ppPopup as IDispatch ptr ptr) as HRESULT
declare sub IHTMLWindow4_createPopup_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLWindow4_get_frameElement_Proxy(byval This as IHTMLWindow4 ptr, byval p as IHTMLFrameBase ptr ptr) as HRESULT
declare sub IHTMLWindow4_get_frameElement_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
extern CLSID_FramesCollection as const CLSID
#define __DispHTMLScreen_DISPINTERFACE_DEFINED__
extern DIID_DispHTMLScreen as const IID
type DispHTMLScreen as DispHTMLScreen_

type DispHTMLScreenVtbl
	QueryInterface as function(byval This as DispHTMLScreen ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as DispHTMLScreen ptr) as ULONG
	Release as function(byval This as DispHTMLScreen ptr) as ULONG
	GetTypeInfoCount as function(byval This as DispHTMLScreen ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as DispHTMLScreen ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as DispHTMLScreen ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as DispHTMLScreen ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type DispHTMLScreen_
	lpVtbl as DispHTMLScreenVtbl ptr
end type

#define DispHTMLScreen_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define DispHTMLScreen_AddRef(This) (This)->lpVtbl->AddRef(This)
#define DispHTMLScreen_Release(This) (This)->lpVtbl->Release(This)
#define DispHTMLScreen_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define DispHTMLScreen_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define DispHTMLScreen_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define DispHTMLScreen_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
extern CLSID_HTMLScreen as const CLSID
#define __DispHTMLWindow2_DISPINTERFACE_DEFINED__
extern DIID_DispHTMLWindow2 as const IID
type DispHTMLWindow2 as DispHTMLWindow2_

type DispHTMLWindow2Vtbl
	QueryInterface as function(byval This as DispHTMLWindow2 ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as DispHTMLWindow2 ptr) as ULONG
	Release as function(byval This as DispHTMLWindow2 ptr) as ULONG
	GetTypeInfoCount as function(byval This as DispHTMLWindow2 ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as DispHTMLWindow2 ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as DispHTMLWindow2 ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as DispHTMLWindow2 ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type DispHTMLWindow2_
	lpVtbl as DispHTMLWindow2Vtbl ptr
end type

#define DispHTMLWindow2_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define DispHTMLWindow2_AddRef(This) (This)->lpVtbl->AddRef(This)
#define DispHTMLWindow2_Release(This) (This)->lpVtbl->Release(This)
#define DispHTMLWindow2_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define DispHTMLWindow2_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define DispHTMLWindow2_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define DispHTMLWindow2_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
extern CLSID_HTMLWindow2 as const CLSID
#define __DispHTMLWindowProxy_DISPINTERFACE_DEFINED__
extern DIID_DispHTMLWindowProxy as const IID
type DispHTMLWindowProxy as DispHTMLWindowProxy_

type DispHTMLWindowProxyVtbl
	QueryInterface as function(byval This as DispHTMLWindowProxy ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as DispHTMLWindowProxy ptr) as ULONG
	Release as function(byval This as DispHTMLWindowProxy ptr) as ULONG
	GetTypeInfoCount as function(byval This as DispHTMLWindowProxy ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as DispHTMLWindowProxy ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as DispHTMLWindowProxy ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as DispHTMLWindowProxy ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type DispHTMLWindowProxy_
	lpVtbl as DispHTMLWindowProxyVtbl ptr
end type

#define DispHTMLWindowProxy_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define DispHTMLWindowProxy_AddRef(This) (This)->lpVtbl->AddRef(This)
#define DispHTMLWindowProxy_Release(This) (This)->lpVtbl->Release(This)
#define DispHTMLWindowProxy_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define DispHTMLWindowProxy_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define DispHTMLWindowProxy_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define DispHTMLWindowProxy_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
extern CLSID_HTMLWindowProxy as const CLSID
#define __HTMLDocumentEvents2_DISPINTERFACE_DEFINED__
extern DIID_HTMLDocumentEvents2 as const IID
type HTMLDocumentEvents2 as HTMLDocumentEvents2_

type HTMLDocumentEvents2Vtbl
	QueryInterface as function(byval This as HTMLDocumentEvents2 ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as HTMLDocumentEvents2 ptr) as ULONG
	Release as function(byval This as HTMLDocumentEvents2 ptr) as ULONG
	GetTypeInfoCount as function(byval This as HTMLDocumentEvents2 ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as HTMLDocumentEvents2 ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as HTMLDocumentEvents2 ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as HTMLDocumentEvents2 ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type HTMLDocumentEvents2_
	lpVtbl as HTMLDocumentEvents2Vtbl ptr
end type

#define HTMLDocumentEvents2_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define HTMLDocumentEvents2_AddRef(This) (This)->lpVtbl->AddRef(This)
#define HTMLDocumentEvents2_Release(This) (This)->lpVtbl->Release(This)
#define HTMLDocumentEvents2_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define HTMLDocumentEvents2_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define HTMLDocumentEvents2_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define HTMLDocumentEvents2_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define __HTMLDocumentEvents_DISPINTERFACE_DEFINED__
extern DIID_HTMLDocumentEvents as const IID
type HTMLDocumentEvents as HTMLDocumentEvents_

type HTMLDocumentEventsVtbl
	QueryInterface as function(byval This as HTMLDocumentEvents ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as HTMLDocumentEvents ptr) as ULONG
	Release as function(byval This as HTMLDocumentEvents ptr) as ULONG
	GetTypeInfoCount as function(byval This as HTMLDocumentEvents ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as HTMLDocumentEvents ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as HTMLDocumentEvents ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as HTMLDocumentEvents ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type HTMLDocumentEvents_
	lpVtbl as HTMLDocumentEventsVtbl ptr
end type

#define HTMLDocumentEvents_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define HTMLDocumentEvents_AddRef(This) (This)->lpVtbl->AddRef(This)
#define HTMLDocumentEvents_Release(This) (This)->lpVtbl->Release(This)
#define HTMLDocumentEvents_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define HTMLDocumentEvents_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define HTMLDocumentEvents_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define HTMLDocumentEvents_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define __IHTMLDocument3_INTERFACE_DEFINED__
extern IID_IHTMLDocument3 as const IID
type IHTMLDocument3 as IHTMLDocument3_

type IHTMLDocument3Vtbl
	QueryInterface as function(byval This as IHTMLDocument3 ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLDocument3 ptr) as ULONG
	Release as function(byval This as IHTMLDocument3 ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLDocument3 ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLDocument3 ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLDocument3 ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLDocument3 ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	releaseCapture as function(byval This as IHTMLDocument3 ptr) as HRESULT
	recalc as function(byval This as IHTMLDocument3 ptr, byval fForce as VARIANT_BOOL) as HRESULT
	createTextNode as function(byval This as IHTMLDocument3 ptr, byval text as BSTR, byval newTextNode as IHTMLDOMNode ptr ptr) as HRESULT
	get_documentElement as function(byval This as IHTMLDocument3 ptr, byval p as IHTMLElement ptr ptr) as HRESULT
	get_uniqueID as function(byval This as IHTMLDocument3 ptr, byval p as BSTR ptr) as HRESULT
	attachEvent as function(byval This as IHTMLDocument3 ptr, byval event as BSTR, byval pDisp as IDispatch ptr, byval pfResult as VARIANT_BOOL ptr) as HRESULT
	detachEvent as function(byval This as IHTMLDocument3 ptr, byval event as BSTR, byval pDisp as IDispatch ptr) as HRESULT
	put_onrowsdelete as function(byval This as IHTMLDocument3 ptr, byval v as VARIANT) as HRESULT
	get_onrowsdelete as function(byval This as IHTMLDocument3 ptr, byval p as VARIANT ptr) as HRESULT
	put_onrowsinserted as function(byval This as IHTMLDocument3 ptr, byval v as VARIANT) as HRESULT
	get_onrowsinserted as function(byval This as IHTMLDocument3 ptr, byval p as VARIANT ptr) as HRESULT
	put_oncellchange as function(byval This as IHTMLDocument3 ptr, byval v as VARIANT) as HRESULT
	get_oncellchange as function(byval This as IHTMLDocument3 ptr, byval p as VARIANT ptr) as HRESULT
	put_ondatasetchanged as function(byval This as IHTMLDocument3 ptr, byval v as VARIANT) as HRESULT
	get_ondatasetchanged as function(byval This as IHTMLDocument3 ptr, byval p as VARIANT ptr) as HRESULT
	put_ondataavailable as function(byval This as IHTMLDocument3 ptr, byval v as VARIANT) as HRESULT
	get_ondataavailable as function(byval This as IHTMLDocument3 ptr, byval p as VARIANT ptr) as HRESULT
	put_ondatasetcomplete as function(byval This as IHTMLDocument3 ptr, byval v as VARIANT) as HRESULT
	get_ondatasetcomplete as function(byval This as IHTMLDocument3 ptr, byval p as VARIANT ptr) as HRESULT
	put_onpropertychange as function(byval This as IHTMLDocument3 ptr, byval v as VARIANT) as HRESULT
	get_onpropertychange as function(byval This as IHTMLDocument3 ptr, byval p as VARIANT ptr) as HRESULT
	put_dir as function(byval This as IHTMLDocument3 ptr, byval v as BSTR) as HRESULT
	get_dir as function(byval This as IHTMLDocument3 ptr, byval p as BSTR ptr) as HRESULT
	put_oncontextmenu as function(byval This as IHTMLDocument3 ptr, byval v as VARIANT) as HRESULT
	get_oncontextmenu as function(byval This as IHTMLDocument3 ptr, byval p as VARIANT ptr) as HRESULT
	put_onstop as function(byval This as IHTMLDocument3 ptr, byval v as VARIANT) as HRESULT
	get_onstop as function(byval This as IHTMLDocument3 ptr, byval p as VARIANT ptr) as HRESULT
	createDocumentFragment as function(byval This as IHTMLDocument3 ptr, byval pNewDoc as IHTMLDocument2 ptr ptr) as HRESULT
	get_parentDocument as function(byval This as IHTMLDocument3 ptr, byval p as IHTMLDocument2 ptr ptr) as HRESULT
	put_enableDownload as function(byval This as IHTMLDocument3 ptr, byval v as VARIANT_BOOL) as HRESULT
	get_enableDownload as function(byval This as IHTMLDocument3 ptr, byval p as VARIANT_BOOL ptr) as HRESULT
	put_baseUrl as function(byval This as IHTMLDocument3 ptr, byval v as BSTR) as HRESULT
	get_baseUrl as function(byval This as IHTMLDocument3 ptr, byval p as BSTR ptr) as HRESULT
	get_childNodes as function(byval This as IHTMLDocument3 ptr, byval p as IDispatch ptr ptr) as HRESULT
	put_inheritStyleSheets as function(byval This as IHTMLDocument3 ptr, byval v as VARIANT_BOOL) as HRESULT
	get_inheritStyleSheets as function(byval This as IHTMLDocument3 ptr, byval p as VARIANT_BOOL ptr) as HRESULT
	put_onbeforeeditfocus as function(byval This as IHTMLDocument3 ptr, byval v as VARIANT) as HRESULT
	get_onbeforeeditfocus as function(byval This as IHTMLDocument3 ptr, byval p as VARIANT ptr) as HRESULT
	getElementsByName as function(byval This as IHTMLDocument3 ptr, byval v as BSTR, byval pelColl as IHTMLElementCollection ptr ptr) as HRESULT
	getElementById as function(byval This as IHTMLDocument3 ptr, byval v as BSTR, byval pel as IHTMLElement ptr ptr) as HRESULT
	getElementsByTagName as function(byval This as IHTMLDocument3 ptr, byval v as BSTR, byval pelColl as IHTMLElementCollection ptr ptr) as HRESULT
end type

type IHTMLDocument3_
	lpVtbl as IHTMLDocument3Vtbl ptr
end type

#define IHTMLDocument3_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLDocument3_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLDocument3_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLDocument3_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLDocument3_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLDocument3_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLDocument3_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLDocument3_releaseCapture(This) (This)->lpVtbl->releaseCapture(This)
#define IHTMLDocument3_recalc(This, fForce) (This)->lpVtbl->recalc(This, fForce)
#define IHTMLDocument3_createTextNode(This, text, newTextNode) (This)->lpVtbl->createTextNode(This, text, newTextNode)
#define IHTMLDocument3_get_documentElement(This, p) (This)->lpVtbl->get_documentElement(This, p)
#define IHTMLDocument3_get_uniqueID(This, p) (This)->lpVtbl->get_uniqueID(This, p)
#define IHTMLDocument3_attachEvent(This, event, pDisp, pfResult) (This)->lpVtbl->attachEvent(This, event, pDisp, pfResult)
#define IHTMLDocument3_detachEvent(This, event, pDisp) (This)->lpVtbl->detachEvent(This, event, pDisp)
#define IHTMLDocument3_put_onrowsdelete(This, v) (This)->lpVtbl->put_onrowsdelete(This, v)
#define IHTMLDocument3_get_onrowsdelete(This, p) (This)->lpVtbl->get_onrowsdelete(This, p)
#define IHTMLDocument3_put_onrowsinserted(This, v) (This)->lpVtbl->put_onrowsinserted(This, v)
#define IHTMLDocument3_get_onrowsinserted(This, p) (This)->lpVtbl->get_onrowsinserted(This, p)
#define IHTMLDocument3_put_oncellchange(This, v) (This)->lpVtbl->put_oncellchange(This, v)
#define IHTMLDocument3_get_oncellchange(This, p) (This)->lpVtbl->get_oncellchange(This, p)
#define IHTMLDocument3_put_ondatasetchanged(This, v) (This)->lpVtbl->put_ondatasetchanged(This, v)
#define IHTMLDocument3_get_ondatasetchanged(This, p) (This)->lpVtbl->get_ondatasetchanged(This, p)
#define IHTMLDocument3_put_ondataavailable(This, v) (This)->lpVtbl->put_ondataavailable(This, v)
#define IHTMLDocument3_get_ondataavailable(This, p) (This)->lpVtbl->get_ondataavailable(This, p)
#define IHTMLDocument3_put_ondatasetcomplete(This, v) (This)->lpVtbl->put_ondatasetcomplete(This, v)
#define IHTMLDocument3_get_ondatasetcomplete(This, p) (This)->lpVtbl->get_ondatasetcomplete(This, p)
#define IHTMLDocument3_put_onpropertychange(This, v) (This)->lpVtbl->put_onpropertychange(This, v)
#define IHTMLDocument3_get_onpropertychange(This, p) (This)->lpVtbl->get_onpropertychange(This, p)
#define IHTMLDocument3_put_dir(This, v) (This)->lpVtbl->put_dir(This, v)
#define IHTMLDocument3_get_dir(This, p) (This)->lpVtbl->get_dir(This, p)
#define IHTMLDocument3_put_oncontextmenu(This, v) (This)->lpVtbl->put_oncontextmenu(This, v)
#define IHTMLDocument3_get_oncontextmenu(This, p) (This)->lpVtbl->get_oncontextmenu(This, p)
#define IHTMLDocument3_put_onstop(This, v) (This)->lpVtbl->put_onstop(This, v)
#define IHTMLDocument3_get_onstop(This, p) (This)->lpVtbl->get_onstop(This, p)
#define IHTMLDocument3_createDocumentFragment(This, pNewDoc) (This)->lpVtbl->createDocumentFragment(This, pNewDoc)
#define IHTMLDocument3_get_parentDocument(This, p) (This)->lpVtbl->get_parentDocument(This, p)
#define IHTMLDocument3_put_enableDownload(This, v) (This)->lpVtbl->put_enableDownload(This, v)
#define IHTMLDocument3_get_enableDownload(This, p) (This)->lpVtbl->get_enableDownload(This, p)
#define IHTMLDocument3_put_baseUrl(This, v) (This)->lpVtbl->put_baseUrl(This, v)
#define IHTMLDocument3_get_baseUrl(This, p) (This)->lpVtbl->get_baseUrl(This, p)
#define IHTMLDocument3_get_childNodes(This, p) (This)->lpVtbl->get_childNodes(This, p)
#define IHTMLDocument3_put_inheritStyleSheets(This, v) (This)->lpVtbl->put_inheritStyleSheets(This, v)
#define IHTMLDocument3_get_inheritStyleSheets(This, p) (This)->lpVtbl->get_inheritStyleSheets(This, p)
#define IHTMLDocument3_put_onbeforeeditfocus(This, v) (This)->lpVtbl->put_onbeforeeditfocus(This, v)
#define IHTMLDocument3_get_onbeforeeditfocus(This, p) (This)->lpVtbl->get_onbeforeeditfocus(This, p)
#define IHTMLDocument3_getElementsByName(This, v, pelColl) (This)->lpVtbl->getElementsByName(This, v, pelColl)
#define IHTMLDocument3_getElementById(This, v, pel) (This)->lpVtbl->getElementById(This, v, pel)
#define IHTMLDocument3_getElementsByTagName(This, v, pelColl) (This)->lpVtbl->getElementsByTagName(This, v, pelColl)

declare function IHTMLDocument3_releaseCapture_Proxy(byval This as IHTMLDocument3 ptr) as HRESULT
declare sub IHTMLDocument3_releaseCapture_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument3_recalc_Proxy(byval This as IHTMLDocument3 ptr, byval fForce as VARIANT_BOOL) as HRESULT
declare sub IHTMLDocument3_recalc_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument3_createTextNode_Proxy(byval This as IHTMLDocument3 ptr, byval text as BSTR, byval newTextNode as IHTMLDOMNode ptr ptr) as HRESULT
declare sub IHTMLDocument3_createTextNode_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument3_get_documentElement_Proxy(byval This as IHTMLDocument3 ptr, byval p as IHTMLElement ptr ptr) as HRESULT
declare sub IHTMLDocument3_get_documentElement_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument3_get_uniqueID_Proxy(byval This as IHTMLDocument3 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLDocument3_get_uniqueID_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument3_attachEvent_Proxy(byval This as IHTMLDocument3 ptr, byval event as BSTR, byval pDisp as IDispatch ptr, byval pfResult as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLDocument3_attachEvent_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument3_detachEvent_Proxy(byval This as IHTMLDocument3 ptr, byval event as BSTR, byval pDisp as IDispatch ptr) as HRESULT
declare sub IHTMLDocument3_detachEvent_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument3_put_onrowsdelete_Proxy(byval This as IHTMLDocument3 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLDocument3_put_onrowsdelete_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument3_get_onrowsdelete_Proxy(byval This as IHTMLDocument3 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLDocument3_get_onrowsdelete_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument3_put_onrowsinserted_Proxy(byval This as IHTMLDocument3 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLDocument3_put_onrowsinserted_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument3_get_onrowsinserted_Proxy(byval This as IHTMLDocument3 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLDocument3_get_onrowsinserted_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument3_put_oncellchange_Proxy(byval This as IHTMLDocument3 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLDocument3_put_oncellchange_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument3_get_oncellchange_Proxy(byval This as IHTMLDocument3 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLDocument3_get_oncellchange_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument3_put_ondatasetchanged_Proxy(byval This as IHTMLDocument3 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLDocument3_put_ondatasetchanged_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument3_get_ondatasetchanged_Proxy(byval This as IHTMLDocument3 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLDocument3_get_ondatasetchanged_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument3_put_ondataavailable_Proxy(byval This as IHTMLDocument3 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLDocument3_put_ondataavailable_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument3_get_ondataavailable_Proxy(byval This as IHTMLDocument3 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLDocument3_get_ondataavailable_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument3_put_ondatasetcomplete_Proxy(byval This as IHTMLDocument3 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLDocument3_put_ondatasetcomplete_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument3_get_ondatasetcomplete_Proxy(byval This as IHTMLDocument3 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLDocument3_get_ondatasetcomplete_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument3_put_onpropertychange_Proxy(byval This as IHTMLDocument3 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLDocument3_put_onpropertychange_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument3_get_onpropertychange_Proxy(byval This as IHTMLDocument3 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLDocument3_get_onpropertychange_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument3_put_dir_Proxy(byval This as IHTMLDocument3 ptr, byval v as BSTR) as HRESULT
declare sub IHTMLDocument3_put_dir_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument3_get_dir_Proxy(byval This as IHTMLDocument3 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLDocument3_get_dir_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument3_put_oncontextmenu_Proxy(byval This as IHTMLDocument3 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLDocument3_put_oncontextmenu_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument3_get_oncontextmenu_Proxy(byval This as IHTMLDocument3 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLDocument3_get_oncontextmenu_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument3_put_onstop_Proxy(byval This as IHTMLDocument3 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLDocument3_put_onstop_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument3_get_onstop_Proxy(byval This as IHTMLDocument3 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLDocument3_get_onstop_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument3_createDocumentFragment_Proxy(byval This as IHTMLDocument3 ptr, byval pNewDoc as IHTMLDocument2 ptr ptr) as HRESULT
declare sub IHTMLDocument3_createDocumentFragment_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument3_get_parentDocument_Proxy(byval This as IHTMLDocument3 ptr, byval p as IHTMLDocument2 ptr ptr) as HRESULT
declare sub IHTMLDocument3_get_parentDocument_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument3_put_enableDownload_Proxy(byval This as IHTMLDocument3 ptr, byval v as VARIANT_BOOL) as HRESULT
declare sub IHTMLDocument3_put_enableDownload_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument3_get_enableDownload_Proxy(byval This as IHTMLDocument3 ptr, byval p as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLDocument3_get_enableDownload_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument3_put_baseUrl_Proxy(byval This as IHTMLDocument3 ptr, byval v as BSTR) as HRESULT
declare sub IHTMLDocument3_put_baseUrl_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument3_get_baseUrl_Proxy(byval This as IHTMLDocument3 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLDocument3_get_baseUrl_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument3_get_childNodes_Proxy(byval This as IHTMLDocument3 ptr, byval p as IDispatch ptr ptr) as HRESULT
declare sub IHTMLDocument3_get_childNodes_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument3_put_inheritStyleSheets_Proxy(byval This as IHTMLDocument3 ptr, byval v as VARIANT_BOOL) as HRESULT
declare sub IHTMLDocument3_put_inheritStyleSheets_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument3_get_inheritStyleSheets_Proxy(byval This as IHTMLDocument3 ptr, byval p as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLDocument3_get_inheritStyleSheets_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument3_put_onbeforeeditfocus_Proxy(byval This as IHTMLDocument3 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLDocument3_put_onbeforeeditfocus_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument3_get_onbeforeeditfocus_Proxy(byval This as IHTMLDocument3 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLDocument3_get_onbeforeeditfocus_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument3_getElementsByName_Proxy(byval This as IHTMLDocument3 ptr, byval v as BSTR, byval pelColl as IHTMLElementCollection ptr ptr) as HRESULT
declare sub IHTMLDocument3_getElementsByName_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument3_getElementById_Proxy(byval This as IHTMLDocument3 ptr, byval v as BSTR, byval pel as IHTMLElement ptr ptr) as HRESULT
declare sub IHTMLDocument3_getElementById_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument3_getElementsByTagName_Proxy(byval This as IHTMLDocument3 ptr, byval v as BSTR, byval pelColl as IHTMLElementCollection ptr ptr) as HRESULT
declare sub IHTMLDocument3_getElementsByTagName_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLDocument4_INTERFACE_DEFINED__
extern IID_IHTMLDocument4 as const IID
type IHTMLDocument4 as IHTMLDocument4_

type IHTMLDocument4Vtbl
	QueryInterface as function(byval This as IHTMLDocument4 ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLDocument4 ptr) as ULONG
	Release as function(byval This as IHTMLDocument4 ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLDocument4 ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLDocument4 ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLDocument4 ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLDocument4 ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	focus as function(byval This as IHTMLDocument4 ptr) as HRESULT
	hasFocus as function(byval This as IHTMLDocument4 ptr, byval pfFocus as VARIANT_BOOL ptr) as HRESULT
	put_onselectionchange as function(byval This as IHTMLDocument4 ptr, byval v as VARIANT) as HRESULT
	get_onselectionchange as function(byval This as IHTMLDocument4 ptr, byval p as VARIANT ptr) as HRESULT
	get_namespaces as function(byval This as IHTMLDocument4 ptr, byval p as IDispatch ptr ptr) as HRESULT
	createDocumentFromUrl as function(byval This as IHTMLDocument4 ptr, byval bstrUrl as BSTR, byval bstrOptions as BSTR, byval newDoc as IHTMLDocument2 ptr ptr) as HRESULT
	put_media as function(byval This as IHTMLDocument4 ptr, byval v as BSTR) as HRESULT
	get_media as function(byval This as IHTMLDocument4 ptr, byval p as BSTR ptr) as HRESULT
	createEventObject as function(byval This as IHTMLDocument4 ptr, byval pvarEventObject as VARIANT ptr, byval ppEventObj as IHTMLEventObj ptr ptr) as HRESULT
	fireEvent as function(byval This as IHTMLDocument4 ptr, byval bstrEventName as BSTR, byval pvarEventObject as VARIANT ptr, byval pfCancelled as VARIANT_BOOL ptr) as HRESULT
	createRenderStyle as function(byval This as IHTMLDocument4 ptr, byval v as BSTR, byval ppIHTMLRenderStyle as IHTMLRenderStyle ptr ptr) as HRESULT
	put_oncontrolselect as function(byval This as IHTMLDocument4 ptr, byval v as VARIANT) as HRESULT
	get_oncontrolselect as function(byval This as IHTMLDocument4 ptr, byval p as VARIANT ptr) as HRESULT
	get_URLUnencoded as function(byval This as IHTMLDocument4 ptr, byval p as BSTR ptr) as HRESULT
end type

type IHTMLDocument4_
	lpVtbl as IHTMLDocument4Vtbl ptr
end type

#define IHTMLDocument4_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLDocument4_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLDocument4_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLDocument4_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLDocument4_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLDocument4_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLDocument4_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLDocument4_focus(This) (This)->lpVtbl->focus(This)
#define IHTMLDocument4_hasFocus(This, pfFocus) (This)->lpVtbl->hasFocus(This, pfFocus)
#define IHTMLDocument4_put_onselectionchange(This, v) (This)->lpVtbl->put_onselectionchange(This, v)
#define IHTMLDocument4_get_onselectionchange(This, p) (This)->lpVtbl->get_onselectionchange(This, p)
#define IHTMLDocument4_get_namespaces(This, p) (This)->lpVtbl->get_namespaces(This, p)
#define IHTMLDocument4_createDocumentFromUrl(This, bstrUrl, bstrOptions, newDoc) (This)->lpVtbl->createDocumentFromUrl(This, bstrUrl, bstrOptions, newDoc)
#define IHTMLDocument4_put_media(This, v) (This)->lpVtbl->put_media(This, v)
#define IHTMLDocument4_get_media(This, p) (This)->lpVtbl->get_media(This, p)
#define IHTMLDocument4_createEventObject(This, pvarEventObject, ppEventObj) (This)->lpVtbl->createEventObject(This, pvarEventObject, ppEventObj)
#define IHTMLDocument4_fireEvent(This, bstrEventName, pvarEventObject, pfCancelled) (This)->lpVtbl->fireEvent(This, bstrEventName, pvarEventObject, pfCancelled)
#define IHTMLDocument4_createRenderStyle(This, v, ppIHTMLRenderStyle) (This)->lpVtbl->createRenderStyle(This, v, ppIHTMLRenderStyle)
#define IHTMLDocument4_put_oncontrolselect(This, v) (This)->lpVtbl->put_oncontrolselect(This, v)
#define IHTMLDocument4_get_oncontrolselect(This, p) (This)->lpVtbl->get_oncontrolselect(This, p)
#define IHTMLDocument4_get_URLUnencoded(This, p) (This)->lpVtbl->get_URLUnencoded(This, p)

declare function IHTMLDocument4_focus_Proxy(byval This as IHTMLDocument4 ptr) as HRESULT
declare sub IHTMLDocument4_focus_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument4_hasFocus_Proxy(byval This as IHTMLDocument4 ptr, byval pfFocus as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLDocument4_hasFocus_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument4_put_onselectionchange_Proxy(byval This as IHTMLDocument4 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLDocument4_put_onselectionchange_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument4_get_onselectionchange_Proxy(byval This as IHTMLDocument4 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLDocument4_get_onselectionchange_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument4_get_namespaces_Proxy(byval This as IHTMLDocument4 ptr, byval p as IDispatch ptr ptr) as HRESULT
declare sub IHTMLDocument4_get_namespaces_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument4_createDocumentFromUrl_Proxy(byval This as IHTMLDocument4 ptr, byval bstrUrl as BSTR, byval bstrOptions as BSTR, byval newDoc as IHTMLDocument2 ptr ptr) as HRESULT
declare sub IHTMLDocument4_createDocumentFromUrl_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument4_put_media_Proxy(byval This as IHTMLDocument4 ptr, byval v as BSTR) as HRESULT
declare sub IHTMLDocument4_put_media_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument4_get_media_Proxy(byval This as IHTMLDocument4 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLDocument4_get_media_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument4_createEventObject_Proxy(byval This as IHTMLDocument4 ptr, byval pvarEventObject as VARIANT ptr, byval ppEventObj as IHTMLEventObj ptr ptr) as HRESULT
declare sub IHTMLDocument4_createEventObject_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument4_fireEvent_Proxy(byval This as IHTMLDocument4 ptr, byval bstrEventName as BSTR, byval pvarEventObject as VARIANT ptr, byval pfCancelled as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLDocument4_fireEvent_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument4_createRenderStyle_Proxy(byval This as IHTMLDocument4 ptr, byval v as BSTR, byval ppIHTMLRenderStyle as IHTMLRenderStyle ptr ptr) as HRESULT
declare sub IHTMLDocument4_createRenderStyle_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument4_put_oncontrolselect_Proxy(byval This as IHTMLDocument4 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLDocument4_put_oncontrolselect_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument4_get_oncontrolselect_Proxy(byval This as IHTMLDocument4 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLDocument4_get_oncontrolselect_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument4_get_URLUnencoded_Proxy(byval This as IHTMLDocument4 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLDocument4_get_URLUnencoded_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLDocument5_INTERFACE_DEFINED__
extern IID_IHTMLDocument5 as const IID
type IHTMLDocument5 as IHTMLDocument5_

type IHTMLDocument5Vtbl
	QueryInterface as function(byval This as IHTMLDocument5 ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLDocument5 ptr) as ULONG
	Release as function(byval This as IHTMLDocument5 ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLDocument5 ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLDocument5 ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLDocument5 ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLDocument5 ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	put_onmousewheel as function(byval This as IHTMLDocument5 ptr, byval v as VARIANT) as HRESULT
	get_onmousewheel as function(byval This as IHTMLDocument5 ptr, byval p as VARIANT ptr) as HRESULT
	get_doctype as function(byval This as IHTMLDocument5 ptr, byval p as IHTMLDOMNode ptr ptr) as HRESULT
	get_implementation as function(byval This as IHTMLDocument5 ptr, byval p as IHTMLDOMImplementation ptr ptr) as HRESULT
	createAttribute as function(byval This as IHTMLDocument5 ptr, byval bstrattrName as BSTR, byval ppattribute as IHTMLDOMAttribute ptr ptr) as HRESULT
	createComment as function(byval This as IHTMLDocument5 ptr, byval bstrdata as BSTR, byval ppRetNode as IHTMLDOMNode ptr ptr) as HRESULT
	put_onfocusin as function(byval This as IHTMLDocument5 ptr, byval v as VARIANT) as HRESULT
	get_onfocusin as function(byval This as IHTMLDocument5 ptr, byval p as VARIANT ptr) as HRESULT
	put_onfocusout as function(byval This as IHTMLDocument5 ptr, byval v as VARIANT) as HRESULT
	get_onfocusout as function(byval This as IHTMLDocument5 ptr, byval p as VARIANT ptr) as HRESULT
	put_onactivate as function(byval This as IHTMLDocument5 ptr, byval v as VARIANT) as HRESULT
	get_onactivate as function(byval This as IHTMLDocument5 ptr, byval p as VARIANT ptr) as HRESULT
	put_ondeactivate as function(byval This as IHTMLDocument5 ptr, byval v as VARIANT) as HRESULT
	get_ondeactivate as function(byval This as IHTMLDocument5 ptr, byval p as VARIANT ptr) as HRESULT
	put_onbeforeactivate as function(byval This as IHTMLDocument5 ptr, byval v as VARIANT) as HRESULT
	get_onbeforeactivate as function(byval This as IHTMLDocument5 ptr, byval p as VARIANT ptr) as HRESULT
	put_onbeforedeactivate as function(byval This as IHTMLDocument5 ptr, byval v as VARIANT) as HRESULT
	get_onbeforedeactivate as function(byval This as IHTMLDocument5 ptr, byval p as VARIANT ptr) as HRESULT
	get_compatMode as function(byval This as IHTMLDocument5 ptr, byval p as BSTR ptr) as HRESULT
end type

type IHTMLDocument5_
	lpVtbl as IHTMLDocument5Vtbl ptr
end type

#define IHTMLDocument5_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLDocument5_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLDocument5_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLDocument5_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLDocument5_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLDocument5_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLDocument5_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLDocument5_put_onmousewheel(This, v) (This)->lpVtbl->put_onmousewheel(This, v)
#define IHTMLDocument5_get_onmousewheel(This, p) (This)->lpVtbl->get_onmousewheel(This, p)
#define IHTMLDocument5_get_doctype(This, p) (This)->lpVtbl->get_doctype(This, p)
#define IHTMLDocument5_get_implementation(This, p) (This)->lpVtbl->get_implementation(This, p)
#define IHTMLDocument5_createAttribute(This, bstrattrName, ppattribute) (This)->lpVtbl->createAttribute(This, bstrattrName, ppattribute)
#define IHTMLDocument5_createComment(This, bstrdata, ppRetNode) (This)->lpVtbl->createComment(This, bstrdata, ppRetNode)
#define IHTMLDocument5_put_onfocusin(This, v) (This)->lpVtbl->put_onfocusin(This, v)
#define IHTMLDocument5_get_onfocusin(This, p) (This)->lpVtbl->get_onfocusin(This, p)
#define IHTMLDocument5_put_onfocusout(This, v) (This)->lpVtbl->put_onfocusout(This, v)
#define IHTMLDocument5_get_onfocusout(This, p) (This)->lpVtbl->get_onfocusout(This, p)
#define IHTMLDocument5_put_onactivate(This, v) (This)->lpVtbl->put_onactivate(This, v)
#define IHTMLDocument5_get_onactivate(This, p) (This)->lpVtbl->get_onactivate(This, p)
#define IHTMLDocument5_put_ondeactivate(This, v) (This)->lpVtbl->put_ondeactivate(This, v)
#define IHTMLDocument5_get_ondeactivate(This, p) (This)->lpVtbl->get_ondeactivate(This, p)
#define IHTMLDocument5_put_onbeforeactivate(This, v) (This)->lpVtbl->put_onbeforeactivate(This, v)
#define IHTMLDocument5_get_onbeforeactivate(This, p) (This)->lpVtbl->get_onbeforeactivate(This, p)
#define IHTMLDocument5_put_onbeforedeactivate(This, v) (This)->lpVtbl->put_onbeforedeactivate(This, v)
#define IHTMLDocument5_get_onbeforedeactivate(This, p) (This)->lpVtbl->get_onbeforedeactivate(This, p)
#define IHTMLDocument5_get_compatMode(This, p) (This)->lpVtbl->get_compatMode(This, p)

declare function IHTMLDocument5_put_onmousewheel_Proxy(byval This as IHTMLDocument5 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLDocument5_put_onmousewheel_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument5_get_onmousewheel_Proxy(byval This as IHTMLDocument5 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLDocument5_get_onmousewheel_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument5_get_doctype_Proxy(byval This as IHTMLDocument5 ptr, byval p as IHTMLDOMNode ptr ptr) as HRESULT
declare sub IHTMLDocument5_get_doctype_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument5_get_implementation_Proxy(byval This as IHTMLDocument5 ptr, byval p as IHTMLDOMImplementation ptr ptr) as HRESULT
declare sub IHTMLDocument5_get_implementation_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument5_createAttribute_Proxy(byval This as IHTMLDocument5 ptr, byval bstrattrName as BSTR, byval ppattribute as IHTMLDOMAttribute ptr ptr) as HRESULT
declare sub IHTMLDocument5_createAttribute_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument5_createComment_Proxy(byval This as IHTMLDocument5 ptr, byval bstrdata as BSTR, byval ppRetNode as IHTMLDOMNode ptr ptr) as HRESULT
declare sub IHTMLDocument5_createComment_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument5_put_onfocusin_Proxy(byval This as IHTMLDocument5 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLDocument5_put_onfocusin_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument5_get_onfocusin_Proxy(byval This as IHTMLDocument5 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLDocument5_get_onfocusin_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument5_put_onfocusout_Proxy(byval This as IHTMLDocument5 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLDocument5_put_onfocusout_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument5_get_onfocusout_Proxy(byval This as IHTMLDocument5 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLDocument5_get_onfocusout_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument5_put_onactivate_Proxy(byval This as IHTMLDocument5 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLDocument5_put_onactivate_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument5_get_onactivate_Proxy(byval This as IHTMLDocument5 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLDocument5_get_onactivate_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument5_put_ondeactivate_Proxy(byval This as IHTMLDocument5 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLDocument5_put_ondeactivate_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument5_get_ondeactivate_Proxy(byval This as IHTMLDocument5 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLDocument5_get_ondeactivate_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument5_put_onbeforeactivate_Proxy(byval This as IHTMLDocument5 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLDocument5_put_onbeforeactivate_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument5_get_onbeforeactivate_Proxy(byval This as IHTMLDocument5 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLDocument5_get_onbeforeactivate_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument5_put_onbeforedeactivate_Proxy(byval This as IHTMLDocument5 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLDocument5_put_onbeforedeactivate_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument5_get_onbeforedeactivate_Proxy(byval This as IHTMLDocument5 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLDocument5_get_onbeforedeactivate_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDocument5_get_compatMode_Proxy(byval This as IHTMLDocument5 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLDocument5_get_compatMode_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __DispHTMLDocument_DISPINTERFACE_DEFINED__
extern DIID_DispHTMLDocument as const IID
type DispHTMLDocument as DispHTMLDocument_

type DispHTMLDocumentVtbl
	QueryInterface as function(byval This as DispHTMLDocument ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as DispHTMLDocument ptr) as ULONG
	Release as function(byval This as DispHTMLDocument ptr) as ULONG
	GetTypeInfoCount as function(byval This as DispHTMLDocument ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as DispHTMLDocument ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as DispHTMLDocument ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as DispHTMLDocument ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type DispHTMLDocument_
	lpVtbl as DispHTMLDocumentVtbl ptr
end type

#define DispHTMLDocument_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define DispHTMLDocument_AddRef(This) (This)->lpVtbl->AddRef(This)
#define DispHTMLDocument_Release(This) (This)->lpVtbl->Release(This)
#define DispHTMLDocument_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define DispHTMLDocument_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define DispHTMLDocument_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define DispHTMLDocument_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
extern CLSID_HTMLDocument as const CLSID
#define __DWebBridgeEvents_DISPINTERFACE_DEFINED__
extern DIID_DWebBridgeEvents as const IID
type DWebBridgeEvents as DWebBridgeEvents_

type DWebBridgeEventsVtbl
	QueryInterface as function(byval This as DWebBridgeEvents ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as DWebBridgeEvents ptr) as ULONG
	Release as function(byval This as DWebBridgeEvents ptr) as ULONG
	GetTypeInfoCount as function(byval This as DWebBridgeEvents ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as DWebBridgeEvents ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as DWebBridgeEvents ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as DWebBridgeEvents ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type DWebBridgeEvents_
	lpVtbl as DWebBridgeEventsVtbl ptr
end type

#define DWebBridgeEvents_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define DWebBridgeEvents_AddRef(This) (This)->lpVtbl->AddRef(This)
#define DWebBridgeEvents_Release(This) (This)->lpVtbl->Release(This)
#define DWebBridgeEvents_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define DWebBridgeEvents_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define DWebBridgeEvents_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define DWebBridgeEvents_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define __IWebBridge_INTERFACE_DEFINED__
extern IID_IWebBridge as const IID
type IWebBridge as IWebBridge_

type IWebBridgeVtbl
	QueryInterface as function(byval This as IWebBridge ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IWebBridge ptr) as ULONG
	Release as function(byval This as IWebBridge ptr) as ULONG
	GetTypeInfoCount as function(byval This as IWebBridge ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IWebBridge ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IWebBridge ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IWebBridge ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	put_URL as function(byval This as IWebBridge ptr, byval v as BSTR) as HRESULT
	get_URL as function(byval This as IWebBridge ptr, byval p as BSTR ptr) as HRESULT
	put_Scrollbar as function(byval This as IWebBridge ptr, byval v as VARIANT_BOOL) as HRESULT
	get_Scrollbar as function(byval This as IWebBridge ptr, byval p as VARIANT_BOOL ptr) as HRESULT
	put_embed as function(byval This as IWebBridge ptr, byval v as VARIANT_BOOL) as HRESULT
	get_embed as function(byval This as IWebBridge ptr, byval p as VARIANT_BOOL ptr) as HRESULT
	get_event as function(byval This as IWebBridge ptr, byval p as IDispatch ptr ptr) as HRESULT
	get_readyState as function(byval This as IWebBridge ptr, byval p as long ptr) as HRESULT
	AboutBox as function(byval This as IWebBridge ptr) as HRESULT
end type

type IWebBridge_
	lpVtbl as IWebBridgeVtbl ptr
end type

#define IWebBridge_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IWebBridge_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IWebBridge_Release(This) (This)->lpVtbl->Release(This)
#define IWebBridge_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IWebBridge_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IWebBridge_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IWebBridge_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IWebBridge_put_URL(This, v) (This)->lpVtbl->put_URL(This, v)
#define IWebBridge_get_URL(This, p) (This)->lpVtbl->get_URL(This, p)
#define IWebBridge_put_Scrollbar(This, v) (This)->lpVtbl->put_Scrollbar(This, v)
#define IWebBridge_get_Scrollbar(This, p) (This)->lpVtbl->get_Scrollbar(This, p)
#define IWebBridge_put_embed(This, v) (This)->lpVtbl->put_embed(This, v)
#define IWebBridge_get_embed(This, p) (This)->lpVtbl->get_embed(This, p)
#define IWebBridge_get_event(This, p) (This)->lpVtbl->get_event(This, p)
#define IWebBridge_get_readyState(This, p) (This)->lpVtbl->get_readyState(This, p)
#define IWebBridge_AboutBox(This) (This)->lpVtbl->AboutBox(This)

declare function IWebBridge_put_URL_Proxy(byval This as IWebBridge ptr, byval v as BSTR) as HRESULT
declare sub IWebBridge_put_URL_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IWebBridge_get_URL_Proxy(byval This as IWebBridge ptr, byval p as BSTR ptr) as HRESULT
declare sub IWebBridge_get_URL_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IWebBridge_put_Scrollbar_Proxy(byval This as IWebBridge ptr, byval v as VARIANT_BOOL) as HRESULT
declare sub IWebBridge_put_Scrollbar_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IWebBridge_get_Scrollbar_Proxy(byval This as IWebBridge ptr, byval p as VARIANT_BOOL ptr) as HRESULT
declare sub IWebBridge_get_Scrollbar_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IWebBridge_put_embed_Proxy(byval This as IWebBridge ptr, byval v as VARIANT_BOOL) as HRESULT
declare sub IWebBridge_put_embed_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IWebBridge_get_embed_Proxy(byval This as IWebBridge ptr, byval p as VARIANT_BOOL ptr) as HRESULT
declare sub IWebBridge_get_embed_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IWebBridge_get_event_Proxy(byval This as IWebBridge ptr, byval p as IDispatch ptr ptr) as HRESULT
declare sub IWebBridge_get_event_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IWebBridge_get_readyState_Proxy(byval This as IWebBridge ptr, byval p as long ptr) as HRESULT
declare sub IWebBridge_get_readyState_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IWebBridge_AboutBox_Proxy(byval This as IWebBridge ptr) as HRESULT
declare sub IWebBridge_AboutBox_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IWBScriptControl_INTERFACE_DEFINED__
extern IID_IWBScriptControl as const IID
type IWBScriptControl as IWBScriptControl_

type IWBScriptControlVtbl
	QueryInterface as function(byval This as IWBScriptControl ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IWBScriptControl ptr) as ULONG
	Release as function(byval This as IWBScriptControl ptr) as ULONG
	GetTypeInfoCount as function(byval This as IWBScriptControl ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IWBScriptControl ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IWBScriptControl ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IWBScriptControl ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	raiseEvent as function(byval This as IWBScriptControl ptr, byval name as BSTR, byval eventData as VARIANT) as HRESULT
	bubbleEvent as function(byval This as IWBScriptControl ptr) as HRESULT
	setContextMenu as function(byval This as IWBScriptControl ptr, byval menuItemPairs as VARIANT) as HRESULT
	put_selectableContent as function(byval This as IWBScriptControl ptr, byval v as VARIANT_BOOL) as HRESULT
	get_selectableContent as function(byval This as IWBScriptControl ptr, byval p as VARIANT_BOOL ptr) as HRESULT
	get_frozen as function(byval This as IWBScriptControl ptr, byval p as VARIANT_BOOL ptr) as HRESULT
	put_scrollbar as function(byval This as IWBScriptControl ptr, byval v as VARIANT_BOOL) as HRESULT
	get_scrollbar as function(byval This as IWBScriptControl ptr, byval p as VARIANT_BOOL ptr) as HRESULT
	get_version as function(byval This as IWBScriptControl ptr, byval p as BSTR ptr) as HRESULT
	get_visibility as function(byval This as IWBScriptControl ptr, byval p as VARIANT_BOOL ptr) as HRESULT
	put_onvisibilitychange as function(byval This as IWBScriptControl ptr, byval v as VARIANT) as HRESULT
	get_onvisibilitychange as function(byval This as IWBScriptControl ptr, byval p as VARIANT ptr) as HRESULT
end type

type IWBScriptControl_
	lpVtbl as IWBScriptControlVtbl ptr
end type

#define IWBScriptControl_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IWBScriptControl_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IWBScriptControl_Release(This) (This)->lpVtbl->Release(This)
#define IWBScriptControl_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IWBScriptControl_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IWBScriptControl_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IWBScriptControl_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IWBScriptControl_raiseEvent(This, name, eventData) (This)->lpVtbl->raiseEvent(This, name, eventData)
#define IWBScriptControl_bubbleEvent(This) (This)->lpVtbl->bubbleEvent(This)
#define IWBScriptControl_setContextMenu(This, menuItemPairs) (This)->lpVtbl->setContextMenu(This, menuItemPairs)
#define IWBScriptControl_put_selectableContent(This, v) (This)->lpVtbl->put_selectableContent(This, v)
#define IWBScriptControl_get_selectableContent(This, p) (This)->lpVtbl->get_selectableContent(This, p)
#define IWBScriptControl_get_frozen(This, p) (This)->lpVtbl->get_frozen(This, p)
#define IWBScriptControl_put_scrollbar(This, v) (This)->lpVtbl->put_scrollbar(This, v)
#define IWBScriptControl_get_scrollbar(This, p) (This)->lpVtbl->get_scrollbar(This, p)
#define IWBScriptControl_get_version(This, p) (This)->lpVtbl->get_version(This, p)
#define IWBScriptControl_get_visibility(This, p) (This)->lpVtbl->get_visibility(This, p)
#define IWBScriptControl_put_onvisibilitychange(This, v) (This)->lpVtbl->put_onvisibilitychange(This, v)
#define IWBScriptControl_get_onvisibilitychange(This, p) (This)->lpVtbl->get_onvisibilitychange(This, p)

declare function IWBScriptControl_raiseEvent_Proxy(byval This as IWBScriptControl ptr, byval name as BSTR, byval eventData as VARIANT) as HRESULT
declare sub IWBScriptControl_raiseEvent_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IWBScriptControl_bubbleEvent_Proxy(byval This as IWBScriptControl ptr) as HRESULT
declare sub IWBScriptControl_bubbleEvent_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IWBScriptControl_setContextMenu_Proxy(byval This as IWBScriptControl ptr, byval menuItemPairs as VARIANT) as HRESULT
declare sub IWBScriptControl_setContextMenu_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IWBScriptControl_put_selectableContent_Proxy(byval This as IWBScriptControl ptr, byval v as VARIANT_BOOL) as HRESULT
declare sub IWBScriptControl_put_selectableContent_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IWBScriptControl_get_selectableContent_Proxy(byval This as IWBScriptControl ptr, byval p as VARIANT_BOOL ptr) as HRESULT
declare sub IWBScriptControl_get_selectableContent_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IWBScriptControl_get_frozen_Proxy(byval This as IWBScriptControl ptr, byval p as VARIANT_BOOL ptr) as HRESULT
declare sub IWBScriptControl_get_frozen_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IWBScriptControl_put_scrollbar_Proxy(byval This as IWBScriptControl ptr, byval v as VARIANT_BOOL) as HRESULT
declare sub IWBScriptControl_put_scrollbar_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IWBScriptControl_get_scrollbar_Proxy(byval This as IWBScriptControl ptr, byval p as VARIANT_BOOL ptr) as HRESULT
declare sub IWBScriptControl_get_scrollbar_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IWBScriptControl_get_version_Proxy(byval This as IWBScriptControl ptr, byval p as BSTR ptr) as HRESULT
declare sub IWBScriptControl_get_version_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IWBScriptControl_get_visibility_Proxy(byval This as IWBScriptControl ptr, byval p as VARIANT_BOOL ptr) as HRESULT
declare sub IWBScriptControl_get_visibility_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IWBScriptControl_put_onvisibilitychange_Proxy(byval This as IWBScriptControl ptr, byval v as VARIANT) as HRESULT
declare sub IWBScriptControl_put_onvisibilitychange_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IWBScriptControl_get_onvisibilitychange_Proxy(byval This as IWBScriptControl ptr, byval p as VARIANT ptr) as HRESULT
declare sub IWBScriptControl_get_onvisibilitychange_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
extern CLSID_Scriptlet as const CLSID
#define __IHTMLEmbedElement_INTERFACE_DEFINED__
extern IID_IHTMLEmbedElement as const IID
type IHTMLEmbedElement as IHTMLEmbedElement_

type IHTMLEmbedElementVtbl
	QueryInterface as function(byval This as IHTMLEmbedElement ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLEmbedElement ptr) as ULONG
	Release as function(byval This as IHTMLEmbedElement ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLEmbedElement ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLEmbedElement ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLEmbedElement ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLEmbedElement ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	put_hidden as function(byval This as IHTMLEmbedElement ptr, byval v as BSTR) as HRESULT
	get_hidden as function(byval This as IHTMLEmbedElement ptr, byval p as BSTR ptr) as HRESULT
	get_palette as function(byval This as IHTMLEmbedElement ptr, byval p as BSTR ptr) as HRESULT
	get_pluginspage as function(byval This as IHTMLEmbedElement ptr, byval p as BSTR ptr) as HRESULT
	put_src as function(byval This as IHTMLEmbedElement ptr, byval v as BSTR) as HRESULT
	get_src as function(byval This as IHTMLEmbedElement ptr, byval p as BSTR ptr) as HRESULT
	put_units as function(byval This as IHTMLEmbedElement ptr, byval v as BSTR) as HRESULT
	get_units as function(byval This as IHTMLEmbedElement ptr, byval p as BSTR ptr) as HRESULT
	put_name as function(byval This as IHTMLEmbedElement ptr, byval v as BSTR) as HRESULT
	get_name as function(byval This as IHTMLEmbedElement ptr, byval p as BSTR ptr) as HRESULT
	put_width as function(byval This as IHTMLEmbedElement ptr, byval v as VARIANT) as HRESULT
	get_width as function(byval This as IHTMLEmbedElement ptr, byval p as VARIANT ptr) as HRESULT
	put_height as function(byval This as IHTMLEmbedElement ptr, byval v as VARIANT) as HRESULT
	get_height as function(byval This as IHTMLEmbedElement ptr, byval p as VARIANT ptr) as HRESULT
end type

type IHTMLEmbedElement_
	lpVtbl as IHTMLEmbedElementVtbl ptr
end type

#define IHTMLEmbedElement_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLEmbedElement_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLEmbedElement_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLEmbedElement_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLEmbedElement_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLEmbedElement_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLEmbedElement_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLEmbedElement_put_hidden(This, v) (This)->lpVtbl->put_hidden(This, v)
#define IHTMLEmbedElement_get_hidden(This, p) (This)->lpVtbl->get_hidden(This, p)
#define IHTMLEmbedElement_get_palette(This, p) (This)->lpVtbl->get_palette(This, p)
#define IHTMLEmbedElement_get_pluginspage(This, p) (This)->lpVtbl->get_pluginspage(This, p)
#define IHTMLEmbedElement_put_src(This, v) (This)->lpVtbl->put_src(This, v)
#define IHTMLEmbedElement_get_src(This, p) (This)->lpVtbl->get_src(This, p)
#define IHTMLEmbedElement_put_units(This, v) (This)->lpVtbl->put_units(This, v)
#define IHTMLEmbedElement_get_units(This, p) (This)->lpVtbl->get_units(This, p)
#define IHTMLEmbedElement_put_name(This, v) (This)->lpVtbl->put_name(This, v)
#define IHTMLEmbedElement_get_name(This, p) (This)->lpVtbl->get_name(This, p)
#define IHTMLEmbedElement_put_width(This, v) (This)->lpVtbl->put_width(This, v)
#define IHTMLEmbedElement_get_width(This, p) (This)->lpVtbl->get_width(This, p)
#define IHTMLEmbedElement_put_height(This, v) (This)->lpVtbl->put_height(This, v)
#define IHTMLEmbedElement_get_height(This, p) (This)->lpVtbl->get_height(This, p)

declare function IHTMLEmbedElement_put_hidden_Proxy(byval This as IHTMLEmbedElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLEmbedElement_put_hidden_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLEmbedElement_get_hidden_Proxy(byval This as IHTMLEmbedElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLEmbedElement_get_hidden_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLEmbedElement_get_palette_Proxy(byval This as IHTMLEmbedElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLEmbedElement_get_palette_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLEmbedElement_get_pluginspage_Proxy(byval This as IHTMLEmbedElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLEmbedElement_get_pluginspage_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLEmbedElement_put_src_Proxy(byval This as IHTMLEmbedElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLEmbedElement_put_src_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLEmbedElement_get_src_Proxy(byval This as IHTMLEmbedElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLEmbedElement_get_src_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLEmbedElement_put_units_Proxy(byval This as IHTMLEmbedElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLEmbedElement_put_units_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLEmbedElement_get_units_Proxy(byval This as IHTMLEmbedElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLEmbedElement_get_units_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLEmbedElement_put_name_Proxy(byval This as IHTMLEmbedElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLEmbedElement_put_name_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLEmbedElement_get_name_Proxy(byval This as IHTMLEmbedElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLEmbedElement_get_name_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLEmbedElement_put_width_Proxy(byval This as IHTMLEmbedElement ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLEmbedElement_put_width_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLEmbedElement_get_width_Proxy(byval This as IHTMLEmbedElement ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLEmbedElement_get_width_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLEmbedElement_put_height_Proxy(byval This as IHTMLEmbedElement ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLEmbedElement_put_height_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLEmbedElement_get_height_Proxy(byval This as IHTMLEmbedElement ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLEmbedElement_get_height_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __DispHTMLEmbed_DISPINTERFACE_DEFINED__
extern DIID_DispHTMLEmbed as const IID
type DispHTMLEmbed as DispHTMLEmbed_

type DispHTMLEmbedVtbl
	QueryInterface as function(byval This as DispHTMLEmbed ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as DispHTMLEmbed ptr) as ULONG
	Release as function(byval This as DispHTMLEmbed ptr) as ULONG
	GetTypeInfoCount as function(byval This as DispHTMLEmbed ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as DispHTMLEmbed ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as DispHTMLEmbed ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as DispHTMLEmbed ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type DispHTMLEmbed_
	lpVtbl as DispHTMLEmbedVtbl ptr
end type

#define DispHTMLEmbed_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define DispHTMLEmbed_AddRef(This) (This)->lpVtbl->AddRef(This)
#define DispHTMLEmbed_Release(This) (This)->lpVtbl->Release(This)
#define DispHTMLEmbed_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define DispHTMLEmbed_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define DispHTMLEmbed_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define DispHTMLEmbed_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
extern CLSID_HTMLEmbed as const CLSID
#define __HTMLMapEvents2_DISPINTERFACE_DEFINED__
extern DIID_HTMLMapEvents2 as const IID
type HTMLMapEvents2 as HTMLMapEvents2_

type HTMLMapEvents2Vtbl
	QueryInterface as function(byval This as HTMLMapEvents2 ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as HTMLMapEvents2 ptr) as ULONG
	Release as function(byval This as HTMLMapEvents2 ptr) as ULONG
	GetTypeInfoCount as function(byval This as HTMLMapEvents2 ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as HTMLMapEvents2 ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as HTMLMapEvents2 ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as HTMLMapEvents2 ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type HTMLMapEvents2_
	lpVtbl as HTMLMapEvents2Vtbl ptr
end type

#define HTMLMapEvents2_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define HTMLMapEvents2_AddRef(This) (This)->lpVtbl->AddRef(This)
#define HTMLMapEvents2_Release(This) (This)->lpVtbl->Release(This)
#define HTMLMapEvents2_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define HTMLMapEvents2_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define HTMLMapEvents2_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define HTMLMapEvents2_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define __HTMLMapEvents_DISPINTERFACE_DEFINED__
extern DIID_HTMLMapEvents as const IID
type HTMLMapEvents as HTMLMapEvents_

type HTMLMapEventsVtbl
	QueryInterface as function(byval This as HTMLMapEvents ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as HTMLMapEvents ptr) as ULONG
	Release as function(byval This as HTMLMapEvents ptr) as ULONG
	GetTypeInfoCount as function(byval This as HTMLMapEvents ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as HTMLMapEvents ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as HTMLMapEvents ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as HTMLMapEvents ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type HTMLMapEvents_
	lpVtbl as HTMLMapEventsVtbl ptr
end type

#define HTMLMapEvents_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define HTMLMapEvents_AddRef(This) (This)->lpVtbl->AddRef(This)
#define HTMLMapEvents_Release(This) (This)->lpVtbl->Release(This)
#define HTMLMapEvents_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define HTMLMapEvents_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define HTMLMapEvents_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define HTMLMapEvents_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define __IHTMLAreasCollection_INTERFACE_DEFINED__
extern IID_IHTMLAreasCollection as const IID
type IHTMLAreasCollection as IHTMLAreasCollection_

type IHTMLAreasCollectionVtbl
	QueryInterface as function(byval This as IHTMLAreasCollection ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLAreasCollection ptr) as ULONG
	Release as function(byval This as IHTMLAreasCollection ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLAreasCollection ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLAreasCollection ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLAreasCollection ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLAreasCollection ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	put_length as function(byval This as IHTMLAreasCollection ptr, byval v as long) as HRESULT
	get_length as function(byval This as IHTMLAreasCollection ptr, byval p as long ptr) as HRESULT
	get__newEnum as function(byval This as IHTMLAreasCollection ptr, byval p as IUnknown ptr ptr) as HRESULT
	item as function(byval This as IHTMLAreasCollection ptr, byval name as VARIANT, byval index as VARIANT, byval pdisp as IDispatch ptr ptr) as HRESULT
	tags as function(byval This as IHTMLAreasCollection ptr, byval tagName as VARIANT, byval pdisp as IDispatch ptr ptr) as HRESULT
	add as function(byval This as IHTMLAreasCollection ptr, byval element as IHTMLElement ptr, byval before as VARIANT) as HRESULT
	remove as function(byval This as IHTMLAreasCollection ptr, byval index as long) as HRESULT
end type

type IHTMLAreasCollection_
	lpVtbl as IHTMLAreasCollectionVtbl ptr
end type

#define IHTMLAreasCollection_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLAreasCollection_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLAreasCollection_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLAreasCollection_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLAreasCollection_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLAreasCollection_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLAreasCollection_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLAreasCollection_put_length(This, v) (This)->lpVtbl->put_length(This, v)
#define IHTMLAreasCollection_get_length(This, p) (This)->lpVtbl->get_length(This, p)
#define IHTMLAreasCollection_get__newEnum(This, p) (This)->lpVtbl->get__newEnum(This, p)
#define IHTMLAreasCollection_item(This, name, index, pdisp) (This)->lpVtbl->item(This, name, index, pdisp)
#define IHTMLAreasCollection_tags(This, tagName, pdisp) (This)->lpVtbl->tags(This, tagName, pdisp)
#define IHTMLAreasCollection_add(This, element, before) (This)->lpVtbl->add(This, element, before)
#define IHTMLAreasCollection_remove(This, index) (This)->lpVtbl->remove(This, index)

declare function IHTMLAreasCollection_put_length_Proxy(byval This as IHTMLAreasCollection ptr, byval v as long) as HRESULT
declare sub IHTMLAreasCollection_put_length_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLAreasCollection_get_length_Proxy(byval This as IHTMLAreasCollection ptr, byval p as long ptr) as HRESULT
declare sub IHTMLAreasCollection_get_length_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLAreasCollection_get__newEnum_Proxy(byval This as IHTMLAreasCollection ptr, byval p as IUnknown ptr ptr) as HRESULT
declare sub IHTMLAreasCollection_get__newEnum_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLAreasCollection_item_Proxy(byval This as IHTMLAreasCollection ptr, byval name as VARIANT, byval index as VARIANT, byval pdisp as IDispatch ptr ptr) as HRESULT
declare sub IHTMLAreasCollection_item_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLAreasCollection_tags_Proxy(byval This as IHTMLAreasCollection ptr, byval tagName as VARIANT, byval pdisp as IDispatch ptr ptr) as HRESULT
declare sub IHTMLAreasCollection_tags_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLAreasCollection_add_Proxy(byval This as IHTMLAreasCollection ptr, byval element as IHTMLElement ptr, byval before as VARIANT) as HRESULT
declare sub IHTMLAreasCollection_add_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLAreasCollection_remove_Proxy(byval This as IHTMLAreasCollection ptr, byval index as long) as HRESULT
declare sub IHTMLAreasCollection_remove_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLAreasCollection2_INTERFACE_DEFINED__
extern IID_IHTMLAreasCollection2 as const IID
type IHTMLAreasCollection2 as IHTMLAreasCollection2_

type IHTMLAreasCollection2Vtbl
	QueryInterface as function(byval This as IHTMLAreasCollection2 ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLAreasCollection2 ptr) as ULONG
	Release as function(byval This as IHTMLAreasCollection2 ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLAreasCollection2 ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLAreasCollection2 ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLAreasCollection2 ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLAreasCollection2 ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	urns as function(byval This as IHTMLAreasCollection2 ptr, byval urn as VARIANT, byval pdisp as IDispatch ptr ptr) as HRESULT
end type

type IHTMLAreasCollection2_
	lpVtbl as IHTMLAreasCollection2Vtbl ptr
end type

#define IHTMLAreasCollection2_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLAreasCollection2_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLAreasCollection2_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLAreasCollection2_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLAreasCollection2_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLAreasCollection2_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLAreasCollection2_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLAreasCollection2_urns(This, urn, pdisp) (This)->lpVtbl->urns(This, urn, pdisp)
declare function IHTMLAreasCollection2_urns_Proxy(byval This as IHTMLAreasCollection2 ptr, byval urn as VARIANT, byval pdisp as IDispatch ptr ptr) as HRESULT
declare sub IHTMLAreasCollection2_urns_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLAreasCollection3_INTERFACE_DEFINED__
extern IID_IHTMLAreasCollection3 as const IID
type IHTMLAreasCollection3 as IHTMLAreasCollection3_

type IHTMLAreasCollection3Vtbl
	QueryInterface as function(byval This as IHTMLAreasCollection3 ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLAreasCollection3 ptr) as ULONG
	Release as function(byval This as IHTMLAreasCollection3 ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLAreasCollection3 ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLAreasCollection3 ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLAreasCollection3 ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLAreasCollection3 ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	namedItem as function(byval This as IHTMLAreasCollection3 ptr, byval name as BSTR, byval pdisp as IDispatch ptr ptr) as HRESULT
end type

type IHTMLAreasCollection3_
	lpVtbl as IHTMLAreasCollection3Vtbl ptr
end type

#define IHTMLAreasCollection3_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLAreasCollection3_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLAreasCollection3_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLAreasCollection3_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLAreasCollection3_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLAreasCollection3_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLAreasCollection3_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLAreasCollection3_namedItem(This, name, pdisp) (This)->lpVtbl->namedItem(This, name, pdisp)
declare function IHTMLAreasCollection3_namedItem_Proxy(byval This as IHTMLAreasCollection3 ptr, byval name as BSTR, byval pdisp as IDispatch ptr ptr) as HRESULT
declare sub IHTMLAreasCollection3_namedItem_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLMapElement_INTERFACE_DEFINED__
extern IID_IHTMLMapElement as const IID
type IHTMLMapElement as IHTMLMapElement_

type IHTMLMapElementVtbl
	QueryInterface as function(byval This as IHTMLMapElement ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLMapElement ptr) as ULONG
	Release as function(byval This as IHTMLMapElement ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLMapElement ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLMapElement ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLMapElement ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLMapElement ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	get_areas as function(byval This as IHTMLMapElement ptr, byval p as IHTMLAreasCollection ptr ptr) as HRESULT
	put_name as function(byval This as IHTMLMapElement ptr, byval v as BSTR) as HRESULT
	get_name as function(byval This as IHTMLMapElement ptr, byval p as BSTR ptr) as HRESULT
end type

type IHTMLMapElement_
	lpVtbl as IHTMLMapElementVtbl ptr
end type

#define IHTMLMapElement_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLMapElement_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLMapElement_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLMapElement_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLMapElement_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLMapElement_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLMapElement_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLMapElement_get_areas(This, p) (This)->lpVtbl->get_areas(This, p)
#define IHTMLMapElement_put_name(This, v) (This)->lpVtbl->put_name(This, v)
#define IHTMLMapElement_get_name(This, p) (This)->lpVtbl->get_name(This, p)

declare function IHTMLMapElement_get_areas_Proxy(byval This as IHTMLMapElement ptr, byval p as IHTMLAreasCollection ptr ptr) as HRESULT
declare sub IHTMLMapElement_get_areas_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLMapElement_put_name_Proxy(byval This as IHTMLMapElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLMapElement_put_name_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLMapElement_get_name_Proxy(byval This as IHTMLMapElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLMapElement_get_name_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __DispHTMLAreasCollection_DISPINTERFACE_DEFINED__
extern DIID_DispHTMLAreasCollection as const IID
type DispHTMLAreasCollection as DispHTMLAreasCollection_

type DispHTMLAreasCollectionVtbl
	QueryInterface as function(byval This as DispHTMLAreasCollection ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as DispHTMLAreasCollection ptr) as ULONG
	Release as function(byval This as DispHTMLAreasCollection ptr) as ULONG
	GetTypeInfoCount as function(byval This as DispHTMLAreasCollection ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as DispHTMLAreasCollection ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as DispHTMLAreasCollection ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as DispHTMLAreasCollection ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type DispHTMLAreasCollection_
	lpVtbl as DispHTMLAreasCollectionVtbl ptr
end type

#define DispHTMLAreasCollection_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define DispHTMLAreasCollection_AddRef(This) (This)->lpVtbl->AddRef(This)
#define DispHTMLAreasCollection_Release(This) (This)->lpVtbl->Release(This)
#define DispHTMLAreasCollection_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define DispHTMLAreasCollection_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define DispHTMLAreasCollection_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define DispHTMLAreasCollection_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
extern CLSID_HTMLAreasCollection as const CLSID
#define __DispHTMLMapElement_DISPINTERFACE_DEFINED__
extern DIID_DispHTMLMapElement as const IID
type DispHTMLMapElement as DispHTMLMapElement_

type DispHTMLMapElementVtbl
	QueryInterface as function(byval This as DispHTMLMapElement ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as DispHTMLMapElement ptr) as ULONG
	Release as function(byval This as DispHTMLMapElement ptr) as ULONG
	GetTypeInfoCount as function(byval This as DispHTMLMapElement ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as DispHTMLMapElement ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as DispHTMLMapElement ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as DispHTMLMapElement ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type DispHTMLMapElement_
	lpVtbl as DispHTMLMapElementVtbl ptr
end type

#define DispHTMLMapElement_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define DispHTMLMapElement_AddRef(This) (This)->lpVtbl->AddRef(This)
#define DispHTMLMapElement_Release(This) (This)->lpVtbl->Release(This)
#define DispHTMLMapElement_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define DispHTMLMapElement_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define DispHTMLMapElement_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define DispHTMLMapElement_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
extern CLSID_HTMLMapElement as const CLSID
#define __HTMLAreaEvents2_DISPINTERFACE_DEFINED__
extern DIID_HTMLAreaEvents2 as const IID
type HTMLAreaEvents2 as HTMLAreaEvents2_

type HTMLAreaEvents2Vtbl
	QueryInterface as function(byval This as HTMLAreaEvents2 ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as HTMLAreaEvents2 ptr) as ULONG
	Release as function(byval This as HTMLAreaEvents2 ptr) as ULONG
	GetTypeInfoCount as function(byval This as HTMLAreaEvents2 ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as HTMLAreaEvents2 ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as HTMLAreaEvents2 ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as HTMLAreaEvents2 ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type HTMLAreaEvents2_
	lpVtbl as HTMLAreaEvents2Vtbl ptr
end type

#define HTMLAreaEvents2_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define HTMLAreaEvents2_AddRef(This) (This)->lpVtbl->AddRef(This)
#define HTMLAreaEvents2_Release(This) (This)->lpVtbl->Release(This)
#define HTMLAreaEvents2_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define HTMLAreaEvents2_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define HTMLAreaEvents2_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define HTMLAreaEvents2_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define __HTMLAreaEvents_DISPINTERFACE_DEFINED__
extern DIID_HTMLAreaEvents as const IID
type HTMLAreaEvents as HTMLAreaEvents_

type HTMLAreaEventsVtbl
	QueryInterface as function(byval This as HTMLAreaEvents ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as HTMLAreaEvents ptr) as ULONG
	Release as function(byval This as HTMLAreaEvents ptr) as ULONG
	GetTypeInfoCount as function(byval This as HTMLAreaEvents ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as HTMLAreaEvents ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as HTMLAreaEvents ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as HTMLAreaEvents ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type HTMLAreaEvents_
	lpVtbl as HTMLAreaEventsVtbl ptr
end type

#define HTMLAreaEvents_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define HTMLAreaEvents_AddRef(This) (This)->lpVtbl->AddRef(This)
#define HTMLAreaEvents_Release(This) (This)->lpVtbl->Release(This)
#define HTMLAreaEvents_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define HTMLAreaEvents_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define HTMLAreaEvents_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define HTMLAreaEvents_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define __IHTMLAreaElement_INTERFACE_DEFINED__
extern IID_IHTMLAreaElement as const IID
type IHTMLAreaElement as IHTMLAreaElement_

type IHTMLAreaElementVtbl
	QueryInterface as function(byval This as IHTMLAreaElement ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLAreaElement ptr) as ULONG
	Release as function(byval This as IHTMLAreaElement ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLAreaElement ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLAreaElement ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLAreaElement ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLAreaElement ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	put_shape as function(byval This as IHTMLAreaElement ptr, byval v as BSTR) as HRESULT
	get_shape as function(byval This as IHTMLAreaElement ptr, byval p as BSTR ptr) as HRESULT
	put_coords as function(byval This as IHTMLAreaElement ptr, byval v as BSTR) as HRESULT
	get_coords as function(byval This as IHTMLAreaElement ptr, byval p as BSTR ptr) as HRESULT
	put_href as function(byval This as IHTMLAreaElement ptr, byval v as BSTR) as HRESULT
	get_href as function(byval This as IHTMLAreaElement ptr, byval p as BSTR ptr) as HRESULT
	put_target as function(byval This as IHTMLAreaElement ptr, byval v as BSTR) as HRESULT
	get_target as function(byval This as IHTMLAreaElement ptr, byval p as BSTR ptr) as HRESULT
	put_alt as function(byval This as IHTMLAreaElement ptr, byval v as BSTR) as HRESULT
	get_alt as function(byval This as IHTMLAreaElement ptr, byval p as BSTR ptr) as HRESULT
	put_noHref as function(byval This as IHTMLAreaElement ptr, byval v as VARIANT_BOOL) as HRESULT
	get_noHref as function(byval This as IHTMLAreaElement ptr, byval p as VARIANT_BOOL ptr) as HRESULT
	put_host as function(byval This as IHTMLAreaElement ptr, byval v as BSTR) as HRESULT
	get_host as function(byval This as IHTMLAreaElement ptr, byval p as BSTR ptr) as HRESULT
	put_hostname as function(byval This as IHTMLAreaElement ptr, byval v as BSTR) as HRESULT
	get_hostname as function(byval This as IHTMLAreaElement ptr, byval p as BSTR ptr) as HRESULT
	put_pathname as function(byval This as IHTMLAreaElement ptr, byval v as BSTR) as HRESULT
	get_pathname as function(byval This as IHTMLAreaElement ptr, byval p as BSTR ptr) as HRESULT
	put_port as function(byval This as IHTMLAreaElement ptr, byval v as BSTR) as HRESULT
	get_port as function(byval This as IHTMLAreaElement ptr, byval p as BSTR ptr) as HRESULT
	put_protocol as function(byval This as IHTMLAreaElement ptr, byval v as BSTR) as HRESULT
	get_protocol as function(byval This as IHTMLAreaElement ptr, byval p as BSTR ptr) as HRESULT
	put_search as function(byval This as IHTMLAreaElement ptr, byval v as BSTR) as HRESULT
	get_search as function(byval This as IHTMLAreaElement ptr, byval p as BSTR ptr) as HRESULT
	put_hash as function(byval This as IHTMLAreaElement ptr, byval v as BSTR) as HRESULT
	get_hash as function(byval This as IHTMLAreaElement ptr, byval p as BSTR ptr) as HRESULT
	put_onblur as function(byval This as IHTMLAreaElement ptr, byval v as VARIANT) as HRESULT
	get_onblur as function(byval This as IHTMLAreaElement ptr, byval p as VARIANT ptr) as HRESULT
	put_onfocus as function(byval This as IHTMLAreaElement ptr, byval v as VARIANT) as HRESULT
	get_onfocus as function(byval This as IHTMLAreaElement ptr, byval p as VARIANT ptr) as HRESULT
	put_tabIndex as function(byval This as IHTMLAreaElement ptr, byval v as short) as HRESULT
	get_tabIndex as function(byval This as IHTMLAreaElement ptr, byval p as short ptr) as HRESULT
	focus as function(byval This as IHTMLAreaElement ptr) as HRESULT
	blur as function(byval This as IHTMLAreaElement ptr) as HRESULT
end type

type IHTMLAreaElement_
	lpVtbl as IHTMLAreaElementVtbl ptr
end type

#define IHTMLAreaElement_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLAreaElement_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLAreaElement_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLAreaElement_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLAreaElement_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLAreaElement_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLAreaElement_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLAreaElement_put_shape(This, v) (This)->lpVtbl->put_shape(This, v)
#define IHTMLAreaElement_get_shape(This, p) (This)->lpVtbl->get_shape(This, p)
#define IHTMLAreaElement_put_coords(This, v) (This)->lpVtbl->put_coords(This, v)
#define IHTMLAreaElement_get_coords(This, p) (This)->lpVtbl->get_coords(This, p)
#define IHTMLAreaElement_put_href(This, v) (This)->lpVtbl->put_href(This, v)
#define IHTMLAreaElement_get_href(This, p) (This)->lpVtbl->get_href(This, p)
#define IHTMLAreaElement_put_target(This, v) (This)->lpVtbl->put_target(This, v)
#define IHTMLAreaElement_get_target(This, p) (This)->lpVtbl->get_target(This, p)
#define IHTMLAreaElement_put_alt(This, v) (This)->lpVtbl->put_alt(This, v)
#define IHTMLAreaElement_get_alt(This, p) (This)->lpVtbl->get_alt(This, p)
#define IHTMLAreaElement_put_noHref(This, v) (This)->lpVtbl->put_noHref(This, v)
#define IHTMLAreaElement_get_noHref(This, p) (This)->lpVtbl->get_noHref(This, p)
#define IHTMLAreaElement_put_host(This, v) (This)->lpVtbl->put_host(This, v)
#define IHTMLAreaElement_get_host(This, p) (This)->lpVtbl->get_host(This, p)
#define IHTMLAreaElement_put_hostname(This, v) (This)->lpVtbl->put_hostname(This, v)
#define IHTMLAreaElement_get_hostname(This, p) (This)->lpVtbl->get_hostname(This, p)
#define IHTMLAreaElement_put_pathname(This, v) (This)->lpVtbl->put_pathname(This, v)
#define IHTMLAreaElement_get_pathname(This, p) (This)->lpVtbl->get_pathname(This, p)
#define IHTMLAreaElement_put_port(This, v) (This)->lpVtbl->put_port(This, v)
#define IHTMLAreaElement_get_port(This, p) (This)->lpVtbl->get_port(This, p)
#define IHTMLAreaElement_put_protocol(This, v) (This)->lpVtbl->put_protocol(This, v)
#define IHTMLAreaElement_get_protocol(This, p) (This)->lpVtbl->get_protocol(This, p)
#define IHTMLAreaElement_put_search(This, v) (This)->lpVtbl->put_search(This, v)
#define IHTMLAreaElement_get_search(This, p) (This)->lpVtbl->get_search(This, p)
#define IHTMLAreaElement_put_hash(This, v) (This)->lpVtbl->put_hash(This, v)
#define IHTMLAreaElement_get_hash(This, p) (This)->lpVtbl->get_hash(This, p)
#define IHTMLAreaElement_put_onblur(This, v) (This)->lpVtbl->put_onblur(This, v)
#define IHTMLAreaElement_get_onblur(This, p) (This)->lpVtbl->get_onblur(This, p)
#define IHTMLAreaElement_put_onfocus(This, v) (This)->lpVtbl->put_onfocus(This, v)
#define IHTMLAreaElement_get_onfocus(This, p) (This)->lpVtbl->get_onfocus(This, p)
#define IHTMLAreaElement_put_tabIndex(This, v) (This)->lpVtbl->put_tabIndex(This, v)
#define IHTMLAreaElement_get_tabIndex(This, p) (This)->lpVtbl->get_tabIndex(This, p)
#define IHTMLAreaElement_focus(This) (This)->lpVtbl->focus(This)
#define IHTMLAreaElement_blur(This) (This)->lpVtbl->blur(This)

declare function IHTMLAreaElement_put_shape_Proxy(byval This as IHTMLAreaElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLAreaElement_put_shape_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLAreaElement_get_shape_Proxy(byval This as IHTMLAreaElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLAreaElement_get_shape_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLAreaElement_put_coords_Proxy(byval This as IHTMLAreaElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLAreaElement_put_coords_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLAreaElement_get_coords_Proxy(byval This as IHTMLAreaElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLAreaElement_get_coords_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLAreaElement_put_href_Proxy(byval This as IHTMLAreaElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLAreaElement_put_href_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLAreaElement_get_href_Proxy(byval This as IHTMLAreaElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLAreaElement_get_href_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLAreaElement_put_target_Proxy(byval This as IHTMLAreaElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLAreaElement_put_target_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLAreaElement_get_target_Proxy(byval This as IHTMLAreaElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLAreaElement_get_target_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLAreaElement_put_alt_Proxy(byval This as IHTMLAreaElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLAreaElement_put_alt_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLAreaElement_get_alt_Proxy(byval This as IHTMLAreaElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLAreaElement_get_alt_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLAreaElement_put_noHref_Proxy(byval This as IHTMLAreaElement ptr, byval v as VARIANT_BOOL) as HRESULT
declare sub IHTMLAreaElement_put_noHref_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLAreaElement_get_noHref_Proxy(byval This as IHTMLAreaElement ptr, byval p as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLAreaElement_get_noHref_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLAreaElement_put_host_Proxy(byval This as IHTMLAreaElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLAreaElement_put_host_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLAreaElement_get_host_Proxy(byval This as IHTMLAreaElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLAreaElement_get_host_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLAreaElement_put_hostname_Proxy(byval This as IHTMLAreaElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLAreaElement_put_hostname_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLAreaElement_get_hostname_Proxy(byval This as IHTMLAreaElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLAreaElement_get_hostname_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLAreaElement_put_pathname_Proxy(byval This as IHTMLAreaElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLAreaElement_put_pathname_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLAreaElement_get_pathname_Proxy(byval This as IHTMLAreaElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLAreaElement_get_pathname_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLAreaElement_put_port_Proxy(byval This as IHTMLAreaElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLAreaElement_put_port_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLAreaElement_get_port_Proxy(byval This as IHTMLAreaElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLAreaElement_get_port_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLAreaElement_put_protocol_Proxy(byval This as IHTMLAreaElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLAreaElement_put_protocol_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLAreaElement_get_protocol_Proxy(byval This as IHTMLAreaElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLAreaElement_get_protocol_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLAreaElement_put_search_Proxy(byval This as IHTMLAreaElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLAreaElement_put_search_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLAreaElement_get_search_Proxy(byval This as IHTMLAreaElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLAreaElement_get_search_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLAreaElement_put_hash_Proxy(byval This as IHTMLAreaElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLAreaElement_put_hash_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLAreaElement_get_hash_Proxy(byval This as IHTMLAreaElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLAreaElement_get_hash_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLAreaElement_put_onblur_Proxy(byval This as IHTMLAreaElement ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLAreaElement_put_onblur_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLAreaElement_get_onblur_Proxy(byval This as IHTMLAreaElement ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLAreaElement_get_onblur_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLAreaElement_put_onfocus_Proxy(byval This as IHTMLAreaElement ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLAreaElement_put_onfocus_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLAreaElement_get_onfocus_Proxy(byval This as IHTMLAreaElement ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLAreaElement_get_onfocus_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLAreaElement_put_tabIndex_Proxy(byval This as IHTMLAreaElement ptr, byval v as short) as HRESULT
declare sub IHTMLAreaElement_put_tabIndex_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLAreaElement_get_tabIndex_Proxy(byval This as IHTMLAreaElement ptr, byval p as short ptr) as HRESULT
declare sub IHTMLAreaElement_get_tabIndex_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLAreaElement_focus_Proxy(byval This as IHTMLAreaElement ptr) as HRESULT
declare sub IHTMLAreaElement_focus_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLAreaElement_blur_Proxy(byval This as IHTMLAreaElement ptr) as HRESULT
declare sub IHTMLAreaElement_blur_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __DispHTMLAreaElement_DISPINTERFACE_DEFINED__
extern DIID_DispHTMLAreaElement as const IID
type DispHTMLAreaElement as DispHTMLAreaElement_

type DispHTMLAreaElementVtbl
	QueryInterface as function(byval This as DispHTMLAreaElement ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as DispHTMLAreaElement ptr) as ULONG
	Release as function(byval This as DispHTMLAreaElement ptr) as ULONG
	GetTypeInfoCount as function(byval This as DispHTMLAreaElement ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as DispHTMLAreaElement ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as DispHTMLAreaElement ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as DispHTMLAreaElement ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type DispHTMLAreaElement_
	lpVtbl as DispHTMLAreaElementVtbl ptr
end type

#define DispHTMLAreaElement_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define DispHTMLAreaElement_AddRef(This) (This)->lpVtbl->AddRef(This)
#define DispHTMLAreaElement_Release(This) (This)->lpVtbl->Release(This)
#define DispHTMLAreaElement_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define DispHTMLAreaElement_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define DispHTMLAreaElement_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define DispHTMLAreaElement_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
extern CLSID_HTMLAreaElement as const CLSID
#define __IHTMLTableCaption_INTERFACE_DEFINED__
extern IID_IHTMLTableCaption as const IID
type IHTMLTableCaption as IHTMLTableCaption_

type IHTMLTableCaptionVtbl
	QueryInterface as function(byval This as IHTMLTableCaption ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLTableCaption ptr) as ULONG
	Release as function(byval This as IHTMLTableCaption ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLTableCaption ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLTableCaption ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLTableCaption ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLTableCaption ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	put_align as function(byval This as IHTMLTableCaption ptr, byval v as BSTR) as HRESULT
	get_align as function(byval This as IHTMLTableCaption ptr, byval p as BSTR ptr) as HRESULT
	put_vAlign as function(byval This as IHTMLTableCaption ptr, byval v as BSTR) as HRESULT
	get_vAlign as function(byval This as IHTMLTableCaption ptr, byval p as BSTR ptr) as HRESULT
end type

type IHTMLTableCaption_
	lpVtbl as IHTMLTableCaptionVtbl ptr
end type

#define IHTMLTableCaption_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLTableCaption_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLTableCaption_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLTableCaption_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLTableCaption_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLTableCaption_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLTableCaption_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLTableCaption_put_align(This, v) (This)->lpVtbl->put_align(This, v)
#define IHTMLTableCaption_get_align(This, p) (This)->lpVtbl->get_align(This, p)
#define IHTMLTableCaption_put_vAlign(This, v) (This)->lpVtbl->put_vAlign(This, v)
#define IHTMLTableCaption_get_vAlign(This, p) (This)->lpVtbl->get_vAlign(This, p)

declare function IHTMLTableCaption_put_align_Proxy(byval This as IHTMLTableCaption ptr, byval v as BSTR) as HRESULT
declare sub IHTMLTableCaption_put_align_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTableCaption_get_align_Proxy(byval This as IHTMLTableCaption ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLTableCaption_get_align_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTableCaption_put_vAlign_Proxy(byval This as IHTMLTableCaption ptr, byval v as BSTR) as HRESULT
declare sub IHTMLTableCaption_put_vAlign_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTableCaption_get_vAlign_Proxy(byval This as IHTMLTableCaption ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLTableCaption_get_vAlign_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __DispHTMLTableCaption_DISPINTERFACE_DEFINED__
extern DIID_DispHTMLTableCaption as const IID
type DispHTMLTableCaption as DispHTMLTableCaption_

type DispHTMLTableCaptionVtbl
	QueryInterface as function(byval This as DispHTMLTableCaption ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as DispHTMLTableCaption ptr) as ULONG
	Release as function(byval This as DispHTMLTableCaption ptr) as ULONG
	GetTypeInfoCount as function(byval This as DispHTMLTableCaption ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as DispHTMLTableCaption ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as DispHTMLTableCaption ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as DispHTMLTableCaption ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type DispHTMLTableCaption_
	lpVtbl as DispHTMLTableCaptionVtbl ptr
end type

#define DispHTMLTableCaption_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define DispHTMLTableCaption_AddRef(This) (This)->lpVtbl->AddRef(This)
#define DispHTMLTableCaption_Release(This) (This)->lpVtbl->Release(This)
#define DispHTMLTableCaption_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define DispHTMLTableCaption_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define DispHTMLTableCaption_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define DispHTMLTableCaption_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
extern CLSID_HTMLTableCaption as const CLSID
#define __IHTMLCommentElement_INTERFACE_DEFINED__
extern IID_IHTMLCommentElement as const IID
type IHTMLCommentElement as IHTMLCommentElement_

type IHTMLCommentElementVtbl
	QueryInterface as function(byval This as IHTMLCommentElement ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLCommentElement ptr) as ULONG
	Release as function(byval This as IHTMLCommentElement ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLCommentElement ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLCommentElement ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLCommentElement ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLCommentElement ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	put_text as function(byval This as IHTMLCommentElement ptr, byval v as BSTR) as HRESULT
	get_text as function(byval This as IHTMLCommentElement ptr, byval p as BSTR ptr) as HRESULT
	put_atomic as function(byval This as IHTMLCommentElement ptr, byval v as long) as HRESULT
	get_atomic as function(byval This as IHTMLCommentElement ptr, byval p as long ptr) as HRESULT
end type

type IHTMLCommentElement_
	lpVtbl as IHTMLCommentElementVtbl ptr
end type

#define IHTMLCommentElement_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLCommentElement_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLCommentElement_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLCommentElement_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLCommentElement_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLCommentElement_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLCommentElement_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLCommentElement_put_text(This, v) (This)->lpVtbl->put_text(This, v)
#define IHTMLCommentElement_get_text(This, p) (This)->lpVtbl->get_text(This, p)
#define IHTMLCommentElement_put_atomic(This, v) (This)->lpVtbl->put_atomic(This, v)
#define IHTMLCommentElement_get_atomic(This, p) (This)->lpVtbl->get_atomic(This, p)

declare function IHTMLCommentElement_put_text_Proxy(byval This as IHTMLCommentElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLCommentElement_put_text_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLCommentElement_get_text_Proxy(byval This as IHTMLCommentElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLCommentElement_get_text_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLCommentElement_put_atomic_Proxy(byval This as IHTMLCommentElement ptr, byval v as long) as HRESULT
declare sub IHTMLCommentElement_put_atomic_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLCommentElement_get_atomic_Proxy(byval This as IHTMLCommentElement ptr, byval p as long ptr) as HRESULT
declare sub IHTMLCommentElement_get_atomic_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLCommentElement2_INTERFACE_DEFINED__
extern IID_IHTMLCommentElement2 as const IID
type IHTMLCommentElement2 as IHTMLCommentElement2_

type IHTMLCommentElement2Vtbl
	QueryInterface as function(byval This as IHTMLCommentElement2 ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLCommentElement2 ptr) as ULONG
	Release as function(byval This as IHTMLCommentElement2 ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLCommentElement2 ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLCommentElement2 ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLCommentElement2 ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLCommentElement2 ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	put_data as function(byval This as IHTMLCommentElement2 ptr, byval v as BSTR) as HRESULT
	get_data as function(byval This as IHTMLCommentElement2 ptr, byval p as BSTR ptr) as HRESULT
	get_length as function(byval This as IHTMLCommentElement2 ptr, byval p as long ptr) as HRESULT
	substringData as function(byval This as IHTMLCommentElement2 ptr, byval offset as long, byval Count as long, byval pbstrsubString as BSTR ptr) as HRESULT
	appendData as function(byval This as IHTMLCommentElement2 ptr, byval bstrstring as BSTR) as HRESULT
	insertData as function(byval This as IHTMLCommentElement2 ptr, byval offset as long, byval bstrstring as BSTR) as HRESULT
	deleteData as function(byval This as IHTMLCommentElement2 ptr, byval offset as long, byval Count as long) as HRESULT
	replaceData as function(byval This as IHTMLCommentElement2 ptr, byval offset as long, byval Count as long, byval bstrstring as BSTR) as HRESULT
end type

type IHTMLCommentElement2_
	lpVtbl as IHTMLCommentElement2Vtbl ptr
end type

#define IHTMLCommentElement2_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLCommentElement2_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLCommentElement2_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLCommentElement2_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLCommentElement2_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLCommentElement2_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLCommentElement2_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLCommentElement2_put_data(This, v) (This)->lpVtbl->put_data(This, v)
#define IHTMLCommentElement2_get_data(This, p) (This)->lpVtbl->get_data(This, p)
#define IHTMLCommentElement2_get_length(This, p) (This)->lpVtbl->get_length(This, p)
#define IHTMLCommentElement2_substringData(This, offset, Count, pbstrsubString) (This)->lpVtbl->substringData(This, offset, Count, pbstrsubString)
#define IHTMLCommentElement2_appendData(This, bstrstring) (This)->lpVtbl->appendData(This, bstrstring)
#define IHTMLCommentElement2_insertData(This, offset, bstrstring) (This)->lpVtbl->insertData(This, offset, bstrstring)
#define IHTMLCommentElement2_deleteData(This, offset, Count) (This)->lpVtbl->deleteData(This, offset, Count)
#define IHTMLCommentElement2_replaceData(This, offset, Count, bstrstring) (This)->lpVtbl->replaceData(This, offset, Count, bstrstring)

declare function IHTMLCommentElement2_put_data_Proxy(byval This as IHTMLCommentElement2 ptr, byval v as BSTR) as HRESULT
declare sub IHTMLCommentElement2_put_data_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLCommentElement2_get_data_Proxy(byval This as IHTMLCommentElement2 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLCommentElement2_get_data_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLCommentElement2_get_length_Proxy(byval This as IHTMLCommentElement2 ptr, byval p as long ptr) as HRESULT
declare sub IHTMLCommentElement2_get_length_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLCommentElement2_substringData_Proxy(byval This as IHTMLCommentElement2 ptr, byval offset as long, byval Count as long, byval pbstrsubString as BSTR ptr) as HRESULT
declare sub IHTMLCommentElement2_substringData_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLCommentElement2_appendData_Proxy(byval This as IHTMLCommentElement2 ptr, byval bstrstring as BSTR) as HRESULT
declare sub IHTMLCommentElement2_appendData_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLCommentElement2_insertData_Proxy(byval This as IHTMLCommentElement2 ptr, byval offset as long, byval bstrstring as BSTR) as HRESULT
declare sub IHTMLCommentElement2_insertData_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLCommentElement2_deleteData_Proxy(byval This as IHTMLCommentElement2 ptr, byval offset as long, byval Count as long) as HRESULT
declare sub IHTMLCommentElement2_deleteData_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLCommentElement2_replaceData_Proxy(byval This as IHTMLCommentElement2 ptr, byval offset as long, byval Count as long, byval bstrstring as BSTR) as HRESULT
declare sub IHTMLCommentElement2_replaceData_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __DispHTMLCommentElement_DISPINTERFACE_DEFINED__
extern DIID_DispHTMLCommentElement as const IID
type DispHTMLCommentElement as DispHTMLCommentElement_

type DispHTMLCommentElementVtbl
	QueryInterface as function(byval This as DispHTMLCommentElement ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as DispHTMLCommentElement ptr) as ULONG
	Release as function(byval This as DispHTMLCommentElement ptr) as ULONG
	GetTypeInfoCount as function(byval This as DispHTMLCommentElement ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as DispHTMLCommentElement ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as DispHTMLCommentElement ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as DispHTMLCommentElement ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type DispHTMLCommentElement_
	lpVtbl as DispHTMLCommentElementVtbl ptr
end type

#define DispHTMLCommentElement_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define DispHTMLCommentElement_AddRef(This) (This)->lpVtbl->AddRef(This)
#define DispHTMLCommentElement_Release(This) (This)->lpVtbl->Release(This)
#define DispHTMLCommentElement_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define DispHTMLCommentElement_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define DispHTMLCommentElement_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define DispHTMLCommentElement_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
extern CLSID_HTMLCommentElement as const CLSID
#define __IHTMLPhraseElement_INTERFACE_DEFINED__
extern IID_IHTMLPhraseElement as const IID
type IHTMLPhraseElement as IHTMLPhraseElement_

type IHTMLPhraseElementVtbl
	QueryInterface as function(byval This as IHTMLPhraseElement ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLPhraseElement ptr) as ULONG
	Release as function(byval This as IHTMLPhraseElement ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLPhraseElement ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLPhraseElement ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLPhraseElement ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLPhraseElement ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type IHTMLPhraseElement_
	lpVtbl as IHTMLPhraseElementVtbl ptr
end type

#define IHTMLPhraseElement_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLPhraseElement_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLPhraseElement_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLPhraseElement_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLPhraseElement_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLPhraseElement_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLPhraseElement_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define __IHTMLPhraseElement2_INTERFACE_DEFINED__
extern IID_IHTMLPhraseElement2 as const IID
type IHTMLPhraseElement2 as IHTMLPhraseElement2_

type IHTMLPhraseElement2Vtbl
	QueryInterface as function(byval This as IHTMLPhraseElement2 ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLPhraseElement2 ptr) as ULONG
	Release as function(byval This as IHTMLPhraseElement2 ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLPhraseElement2 ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLPhraseElement2 ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLPhraseElement2 ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLPhraseElement2 ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	put_cite as function(byval This as IHTMLPhraseElement2 ptr, byval v as BSTR) as HRESULT
	get_cite as function(byval This as IHTMLPhraseElement2 ptr, byval p as BSTR ptr) as HRESULT
	put_dateTime as function(byval This as IHTMLPhraseElement2 ptr, byval v as BSTR) as HRESULT
	get_dateTime as function(byval This as IHTMLPhraseElement2 ptr, byval p as BSTR ptr) as HRESULT
end type

type IHTMLPhraseElement2_
	lpVtbl as IHTMLPhraseElement2Vtbl ptr
end type

#define IHTMLPhraseElement2_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLPhraseElement2_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLPhraseElement2_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLPhraseElement2_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLPhraseElement2_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLPhraseElement2_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLPhraseElement2_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLPhraseElement2_put_cite(This, v) (This)->lpVtbl->put_cite(This, v)
#define IHTMLPhraseElement2_get_cite(This, p) (This)->lpVtbl->get_cite(This, p)
#define IHTMLPhraseElement2_put_dateTime(This, v) (This)->lpVtbl->put_dateTime(This, v)
#define IHTMLPhraseElement2_get_dateTime(This, p) (This)->lpVtbl->get_dateTime(This, p)

declare function IHTMLPhraseElement2_put_cite_Proxy(byval This as IHTMLPhraseElement2 ptr, byval v as BSTR) as HRESULT
declare sub IHTMLPhraseElement2_put_cite_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLPhraseElement2_get_cite_Proxy(byval This as IHTMLPhraseElement2 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLPhraseElement2_get_cite_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLPhraseElement2_put_dateTime_Proxy(byval This as IHTMLPhraseElement2 ptr, byval v as BSTR) as HRESULT
declare sub IHTMLPhraseElement2_put_dateTime_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLPhraseElement2_get_dateTime_Proxy(byval This as IHTMLPhraseElement2 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLPhraseElement2_get_dateTime_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLSpanElement_INTERFACE_DEFINED__
extern IID_IHTMLSpanElement as const IID
type IHTMLSpanElement as IHTMLSpanElement_

type IHTMLSpanElementVtbl
	QueryInterface as function(byval This as IHTMLSpanElement ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLSpanElement ptr) as ULONG
	Release as function(byval This as IHTMLSpanElement ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLSpanElement ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLSpanElement ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLSpanElement ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLSpanElement ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type IHTMLSpanElement_
	lpVtbl as IHTMLSpanElementVtbl ptr
end type

#define IHTMLSpanElement_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLSpanElement_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLSpanElement_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLSpanElement_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLSpanElement_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLSpanElement_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLSpanElement_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define __DispHTMLPhraseElement_DISPINTERFACE_DEFINED__
extern DIID_DispHTMLPhraseElement as const IID
type DispHTMLPhraseElement as DispHTMLPhraseElement_

type DispHTMLPhraseElementVtbl
	QueryInterface as function(byval This as DispHTMLPhraseElement ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as DispHTMLPhraseElement ptr) as ULONG
	Release as function(byval This as DispHTMLPhraseElement ptr) as ULONG
	GetTypeInfoCount as function(byval This as DispHTMLPhraseElement ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as DispHTMLPhraseElement ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as DispHTMLPhraseElement ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as DispHTMLPhraseElement ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type DispHTMLPhraseElement_
	lpVtbl as DispHTMLPhraseElementVtbl ptr
end type

#define DispHTMLPhraseElement_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define DispHTMLPhraseElement_AddRef(This) (This)->lpVtbl->AddRef(This)
#define DispHTMLPhraseElement_Release(This) (This)->lpVtbl->Release(This)
#define DispHTMLPhraseElement_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define DispHTMLPhraseElement_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define DispHTMLPhraseElement_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define DispHTMLPhraseElement_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
extern CLSID_HTMLPhraseElement as const CLSID
#define __DispHTMLSpanElement_DISPINTERFACE_DEFINED__
extern DIID_DispHTMLSpanElement as const IID
type DispHTMLSpanElement as DispHTMLSpanElement_

type DispHTMLSpanElementVtbl
	QueryInterface as function(byval This as DispHTMLSpanElement ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as DispHTMLSpanElement ptr) as ULONG
	Release as function(byval This as DispHTMLSpanElement ptr) as ULONG
	GetTypeInfoCount as function(byval This as DispHTMLSpanElement ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as DispHTMLSpanElement ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as DispHTMLSpanElement ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as DispHTMLSpanElement ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type DispHTMLSpanElement_
	lpVtbl as DispHTMLSpanElementVtbl ptr
end type

#define DispHTMLSpanElement_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define DispHTMLSpanElement_AddRef(This) (This)->lpVtbl->AddRef(This)
#define DispHTMLSpanElement_Release(This) (This)->lpVtbl->Release(This)
#define DispHTMLSpanElement_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define DispHTMLSpanElement_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define DispHTMLSpanElement_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define DispHTMLSpanElement_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
extern CLSID_HTMLSpanElement as const CLSID
#define __HTMLTableEvents2_DISPINTERFACE_DEFINED__
extern DIID_HTMLTableEvents2 as const IID
type HTMLTableEvents2 as HTMLTableEvents2_

type HTMLTableEvents2Vtbl
	QueryInterface as function(byval This as HTMLTableEvents2 ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as HTMLTableEvents2 ptr) as ULONG
	Release as function(byval This as HTMLTableEvents2 ptr) as ULONG
	GetTypeInfoCount as function(byval This as HTMLTableEvents2 ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as HTMLTableEvents2 ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as HTMLTableEvents2 ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as HTMLTableEvents2 ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type HTMLTableEvents2_
	lpVtbl as HTMLTableEvents2Vtbl ptr
end type

#define HTMLTableEvents2_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define HTMLTableEvents2_AddRef(This) (This)->lpVtbl->AddRef(This)
#define HTMLTableEvents2_Release(This) (This)->lpVtbl->Release(This)
#define HTMLTableEvents2_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define HTMLTableEvents2_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define HTMLTableEvents2_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define HTMLTableEvents2_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define __HTMLTableEvents_DISPINTERFACE_DEFINED__
extern DIID_HTMLTableEvents as const IID
type HTMLTableEvents as HTMLTableEvents_

type HTMLTableEventsVtbl
	QueryInterface as function(byval This as HTMLTableEvents ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as HTMLTableEvents ptr) as ULONG
	Release as function(byval This as HTMLTableEvents ptr) as ULONG
	GetTypeInfoCount as function(byval This as HTMLTableEvents ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as HTMLTableEvents ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as HTMLTableEvents ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as HTMLTableEvents ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type HTMLTableEvents_
	lpVtbl as HTMLTableEventsVtbl ptr
end type

#define HTMLTableEvents_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define HTMLTableEvents_AddRef(This) (This)->lpVtbl->AddRef(This)
#define HTMLTableEvents_Release(This) (This)->lpVtbl->Release(This)
#define HTMLTableEvents_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define HTMLTableEvents_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define HTMLTableEvents_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define HTMLTableEvents_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define __IHTMLTableSection_INTERFACE_DEFINED__
extern IID_IHTMLTableSection as const IID
type IHTMLTableSection as IHTMLTableSection_

type IHTMLTableSectionVtbl
	QueryInterface as function(byval This as IHTMLTableSection ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLTableSection ptr) as ULONG
	Release as function(byval This as IHTMLTableSection ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLTableSection ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLTableSection ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLTableSection ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLTableSection ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	put_align as function(byval This as IHTMLTableSection ptr, byval v as BSTR) as HRESULT
	get_align as function(byval This as IHTMLTableSection ptr, byval p as BSTR ptr) as HRESULT
	put_vAlign as function(byval This as IHTMLTableSection ptr, byval v as BSTR) as HRESULT
	get_vAlign as function(byval This as IHTMLTableSection ptr, byval p as BSTR ptr) as HRESULT
	put_bgColor as function(byval This as IHTMLTableSection ptr, byval v as VARIANT) as HRESULT
	get_bgColor as function(byval This as IHTMLTableSection ptr, byval p as VARIANT ptr) as HRESULT
	get_rows as function(byval This as IHTMLTableSection ptr, byval p as IHTMLElementCollection ptr ptr) as HRESULT
	insertRow as function(byval This as IHTMLTableSection ptr, byval index as long, byval row as IDispatch ptr ptr) as HRESULT
	deleteRow as function(byval This as IHTMLTableSection ptr, byval index as long) as HRESULT
end type

type IHTMLTableSection_
	lpVtbl as IHTMLTableSectionVtbl ptr
end type

#define IHTMLTableSection_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLTableSection_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLTableSection_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLTableSection_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLTableSection_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLTableSection_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLTableSection_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLTableSection_put_align(This, v) (This)->lpVtbl->put_align(This, v)
#define IHTMLTableSection_get_align(This, p) (This)->lpVtbl->get_align(This, p)
#define IHTMLTableSection_put_vAlign(This, v) (This)->lpVtbl->put_vAlign(This, v)
#define IHTMLTableSection_get_vAlign(This, p) (This)->lpVtbl->get_vAlign(This, p)
#define IHTMLTableSection_put_bgColor(This, v) (This)->lpVtbl->put_bgColor(This, v)
#define IHTMLTableSection_get_bgColor(This, p) (This)->lpVtbl->get_bgColor(This, p)
#define IHTMLTableSection_get_rows(This, p) (This)->lpVtbl->get_rows(This, p)
#define IHTMLTableSection_insertRow(This, index, row) (This)->lpVtbl->insertRow(This, index, row)
#define IHTMLTableSection_deleteRow(This, index) (This)->lpVtbl->deleteRow(This, index)

declare function IHTMLTableSection_put_align_Proxy(byval This as IHTMLTableSection ptr, byval v as BSTR) as HRESULT
declare sub IHTMLTableSection_put_align_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTableSection_get_align_Proxy(byval This as IHTMLTableSection ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLTableSection_get_align_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTableSection_put_vAlign_Proxy(byval This as IHTMLTableSection ptr, byval v as BSTR) as HRESULT
declare sub IHTMLTableSection_put_vAlign_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTableSection_get_vAlign_Proxy(byval This as IHTMLTableSection ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLTableSection_get_vAlign_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTableSection_put_bgColor_Proxy(byval This as IHTMLTableSection ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLTableSection_put_bgColor_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTableSection_get_bgColor_Proxy(byval This as IHTMLTableSection ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLTableSection_get_bgColor_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTableSection_get_rows_Proxy(byval This as IHTMLTableSection ptr, byval p as IHTMLElementCollection ptr ptr) as HRESULT
declare sub IHTMLTableSection_get_rows_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTableSection_insertRow_Proxy(byval This as IHTMLTableSection ptr, byval index as long, byval row as IDispatch ptr ptr) as HRESULT
declare sub IHTMLTableSection_insertRow_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTableSection_deleteRow_Proxy(byval This as IHTMLTableSection ptr, byval index as long) as HRESULT
declare sub IHTMLTableSection_deleteRow_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLTable_INTERFACE_DEFINED__
extern IID_IHTMLTable as const IID
type IHTMLTable as IHTMLTable_

type IHTMLTableVtbl
	QueryInterface as function(byval This as IHTMLTable ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLTable ptr) as ULONG
	Release as function(byval This as IHTMLTable ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLTable ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLTable ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLTable ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLTable ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	put_cols as function(byval This as IHTMLTable ptr, byval v as long) as HRESULT
	get_cols as function(byval This as IHTMLTable ptr, byval p as long ptr) as HRESULT
	put_border as function(byval This as IHTMLTable ptr, byval v as VARIANT) as HRESULT
	get_border as function(byval This as IHTMLTable ptr, byval p as VARIANT ptr) as HRESULT
	put_frame as function(byval This as IHTMLTable ptr, byval v as BSTR) as HRESULT
	get_frame as function(byval This as IHTMLTable ptr, byval p as BSTR ptr) as HRESULT
	put_rules as function(byval This as IHTMLTable ptr, byval v as BSTR) as HRESULT
	get_rules as function(byval This as IHTMLTable ptr, byval p as BSTR ptr) as HRESULT
	put_cellSpacing as function(byval This as IHTMLTable ptr, byval v as VARIANT) as HRESULT
	get_cellSpacing as function(byval This as IHTMLTable ptr, byval p as VARIANT ptr) as HRESULT
	put_cellPadding as function(byval This as IHTMLTable ptr, byval v as VARIANT) as HRESULT
	get_cellPadding as function(byval This as IHTMLTable ptr, byval p as VARIANT ptr) as HRESULT
	put_background as function(byval This as IHTMLTable ptr, byval v as BSTR) as HRESULT
	get_background as function(byval This as IHTMLTable ptr, byval p as BSTR ptr) as HRESULT
	put_bgColor as function(byval This as IHTMLTable ptr, byval v as VARIANT) as HRESULT
	get_bgColor as function(byval This as IHTMLTable ptr, byval p as VARIANT ptr) as HRESULT
	put_borderColor as function(byval This as IHTMLTable ptr, byval v as VARIANT) as HRESULT
	get_borderColor as function(byval This as IHTMLTable ptr, byval p as VARIANT ptr) as HRESULT
	put_borderColorLight as function(byval This as IHTMLTable ptr, byval v as VARIANT) as HRESULT
	get_borderColorLight as function(byval This as IHTMLTable ptr, byval p as VARIANT ptr) as HRESULT
	put_borderColorDark as function(byval This as IHTMLTable ptr, byval v as VARIANT) as HRESULT
	get_borderColorDark as function(byval This as IHTMLTable ptr, byval p as VARIANT ptr) as HRESULT
	put_align as function(byval This as IHTMLTable ptr, byval v as BSTR) as HRESULT
	get_align as function(byval This as IHTMLTable ptr, byval p as BSTR ptr) as HRESULT
	refresh as function(byval This as IHTMLTable ptr) as HRESULT
	get_rows as function(byval This as IHTMLTable ptr, byval p as IHTMLElementCollection ptr ptr) as HRESULT
	put_width as function(byval This as IHTMLTable ptr, byval v as VARIANT) as HRESULT
	get_width as function(byval This as IHTMLTable ptr, byval p as VARIANT ptr) as HRESULT
	put_height as function(byval This as IHTMLTable ptr, byval v as VARIANT) as HRESULT
	get_height as function(byval This as IHTMLTable ptr, byval p as VARIANT ptr) as HRESULT
	put_dataPageSize as function(byval This as IHTMLTable ptr, byval v as long) as HRESULT
	get_dataPageSize as function(byval This as IHTMLTable ptr, byval p as long ptr) as HRESULT
	nextPage as function(byval This as IHTMLTable ptr) as HRESULT
	previousPage as function(byval This as IHTMLTable ptr) as HRESULT
	get_tHead as function(byval This as IHTMLTable ptr, byval p as IHTMLTableSection ptr ptr) as HRESULT
	get_tFoot as function(byval This as IHTMLTable ptr, byval p as IHTMLTableSection ptr ptr) as HRESULT
	get_tBodies as function(byval This as IHTMLTable ptr, byval p as IHTMLElementCollection ptr ptr) as HRESULT
	get_caption as function(byval This as IHTMLTable ptr, byval p as IHTMLTableCaption ptr ptr) as HRESULT
	createTHead as function(byval This as IHTMLTable ptr, byval head as IDispatch ptr ptr) as HRESULT
	deleteTHead as function(byval This as IHTMLTable ptr) as HRESULT
	createTFoot as function(byval This as IHTMLTable ptr, byval foot as IDispatch ptr ptr) as HRESULT
	deleteTFoot as function(byval This as IHTMLTable ptr) as HRESULT
	createCaption as function(byval This as IHTMLTable ptr, byval caption as IHTMLTableCaption ptr ptr) as HRESULT
	deleteCaption as function(byval This as IHTMLTable ptr) as HRESULT
	insertRow as function(byval This as IHTMLTable ptr, byval index as long, byval row as IDispatch ptr ptr) as HRESULT
	deleteRow as function(byval This as IHTMLTable ptr, byval index as long) as HRESULT
	get_readyState as function(byval This as IHTMLTable ptr, byval p as BSTR ptr) as HRESULT
	put_onreadystatechange as function(byval This as IHTMLTable ptr, byval v as VARIANT) as HRESULT
	get_onreadystatechange as function(byval This as IHTMLTable ptr, byval p as VARIANT ptr) as HRESULT
end type

type IHTMLTable_
	lpVtbl as IHTMLTableVtbl ptr
end type

#define IHTMLTable_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLTable_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLTable_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLTable_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLTable_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLTable_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLTable_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLTable_put_cols(This, v) (This)->lpVtbl->put_cols(This, v)
#define IHTMLTable_get_cols(This, p) (This)->lpVtbl->get_cols(This, p)
#define IHTMLTable_put_border(This, v) (This)->lpVtbl->put_border(This, v)
#define IHTMLTable_get_border(This, p) (This)->lpVtbl->get_border(This, p)
#define IHTMLTable_put_frame(This, v) (This)->lpVtbl->put_frame(This, v)
#define IHTMLTable_get_frame(This, p) (This)->lpVtbl->get_frame(This, p)
#define IHTMLTable_put_rules(This, v) (This)->lpVtbl->put_rules(This, v)
#define IHTMLTable_get_rules(This, p) (This)->lpVtbl->get_rules(This, p)
#define IHTMLTable_put_cellSpacing(This, v) (This)->lpVtbl->put_cellSpacing(This, v)
#define IHTMLTable_get_cellSpacing(This, p) (This)->lpVtbl->get_cellSpacing(This, p)
#define IHTMLTable_put_cellPadding(This, v) (This)->lpVtbl->put_cellPadding(This, v)
#define IHTMLTable_get_cellPadding(This, p) (This)->lpVtbl->get_cellPadding(This, p)
#define IHTMLTable_put_background(This, v) (This)->lpVtbl->put_background(This, v)
#define IHTMLTable_get_background(This, p) (This)->lpVtbl->get_background(This, p)
#define IHTMLTable_put_bgColor(This, v) (This)->lpVtbl->put_bgColor(This, v)
#define IHTMLTable_get_bgColor(This, p) (This)->lpVtbl->get_bgColor(This, p)
#define IHTMLTable_put_borderColor(This, v) (This)->lpVtbl->put_borderColor(This, v)
#define IHTMLTable_get_borderColor(This, p) (This)->lpVtbl->get_borderColor(This, p)
#define IHTMLTable_put_borderColorLight(This, v) (This)->lpVtbl->put_borderColorLight(This, v)
#define IHTMLTable_get_borderColorLight(This, p) (This)->lpVtbl->get_borderColorLight(This, p)
#define IHTMLTable_put_borderColorDark(This, v) (This)->lpVtbl->put_borderColorDark(This, v)
#define IHTMLTable_get_borderColorDark(This, p) (This)->lpVtbl->get_borderColorDark(This, p)
#define IHTMLTable_put_align(This, v) (This)->lpVtbl->put_align(This, v)
#define IHTMLTable_get_align(This, p) (This)->lpVtbl->get_align(This, p)
#define IHTMLTable_refresh(This) (This)->lpVtbl->refresh(This)
#define IHTMLTable_get_rows(This, p) (This)->lpVtbl->get_rows(This, p)
#define IHTMLTable_put_width(This, v) (This)->lpVtbl->put_width(This, v)
#define IHTMLTable_get_width(This, p) (This)->lpVtbl->get_width(This, p)
#define IHTMLTable_put_height(This, v) (This)->lpVtbl->put_height(This, v)
#define IHTMLTable_get_height(This, p) (This)->lpVtbl->get_height(This, p)
#define IHTMLTable_put_dataPageSize(This, v) (This)->lpVtbl->put_dataPageSize(This, v)
#define IHTMLTable_get_dataPageSize(This, p) (This)->lpVtbl->get_dataPageSize(This, p)
#define IHTMLTable_nextPage(This) (This)->lpVtbl->nextPage(This)
#define IHTMLTable_previousPage(This) (This)->lpVtbl->previousPage(This)
#define IHTMLTable_get_tHead(This, p) (This)->lpVtbl->get_tHead(This, p)
#define IHTMLTable_get_tFoot(This, p) (This)->lpVtbl->get_tFoot(This, p)
#define IHTMLTable_get_tBodies(This, p) (This)->lpVtbl->get_tBodies(This, p)
#define IHTMLTable_get_caption(This, p) (This)->lpVtbl->get_caption(This, p)
#define IHTMLTable_createTHead(This, head) (This)->lpVtbl->createTHead(This, head)
#define IHTMLTable_deleteTHead(This) (This)->lpVtbl->deleteTHead(This)
#define IHTMLTable_createTFoot(This, foot) (This)->lpVtbl->createTFoot(This, foot)
#define IHTMLTable_deleteTFoot(This) (This)->lpVtbl->deleteTFoot(This)
#define IHTMLTable_createCaption(This, caption) (This)->lpVtbl->createCaption(This, caption)
#define IHTMLTable_deleteCaption(This) (This)->lpVtbl->deleteCaption(This)
#define IHTMLTable_insertRow(This, index, row) (This)->lpVtbl->insertRow(This, index, row)
#define IHTMLTable_deleteRow(This, index) (This)->lpVtbl->deleteRow(This, index)
#define IHTMLTable_get_readyState(This, p) (This)->lpVtbl->get_readyState(This, p)
#define IHTMLTable_put_onreadystatechange(This, v) (This)->lpVtbl->put_onreadystatechange(This, v)
#define IHTMLTable_get_onreadystatechange(This, p) (This)->lpVtbl->get_onreadystatechange(This, p)

declare function IHTMLTable_put_cols_Proxy(byval This as IHTMLTable ptr, byval v as long) as HRESULT
declare sub IHTMLTable_put_cols_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTable_get_cols_Proxy(byval This as IHTMLTable ptr, byval p as long ptr) as HRESULT
declare sub IHTMLTable_get_cols_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTable_put_border_Proxy(byval This as IHTMLTable ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLTable_put_border_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTable_get_border_Proxy(byval This as IHTMLTable ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLTable_get_border_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTable_put_frame_Proxy(byval This as IHTMLTable ptr, byval v as BSTR) as HRESULT
declare sub IHTMLTable_put_frame_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTable_get_frame_Proxy(byval This as IHTMLTable ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLTable_get_frame_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTable_put_rules_Proxy(byval This as IHTMLTable ptr, byval v as BSTR) as HRESULT
declare sub IHTMLTable_put_rules_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTable_get_rules_Proxy(byval This as IHTMLTable ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLTable_get_rules_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTable_put_cellSpacing_Proxy(byval This as IHTMLTable ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLTable_put_cellSpacing_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTable_get_cellSpacing_Proxy(byval This as IHTMLTable ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLTable_get_cellSpacing_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTable_put_cellPadding_Proxy(byval This as IHTMLTable ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLTable_put_cellPadding_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTable_get_cellPadding_Proxy(byval This as IHTMLTable ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLTable_get_cellPadding_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTable_put_background_Proxy(byval This as IHTMLTable ptr, byval v as BSTR) as HRESULT
declare sub IHTMLTable_put_background_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTable_get_background_Proxy(byval This as IHTMLTable ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLTable_get_background_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTable_put_bgColor_Proxy(byval This as IHTMLTable ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLTable_put_bgColor_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTable_get_bgColor_Proxy(byval This as IHTMLTable ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLTable_get_bgColor_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTable_put_borderColor_Proxy(byval This as IHTMLTable ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLTable_put_borderColor_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTable_get_borderColor_Proxy(byval This as IHTMLTable ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLTable_get_borderColor_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTable_put_borderColorLight_Proxy(byval This as IHTMLTable ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLTable_put_borderColorLight_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTable_get_borderColorLight_Proxy(byval This as IHTMLTable ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLTable_get_borderColorLight_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTable_put_borderColorDark_Proxy(byval This as IHTMLTable ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLTable_put_borderColorDark_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTable_get_borderColorDark_Proxy(byval This as IHTMLTable ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLTable_get_borderColorDark_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTable_put_align_Proxy(byval This as IHTMLTable ptr, byval v as BSTR) as HRESULT
declare sub IHTMLTable_put_align_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTable_get_align_Proxy(byval This as IHTMLTable ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLTable_get_align_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTable_refresh_Proxy(byval This as IHTMLTable ptr) as HRESULT
declare sub IHTMLTable_refresh_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTable_get_rows_Proxy(byval This as IHTMLTable ptr, byval p as IHTMLElementCollection ptr ptr) as HRESULT
declare sub IHTMLTable_get_rows_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTable_put_width_Proxy(byval This as IHTMLTable ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLTable_put_width_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTable_get_width_Proxy(byval This as IHTMLTable ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLTable_get_width_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTable_put_height_Proxy(byval This as IHTMLTable ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLTable_put_height_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTable_get_height_Proxy(byval This as IHTMLTable ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLTable_get_height_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTable_put_dataPageSize_Proxy(byval This as IHTMLTable ptr, byval v as long) as HRESULT
declare sub IHTMLTable_put_dataPageSize_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTable_get_dataPageSize_Proxy(byval This as IHTMLTable ptr, byval p as long ptr) as HRESULT
declare sub IHTMLTable_get_dataPageSize_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTable_nextPage_Proxy(byval This as IHTMLTable ptr) as HRESULT
declare sub IHTMLTable_nextPage_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTable_previousPage_Proxy(byval This as IHTMLTable ptr) as HRESULT
declare sub IHTMLTable_previousPage_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTable_get_tHead_Proxy(byval This as IHTMLTable ptr, byval p as IHTMLTableSection ptr ptr) as HRESULT
declare sub IHTMLTable_get_tHead_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTable_get_tFoot_Proxy(byval This as IHTMLTable ptr, byval p as IHTMLTableSection ptr ptr) as HRESULT
declare sub IHTMLTable_get_tFoot_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTable_get_tBodies_Proxy(byval This as IHTMLTable ptr, byval p as IHTMLElementCollection ptr ptr) as HRESULT
declare sub IHTMLTable_get_tBodies_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTable_get_caption_Proxy(byval This as IHTMLTable ptr, byval p as IHTMLTableCaption ptr ptr) as HRESULT
declare sub IHTMLTable_get_caption_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTable_createTHead_Proxy(byval This as IHTMLTable ptr, byval head as IDispatch ptr ptr) as HRESULT
declare sub IHTMLTable_createTHead_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTable_deleteTHead_Proxy(byval This as IHTMLTable ptr) as HRESULT
declare sub IHTMLTable_deleteTHead_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTable_createTFoot_Proxy(byval This as IHTMLTable ptr, byval foot as IDispatch ptr ptr) as HRESULT
declare sub IHTMLTable_createTFoot_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTable_deleteTFoot_Proxy(byval This as IHTMLTable ptr) as HRESULT
declare sub IHTMLTable_deleteTFoot_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTable_createCaption_Proxy(byval This as IHTMLTable ptr, byval caption as IHTMLTableCaption ptr ptr) as HRESULT
declare sub IHTMLTable_createCaption_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTable_deleteCaption_Proxy(byval This as IHTMLTable ptr) as HRESULT
declare sub IHTMLTable_deleteCaption_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTable_insertRow_Proxy(byval This as IHTMLTable ptr, byval index as long, byval row as IDispatch ptr ptr) as HRESULT
declare sub IHTMLTable_insertRow_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTable_deleteRow_Proxy(byval This as IHTMLTable ptr, byval index as long) as HRESULT
declare sub IHTMLTable_deleteRow_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTable_get_readyState_Proxy(byval This as IHTMLTable ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLTable_get_readyState_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTable_put_onreadystatechange_Proxy(byval This as IHTMLTable ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLTable_put_onreadystatechange_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTable_get_onreadystatechange_Proxy(byval This as IHTMLTable ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLTable_get_onreadystatechange_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLTable2_INTERFACE_DEFINED__
extern IID_IHTMLTable2 as const IID
type IHTMLTable2 as IHTMLTable2_

type IHTMLTable2Vtbl
	QueryInterface as function(byval This as IHTMLTable2 ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLTable2 ptr) as ULONG
	Release as function(byval This as IHTMLTable2 ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLTable2 ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLTable2 ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLTable2 ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLTable2 ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	firstPage as function(byval This as IHTMLTable2 ptr) as HRESULT
	lastPage as function(byval This as IHTMLTable2 ptr) as HRESULT
	get_cells as function(byval This as IHTMLTable2 ptr, byval p as IHTMLElementCollection ptr ptr) as HRESULT
	moveRow as function(byval This as IHTMLTable2 ptr, byval indexFrom as long, byval indexTo as long, byval row as IDispatch ptr ptr) as HRESULT
end type

type IHTMLTable2_
	lpVtbl as IHTMLTable2Vtbl ptr
end type

#define IHTMLTable2_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLTable2_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLTable2_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLTable2_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLTable2_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLTable2_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLTable2_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLTable2_firstPage(This) (This)->lpVtbl->firstPage(This)
#define IHTMLTable2_lastPage(This) (This)->lpVtbl->lastPage(This)
#define IHTMLTable2_get_cells(This, p) (This)->lpVtbl->get_cells(This, p)
#define IHTMLTable2_moveRow(This, indexFrom, indexTo, row) (This)->lpVtbl->moveRow(This, indexFrom, indexTo, row)

declare function IHTMLTable2_firstPage_Proxy(byval This as IHTMLTable2 ptr) as HRESULT
declare sub IHTMLTable2_firstPage_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTable2_lastPage_Proxy(byval This as IHTMLTable2 ptr) as HRESULT
declare sub IHTMLTable2_lastPage_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTable2_get_cells_Proxy(byval This as IHTMLTable2 ptr, byval p as IHTMLElementCollection ptr ptr) as HRESULT
declare sub IHTMLTable2_get_cells_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTable2_moveRow_Proxy(byval This as IHTMLTable2 ptr, byval indexFrom as long, byval indexTo as long, byval row as IDispatch ptr ptr) as HRESULT
declare sub IHTMLTable2_moveRow_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLTable3_INTERFACE_DEFINED__
extern IID_IHTMLTable3 as const IID
type IHTMLTable3 as IHTMLTable3_

type IHTMLTable3Vtbl
	QueryInterface as function(byval This as IHTMLTable3 ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLTable3 ptr) as ULONG
	Release as function(byval This as IHTMLTable3 ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLTable3 ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLTable3 ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLTable3 ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLTable3 ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	put_summary as function(byval This as IHTMLTable3 ptr, byval v as BSTR) as HRESULT
	get_summary as function(byval This as IHTMLTable3 ptr, byval p as BSTR ptr) as HRESULT
end type

type IHTMLTable3_
	lpVtbl as IHTMLTable3Vtbl ptr
end type

#define IHTMLTable3_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLTable3_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLTable3_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLTable3_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLTable3_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLTable3_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLTable3_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLTable3_put_summary(This, v) (This)->lpVtbl->put_summary(This, v)
#define IHTMLTable3_get_summary(This, p) (This)->lpVtbl->get_summary(This, p)

declare function IHTMLTable3_put_summary_Proxy(byval This as IHTMLTable3 ptr, byval v as BSTR) as HRESULT
declare sub IHTMLTable3_put_summary_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTable3_get_summary_Proxy(byval This as IHTMLTable3 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLTable3_get_summary_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLTableCol_INTERFACE_DEFINED__
extern IID_IHTMLTableCol as const IID
type IHTMLTableCol as IHTMLTableCol_

type IHTMLTableColVtbl
	QueryInterface as function(byval This as IHTMLTableCol ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLTableCol ptr) as ULONG
	Release as function(byval This as IHTMLTableCol ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLTableCol ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLTableCol ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLTableCol ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLTableCol ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	put_span as function(byval This as IHTMLTableCol ptr, byval v as long) as HRESULT
	get_span as function(byval This as IHTMLTableCol ptr, byval p as long ptr) as HRESULT
	put_width as function(byval This as IHTMLTableCol ptr, byval v as VARIANT) as HRESULT
	get_width as function(byval This as IHTMLTableCol ptr, byval p as VARIANT ptr) as HRESULT
	put_align as function(byval This as IHTMLTableCol ptr, byval v as BSTR) as HRESULT
	get_align as function(byval This as IHTMLTableCol ptr, byval p as BSTR ptr) as HRESULT
	put_vAlign as function(byval This as IHTMLTableCol ptr, byval v as BSTR) as HRESULT
	get_vAlign as function(byval This as IHTMLTableCol ptr, byval p as BSTR ptr) as HRESULT
end type

type IHTMLTableCol_
	lpVtbl as IHTMLTableColVtbl ptr
end type

#define IHTMLTableCol_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLTableCol_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLTableCol_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLTableCol_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLTableCol_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLTableCol_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLTableCol_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLTableCol_put_span(This, v) (This)->lpVtbl->put_span(This, v)
#define IHTMLTableCol_get_span(This, p) (This)->lpVtbl->get_span(This, p)
#define IHTMLTableCol_put_width(This, v) (This)->lpVtbl->put_width(This, v)
#define IHTMLTableCol_get_width(This, p) (This)->lpVtbl->get_width(This, p)
#define IHTMLTableCol_put_align(This, v) (This)->lpVtbl->put_align(This, v)
#define IHTMLTableCol_get_align(This, p) (This)->lpVtbl->get_align(This, p)
#define IHTMLTableCol_put_vAlign(This, v) (This)->lpVtbl->put_vAlign(This, v)
#define IHTMLTableCol_get_vAlign(This, p) (This)->lpVtbl->get_vAlign(This, p)

declare function IHTMLTableCol_put_span_Proxy(byval This as IHTMLTableCol ptr, byval v as long) as HRESULT
declare sub IHTMLTableCol_put_span_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTableCol_get_span_Proxy(byval This as IHTMLTableCol ptr, byval p as long ptr) as HRESULT
declare sub IHTMLTableCol_get_span_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTableCol_put_width_Proxy(byval This as IHTMLTableCol ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLTableCol_put_width_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTableCol_get_width_Proxy(byval This as IHTMLTableCol ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLTableCol_get_width_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTableCol_put_align_Proxy(byval This as IHTMLTableCol ptr, byval v as BSTR) as HRESULT
declare sub IHTMLTableCol_put_align_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTableCol_get_align_Proxy(byval This as IHTMLTableCol ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLTableCol_get_align_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTableCol_put_vAlign_Proxy(byval This as IHTMLTableCol ptr, byval v as BSTR) as HRESULT
declare sub IHTMLTableCol_put_vAlign_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTableCol_get_vAlign_Proxy(byval This as IHTMLTableCol ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLTableCol_get_vAlign_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLTableCol2_INTERFACE_DEFINED__
extern IID_IHTMLTableCol2 as const IID
type IHTMLTableCol2 as IHTMLTableCol2_

type IHTMLTableCol2Vtbl
	QueryInterface as function(byval This as IHTMLTableCol2 ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLTableCol2 ptr) as ULONG
	Release as function(byval This as IHTMLTableCol2 ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLTableCol2 ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLTableCol2 ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLTableCol2 ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLTableCol2 ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	put_ch as function(byval This as IHTMLTableCol2 ptr, byval v as BSTR) as HRESULT
	get_ch as function(byval This as IHTMLTableCol2 ptr, byval p as BSTR ptr) as HRESULT
	put_chOff as function(byval This as IHTMLTableCol2 ptr, byval v as BSTR) as HRESULT
	get_chOff as function(byval This as IHTMLTableCol2 ptr, byval p as BSTR ptr) as HRESULT
end type

type IHTMLTableCol2_
	lpVtbl as IHTMLTableCol2Vtbl ptr
end type

#define IHTMLTableCol2_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLTableCol2_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLTableCol2_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLTableCol2_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLTableCol2_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLTableCol2_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLTableCol2_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLTableCol2_put_ch(This, v) (This)->lpVtbl->put_ch(This, v)
#define IHTMLTableCol2_get_ch(This, p) (This)->lpVtbl->get_ch(This, p)
#define IHTMLTableCol2_put_chOff(This, v) (This)->lpVtbl->put_chOff(This, v)
#define IHTMLTableCol2_get_chOff(This, p) (This)->lpVtbl->get_chOff(This, p)

declare function IHTMLTableCol2_put_ch_Proxy(byval This as IHTMLTableCol2 ptr, byval v as BSTR) as HRESULT
declare sub IHTMLTableCol2_put_ch_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTableCol2_get_ch_Proxy(byval This as IHTMLTableCol2 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLTableCol2_get_ch_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTableCol2_put_chOff_Proxy(byval This as IHTMLTableCol2 ptr, byval v as BSTR) as HRESULT
declare sub IHTMLTableCol2_put_chOff_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTableCol2_get_chOff_Proxy(byval This as IHTMLTableCol2 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLTableCol2_get_chOff_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLTableSection2_INTERFACE_DEFINED__
extern IID_IHTMLTableSection2 as const IID
type IHTMLTableSection2 as IHTMLTableSection2_

type IHTMLTableSection2Vtbl
	QueryInterface as function(byval This as IHTMLTableSection2 ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLTableSection2 ptr) as ULONG
	Release as function(byval This as IHTMLTableSection2 ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLTableSection2 ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLTableSection2 ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLTableSection2 ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLTableSection2 ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	moveRow as function(byval This as IHTMLTableSection2 ptr, byval indexFrom as long, byval indexTo as long, byval row as IDispatch ptr ptr) as HRESULT
end type

type IHTMLTableSection2_
	lpVtbl as IHTMLTableSection2Vtbl ptr
end type

#define IHTMLTableSection2_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLTableSection2_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLTableSection2_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLTableSection2_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLTableSection2_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLTableSection2_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLTableSection2_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLTableSection2_moveRow(This, indexFrom, indexTo, row) (This)->lpVtbl->moveRow(This, indexFrom, indexTo, row)
declare function IHTMLTableSection2_moveRow_Proxy(byval This as IHTMLTableSection2 ptr, byval indexFrom as long, byval indexTo as long, byval row as IDispatch ptr ptr) as HRESULT
declare sub IHTMLTableSection2_moveRow_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLTableSection3_INTERFACE_DEFINED__
extern IID_IHTMLTableSection3 as const IID
type IHTMLTableSection3 as IHTMLTableSection3_

type IHTMLTableSection3Vtbl
	QueryInterface as function(byval This as IHTMLTableSection3 ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLTableSection3 ptr) as ULONG
	Release as function(byval This as IHTMLTableSection3 ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLTableSection3 ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLTableSection3 ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLTableSection3 ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLTableSection3 ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	put_ch as function(byval This as IHTMLTableSection3 ptr, byval v as BSTR) as HRESULT
	get_ch as function(byval This as IHTMLTableSection3 ptr, byval p as BSTR ptr) as HRESULT
	put_chOff as function(byval This as IHTMLTableSection3 ptr, byval v as BSTR) as HRESULT
	get_chOff as function(byval This as IHTMLTableSection3 ptr, byval p as BSTR ptr) as HRESULT
end type

type IHTMLTableSection3_
	lpVtbl as IHTMLTableSection3Vtbl ptr
end type

#define IHTMLTableSection3_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLTableSection3_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLTableSection3_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLTableSection3_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLTableSection3_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLTableSection3_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLTableSection3_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLTableSection3_put_ch(This, v) (This)->lpVtbl->put_ch(This, v)
#define IHTMLTableSection3_get_ch(This, p) (This)->lpVtbl->get_ch(This, p)
#define IHTMLTableSection3_put_chOff(This, v) (This)->lpVtbl->put_chOff(This, v)
#define IHTMLTableSection3_get_chOff(This, p) (This)->lpVtbl->get_chOff(This, p)

declare function IHTMLTableSection3_put_ch_Proxy(byval This as IHTMLTableSection3 ptr, byval v as BSTR) as HRESULT
declare sub IHTMLTableSection3_put_ch_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTableSection3_get_ch_Proxy(byval This as IHTMLTableSection3 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLTableSection3_get_ch_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTableSection3_put_chOff_Proxy(byval This as IHTMLTableSection3 ptr, byval v as BSTR) as HRESULT
declare sub IHTMLTableSection3_put_chOff_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTableSection3_get_chOff_Proxy(byval This as IHTMLTableSection3 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLTableSection3_get_chOff_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLTableRow_INTERFACE_DEFINED__
extern IID_IHTMLTableRow as const IID
type IHTMLTableRow as IHTMLTableRow_

type IHTMLTableRowVtbl
	QueryInterface as function(byval This as IHTMLTableRow ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLTableRow ptr) as ULONG
	Release as function(byval This as IHTMLTableRow ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLTableRow ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLTableRow ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLTableRow ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLTableRow ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	put_align as function(byval This as IHTMLTableRow ptr, byval v as BSTR) as HRESULT
	get_align as function(byval This as IHTMLTableRow ptr, byval p as BSTR ptr) as HRESULT
	put_vAlign as function(byval This as IHTMLTableRow ptr, byval v as BSTR) as HRESULT
	get_vAlign as function(byval This as IHTMLTableRow ptr, byval p as BSTR ptr) as HRESULT
	put_bgColor as function(byval This as IHTMLTableRow ptr, byval v as VARIANT) as HRESULT
	get_bgColor as function(byval This as IHTMLTableRow ptr, byval p as VARIANT ptr) as HRESULT
	put_borderColor as function(byval This as IHTMLTableRow ptr, byval v as VARIANT) as HRESULT
	get_borderColor as function(byval This as IHTMLTableRow ptr, byval p as VARIANT ptr) as HRESULT
	put_borderColorLight as function(byval This as IHTMLTableRow ptr, byval v as VARIANT) as HRESULT
	get_borderColorLight as function(byval This as IHTMLTableRow ptr, byval p as VARIANT ptr) as HRESULT
	put_borderColorDark as function(byval This as IHTMLTableRow ptr, byval v as VARIANT) as HRESULT
	get_borderColorDark as function(byval This as IHTMLTableRow ptr, byval p as VARIANT ptr) as HRESULT
	get_rowIndex as function(byval This as IHTMLTableRow ptr, byval p as long ptr) as HRESULT
	get_sectionRowIndex as function(byval This as IHTMLTableRow ptr, byval p as long ptr) as HRESULT
	get_cells as function(byval This as IHTMLTableRow ptr, byval p as IHTMLElementCollection ptr ptr) as HRESULT
	insertCell as function(byval This as IHTMLTableRow ptr, byval index as long, byval row as IDispatch ptr ptr) as HRESULT
	deleteCell as function(byval This as IHTMLTableRow ptr, byval index as long) as HRESULT
end type

type IHTMLTableRow_
	lpVtbl as IHTMLTableRowVtbl ptr
end type

#define IHTMLTableRow_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLTableRow_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLTableRow_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLTableRow_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLTableRow_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLTableRow_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLTableRow_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLTableRow_put_align(This, v) (This)->lpVtbl->put_align(This, v)
#define IHTMLTableRow_get_align(This, p) (This)->lpVtbl->get_align(This, p)
#define IHTMLTableRow_put_vAlign(This, v) (This)->lpVtbl->put_vAlign(This, v)
#define IHTMLTableRow_get_vAlign(This, p) (This)->lpVtbl->get_vAlign(This, p)
#define IHTMLTableRow_put_bgColor(This, v) (This)->lpVtbl->put_bgColor(This, v)
#define IHTMLTableRow_get_bgColor(This, p) (This)->lpVtbl->get_bgColor(This, p)
#define IHTMLTableRow_put_borderColor(This, v) (This)->lpVtbl->put_borderColor(This, v)
#define IHTMLTableRow_get_borderColor(This, p) (This)->lpVtbl->get_borderColor(This, p)
#define IHTMLTableRow_put_borderColorLight(This, v) (This)->lpVtbl->put_borderColorLight(This, v)
#define IHTMLTableRow_get_borderColorLight(This, p) (This)->lpVtbl->get_borderColorLight(This, p)
#define IHTMLTableRow_put_borderColorDark(This, v) (This)->lpVtbl->put_borderColorDark(This, v)
#define IHTMLTableRow_get_borderColorDark(This, p) (This)->lpVtbl->get_borderColorDark(This, p)
#define IHTMLTableRow_get_rowIndex(This, p) (This)->lpVtbl->get_rowIndex(This, p)
#define IHTMLTableRow_get_sectionRowIndex(This, p) (This)->lpVtbl->get_sectionRowIndex(This, p)
#define IHTMLTableRow_get_cells(This, p) (This)->lpVtbl->get_cells(This, p)
#define IHTMLTableRow_insertCell(This, index, row) (This)->lpVtbl->insertCell(This, index, row)
#define IHTMLTableRow_deleteCell(This, index) (This)->lpVtbl->deleteCell(This, index)

declare function IHTMLTableRow_put_align_Proxy(byval This as IHTMLTableRow ptr, byval v as BSTR) as HRESULT
declare sub IHTMLTableRow_put_align_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTableRow_get_align_Proxy(byval This as IHTMLTableRow ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLTableRow_get_align_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTableRow_put_vAlign_Proxy(byval This as IHTMLTableRow ptr, byval v as BSTR) as HRESULT
declare sub IHTMLTableRow_put_vAlign_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTableRow_get_vAlign_Proxy(byval This as IHTMLTableRow ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLTableRow_get_vAlign_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTableRow_put_bgColor_Proxy(byval This as IHTMLTableRow ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLTableRow_put_bgColor_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTableRow_get_bgColor_Proxy(byval This as IHTMLTableRow ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLTableRow_get_bgColor_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTableRow_put_borderColor_Proxy(byval This as IHTMLTableRow ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLTableRow_put_borderColor_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTableRow_get_borderColor_Proxy(byval This as IHTMLTableRow ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLTableRow_get_borderColor_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTableRow_put_borderColorLight_Proxy(byval This as IHTMLTableRow ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLTableRow_put_borderColorLight_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTableRow_get_borderColorLight_Proxy(byval This as IHTMLTableRow ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLTableRow_get_borderColorLight_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTableRow_put_borderColorDark_Proxy(byval This as IHTMLTableRow ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLTableRow_put_borderColorDark_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTableRow_get_borderColorDark_Proxy(byval This as IHTMLTableRow ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLTableRow_get_borderColorDark_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTableRow_get_rowIndex_Proxy(byval This as IHTMLTableRow ptr, byval p as long ptr) as HRESULT
declare sub IHTMLTableRow_get_rowIndex_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTableRow_get_sectionRowIndex_Proxy(byval This as IHTMLTableRow ptr, byval p as long ptr) as HRESULT
declare sub IHTMLTableRow_get_sectionRowIndex_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTableRow_get_cells_Proxy(byval This as IHTMLTableRow ptr, byval p as IHTMLElementCollection ptr ptr) as HRESULT
declare sub IHTMLTableRow_get_cells_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTableRow_insertCell_Proxy(byval This as IHTMLTableRow ptr, byval index as long, byval row as IDispatch ptr ptr) as HRESULT
declare sub IHTMLTableRow_insertCell_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTableRow_deleteCell_Proxy(byval This as IHTMLTableRow ptr, byval index as long) as HRESULT
declare sub IHTMLTableRow_deleteCell_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLTableRow2_INTERFACE_DEFINED__
extern IID_IHTMLTableRow2 as const IID
type IHTMLTableRow2 as IHTMLTableRow2_

type IHTMLTableRow2Vtbl
	QueryInterface as function(byval This as IHTMLTableRow2 ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLTableRow2 ptr) as ULONG
	Release as function(byval This as IHTMLTableRow2 ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLTableRow2 ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLTableRow2 ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLTableRow2 ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLTableRow2 ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	put_height as function(byval This as IHTMLTableRow2 ptr, byval v as VARIANT) as HRESULT
	get_height as function(byval This as IHTMLTableRow2 ptr, byval p as VARIANT ptr) as HRESULT
end type

type IHTMLTableRow2_
	lpVtbl as IHTMLTableRow2Vtbl ptr
end type

#define IHTMLTableRow2_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLTableRow2_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLTableRow2_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLTableRow2_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLTableRow2_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLTableRow2_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLTableRow2_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLTableRow2_put_height(This, v) (This)->lpVtbl->put_height(This, v)
#define IHTMLTableRow2_get_height(This, p) (This)->lpVtbl->get_height(This, p)

declare function IHTMLTableRow2_put_height_Proxy(byval This as IHTMLTableRow2 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLTableRow2_put_height_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTableRow2_get_height_Proxy(byval This as IHTMLTableRow2 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLTableRow2_get_height_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLTableRow3_INTERFACE_DEFINED__
extern IID_IHTMLTableRow3 as const IID
type IHTMLTableRow3 as IHTMLTableRow3_

type IHTMLTableRow3Vtbl
	QueryInterface as function(byval This as IHTMLTableRow3 ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLTableRow3 ptr) as ULONG
	Release as function(byval This as IHTMLTableRow3 ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLTableRow3 ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLTableRow3 ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLTableRow3 ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLTableRow3 ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	put_ch as function(byval This as IHTMLTableRow3 ptr, byval v as BSTR) as HRESULT
	get_ch as function(byval This as IHTMLTableRow3 ptr, byval p as BSTR ptr) as HRESULT
	put_chOff as function(byval This as IHTMLTableRow3 ptr, byval v as BSTR) as HRESULT
	get_chOff as function(byval This as IHTMLTableRow3 ptr, byval p as BSTR ptr) as HRESULT
end type

type IHTMLTableRow3_
	lpVtbl as IHTMLTableRow3Vtbl ptr
end type

#define IHTMLTableRow3_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLTableRow3_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLTableRow3_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLTableRow3_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLTableRow3_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLTableRow3_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLTableRow3_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLTableRow3_put_ch(This, v) (This)->lpVtbl->put_ch(This, v)
#define IHTMLTableRow3_get_ch(This, p) (This)->lpVtbl->get_ch(This, p)
#define IHTMLTableRow3_put_chOff(This, v) (This)->lpVtbl->put_chOff(This, v)
#define IHTMLTableRow3_get_chOff(This, p) (This)->lpVtbl->get_chOff(This, p)

declare function IHTMLTableRow3_put_ch_Proxy(byval This as IHTMLTableRow3 ptr, byval v as BSTR) as HRESULT
declare sub IHTMLTableRow3_put_ch_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTableRow3_get_ch_Proxy(byval This as IHTMLTableRow3 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLTableRow3_get_ch_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTableRow3_put_chOff_Proxy(byval This as IHTMLTableRow3 ptr, byval v as BSTR) as HRESULT
declare sub IHTMLTableRow3_put_chOff_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTableRow3_get_chOff_Proxy(byval This as IHTMLTableRow3 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLTableRow3_get_chOff_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLTableRowMetrics_INTERFACE_DEFINED__
extern IID_IHTMLTableRowMetrics as const IID
type IHTMLTableRowMetrics as IHTMLTableRowMetrics_

type IHTMLTableRowMetricsVtbl
	QueryInterface as function(byval This as IHTMLTableRowMetrics ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLTableRowMetrics ptr) as ULONG
	Release as function(byval This as IHTMLTableRowMetrics ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLTableRowMetrics ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLTableRowMetrics ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLTableRowMetrics ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLTableRowMetrics ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	get_clientHeight as function(byval This as IHTMLTableRowMetrics ptr, byval p as long ptr) as HRESULT
	get_clientWidth as function(byval This as IHTMLTableRowMetrics ptr, byval p as long ptr) as HRESULT
	get_clientTop as function(byval This as IHTMLTableRowMetrics ptr, byval p as long ptr) as HRESULT
	get_clientLeft as function(byval This as IHTMLTableRowMetrics ptr, byval p as long ptr) as HRESULT
end type

type IHTMLTableRowMetrics_
	lpVtbl as IHTMLTableRowMetricsVtbl ptr
end type

#define IHTMLTableRowMetrics_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLTableRowMetrics_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLTableRowMetrics_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLTableRowMetrics_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLTableRowMetrics_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLTableRowMetrics_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLTableRowMetrics_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLTableRowMetrics_get_clientHeight(This, p) (This)->lpVtbl->get_clientHeight(This, p)
#define IHTMLTableRowMetrics_get_clientWidth(This, p) (This)->lpVtbl->get_clientWidth(This, p)
#define IHTMLTableRowMetrics_get_clientTop(This, p) (This)->lpVtbl->get_clientTop(This, p)
#define IHTMLTableRowMetrics_get_clientLeft(This, p) (This)->lpVtbl->get_clientLeft(This, p)

declare function IHTMLTableRowMetrics_get_clientHeight_Proxy(byval This as IHTMLTableRowMetrics ptr, byval p as long ptr) as HRESULT
declare sub IHTMLTableRowMetrics_get_clientHeight_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTableRowMetrics_get_clientWidth_Proxy(byval This as IHTMLTableRowMetrics ptr, byval p as long ptr) as HRESULT
declare sub IHTMLTableRowMetrics_get_clientWidth_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTableRowMetrics_get_clientTop_Proxy(byval This as IHTMLTableRowMetrics ptr, byval p as long ptr) as HRESULT
declare sub IHTMLTableRowMetrics_get_clientTop_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTableRowMetrics_get_clientLeft_Proxy(byval This as IHTMLTableRowMetrics ptr, byval p as long ptr) as HRESULT
declare sub IHTMLTableRowMetrics_get_clientLeft_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLTableCell_INTERFACE_DEFINED__
extern IID_IHTMLTableCell as const IID
type IHTMLTableCell as IHTMLTableCell_

type IHTMLTableCellVtbl
	QueryInterface as function(byval This as IHTMLTableCell ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLTableCell ptr) as ULONG
	Release as function(byval This as IHTMLTableCell ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLTableCell ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLTableCell ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLTableCell ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLTableCell ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	put_rowSpan as function(byval This as IHTMLTableCell ptr, byval v as long) as HRESULT
	get_rowSpan as function(byval This as IHTMLTableCell ptr, byval p as long ptr) as HRESULT
	put_colSpan as function(byval This as IHTMLTableCell ptr, byval v as long) as HRESULT
	get_colSpan as function(byval This as IHTMLTableCell ptr, byval p as long ptr) as HRESULT
	put_align as function(byval This as IHTMLTableCell ptr, byval v as BSTR) as HRESULT
	get_align as function(byval This as IHTMLTableCell ptr, byval p as BSTR ptr) as HRESULT
	put_vAlign as function(byval This as IHTMLTableCell ptr, byval v as BSTR) as HRESULT
	get_vAlign as function(byval This as IHTMLTableCell ptr, byval p as BSTR ptr) as HRESULT
	put_bgColor as function(byval This as IHTMLTableCell ptr, byval v as VARIANT) as HRESULT
	get_bgColor as function(byval This as IHTMLTableCell ptr, byval p as VARIANT ptr) as HRESULT
	put_noWrap as function(byval This as IHTMLTableCell ptr, byval v as VARIANT_BOOL) as HRESULT
	get_noWrap as function(byval This as IHTMLTableCell ptr, byval p as VARIANT_BOOL ptr) as HRESULT
	put_background as function(byval This as IHTMLTableCell ptr, byval v as BSTR) as HRESULT
	get_background as function(byval This as IHTMLTableCell ptr, byval p as BSTR ptr) as HRESULT
	put_borderColor as function(byval This as IHTMLTableCell ptr, byval v as VARIANT) as HRESULT
	get_borderColor as function(byval This as IHTMLTableCell ptr, byval p as VARIANT ptr) as HRESULT
	put_borderColorLight as function(byval This as IHTMLTableCell ptr, byval v as VARIANT) as HRESULT
	get_borderColorLight as function(byval This as IHTMLTableCell ptr, byval p as VARIANT ptr) as HRESULT
	put_borderColorDark as function(byval This as IHTMLTableCell ptr, byval v as VARIANT) as HRESULT
	get_borderColorDark as function(byval This as IHTMLTableCell ptr, byval p as VARIANT ptr) as HRESULT
	put_width as function(byval This as IHTMLTableCell ptr, byval v as VARIANT) as HRESULT
	get_width as function(byval This as IHTMLTableCell ptr, byval p as VARIANT ptr) as HRESULT
	put_height as function(byval This as IHTMLTableCell ptr, byval v as VARIANT) as HRESULT
	get_height as function(byval This as IHTMLTableCell ptr, byval p as VARIANT ptr) as HRESULT
	get_cellIndex as function(byval This as IHTMLTableCell ptr, byval p as long ptr) as HRESULT
end type

type IHTMLTableCell_
	lpVtbl as IHTMLTableCellVtbl ptr
end type

#define IHTMLTableCell_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLTableCell_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLTableCell_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLTableCell_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLTableCell_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLTableCell_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLTableCell_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLTableCell_put_rowSpan(This, v) (This)->lpVtbl->put_rowSpan(This, v)
#define IHTMLTableCell_get_rowSpan(This, p) (This)->lpVtbl->get_rowSpan(This, p)
#define IHTMLTableCell_put_colSpan(This, v) (This)->lpVtbl->put_colSpan(This, v)
#define IHTMLTableCell_get_colSpan(This, p) (This)->lpVtbl->get_colSpan(This, p)
#define IHTMLTableCell_put_align(This, v) (This)->lpVtbl->put_align(This, v)
#define IHTMLTableCell_get_align(This, p) (This)->lpVtbl->get_align(This, p)
#define IHTMLTableCell_put_vAlign(This, v) (This)->lpVtbl->put_vAlign(This, v)
#define IHTMLTableCell_get_vAlign(This, p) (This)->lpVtbl->get_vAlign(This, p)
#define IHTMLTableCell_put_bgColor(This, v) (This)->lpVtbl->put_bgColor(This, v)
#define IHTMLTableCell_get_bgColor(This, p) (This)->lpVtbl->get_bgColor(This, p)
#define IHTMLTableCell_put_noWrap(This, v) (This)->lpVtbl->put_noWrap(This, v)
#define IHTMLTableCell_get_noWrap(This, p) (This)->lpVtbl->get_noWrap(This, p)
#define IHTMLTableCell_put_background(This, v) (This)->lpVtbl->put_background(This, v)
#define IHTMLTableCell_get_background(This, p) (This)->lpVtbl->get_background(This, p)
#define IHTMLTableCell_put_borderColor(This, v) (This)->lpVtbl->put_borderColor(This, v)
#define IHTMLTableCell_get_borderColor(This, p) (This)->lpVtbl->get_borderColor(This, p)
#define IHTMLTableCell_put_borderColorLight(This, v) (This)->lpVtbl->put_borderColorLight(This, v)
#define IHTMLTableCell_get_borderColorLight(This, p) (This)->lpVtbl->get_borderColorLight(This, p)
#define IHTMLTableCell_put_borderColorDark(This, v) (This)->lpVtbl->put_borderColorDark(This, v)
#define IHTMLTableCell_get_borderColorDark(This, p) (This)->lpVtbl->get_borderColorDark(This, p)
#define IHTMLTableCell_put_width(This, v) (This)->lpVtbl->put_width(This, v)
#define IHTMLTableCell_get_width(This, p) (This)->lpVtbl->get_width(This, p)
#define IHTMLTableCell_put_height(This, v) (This)->lpVtbl->put_height(This, v)
#define IHTMLTableCell_get_height(This, p) (This)->lpVtbl->get_height(This, p)
#define IHTMLTableCell_get_cellIndex(This, p) (This)->lpVtbl->get_cellIndex(This, p)

declare function IHTMLTableCell_put_rowSpan_Proxy(byval This as IHTMLTableCell ptr, byval v as long) as HRESULT
declare sub IHTMLTableCell_put_rowSpan_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTableCell_get_rowSpan_Proxy(byval This as IHTMLTableCell ptr, byval p as long ptr) as HRESULT
declare sub IHTMLTableCell_get_rowSpan_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTableCell_put_colSpan_Proxy(byval This as IHTMLTableCell ptr, byval v as long) as HRESULT
declare sub IHTMLTableCell_put_colSpan_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTableCell_get_colSpan_Proxy(byval This as IHTMLTableCell ptr, byval p as long ptr) as HRESULT
declare sub IHTMLTableCell_get_colSpan_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTableCell_put_align_Proxy(byval This as IHTMLTableCell ptr, byval v as BSTR) as HRESULT
declare sub IHTMLTableCell_put_align_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTableCell_get_align_Proxy(byval This as IHTMLTableCell ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLTableCell_get_align_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTableCell_put_vAlign_Proxy(byval This as IHTMLTableCell ptr, byval v as BSTR) as HRESULT
declare sub IHTMLTableCell_put_vAlign_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTableCell_get_vAlign_Proxy(byval This as IHTMLTableCell ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLTableCell_get_vAlign_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTableCell_put_bgColor_Proxy(byval This as IHTMLTableCell ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLTableCell_put_bgColor_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTableCell_get_bgColor_Proxy(byval This as IHTMLTableCell ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLTableCell_get_bgColor_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTableCell_put_noWrap_Proxy(byval This as IHTMLTableCell ptr, byval v as VARIANT_BOOL) as HRESULT
declare sub IHTMLTableCell_put_noWrap_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTableCell_get_noWrap_Proxy(byval This as IHTMLTableCell ptr, byval p as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLTableCell_get_noWrap_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTableCell_put_background_Proxy(byval This as IHTMLTableCell ptr, byval v as BSTR) as HRESULT
declare sub IHTMLTableCell_put_background_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTableCell_get_background_Proxy(byval This as IHTMLTableCell ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLTableCell_get_background_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTableCell_put_borderColor_Proxy(byval This as IHTMLTableCell ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLTableCell_put_borderColor_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTableCell_get_borderColor_Proxy(byval This as IHTMLTableCell ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLTableCell_get_borderColor_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTableCell_put_borderColorLight_Proxy(byval This as IHTMLTableCell ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLTableCell_put_borderColorLight_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTableCell_get_borderColorLight_Proxy(byval This as IHTMLTableCell ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLTableCell_get_borderColorLight_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTableCell_put_borderColorDark_Proxy(byval This as IHTMLTableCell ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLTableCell_put_borderColorDark_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTableCell_get_borderColorDark_Proxy(byval This as IHTMLTableCell ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLTableCell_get_borderColorDark_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTableCell_put_width_Proxy(byval This as IHTMLTableCell ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLTableCell_put_width_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTableCell_get_width_Proxy(byval This as IHTMLTableCell ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLTableCell_get_width_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTableCell_put_height_Proxy(byval This as IHTMLTableCell ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLTableCell_put_height_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTableCell_get_height_Proxy(byval This as IHTMLTableCell ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLTableCell_get_height_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTableCell_get_cellIndex_Proxy(byval This as IHTMLTableCell ptr, byval p as long ptr) as HRESULT
declare sub IHTMLTableCell_get_cellIndex_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLTableCell2_INTERFACE_DEFINED__
extern IID_IHTMLTableCell2 as const IID
type IHTMLTableCell2 as IHTMLTableCell2_

type IHTMLTableCell2Vtbl
	QueryInterface as function(byval This as IHTMLTableCell2 ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLTableCell2 ptr) as ULONG
	Release as function(byval This as IHTMLTableCell2 ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLTableCell2 ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLTableCell2 ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLTableCell2 ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLTableCell2 ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	put_abbr as function(byval This as IHTMLTableCell2 ptr, byval v as BSTR) as HRESULT
	get_abbr as function(byval This as IHTMLTableCell2 ptr, byval p as BSTR ptr) as HRESULT
	put_axis as function(byval This as IHTMLTableCell2 ptr, byval v as BSTR) as HRESULT
	get_axis as function(byval This as IHTMLTableCell2 ptr, byval p as BSTR ptr) as HRESULT
	put_ch as function(byval This as IHTMLTableCell2 ptr, byval v as BSTR) as HRESULT
	get_ch as function(byval This as IHTMLTableCell2 ptr, byval p as BSTR ptr) as HRESULT
	put_chOff as function(byval This as IHTMLTableCell2 ptr, byval v as BSTR) as HRESULT
	get_chOff as function(byval This as IHTMLTableCell2 ptr, byval p as BSTR ptr) as HRESULT
	put_headers as function(byval This as IHTMLTableCell2 ptr, byval v as BSTR) as HRESULT
	get_headers as function(byval This as IHTMLTableCell2 ptr, byval p as BSTR ptr) as HRESULT
	put_scope as function(byval This as IHTMLTableCell2 ptr, byval v as BSTR) as HRESULT
	get_scope as function(byval This as IHTMLTableCell2 ptr, byval p as BSTR ptr) as HRESULT
end type

type IHTMLTableCell2_
	lpVtbl as IHTMLTableCell2Vtbl ptr
end type

#define IHTMLTableCell2_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLTableCell2_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLTableCell2_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLTableCell2_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLTableCell2_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLTableCell2_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLTableCell2_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLTableCell2_put_abbr(This, v) (This)->lpVtbl->put_abbr(This, v)
#define IHTMLTableCell2_get_abbr(This, p) (This)->lpVtbl->get_abbr(This, p)
#define IHTMLTableCell2_put_axis(This, v) (This)->lpVtbl->put_axis(This, v)
#define IHTMLTableCell2_get_axis(This, p) (This)->lpVtbl->get_axis(This, p)
#define IHTMLTableCell2_put_ch(This, v) (This)->lpVtbl->put_ch(This, v)
#define IHTMLTableCell2_get_ch(This, p) (This)->lpVtbl->get_ch(This, p)
#define IHTMLTableCell2_put_chOff(This, v) (This)->lpVtbl->put_chOff(This, v)
#define IHTMLTableCell2_get_chOff(This, p) (This)->lpVtbl->get_chOff(This, p)
#define IHTMLTableCell2_put_headers(This, v) (This)->lpVtbl->put_headers(This, v)
#define IHTMLTableCell2_get_headers(This, p) (This)->lpVtbl->get_headers(This, p)
#define IHTMLTableCell2_put_scope(This, v) (This)->lpVtbl->put_scope(This, v)
#define IHTMLTableCell2_get_scope(This, p) (This)->lpVtbl->get_scope(This, p)

declare function IHTMLTableCell2_put_abbr_Proxy(byval This as IHTMLTableCell2 ptr, byval v as BSTR) as HRESULT
declare sub IHTMLTableCell2_put_abbr_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTableCell2_get_abbr_Proxy(byval This as IHTMLTableCell2 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLTableCell2_get_abbr_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTableCell2_put_axis_Proxy(byval This as IHTMLTableCell2 ptr, byval v as BSTR) as HRESULT
declare sub IHTMLTableCell2_put_axis_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTableCell2_get_axis_Proxy(byval This as IHTMLTableCell2 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLTableCell2_get_axis_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTableCell2_put_ch_Proxy(byval This as IHTMLTableCell2 ptr, byval v as BSTR) as HRESULT
declare sub IHTMLTableCell2_put_ch_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTableCell2_get_ch_Proxy(byval This as IHTMLTableCell2 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLTableCell2_get_ch_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTableCell2_put_chOff_Proxy(byval This as IHTMLTableCell2 ptr, byval v as BSTR) as HRESULT
declare sub IHTMLTableCell2_put_chOff_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTableCell2_get_chOff_Proxy(byval This as IHTMLTableCell2 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLTableCell2_get_chOff_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTableCell2_put_headers_Proxy(byval This as IHTMLTableCell2 ptr, byval v as BSTR) as HRESULT
declare sub IHTMLTableCell2_put_headers_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTableCell2_get_headers_Proxy(byval This as IHTMLTableCell2 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLTableCell2_get_headers_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTableCell2_put_scope_Proxy(byval This as IHTMLTableCell2 ptr, byval v as BSTR) as HRESULT
declare sub IHTMLTableCell2_put_scope_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLTableCell2_get_scope_Proxy(byval This as IHTMLTableCell2 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLTableCell2_get_scope_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __DispHTMLTable_DISPINTERFACE_DEFINED__
extern DIID_DispHTMLTable as const IID
type DispHTMLTable as DispHTMLTable_

type DispHTMLTableVtbl
	QueryInterface as function(byval This as DispHTMLTable ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as DispHTMLTable ptr) as ULONG
	Release as function(byval This as DispHTMLTable ptr) as ULONG
	GetTypeInfoCount as function(byval This as DispHTMLTable ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as DispHTMLTable ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as DispHTMLTable ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as DispHTMLTable ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type DispHTMLTable_
	lpVtbl as DispHTMLTableVtbl ptr
end type

#define DispHTMLTable_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define DispHTMLTable_AddRef(This) (This)->lpVtbl->AddRef(This)
#define DispHTMLTable_Release(This) (This)->lpVtbl->Release(This)
#define DispHTMLTable_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define DispHTMLTable_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define DispHTMLTable_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define DispHTMLTable_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
extern CLSID_HTMLTable as const CLSID
#define __DispHTMLTableCol_DISPINTERFACE_DEFINED__
extern DIID_DispHTMLTableCol as const IID
type DispHTMLTableCol as DispHTMLTableCol_

type DispHTMLTableColVtbl
	QueryInterface as function(byval This as DispHTMLTableCol ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as DispHTMLTableCol ptr) as ULONG
	Release as function(byval This as DispHTMLTableCol ptr) as ULONG
	GetTypeInfoCount as function(byval This as DispHTMLTableCol ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as DispHTMLTableCol ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as DispHTMLTableCol ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as DispHTMLTableCol ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type DispHTMLTableCol_
	lpVtbl as DispHTMLTableColVtbl ptr
end type

#define DispHTMLTableCol_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define DispHTMLTableCol_AddRef(This) (This)->lpVtbl->AddRef(This)
#define DispHTMLTableCol_Release(This) (This)->lpVtbl->Release(This)
#define DispHTMLTableCol_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define DispHTMLTableCol_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define DispHTMLTableCol_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define DispHTMLTableCol_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
extern CLSID_HTMLTableCol as const CLSID
#define __DispHTMLTableSection_DISPINTERFACE_DEFINED__
extern DIID_DispHTMLTableSection as const IID
type DispHTMLTableSection as DispHTMLTableSection_

type DispHTMLTableSectionVtbl
	QueryInterface as function(byval This as DispHTMLTableSection ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as DispHTMLTableSection ptr) as ULONG
	Release as function(byval This as DispHTMLTableSection ptr) as ULONG
	GetTypeInfoCount as function(byval This as DispHTMLTableSection ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as DispHTMLTableSection ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as DispHTMLTableSection ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as DispHTMLTableSection ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type DispHTMLTableSection_
	lpVtbl as DispHTMLTableSectionVtbl ptr
end type

#define DispHTMLTableSection_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define DispHTMLTableSection_AddRef(This) (This)->lpVtbl->AddRef(This)
#define DispHTMLTableSection_Release(This) (This)->lpVtbl->Release(This)
#define DispHTMLTableSection_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define DispHTMLTableSection_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define DispHTMLTableSection_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define DispHTMLTableSection_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
extern CLSID_HTMLTableSection as const CLSID
#define __DispHTMLTableRow_DISPINTERFACE_DEFINED__
extern DIID_DispHTMLTableRow as const IID
type DispHTMLTableRow as DispHTMLTableRow_

type DispHTMLTableRowVtbl
	QueryInterface as function(byval This as DispHTMLTableRow ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as DispHTMLTableRow ptr) as ULONG
	Release as function(byval This as DispHTMLTableRow ptr) as ULONG
	GetTypeInfoCount as function(byval This as DispHTMLTableRow ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as DispHTMLTableRow ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as DispHTMLTableRow ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as DispHTMLTableRow ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type DispHTMLTableRow_
	lpVtbl as DispHTMLTableRowVtbl ptr
end type

#define DispHTMLTableRow_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define DispHTMLTableRow_AddRef(This) (This)->lpVtbl->AddRef(This)
#define DispHTMLTableRow_Release(This) (This)->lpVtbl->Release(This)
#define DispHTMLTableRow_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define DispHTMLTableRow_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define DispHTMLTableRow_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define DispHTMLTableRow_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
extern CLSID_HTMLTableRow as const CLSID
#define __DispHTMLTableCell_DISPINTERFACE_DEFINED__
extern DIID_DispHTMLTableCell as const IID
type DispHTMLTableCell as DispHTMLTableCell_

type DispHTMLTableCellVtbl
	QueryInterface as function(byval This as DispHTMLTableCell ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as DispHTMLTableCell ptr) as ULONG
	Release as function(byval This as DispHTMLTableCell ptr) as ULONG
	GetTypeInfoCount as function(byval This as DispHTMLTableCell ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as DispHTMLTableCell ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as DispHTMLTableCell ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as DispHTMLTableCell ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type DispHTMLTableCell_
	lpVtbl as DispHTMLTableCellVtbl ptr
end type

#define DispHTMLTableCell_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define DispHTMLTableCell_AddRef(This) (This)->lpVtbl->AddRef(This)
#define DispHTMLTableCell_Release(This) (This)->lpVtbl->Release(This)
#define DispHTMLTableCell_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define DispHTMLTableCell_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define DispHTMLTableCell_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define DispHTMLTableCell_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
extern CLSID_HTMLTableCell as const CLSID
#define __HTMLScriptEvents2_DISPINTERFACE_DEFINED__
extern DIID_HTMLScriptEvents2 as const IID
type HTMLScriptEvents2 as HTMLScriptEvents2_

type HTMLScriptEvents2Vtbl
	QueryInterface as function(byval This as HTMLScriptEvents2 ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as HTMLScriptEvents2 ptr) as ULONG
	Release as function(byval This as HTMLScriptEvents2 ptr) as ULONG
	GetTypeInfoCount as function(byval This as HTMLScriptEvents2 ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as HTMLScriptEvents2 ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as HTMLScriptEvents2 ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as HTMLScriptEvents2 ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type HTMLScriptEvents2_
	lpVtbl as HTMLScriptEvents2Vtbl ptr
end type

#define HTMLScriptEvents2_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define HTMLScriptEvents2_AddRef(This) (This)->lpVtbl->AddRef(This)
#define HTMLScriptEvents2_Release(This) (This)->lpVtbl->Release(This)
#define HTMLScriptEvents2_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define HTMLScriptEvents2_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define HTMLScriptEvents2_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define HTMLScriptEvents2_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define __HTMLScriptEvents_DISPINTERFACE_DEFINED__
extern DIID_HTMLScriptEvents as const IID
type HTMLScriptEvents as HTMLScriptEvents_

type HTMLScriptEventsVtbl
	QueryInterface as function(byval This as HTMLScriptEvents ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as HTMLScriptEvents ptr) as ULONG
	Release as function(byval This as HTMLScriptEvents ptr) as ULONG
	GetTypeInfoCount as function(byval This as HTMLScriptEvents ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as HTMLScriptEvents ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as HTMLScriptEvents ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as HTMLScriptEvents ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type HTMLScriptEvents_
	lpVtbl as HTMLScriptEventsVtbl ptr
end type

#define HTMLScriptEvents_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define HTMLScriptEvents_AddRef(This) (This)->lpVtbl->AddRef(This)
#define HTMLScriptEvents_Release(This) (This)->lpVtbl->Release(This)
#define HTMLScriptEvents_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define HTMLScriptEvents_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define HTMLScriptEvents_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define HTMLScriptEvents_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define __IHTMLScriptElement_INTERFACE_DEFINED__
extern IID_IHTMLScriptElement as const IID
type IHTMLScriptElement as IHTMLScriptElement_

type IHTMLScriptElementVtbl
	QueryInterface as function(byval This as IHTMLScriptElement ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLScriptElement ptr) as ULONG
	Release as function(byval This as IHTMLScriptElement ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLScriptElement ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLScriptElement ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLScriptElement ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLScriptElement ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	put_src as function(byval This as IHTMLScriptElement ptr, byval v as BSTR) as HRESULT
	get_src as function(byval This as IHTMLScriptElement ptr, byval p as BSTR ptr) as HRESULT
	put_htmlFor as function(byval This as IHTMLScriptElement ptr, byval v as BSTR) as HRESULT
	get_htmlFor as function(byval This as IHTMLScriptElement ptr, byval p as BSTR ptr) as HRESULT
	put_event as function(byval This as IHTMLScriptElement ptr, byval v as BSTR) as HRESULT
	get_event as function(byval This as IHTMLScriptElement ptr, byval p as BSTR ptr) as HRESULT
	put_text as function(byval This as IHTMLScriptElement ptr, byval v as BSTR) as HRESULT
	get_text as function(byval This as IHTMLScriptElement ptr, byval p as BSTR ptr) as HRESULT
	put_defer as function(byval This as IHTMLScriptElement ptr, byval v as VARIANT_BOOL) as HRESULT
	get_defer as function(byval This as IHTMLScriptElement ptr, byval p as VARIANT_BOOL ptr) as HRESULT
	get_readyState as function(byval This as IHTMLScriptElement ptr, byval p as BSTR ptr) as HRESULT
	put_onerror as function(byval This as IHTMLScriptElement ptr, byval v as VARIANT) as HRESULT
	get_onerror as function(byval This as IHTMLScriptElement ptr, byval p as VARIANT ptr) as HRESULT
	put_type as function(byval This as IHTMLScriptElement ptr, byval v as BSTR) as HRESULT
	get_type as function(byval This as IHTMLScriptElement ptr, byval p as BSTR ptr) as HRESULT
end type

type IHTMLScriptElement_
	lpVtbl as IHTMLScriptElementVtbl ptr
end type

#define IHTMLScriptElement_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLScriptElement_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLScriptElement_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLScriptElement_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLScriptElement_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLScriptElement_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLScriptElement_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLScriptElement_put_src(This, v) (This)->lpVtbl->put_src(This, v)
#define IHTMLScriptElement_get_src(This, p) (This)->lpVtbl->get_src(This, p)
#define IHTMLScriptElement_put_htmlFor(This, v) (This)->lpVtbl->put_htmlFor(This, v)
#define IHTMLScriptElement_get_htmlFor(This, p) (This)->lpVtbl->get_htmlFor(This, p)
#define IHTMLScriptElement_put_event(This, v) (This)->lpVtbl->put_event(This, v)
#define IHTMLScriptElement_get_event(This, p) (This)->lpVtbl->get_event(This, p)
#define IHTMLScriptElement_put_text(This, v) (This)->lpVtbl->put_text(This, v)
#define IHTMLScriptElement_get_text(This, p) (This)->lpVtbl->get_text(This, p)
#define IHTMLScriptElement_put_defer(This, v) (This)->lpVtbl->put_defer(This, v)
#define IHTMLScriptElement_get_defer(This, p) (This)->lpVtbl->get_defer(This, p)
#define IHTMLScriptElement_get_readyState(This, p) (This)->lpVtbl->get_readyState(This, p)
#define IHTMLScriptElement_put_onerror(This, v) (This)->lpVtbl->put_onerror(This, v)
#define IHTMLScriptElement_get_onerror(This, p) (This)->lpVtbl->get_onerror(This, p)
#define IHTMLScriptElement_put_type(This, v) (This)->lpVtbl->put_type(This, v)
#define IHTMLScriptElement_get_type(This, p) (This)->lpVtbl->get_type(This, p)

declare function IHTMLScriptElement_put_src_Proxy(byval This as IHTMLScriptElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLScriptElement_put_src_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLScriptElement_get_src_Proxy(byval This as IHTMLScriptElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLScriptElement_get_src_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLScriptElement_put_htmlFor_Proxy(byval This as IHTMLScriptElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLScriptElement_put_htmlFor_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLScriptElement_get_htmlFor_Proxy(byval This as IHTMLScriptElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLScriptElement_get_htmlFor_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLScriptElement_put_event_Proxy(byval This as IHTMLScriptElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLScriptElement_put_event_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLScriptElement_get_event_Proxy(byval This as IHTMLScriptElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLScriptElement_get_event_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLScriptElement_put_text_Proxy(byval This as IHTMLScriptElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLScriptElement_put_text_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLScriptElement_get_text_Proxy(byval This as IHTMLScriptElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLScriptElement_get_text_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLScriptElement_put_defer_Proxy(byval This as IHTMLScriptElement ptr, byval v as VARIANT_BOOL) as HRESULT
declare sub IHTMLScriptElement_put_defer_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLScriptElement_get_defer_Proxy(byval This as IHTMLScriptElement ptr, byval p as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLScriptElement_get_defer_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLScriptElement_get_readyState_Proxy(byval This as IHTMLScriptElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLScriptElement_get_readyState_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLScriptElement_put_onerror_Proxy(byval This as IHTMLScriptElement ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLScriptElement_put_onerror_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLScriptElement_get_onerror_Proxy(byval This as IHTMLScriptElement ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLScriptElement_get_onerror_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLScriptElement_put_type_Proxy(byval This as IHTMLScriptElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLScriptElement_put_type_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLScriptElement_get_type_Proxy(byval This as IHTMLScriptElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLScriptElement_get_type_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLScriptElement2_INTERFACE_DEFINED__
extern IID_IHTMLScriptElement2 as const IID
type IHTMLScriptElement2 as IHTMLScriptElement2_

type IHTMLScriptElement2Vtbl
	QueryInterface as function(byval This as IHTMLScriptElement2 ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLScriptElement2 ptr) as ULONG
	Release as function(byval This as IHTMLScriptElement2 ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLScriptElement2 ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLScriptElement2 ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLScriptElement2 ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLScriptElement2 ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	put_charset as function(byval This as IHTMLScriptElement2 ptr, byval v as BSTR) as HRESULT
	get_charset as function(byval This as IHTMLScriptElement2 ptr, byval p as BSTR ptr) as HRESULT
end type

type IHTMLScriptElement2_
	lpVtbl as IHTMLScriptElement2Vtbl ptr
end type

#define IHTMLScriptElement2_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLScriptElement2_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLScriptElement2_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLScriptElement2_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLScriptElement2_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLScriptElement2_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLScriptElement2_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLScriptElement2_put_charset(This, v) (This)->lpVtbl->put_charset(This, v)
#define IHTMLScriptElement2_get_charset(This, p) (This)->lpVtbl->get_charset(This, p)

declare function IHTMLScriptElement2_put_charset_Proxy(byval This as IHTMLScriptElement2 ptr, byval v as BSTR) as HRESULT
declare sub IHTMLScriptElement2_put_charset_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLScriptElement2_get_charset_Proxy(byval This as IHTMLScriptElement2 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLScriptElement2_get_charset_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __DispHTMLScriptElement_DISPINTERFACE_DEFINED__
extern DIID_DispHTMLScriptElement as const IID
type DispHTMLScriptElement as DispHTMLScriptElement_

type DispHTMLScriptElementVtbl
	QueryInterface as function(byval This as DispHTMLScriptElement ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as DispHTMLScriptElement ptr) as ULONG
	Release as function(byval This as DispHTMLScriptElement ptr) as ULONG
	GetTypeInfoCount as function(byval This as DispHTMLScriptElement ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as DispHTMLScriptElement ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as DispHTMLScriptElement ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as DispHTMLScriptElement ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type DispHTMLScriptElement_
	lpVtbl as DispHTMLScriptElementVtbl ptr
end type

#define DispHTMLScriptElement_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define DispHTMLScriptElement_AddRef(This) (This)->lpVtbl->AddRef(This)
#define DispHTMLScriptElement_Release(This) (This)->lpVtbl->Release(This)
#define DispHTMLScriptElement_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define DispHTMLScriptElement_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define DispHTMLScriptElement_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define DispHTMLScriptElement_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
extern CLSID_HTMLScriptElement as const CLSID
#define __IHTMLNoShowElement_INTERFACE_DEFINED__
extern IID_IHTMLNoShowElement as const IID
type IHTMLNoShowElement as IHTMLNoShowElement_

type IHTMLNoShowElementVtbl
	QueryInterface as function(byval This as IHTMLNoShowElement ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLNoShowElement ptr) as ULONG
	Release as function(byval This as IHTMLNoShowElement ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLNoShowElement ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLNoShowElement ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLNoShowElement ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLNoShowElement ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type IHTMLNoShowElement_
	lpVtbl as IHTMLNoShowElementVtbl ptr
end type

#define IHTMLNoShowElement_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLNoShowElement_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLNoShowElement_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLNoShowElement_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLNoShowElement_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLNoShowElement_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLNoShowElement_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define __DispHTMLNoShowElement_DISPINTERFACE_DEFINED__
extern DIID_DispHTMLNoShowElement as const IID
type DispHTMLNoShowElement as DispHTMLNoShowElement_

type DispHTMLNoShowElementVtbl
	QueryInterface as function(byval This as DispHTMLNoShowElement ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as DispHTMLNoShowElement ptr) as ULONG
	Release as function(byval This as DispHTMLNoShowElement ptr) as ULONG
	GetTypeInfoCount as function(byval This as DispHTMLNoShowElement ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as DispHTMLNoShowElement ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as DispHTMLNoShowElement ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as DispHTMLNoShowElement ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type DispHTMLNoShowElement_
	lpVtbl as DispHTMLNoShowElementVtbl ptr
end type

#define DispHTMLNoShowElement_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define DispHTMLNoShowElement_AddRef(This) (This)->lpVtbl->AddRef(This)
#define DispHTMLNoShowElement_Release(This) (This)->lpVtbl->Release(This)
#define DispHTMLNoShowElement_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define DispHTMLNoShowElement_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define DispHTMLNoShowElement_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define DispHTMLNoShowElement_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
extern CLSID_HTMLNoShowElement as const CLSID
#define __HTMLObjectElementEvents2_DISPINTERFACE_DEFINED__
extern DIID_HTMLObjectElementEvents2 as const IID
type HTMLObjectElementEvents2 as HTMLObjectElementEvents2_

type HTMLObjectElementEvents2Vtbl
	QueryInterface as function(byval This as HTMLObjectElementEvents2 ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as HTMLObjectElementEvents2 ptr) as ULONG
	Release as function(byval This as HTMLObjectElementEvents2 ptr) as ULONG
	GetTypeInfoCount as function(byval This as HTMLObjectElementEvents2 ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as HTMLObjectElementEvents2 ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as HTMLObjectElementEvents2 ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as HTMLObjectElementEvents2 ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type HTMLObjectElementEvents2_
	lpVtbl as HTMLObjectElementEvents2Vtbl ptr
end type

#define HTMLObjectElementEvents2_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define HTMLObjectElementEvents2_AddRef(This) (This)->lpVtbl->AddRef(This)
#define HTMLObjectElementEvents2_Release(This) (This)->lpVtbl->Release(This)
#define HTMLObjectElementEvents2_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define HTMLObjectElementEvents2_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define HTMLObjectElementEvents2_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define HTMLObjectElementEvents2_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define __HTMLObjectElementEvents_DISPINTERFACE_DEFINED__
extern DIID_HTMLObjectElementEvents as const IID
type HTMLObjectElementEvents as HTMLObjectElementEvents_

type HTMLObjectElementEventsVtbl
	QueryInterface as function(byval This as HTMLObjectElementEvents ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as HTMLObjectElementEvents ptr) as ULONG
	Release as function(byval This as HTMLObjectElementEvents ptr) as ULONG
	GetTypeInfoCount as function(byval This as HTMLObjectElementEvents ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as HTMLObjectElementEvents ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as HTMLObjectElementEvents ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as HTMLObjectElementEvents ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type HTMLObjectElementEvents_
	lpVtbl as HTMLObjectElementEventsVtbl ptr
end type

#define HTMLObjectElementEvents_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define HTMLObjectElementEvents_AddRef(This) (This)->lpVtbl->AddRef(This)
#define HTMLObjectElementEvents_Release(This) (This)->lpVtbl->Release(This)
#define HTMLObjectElementEvents_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define HTMLObjectElementEvents_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define HTMLObjectElementEvents_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define HTMLObjectElementEvents_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define __IHTMLObjectElement_INTERFACE_DEFINED__
extern IID_IHTMLObjectElement as const IID
type IHTMLObjectElement as IHTMLObjectElement_

type IHTMLObjectElementVtbl
	QueryInterface as function(byval This as IHTMLObjectElement ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLObjectElement ptr) as ULONG
	Release as function(byval This as IHTMLObjectElement ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLObjectElement ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLObjectElement ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLObjectElement ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLObjectElement ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	get_object as function(byval This as IHTMLObjectElement ptr, byval p as IDispatch ptr ptr) as HRESULT
	get_classid as function(byval This as IHTMLObjectElement ptr, byval p as BSTR ptr) as HRESULT
	get_data as function(byval This as IHTMLObjectElement ptr, byval p as BSTR ptr) as HRESULT
	putref_recordset as function(byval This as IHTMLObjectElement ptr, byval v as IDispatch ptr) as HRESULT
	get_recordset as function(byval This as IHTMLObjectElement ptr, byval p as IDispatch ptr ptr) as HRESULT
	put_align as function(byval This as IHTMLObjectElement ptr, byval v as BSTR) as HRESULT
	get_align as function(byval This as IHTMLObjectElement ptr, byval p as BSTR ptr) as HRESULT
	put_name as function(byval This as IHTMLObjectElement ptr, byval v as BSTR) as HRESULT
	get_name as function(byval This as IHTMLObjectElement ptr, byval p as BSTR ptr) as HRESULT
	put_codeBase as function(byval This as IHTMLObjectElement ptr, byval v as BSTR) as HRESULT
	get_codeBase as function(byval This as IHTMLObjectElement ptr, byval p as BSTR ptr) as HRESULT
	put_codeType as function(byval This as IHTMLObjectElement ptr, byval v as BSTR) as HRESULT
	get_codeType as function(byval This as IHTMLObjectElement ptr, byval p as BSTR ptr) as HRESULT
	put_code as function(byval This as IHTMLObjectElement ptr, byval v as BSTR) as HRESULT
	get_code as function(byval This as IHTMLObjectElement ptr, byval p as BSTR ptr) as HRESULT
	get_BaseHref as function(byval This as IHTMLObjectElement ptr, byval p as BSTR ptr) as HRESULT
	put_type as function(byval This as IHTMLObjectElement ptr, byval v as BSTR) as HRESULT
	get_type as function(byval This as IHTMLObjectElement ptr, byval p as BSTR ptr) as HRESULT
	get_form as function(byval This as IHTMLObjectElement ptr, byval p as IHTMLFormElement ptr ptr) as HRESULT
	put_width as function(byval This as IHTMLObjectElement ptr, byval v as VARIANT) as HRESULT
	get_width as function(byval This as IHTMLObjectElement ptr, byval p as VARIANT ptr) as HRESULT
	put_height as function(byval This as IHTMLObjectElement ptr, byval v as VARIANT) as HRESULT
	get_height as function(byval This as IHTMLObjectElement ptr, byval p as VARIANT ptr) as HRESULT
	get_readyState as function(byval This as IHTMLObjectElement ptr, byval p as long ptr) as HRESULT
	put_onreadystatechange as function(byval This as IHTMLObjectElement ptr, byval v as VARIANT) as HRESULT
	get_onreadystatechange as function(byval This as IHTMLObjectElement ptr, byval p as VARIANT ptr) as HRESULT
	put_onerror as function(byval This as IHTMLObjectElement ptr, byval v as VARIANT) as HRESULT
	get_onerror as function(byval This as IHTMLObjectElement ptr, byval p as VARIANT ptr) as HRESULT
	put_altHtml as function(byval This as IHTMLObjectElement ptr, byval v as BSTR) as HRESULT
	get_altHtml as function(byval This as IHTMLObjectElement ptr, byval p as BSTR ptr) as HRESULT
	put_vspace as function(byval This as IHTMLObjectElement ptr, byval v as long) as HRESULT
	get_vspace as function(byval This as IHTMLObjectElement ptr, byval p as long ptr) as HRESULT
	put_hspace as function(byval This as IHTMLObjectElement ptr, byval v as long) as HRESULT
	get_hspace as function(byval This as IHTMLObjectElement ptr, byval p as long ptr) as HRESULT
end type

type IHTMLObjectElement_
	lpVtbl as IHTMLObjectElementVtbl ptr
end type

#define IHTMLObjectElement_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLObjectElement_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLObjectElement_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLObjectElement_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLObjectElement_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLObjectElement_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLObjectElement_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLObjectElement_get_object(This, p) (This)->lpVtbl->get_object(This, p)
#define IHTMLObjectElement_get_classid(This, p) (This)->lpVtbl->get_classid(This, p)
#define IHTMLObjectElement_get_data(This, p) (This)->lpVtbl->get_data(This, p)
#define IHTMLObjectElement_putref_recordset(This, v) (This)->lpVtbl->putref_recordset(This, v)
#define IHTMLObjectElement_get_recordset(This, p) (This)->lpVtbl->get_recordset(This, p)
#define IHTMLObjectElement_put_align(This, v) (This)->lpVtbl->put_align(This, v)
#define IHTMLObjectElement_get_align(This, p) (This)->lpVtbl->get_align(This, p)
#define IHTMLObjectElement_put_name(This, v) (This)->lpVtbl->put_name(This, v)
#define IHTMLObjectElement_get_name(This, p) (This)->lpVtbl->get_name(This, p)
#define IHTMLObjectElement_put_codeBase(This, v) (This)->lpVtbl->put_codeBase(This, v)
#define IHTMLObjectElement_get_codeBase(This, p) (This)->lpVtbl->get_codeBase(This, p)
#define IHTMLObjectElement_put_codeType(This, v) (This)->lpVtbl->put_codeType(This, v)
#define IHTMLObjectElement_get_codeType(This, p) (This)->lpVtbl->get_codeType(This, p)
#define IHTMLObjectElement_put_code(This, v) (This)->lpVtbl->put_code(This, v)
#define IHTMLObjectElement_get_code(This, p) (This)->lpVtbl->get_code(This, p)
#define IHTMLObjectElement_get_BaseHref(This, p) (This)->lpVtbl->get_BaseHref(This, p)
#define IHTMLObjectElement_put_type(This, v) (This)->lpVtbl->put_type(This, v)
#define IHTMLObjectElement_get_type(This, p) (This)->lpVtbl->get_type(This, p)
#define IHTMLObjectElement_get_form(This, p) (This)->lpVtbl->get_form(This, p)
#define IHTMLObjectElement_put_width(This, v) (This)->lpVtbl->put_width(This, v)
#define IHTMLObjectElement_get_width(This, p) (This)->lpVtbl->get_width(This, p)
#define IHTMLObjectElement_put_height(This, v) (This)->lpVtbl->put_height(This, v)
#define IHTMLObjectElement_get_height(This, p) (This)->lpVtbl->get_height(This, p)
#define IHTMLObjectElement_get_readyState(This, p) (This)->lpVtbl->get_readyState(This, p)
#define IHTMLObjectElement_put_onreadystatechange(This, v) (This)->lpVtbl->put_onreadystatechange(This, v)
#define IHTMLObjectElement_get_onreadystatechange(This, p) (This)->lpVtbl->get_onreadystatechange(This, p)
#define IHTMLObjectElement_put_onerror(This, v) (This)->lpVtbl->put_onerror(This, v)
#define IHTMLObjectElement_get_onerror(This, p) (This)->lpVtbl->get_onerror(This, p)
#define IHTMLObjectElement_put_altHtml(This, v) (This)->lpVtbl->put_altHtml(This, v)
#define IHTMLObjectElement_get_altHtml(This, p) (This)->lpVtbl->get_altHtml(This, p)
#define IHTMLObjectElement_put_vspace(This, v) (This)->lpVtbl->put_vspace(This, v)
#define IHTMLObjectElement_get_vspace(This, p) (This)->lpVtbl->get_vspace(This, p)
#define IHTMLObjectElement_put_hspace(This, v) (This)->lpVtbl->put_hspace(This, v)
#define IHTMLObjectElement_get_hspace(This, p) (This)->lpVtbl->get_hspace(This, p)

declare function IHTMLObjectElement_get_object_Proxy(byval This as IHTMLObjectElement ptr, byval p as IDispatch ptr ptr) as HRESULT
declare sub IHTMLObjectElement_get_object_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLObjectElement_get_classid_Proxy(byval This as IHTMLObjectElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLObjectElement_get_classid_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLObjectElement_get_data_Proxy(byval This as IHTMLObjectElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLObjectElement_get_data_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLObjectElement_putref_recordset_Proxy(byval This as IHTMLObjectElement ptr, byval v as IDispatch ptr) as HRESULT
declare sub IHTMLObjectElement_putref_recordset_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLObjectElement_get_recordset_Proxy(byval This as IHTMLObjectElement ptr, byval p as IDispatch ptr ptr) as HRESULT
declare sub IHTMLObjectElement_get_recordset_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLObjectElement_put_align_Proxy(byval This as IHTMLObjectElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLObjectElement_put_align_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLObjectElement_get_align_Proxy(byval This as IHTMLObjectElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLObjectElement_get_align_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLObjectElement_put_name_Proxy(byval This as IHTMLObjectElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLObjectElement_put_name_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLObjectElement_get_name_Proxy(byval This as IHTMLObjectElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLObjectElement_get_name_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLObjectElement_put_codeBase_Proxy(byval This as IHTMLObjectElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLObjectElement_put_codeBase_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLObjectElement_get_codeBase_Proxy(byval This as IHTMLObjectElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLObjectElement_get_codeBase_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLObjectElement_put_codeType_Proxy(byval This as IHTMLObjectElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLObjectElement_put_codeType_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLObjectElement_get_codeType_Proxy(byval This as IHTMLObjectElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLObjectElement_get_codeType_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLObjectElement_put_code_Proxy(byval This as IHTMLObjectElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLObjectElement_put_code_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLObjectElement_get_code_Proxy(byval This as IHTMLObjectElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLObjectElement_get_code_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLObjectElement_get_BaseHref_Proxy(byval This as IHTMLObjectElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLObjectElement_get_BaseHref_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLObjectElement_put_type_Proxy(byval This as IHTMLObjectElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLObjectElement_put_type_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLObjectElement_get_type_Proxy(byval This as IHTMLObjectElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLObjectElement_get_type_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLObjectElement_get_form_Proxy(byval This as IHTMLObjectElement ptr, byval p as IHTMLFormElement ptr ptr) as HRESULT
declare sub IHTMLObjectElement_get_form_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLObjectElement_put_width_Proxy(byval This as IHTMLObjectElement ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLObjectElement_put_width_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLObjectElement_get_width_Proxy(byval This as IHTMLObjectElement ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLObjectElement_get_width_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLObjectElement_put_height_Proxy(byval This as IHTMLObjectElement ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLObjectElement_put_height_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLObjectElement_get_height_Proxy(byval This as IHTMLObjectElement ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLObjectElement_get_height_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLObjectElement_get_readyState_Proxy(byval This as IHTMLObjectElement ptr, byval p as long ptr) as HRESULT
declare sub IHTMLObjectElement_get_readyState_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLObjectElement_put_onreadystatechange_Proxy(byval This as IHTMLObjectElement ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLObjectElement_put_onreadystatechange_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLObjectElement_get_onreadystatechange_Proxy(byval This as IHTMLObjectElement ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLObjectElement_get_onreadystatechange_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLObjectElement_put_onerror_Proxy(byval This as IHTMLObjectElement ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLObjectElement_put_onerror_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLObjectElement_get_onerror_Proxy(byval This as IHTMLObjectElement ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLObjectElement_get_onerror_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLObjectElement_put_altHtml_Proxy(byval This as IHTMLObjectElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLObjectElement_put_altHtml_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLObjectElement_get_altHtml_Proxy(byval This as IHTMLObjectElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLObjectElement_get_altHtml_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLObjectElement_put_vspace_Proxy(byval This as IHTMLObjectElement ptr, byval v as long) as HRESULT
declare sub IHTMLObjectElement_put_vspace_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLObjectElement_get_vspace_Proxy(byval This as IHTMLObjectElement ptr, byval p as long ptr) as HRESULT
declare sub IHTMLObjectElement_get_vspace_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLObjectElement_put_hspace_Proxy(byval This as IHTMLObjectElement ptr, byval v as long) as HRESULT
declare sub IHTMLObjectElement_put_hspace_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLObjectElement_get_hspace_Proxy(byval This as IHTMLObjectElement ptr, byval p as long ptr) as HRESULT
declare sub IHTMLObjectElement_get_hspace_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLObjectElement2_INTERFACE_DEFINED__
extern IID_IHTMLObjectElement2 as const IID
type IHTMLObjectElement2 as IHTMLObjectElement2_

type IHTMLObjectElement2Vtbl
	QueryInterface as function(byval This as IHTMLObjectElement2 ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLObjectElement2 ptr) as ULONG
	Release as function(byval This as IHTMLObjectElement2 ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLObjectElement2 ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLObjectElement2 ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLObjectElement2 ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLObjectElement2 ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	namedRecordset as function(byval This as IHTMLObjectElement2 ptr, byval dataMember as BSTR, byval hierarchy as VARIANT ptr, byval ppRecordset as IDispatch ptr ptr) as HRESULT
	put_classid as function(byval This as IHTMLObjectElement2 ptr, byval v as BSTR) as HRESULT
	get_classid as function(byval This as IHTMLObjectElement2 ptr, byval p as BSTR ptr) as HRESULT
	put_data as function(byval This as IHTMLObjectElement2 ptr, byval v as BSTR) as HRESULT
	get_data as function(byval This as IHTMLObjectElement2 ptr, byval p as BSTR ptr) as HRESULT
end type

type IHTMLObjectElement2_
	lpVtbl as IHTMLObjectElement2Vtbl ptr
end type

#define IHTMLObjectElement2_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLObjectElement2_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLObjectElement2_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLObjectElement2_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLObjectElement2_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLObjectElement2_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLObjectElement2_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLObjectElement2_namedRecordset(This, dataMember, hierarchy, ppRecordset) (This)->lpVtbl->namedRecordset(This, dataMember, hierarchy, ppRecordset)
#define IHTMLObjectElement2_put_classid(This, v) (This)->lpVtbl->put_classid(This, v)
#define IHTMLObjectElement2_get_classid(This, p) (This)->lpVtbl->get_classid(This, p)
#define IHTMLObjectElement2_put_data(This, v) (This)->lpVtbl->put_data(This, v)
#define IHTMLObjectElement2_get_data(This, p) (This)->lpVtbl->get_data(This, p)

declare function IHTMLObjectElement2_namedRecordset_Proxy(byval This as IHTMLObjectElement2 ptr, byval dataMember as BSTR, byval hierarchy as VARIANT ptr, byval ppRecordset as IDispatch ptr ptr) as HRESULT
declare sub IHTMLObjectElement2_namedRecordset_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLObjectElement2_put_classid_Proxy(byval This as IHTMLObjectElement2 ptr, byval v as BSTR) as HRESULT
declare sub IHTMLObjectElement2_put_classid_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLObjectElement2_get_classid_Proxy(byval This as IHTMLObjectElement2 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLObjectElement2_get_classid_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLObjectElement2_put_data_Proxy(byval This as IHTMLObjectElement2 ptr, byval v as BSTR) as HRESULT
declare sub IHTMLObjectElement2_put_data_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLObjectElement2_get_data_Proxy(byval This as IHTMLObjectElement2 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLObjectElement2_get_data_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLObjectElement3_INTERFACE_DEFINED__
extern IID_IHTMLObjectElement3 as const IID
type IHTMLObjectElement3 as IHTMLObjectElement3_

type IHTMLObjectElement3Vtbl
	QueryInterface as function(byval This as IHTMLObjectElement3 ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLObjectElement3 ptr) as ULONG
	Release as function(byval This as IHTMLObjectElement3 ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLObjectElement3 ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLObjectElement3 ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLObjectElement3 ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLObjectElement3 ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	put_archive as function(byval This as IHTMLObjectElement3 ptr, byval v as BSTR) as HRESULT
	get_archive as function(byval This as IHTMLObjectElement3 ptr, byval p as BSTR ptr) as HRESULT
	put_alt as function(byval This as IHTMLObjectElement3 ptr, byval v as BSTR) as HRESULT
	get_alt as function(byval This as IHTMLObjectElement3 ptr, byval p as BSTR ptr) as HRESULT
	put_declare as function(byval This as IHTMLObjectElement3 ptr, byval v as VARIANT_BOOL) as HRESULT
	get_declare as function(byval This as IHTMLObjectElement3 ptr, byval p as VARIANT_BOOL ptr) as HRESULT
	put_standby as function(byval This as IHTMLObjectElement3 ptr, byval v as BSTR) as HRESULT
	get_standby as function(byval This as IHTMLObjectElement3 ptr, byval p as BSTR ptr) as HRESULT
	put_border as function(byval This as IHTMLObjectElement3 ptr, byval v as VARIANT) as HRESULT
	get_border as function(byval This as IHTMLObjectElement3 ptr, byval p as VARIANT ptr) as HRESULT
	put_useMap as function(byval This as IHTMLObjectElement3 ptr, byval v as BSTR) as HRESULT
	get_useMap as function(byval This as IHTMLObjectElement3 ptr, byval p as BSTR ptr) as HRESULT
end type

type IHTMLObjectElement3_
	lpVtbl as IHTMLObjectElement3Vtbl ptr
end type

#define IHTMLObjectElement3_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLObjectElement3_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLObjectElement3_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLObjectElement3_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLObjectElement3_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLObjectElement3_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLObjectElement3_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLObjectElement3_put_archive(This, v) (This)->lpVtbl->put_archive(This, v)
#define IHTMLObjectElement3_get_archive(This, p) (This)->lpVtbl->get_archive(This, p)
#define IHTMLObjectElement3_put_alt(This, v) (This)->lpVtbl->put_alt(This, v)
#define IHTMLObjectElement3_get_alt(This, p) (This)->lpVtbl->get_alt(This, p)
#define IHTMLObjectElement3_put_declare(This, v) (This)->lpVtbl->put_declare(This, v)
#define IHTMLObjectElement3_get_declare(This, p) (This)->lpVtbl->get_declare(This, p)
#define IHTMLObjectElement3_put_standby(This, v) (This)->lpVtbl->put_standby(This, v)
#define IHTMLObjectElement3_get_standby(This, p) (This)->lpVtbl->get_standby(This, p)
#define IHTMLObjectElement3_put_border(This, v) (This)->lpVtbl->put_border(This, v)
#define IHTMLObjectElement3_get_border(This, p) (This)->lpVtbl->get_border(This, p)
#define IHTMLObjectElement3_put_useMap(This, v) (This)->lpVtbl->put_useMap(This, v)
#define IHTMLObjectElement3_get_useMap(This, p) (This)->lpVtbl->get_useMap(This, p)

declare function IHTMLObjectElement3_put_archive_Proxy(byval This as IHTMLObjectElement3 ptr, byval v as BSTR) as HRESULT
declare sub IHTMLObjectElement3_put_archive_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLObjectElement3_get_archive_Proxy(byval This as IHTMLObjectElement3 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLObjectElement3_get_archive_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLObjectElement3_put_alt_Proxy(byval This as IHTMLObjectElement3 ptr, byval v as BSTR) as HRESULT
declare sub IHTMLObjectElement3_put_alt_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLObjectElement3_get_alt_Proxy(byval This as IHTMLObjectElement3 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLObjectElement3_get_alt_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLObjectElement3_put_declare_Proxy(byval This as IHTMLObjectElement3 ptr, byval v as VARIANT_BOOL) as HRESULT
declare sub IHTMLObjectElement3_put_declare_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLObjectElement3_get_declare_Proxy(byval This as IHTMLObjectElement3 ptr, byval p as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLObjectElement3_get_declare_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLObjectElement3_put_standby_Proxy(byval This as IHTMLObjectElement3 ptr, byval v as BSTR) as HRESULT
declare sub IHTMLObjectElement3_put_standby_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLObjectElement3_get_standby_Proxy(byval This as IHTMLObjectElement3 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLObjectElement3_get_standby_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLObjectElement3_put_border_Proxy(byval This as IHTMLObjectElement3 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLObjectElement3_put_border_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLObjectElement3_get_border_Proxy(byval This as IHTMLObjectElement3 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLObjectElement3_get_border_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLObjectElement3_put_useMap_Proxy(byval This as IHTMLObjectElement3 ptr, byval v as BSTR) as HRESULT
declare sub IHTMLObjectElement3_put_useMap_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLObjectElement3_get_useMap_Proxy(byval This as IHTMLObjectElement3 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLObjectElement3_get_useMap_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLParamElement_INTERFACE_DEFINED__
extern IID_IHTMLParamElement as const IID
type IHTMLParamElement as IHTMLParamElement_

type IHTMLParamElementVtbl
	QueryInterface as function(byval This as IHTMLParamElement ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLParamElement ptr) as ULONG
	Release as function(byval This as IHTMLParamElement ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLParamElement ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLParamElement ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLParamElement ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLParamElement ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	put_name as function(byval This as IHTMLParamElement ptr, byval v as BSTR) as HRESULT
	get_name as function(byval This as IHTMLParamElement ptr, byval p as BSTR ptr) as HRESULT
	put_value as function(byval This as IHTMLParamElement ptr, byval v as BSTR) as HRESULT
	get_value as function(byval This as IHTMLParamElement ptr, byval p as BSTR ptr) as HRESULT
	put_type as function(byval This as IHTMLParamElement ptr, byval v as BSTR) as HRESULT
	get_type as function(byval This as IHTMLParamElement ptr, byval p as BSTR ptr) as HRESULT
	put_valueType as function(byval This as IHTMLParamElement ptr, byval v as BSTR) as HRESULT
	get_valueType as function(byval This as IHTMLParamElement ptr, byval p as BSTR ptr) as HRESULT
end type

type IHTMLParamElement_
	lpVtbl as IHTMLParamElementVtbl ptr
end type

#define IHTMLParamElement_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLParamElement_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLParamElement_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLParamElement_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLParamElement_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLParamElement_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLParamElement_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLParamElement_put_name(This, v) (This)->lpVtbl->put_name(This, v)
#define IHTMLParamElement_get_name(This, p) (This)->lpVtbl->get_name(This, p)
#define IHTMLParamElement_put_value(This, v) (This)->lpVtbl->put_value(This, v)
#define IHTMLParamElement_get_value(This, p) (This)->lpVtbl->get_value(This, p)
#define IHTMLParamElement_put_type(This, v) (This)->lpVtbl->put_type(This, v)
#define IHTMLParamElement_get_type(This, p) (This)->lpVtbl->get_type(This, p)
#define IHTMLParamElement_put_valueType(This, v) (This)->lpVtbl->put_valueType(This, v)
#define IHTMLParamElement_get_valueType(This, p) (This)->lpVtbl->get_valueType(This, p)

declare function IHTMLParamElement_put_name_Proxy(byval This as IHTMLParamElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLParamElement_put_name_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLParamElement_get_name_Proxy(byval This as IHTMLParamElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLParamElement_get_name_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLParamElement_put_value_Proxy(byval This as IHTMLParamElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLParamElement_put_value_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLParamElement_get_value_Proxy(byval This as IHTMLParamElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLParamElement_get_value_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLParamElement_put_type_Proxy(byval This as IHTMLParamElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLParamElement_put_type_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLParamElement_get_type_Proxy(byval This as IHTMLParamElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLParamElement_get_type_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLParamElement_put_valueType_Proxy(byval This as IHTMLParamElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLParamElement_put_valueType_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLParamElement_get_valueType_Proxy(byval This as IHTMLParamElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLParamElement_get_valueType_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __DispHTMLObjectElement_DISPINTERFACE_DEFINED__
extern DIID_DispHTMLObjectElement as const IID
type DispHTMLObjectElement as DispHTMLObjectElement_

type DispHTMLObjectElementVtbl
	QueryInterface as function(byval This as DispHTMLObjectElement ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as DispHTMLObjectElement ptr) as ULONG
	Release as function(byval This as DispHTMLObjectElement ptr) as ULONG
	GetTypeInfoCount as function(byval This as DispHTMLObjectElement ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as DispHTMLObjectElement ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as DispHTMLObjectElement ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as DispHTMLObjectElement ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type DispHTMLObjectElement_
	lpVtbl as DispHTMLObjectElementVtbl ptr
end type

#define DispHTMLObjectElement_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define DispHTMLObjectElement_AddRef(This) (This)->lpVtbl->AddRef(This)
#define DispHTMLObjectElement_Release(This) (This)->lpVtbl->Release(This)
#define DispHTMLObjectElement_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define DispHTMLObjectElement_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define DispHTMLObjectElement_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define DispHTMLObjectElement_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
extern CLSID_HTMLObjectElement as const CLSID
#define __DispHTMLParamElement_DISPINTERFACE_DEFINED__
extern DIID_DispHTMLParamElement as const IID
type DispHTMLParamElement as DispHTMLParamElement_

type DispHTMLParamElementVtbl
	QueryInterface as function(byval This as DispHTMLParamElement ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as DispHTMLParamElement ptr) as ULONG
	Release as function(byval This as DispHTMLParamElement ptr) as ULONG
	GetTypeInfoCount as function(byval This as DispHTMLParamElement ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as DispHTMLParamElement ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as DispHTMLParamElement ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as DispHTMLParamElement ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type DispHTMLParamElement_
	lpVtbl as DispHTMLParamElementVtbl ptr
end type

#define DispHTMLParamElement_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define DispHTMLParamElement_AddRef(This) (This)->lpVtbl->AddRef(This)
#define DispHTMLParamElement_Release(This) (This)->lpVtbl->Release(This)
#define DispHTMLParamElement_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define DispHTMLParamElement_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define DispHTMLParamElement_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define DispHTMLParamElement_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
extern CLSID_HTMLParamElement as const CLSID
#define __HTMLFrameSiteEvents2_DISPINTERFACE_DEFINED__
extern DIID_HTMLFrameSiteEvents2 as const IID
type HTMLFrameSiteEvents2 as HTMLFrameSiteEvents2_

type HTMLFrameSiteEvents2Vtbl
	QueryInterface as function(byval This as HTMLFrameSiteEvents2 ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as HTMLFrameSiteEvents2 ptr) as ULONG
	Release as function(byval This as HTMLFrameSiteEvents2 ptr) as ULONG
	GetTypeInfoCount as function(byval This as HTMLFrameSiteEvents2 ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as HTMLFrameSiteEvents2 ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as HTMLFrameSiteEvents2 ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as HTMLFrameSiteEvents2 ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type HTMLFrameSiteEvents2_
	lpVtbl as HTMLFrameSiteEvents2Vtbl ptr
end type

#define HTMLFrameSiteEvents2_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define HTMLFrameSiteEvents2_AddRef(This) (This)->lpVtbl->AddRef(This)
#define HTMLFrameSiteEvents2_Release(This) (This)->lpVtbl->Release(This)
#define HTMLFrameSiteEvents2_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define HTMLFrameSiteEvents2_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define HTMLFrameSiteEvents2_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define HTMLFrameSiteEvents2_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define __HTMLFrameSiteEvents_DISPINTERFACE_DEFINED__
extern DIID_HTMLFrameSiteEvents as const IID
type HTMLFrameSiteEvents as HTMLFrameSiteEvents_

type HTMLFrameSiteEventsVtbl
	QueryInterface as function(byval This as HTMLFrameSiteEvents ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as HTMLFrameSiteEvents ptr) as ULONG
	Release as function(byval This as HTMLFrameSiteEvents ptr) as ULONG
	GetTypeInfoCount as function(byval This as HTMLFrameSiteEvents ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as HTMLFrameSiteEvents ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as HTMLFrameSiteEvents ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as HTMLFrameSiteEvents ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type HTMLFrameSiteEvents_
	lpVtbl as HTMLFrameSiteEventsVtbl ptr
end type

#define HTMLFrameSiteEvents_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define HTMLFrameSiteEvents_AddRef(This) (This)->lpVtbl->AddRef(This)
#define HTMLFrameSiteEvents_Release(This) (This)->lpVtbl->Release(This)
#define HTMLFrameSiteEvents_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define HTMLFrameSiteEvents_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define HTMLFrameSiteEvents_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define HTMLFrameSiteEvents_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define __IHTMLFrameBase2_INTERFACE_DEFINED__
extern IID_IHTMLFrameBase2 as const IID
type IHTMLFrameBase2 as IHTMLFrameBase2_

type IHTMLFrameBase2Vtbl
	QueryInterface as function(byval This as IHTMLFrameBase2 ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLFrameBase2 ptr) as ULONG
	Release as function(byval This as IHTMLFrameBase2 ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLFrameBase2 ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLFrameBase2 ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLFrameBase2 ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLFrameBase2 ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	get_contentWindow as function(byval This as IHTMLFrameBase2 ptr, byval p as IHTMLWindow2 ptr ptr) as HRESULT
	put_onload as function(byval This as IHTMLFrameBase2 ptr, byval v as VARIANT) as HRESULT
	get_onload as function(byval This as IHTMLFrameBase2 ptr, byval p as VARIANT ptr) as HRESULT
	put_onreadystatechange as function(byval This as IHTMLFrameBase2 ptr, byval v as VARIANT) as HRESULT
	get_onreadystatechange as function(byval This as IHTMLFrameBase2 ptr, byval p as VARIANT ptr) as HRESULT
	get_readyState as function(byval This as IHTMLFrameBase2 ptr, byval p as BSTR ptr) as HRESULT
	put_allowTransparency as function(byval This as IHTMLFrameBase2 ptr, byval v as VARIANT_BOOL) as HRESULT
	get_allowTransparency as function(byval This as IHTMLFrameBase2 ptr, byval p as VARIANT_BOOL ptr) as HRESULT
end type

type IHTMLFrameBase2_
	lpVtbl as IHTMLFrameBase2Vtbl ptr
end type

#define IHTMLFrameBase2_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLFrameBase2_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLFrameBase2_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLFrameBase2_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLFrameBase2_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLFrameBase2_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLFrameBase2_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLFrameBase2_get_contentWindow(This, p) (This)->lpVtbl->get_contentWindow(This, p)
#define IHTMLFrameBase2_put_onload(This, v) (This)->lpVtbl->put_onload(This, v)
#define IHTMLFrameBase2_get_onload(This, p) (This)->lpVtbl->get_onload(This, p)
#define IHTMLFrameBase2_put_onreadystatechange(This, v) (This)->lpVtbl->put_onreadystatechange(This, v)
#define IHTMLFrameBase2_get_onreadystatechange(This, p) (This)->lpVtbl->get_onreadystatechange(This, p)
#define IHTMLFrameBase2_get_readyState(This, p) (This)->lpVtbl->get_readyState(This, p)
#define IHTMLFrameBase2_put_allowTransparency(This, v) (This)->lpVtbl->put_allowTransparency(This, v)
#define IHTMLFrameBase2_get_allowTransparency(This, p) (This)->lpVtbl->get_allowTransparency(This, p)

declare function IHTMLFrameBase2_get_contentWindow_Proxy(byval This as IHTMLFrameBase2 ptr, byval p as IHTMLWindow2 ptr ptr) as HRESULT
declare sub IHTMLFrameBase2_get_contentWindow_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLFrameBase2_put_onload_Proxy(byval This as IHTMLFrameBase2 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLFrameBase2_put_onload_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLFrameBase2_get_onload_Proxy(byval This as IHTMLFrameBase2 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLFrameBase2_get_onload_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLFrameBase2_put_onreadystatechange_Proxy(byval This as IHTMLFrameBase2 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLFrameBase2_put_onreadystatechange_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLFrameBase2_get_onreadystatechange_Proxy(byval This as IHTMLFrameBase2 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLFrameBase2_get_onreadystatechange_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLFrameBase2_get_readyState_Proxy(byval This as IHTMLFrameBase2 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLFrameBase2_get_readyState_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLFrameBase2_put_allowTransparency_Proxy(byval This as IHTMLFrameBase2 ptr, byval v as VARIANT_BOOL) as HRESULT
declare sub IHTMLFrameBase2_put_allowTransparency_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLFrameBase2_get_allowTransparency_Proxy(byval This as IHTMLFrameBase2 ptr, byval p as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLFrameBase2_get_allowTransparency_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLFrameBase3_INTERFACE_DEFINED__
extern IID_IHTMLFrameBase3 as const IID
type IHTMLFrameBase3 as IHTMLFrameBase3_

type IHTMLFrameBase3Vtbl
	QueryInterface as function(byval This as IHTMLFrameBase3 ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLFrameBase3 ptr) as ULONG
	Release as function(byval This as IHTMLFrameBase3 ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLFrameBase3 ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLFrameBase3 ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLFrameBase3 ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLFrameBase3 ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	put_longDesc as function(byval This as IHTMLFrameBase3 ptr, byval v as BSTR) as HRESULT
	get_longDesc as function(byval This as IHTMLFrameBase3 ptr, byval p as BSTR ptr) as HRESULT
end type

type IHTMLFrameBase3_
	lpVtbl as IHTMLFrameBase3Vtbl ptr
end type

#define IHTMLFrameBase3_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLFrameBase3_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLFrameBase3_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLFrameBase3_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLFrameBase3_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLFrameBase3_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLFrameBase3_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLFrameBase3_put_longDesc(This, v) (This)->lpVtbl->put_longDesc(This, v)
#define IHTMLFrameBase3_get_longDesc(This, p) (This)->lpVtbl->get_longDesc(This, p)

declare function IHTMLFrameBase3_put_longDesc_Proxy(byval This as IHTMLFrameBase3 ptr, byval v as BSTR) as HRESULT
declare sub IHTMLFrameBase3_put_longDesc_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLFrameBase3_get_longDesc_Proxy(byval This as IHTMLFrameBase3 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLFrameBase3_get_longDesc_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __DispHTMLFrameBase_DISPINTERFACE_DEFINED__
extern DIID_DispHTMLFrameBase as const IID
type DispHTMLFrameBase as DispHTMLFrameBase_

type DispHTMLFrameBaseVtbl
	QueryInterface as function(byval This as DispHTMLFrameBase ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as DispHTMLFrameBase ptr) as ULONG
	Release as function(byval This as DispHTMLFrameBase ptr) as ULONG
	GetTypeInfoCount as function(byval This as DispHTMLFrameBase ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as DispHTMLFrameBase ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as DispHTMLFrameBase ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as DispHTMLFrameBase ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type DispHTMLFrameBase_
	lpVtbl as DispHTMLFrameBaseVtbl ptr
end type

#define DispHTMLFrameBase_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define DispHTMLFrameBase_AddRef(This) (This)->lpVtbl->AddRef(This)
#define DispHTMLFrameBase_Release(This) (This)->lpVtbl->Release(This)
#define DispHTMLFrameBase_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define DispHTMLFrameBase_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define DispHTMLFrameBase_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define DispHTMLFrameBase_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
extern CLSID_HTMLFrameBase as const CLSID
#define __IHTMLFrameElement_INTERFACE_DEFINED__
extern IID_IHTMLFrameElement as const IID
type IHTMLFrameElement as IHTMLFrameElement_

type IHTMLFrameElementVtbl
	QueryInterface as function(byval This as IHTMLFrameElement ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLFrameElement ptr) as ULONG
	Release as function(byval This as IHTMLFrameElement ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLFrameElement ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLFrameElement ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLFrameElement ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLFrameElement ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	put_borderColor as function(byval This as IHTMLFrameElement ptr, byval v as VARIANT) as HRESULT
	get_borderColor as function(byval This as IHTMLFrameElement ptr, byval p as VARIANT ptr) as HRESULT
end type

type IHTMLFrameElement_
	lpVtbl as IHTMLFrameElementVtbl ptr
end type

#define IHTMLFrameElement_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLFrameElement_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLFrameElement_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLFrameElement_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLFrameElement_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLFrameElement_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLFrameElement_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLFrameElement_put_borderColor(This, v) (This)->lpVtbl->put_borderColor(This, v)
#define IHTMLFrameElement_get_borderColor(This, p) (This)->lpVtbl->get_borderColor(This, p)

declare function IHTMLFrameElement_put_borderColor_Proxy(byval This as IHTMLFrameElement ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLFrameElement_put_borderColor_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLFrameElement_get_borderColor_Proxy(byval This as IHTMLFrameElement ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLFrameElement_get_borderColor_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLFrameElement2_INTERFACE_DEFINED__
extern IID_IHTMLFrameElement2 as const IID
type IHTMLFrameElement2 as IHTMLFrameElement2_

type IHTMLFrameElement2Vtbl
	QueryInterface as function(byval This as IHTMLFrameElement2 ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLFrameElement2 ptr) as ULONG
	Release as function(byval This as IHTMLFrameElement2 ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLFrameElement2 ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLFrameElement2 ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLFrameElement2 ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLFrameElement2 ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	put_height as function(byval This as IHTMLFrameElement2 ptr, byval v as VARIANT) as HRESULT
	get_height as function(byval This as IHTMLFrameElement2 ptr, byval p as VARIANT ptr) as HRESULT
	put_width as function(byval This as IHTMLFrameElement2 ptr, byval v as VARIANT) as HRESULT
	get_width as function(byval This as IHTMLFrameElement2 ptr, byval p as VARIANT ptr) as HRESULT
end type

type IHTMLFrameElement2_
	lpVtbl as IHTMLFrameElement2Vtbl ptr
end type

#define IHTMLFrameElement2_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLFrameElement2_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLFrameElement2_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLFrameElement2_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLFrameElement2_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLFrameElement2_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLFrameElement2_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLFrameElement2_put_height(This, v) (This)->lpVtbl->put_height(This, v)
#define IHTMLFrameElement2_get_height(This, p) (This)->lpVtbl->get_height(This, p)
#define IHTMLFrameElement2_put_width(This, v) (This)->lpVtbl->put_width(This, v)
#define IHTMLFrameElement2_get_width(This, p) (This)->lpVtbl->get_width(This, p)

declare function IHTMLFrameElement2_put_height_Proxy(byval This as IHTMLFrameElement2 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLFrameElement2_put_height_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLFrameElement2_get_height_Proxy(byval This as IHTMLFrameElement2 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLFrameElement2_get_height_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLFrameElement2_put_width_Proxy(byval This as IHTMLFrameElement2 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLFrameElement2_put_width_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLFrameElement2_get_width_Proxy(byval This as IHTMLFrameElement2 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLFrameElement2_get_width_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __DispHTMLFrameElement_DISPINTERFACE_DEFINED__
extern DIID_DispHTMLFrameElement as const IID
type DispHTMLFrameElement as DispHTMLFrameElement_

type DispHTMLFrameElementVtbl
	QueryInterface as function(byval This as DispHTMLFrameElement ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as DispHTMLFrameElement ptr) as ULONG
	Release as function(byval This as DispHTMLFrameElement ptr) as ULONG
	GetTypeInfoCount as function(byval This as DispHTMLFrameElement ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as DispHTMLFrameElement ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as DispHTMLFrameElement ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as DispHTMLFrameElement ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type DispHTMLFrameElement_
	lpVtbl as DispHTMLFrameElementVtbl ptr
end type

#define DispHTMLFrameElement_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define DispHTMLFrameElement_AddRef(This) (This)->lpVtbl->AddRef(This)
#define DispHTMLFrameElement_Release(This) (This)->lpVtbl->Release(This)
#define DispHTMLFrameElement_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define DispHTMLFrameElement_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define DispHTMLFrameElement_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define DispHTMLFrameElement_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
extern CLSID_HTMLFrameElement as const CLSID
#define __IHTMLIFrameElement_INTERFACE_DEFINED__
extern IID_IHTMLIFrameElement as const IID
type IHTMLIFrameElement as IHTMLIFrameElement_

type IHTMLIFrameElementVtbl
	QueryInterface as function(byval This as IHTMLIFrameElement ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLIFrameElement ptr) as ULONG
	Release as function(byval This as IHTMLIFrameElement ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLIFrameElement ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLIFrameElement ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLIFrameElement ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLIFrameElement ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	put_vspace as function(byval This as IHTMLIFrameElement ptr, byval v as long) as HRESULT
	get_vspace as function(byval This as IHTMLIFrameElement ptr, byval p as long ptr) as HRESULT
	put_hspace as function(byval This as IHTMLIFrameElement ptr, byval v as long) as HRESULT
	get_hspace as function(byval This as IHTMLIFrameElement ptr, byval p as long ptr) as HRESULT
	put_align as function(byval This as IHTMLIFrameElement ptr, byval v as BSTR) as HRESULT
	get_align as function(byval This as IHTMLIFrameElement ptr, byval p as BSTR ptr) as HRESULT
end type

type IHTMLIFrameElement_
	lpVtbl as IHTMLIFrameElementVtbl ptr
end type

#define IHTMLIFrameElement_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLIFrameElement_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLIFrameElement_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLIFrameElement_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLIFrameElement_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLIFrameElement_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLIFrameElement_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLIFrameElement_put_vspace(This, v) (This)->lpVtbl->put_vspace(This, v)
#define IHTMLIFrameElement_get_vspace(This, p) (This)->lpVtbl->get_vspace(This, p)
#define IHTMLIFrameElement_put_hspace(This, v) (This)->lpVtbl->put_hspace(This, v)
#define IHTMLIFrameElement_get_hspace(This, p) (This)->lpVtbl->get_hspace(This, p)
#define IHTMLIFrameElement_put_align(This, v) (This)->lpVtbl->put_align(This, v)
#define IHTMLIFrameElement_get_align(This, p) (This)->lpVtbl->get_align(This, p)

declare function IHTMLIFrameElement_put_vspace_Proxy(byval This as IHTMLIFrameElement ptr, byval v as long) as HRESULT
declare sub IHTMLIFrameElement_put_vspace_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLIFrameElement_get_vspace_Proxy(byval This as IHTMLIFrameElement ptr, byval p as long ptr) as HRESULT
declare sub IHTMLIFrameElement_get_vspace_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLIFrameElement_put_hspace_Proxy(byval This as IHTMLIFrameElement ptr, byval v as long) as HRESULT
declare sub IHTMLIFrameElement_put_hspace_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLIFrameElement_get_hspace_Proxy(byval This as IHTMLIFrameElement ptr, byval p as long ptr) as HRESULT
declare sub IHTMLIFrameElement_get_hspace_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLIFrameElement_put_align_Proxy(byval This as IHTMLIFrameElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLIFrameElement_put_align_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLIFrameElement_get_align_Proxy(byval This as IHTMLIFrameElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLIFrameElement_get_align_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLIFrameElement2_INTERFACE_DEFINED__
extern IID_IHTMLIFrameElement2 as const IID
type IHTMLIFrameElement2 as IHTMLIFrameElement2_

type IHTMLIFrameElement2Vtbl
	QueryInterface as function(byval This as IHTMLIFrameElement2 ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLIFrameElement2 ptr) as ULONG
	Release as function(byval This as IHTMLIFrameElement2 ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLIFrameElement2 ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLIFrameElement2 ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLIFrameElement2 ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLIFrameElement2 ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	put_height as function(byval This as IHTMLIFrameElement2 ptr, byval v as VARIANT) as HRESULT
	get_height as function(byval This as IHTMLIFrameElement2 ptr, byval p as VARIANT ptr) as HRESULT
	put_width as function(byval This as IHTMLIFrameElement2 ptr, byval v as VARIANT) as HRESULT
	get_width as function(byval This as IHTMLIFrameElement2 ptr, byval p as VARIANT ptr) as HRESULT
end type

type IHTMLIFrameElement2_
	lpVtbl as IHTMLIFrameElement2Vtbl ptr
end type

#define IHTMLIFrameElement2_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLIFrameElement2_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLIFrameElement2_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLIFrameElement2_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLIFrameElement2_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLIFrameElement2_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLIFrameElement2_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLIFrameElement2_put_height(This, v) (This)->lpVtbl->put_height(This, v)
#define IHTMLIFrameElement2_get_height(This, p) (This)->lpVtbl->get_height(This, p)
#define IHTMLIFrameElement2_put_width(This, v) (This)->lpVtbl->put_width(This, v)
#define IHTMLIFrameElement2_get_width(This, p) (This)->lpVtbl->get_width(This, p)

declare function IHTMLIFrameElement2_put_height_Proxy(byval This as IHTMLIFrameElement2 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLIFrameElement2_put_height_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLIFrameElement2_get_height_Proxy(byval This as IHTMLIFrameElement2 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLIFrameElement2_get_height_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLIFrameElement2_put_width_Proxy(byval This as IHTMLIFrameElement2 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLIFrameElement2_put_width_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLIFrameElement2_get_width_Proxy(byval This as IHTMLIFrameElement2 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLIFrameElement2_get_width_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __DispHTMLIFrame_DISPINTERFACE_DEFINED__
extern DIID_DispHTMLIFrame as const IID
type DispHTMLIFrame as DispHTMLIFrame_

type DispHTMLIFrameVtbl
	QueryInterface as function(byval This as DispHTMLIFrame ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as DispHTMLIFrame ptr) as ULONG
	Release as function(byval This as DispHTMLIFrame ptr) as ULONG
	GetTypeInfoCount as function(byval This as DispHTMLIFrame ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as DispHTMLIFrame ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as DispHTMLIFrame ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as DispHTMLIFrame ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type DispHTMLIFrame_
	lpVtbl as DispHTMLIFrameVtbl ptr
end type

#define DispHTMLIFrame_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define DispHTMLIFrame_AddRef(This) (This)->lpVtbl->AddRef(This)
#define DispHTMLIFrame_Release(This) (This)->lpVtbl->Release(This)
#define DispHTMLIFrame_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define DispHTMLIFrame_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define DispHTMLIFrame_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define DispHTMLIFrame_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
extern CLSID_HTMLIFrame as const CLSID
#define __IHTMLDivPosition_INTERFACE_DEFINED__
extern IID_IHTMLDivPosition as const IID
type IHTMLDivPosition as IHTMLDivPosition_

type IHTMLDivPositionVtbl
	QueryInterface as function(byval This as IHTMLDivPosition ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLDivPosition ptr) as ULONG
	Release as function(byval This as IHTMLDivPosition ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLDivPosition ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLDivPosition ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLDivPosition ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLDivPosition ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	put_align as function(byval This as IHTMLDivPosition ptr, byval v as BSTR) as HRESULT
	get_align as function(byval This as IHTMLDivPosition ptr, byval p as BSTR ptr) as HRESULT
end type

type IHTMLDivPosition_
	lpVtbl as IHTMLDivPositionVtbl ptr
end type

#define IHTMLDivPosition_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLDivPosition_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLDivPosition_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLDivPosition_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLDivPosition_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLDivPosition_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLDivPosition_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLDivPosition_put_align(This, v) (This)->lpVtbl->put_align(This, v)
#define IHTMLDivPosition_get_align(This, p) (This)->lpVtbl->get_align(This, p)

declare function IHTMLDivPosition_put_align_Proxy(byval This as IHTMLDivPosition ptr, byval v as BSTR) as HRESULT
declare sub IHTMLDivPosition_put_align_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDivPosition_get_align_Proxy(byval This as IHTMLDivPosition ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLDivPosition_get_align_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLFieldSetElement_INTERFACE_DEFINED__
extern IID_IHTMLFieldSetElement as const IID
type IHTMLFieldSetElement as IHTMLFieldSetElement_

type IHTMLFieldSetElementVtbl
	QueryInterface as function(byval This as IHTMLFieldSetElement ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLFieldSetElement ptr) as ULONG
	Release as function(byval This as IHTMLFieldSetElement ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLFieldSetElement ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLFieldSetElement ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLFieldSetElement ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLFieldSetElement ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	put_align as function(byval This as IHTMLFieldSetElement ptr, byval v as BSTR) as HRESULT
	get_align as function(byval This as IHTMLFieldSetElement ptr, byval p as BSTR ptr) as HRESULT
end type

type IHTMLFieldSetElement_
	lpVtbl as IHTMLFieldSetElementVtbl ptr
end type

#define IHTMLFieldSetElement_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLFieldSetElement_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLFieldSetElement_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLFieldSetElement_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLFieldSetElement_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLFieldSetElement_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLFieldSetElement_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLFieldSetElement_put_align(This, v) (This)->lpVtbl->put_align(This, v)
#define IHTMLFieldSetElement_get_align(This, p) (This)->lpVtbl->get_align(This, p)

declare function IHTMLFieldSetElement_put_align_Proxy(byval This as IHTMLFieldSetElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLFieldSetElement_put_align_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLFieldSetElement_get_align_Proxy(byval This as IHTMLFieldSetElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLFieldSetElement_get_align_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLFieldSetElement2_INTERFACE_DEFINED__
extern IID_IHTMLFieldSetElement2 as const IID
type IHTMLFieldSetElement2 as IHTMLFieldSetElement2_

type IHTMLFieldSetElement2Vtbl
	QueryInterface as function(byval This as IHTMLFieldSetElement2 ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLFieldSetElement2 ptr) as ULONG
	Release as function(byval This as IHTMLFieldSetElement2 ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLFieldSetElement2 ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLFieldSetElement2 ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLFieldSetElement2 ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLFieldSetElement2 ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	get_form as function(byval This as IHTMLFieldSetElement2 ptr, byval p as IHTMLFormElement ptr ptr) as HRESULT
end type

type IHTMLFieldSetElement2_
	lpVtbl as IHTMLFieldSetElement2Vtbl ptr
end type

#define IHTMLFieldSetElement2_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLFieldSetElement2_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLFieldSetElement2_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLFieldSetElement2_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLFieldSetElement2_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLFieldSetElement2_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLFieldSetElement2_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLFieldSetElement2_get_form(This, p) (This)->lpVtbl->get_form(This, p)
declare function IHTMLFieldSetElement2_get_form_Proxy(byval This as IHTMLFieldSetElement2 ptr, byval p as IHTMLFormElement ptr ptr) as HRESULT
declare sub IHTMLFieldSetElement2_get_form_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLLegendElement_INTERFACE_DEFINED__
extern IID_IHTMLLegendElement as const IID
type IHTMLLegendElement as IHTMLLegendElement_

type IHTMLLegendElementVtbl
	QueryInterface as function(byval This as IHTMLLegendElement ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLLegendElement ptr) as ULONG
	Release as function(byval This as IHTMLLegendElement ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLLegendElement ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLLegendElement ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLLegendElement ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLLegendElement ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	put_align as function(byval This as IHTMLLegendElement ptr, byval v as BSTR) as HRESULT
	get_align as function(byval This as IHTMLLegendElement ptr, byval p as BSTR ptr) as HRESULT
end type

type IHTMLLegendElement_
	lpVtbl as IHTMLLegendElementVtbl ptr
end type

#define IHTMLLegendElement_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLLegendElement_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLLegendElement_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLLegendElement_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLLegendElement_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLLegendElement_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLLegendElement_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLLegendElement_put_align(This, v) (This)->lpVtbl->put_align(This, v)
#define IHTMLLegendElement_get_align(This, p) (This)->lpVtbl->get_align(This, p)

declare function IHTMLLegendElement_put_align_Proxy(byval This as IHTMLLegendElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLLegendElement_put_align_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLLegendElement_get_align_Proxy(byval This as IHTMLLegendElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLLegendElement_get_align_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLLegendElement2_INTERFACE_DEFINED__
extern IID_IHTMLLegendElement2 as const IID
type IHTMLLegendElement2 as IHTMLLegendElement2_

type IHTMLLegendElement2Vtbl
	QueryInterface as function(byval This as IHTMLLegendElement2 ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLLegendElement2 ptr) as ULONG
	Release as function(byval This as IHTMLLegendElement2 ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLLegendElement2 ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLLegendElement2 ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLLegendElement2 ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLLegendElement2 ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	get_form as function(byval This as IHTMLLegendElement2 ptr, byval p as IHTMLFormElement ptr ptr) as HRESULT
end type

type IHTMLLegendElement2_
	lpVtbl as IHTMLLegendElement2Vtbl ptr
end type

#define IHTMLLegendElement2_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLLegendElement2_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLLegendElement2_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLLegendElement2_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLLegendElement2_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLLegendElement2_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLLegendElement2_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLLegendElement2_get_form(This, p) (This)->lpVtbl->get_form(This, p)
declare function IHTMLLegendElement2_get_form_Proxy(byval This as IHTMLLegendElement2 ptr, byval p as IHTMLFormElement ptr ptr) as HRESULT
declare sub IHTMLLegendElement2_get_form_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __DispHTMLDivPosition_DISPINTERFACE_DEFINED__
extern DIID_DispHTMLDivPosition as const IID
type DispHTMLDivPosition as DispHTMLDivPosition_

type DispHTMLDivPositionVtbl
	QueryInterface as function(byval This as DispHTMLDivPosition ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as DispHTMLDivPosition ptr) as ULONG
	Release as function(byval This as DispHTMLDivPosition ptr) as ULONG
	GetTypeInfoCount as function(byval This as DispHTMLDivPosition ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as DispHTMLDivPosition ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as DispHTMLDivPosition ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as DispHTMLDivPosition ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type DispHTMLDivPosition_
	lpVtbl as DispHTMLDivPositionVtbl ptr
end type

#define DispHTMLDivPosition_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define DispHTMLDivPosition_AddRef(This) (This)->lpVtbl->AddRef(This)
#define DispHTMLDivPosition_Release(This) (This)->lpVtbl->Release(This)
#define DispHTMLDivPosition_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define DispHTMLDivPosition_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define DispHTMLDivPosition_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define DispHTMLDivPosition_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
extern CLSID_HTMLDivPosition as const CLSID
#define __DispHTMLFieldSetElement_DISPINTERFACE_DEFINED__
extern DIID_DispHTMLFieldSetElement as const IID
type DispHTMLFieldSetElement as DispHTMLFieldSetElement_

type DispHTMLFieldSetElementVtbl
	QueryInterface as function(byval This as DispHTMLFieldSetElement ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as DispHTMLFieldSetElement ptr) as ULONG
	Release as function(byval This as DispHTMLFieldSetElement ptr) as ULONG
	GetTypeInfoCount as function(byval This as DispHTMLFieldSetElement ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as DispHTMLFieldSetElement ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as DispHTMLFieldSetElement ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as DispHTMLFieldSetElement ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type DispHTMLFieldSetElement_
	lpVtbl as DispHTMLFieldSetElementVtbl ptr
end type

#define DispHTMLFieldSetElement_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define DispHTMLFieldSetElement_AddRef(This) (This)->lpVtbl->AddRef(This)
#define DispHTMLFieldSetElement_Release(This) (This)->lpVtbl->Release(This)
#define DispHTMLFieldSetElement_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define DispHTMLFieldSetElement_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define DispHTMLFieldSetElement_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define DispHTMLFieldSetElement_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
extern CLSID_HTMLFieldSetElement as const CLSID
#define __DispHTMLLegendElement_DISPINTERFACE_DEFINED__
extern DIID_DispHTMLLegendElement as const IID
type DispHTMLLegendElement as DispHTMLLegendElement_

type DispHTMLLegendElementVtbl
	QueryInterface as function(byval This as DispHTMLLegendElement ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as DispHTMLLegendElement ptr) as ULONG
	Release as function(byval This as DispHTMLLegendElement ptr) as ULONG
	GetTypeInfoCount as function(byval This as DispHTMLLegendElement ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as DispHTMLLegendElement ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as DispHTMLLegendElement ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as DispHTMLLegendElement ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type DispHTMLLegendElement_
	lpVtbl as DispHTMLLegendElementVtbl ptr
end type

#define DispHTMLLegendElement_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define DispHTMLLegendElement_AddRef(This) (This)->lpVtbl->AddRef(This)
#define DispHTMLLegendElement_Release(This) (This)->lpVtbl->Release(This)
#define DispHTMLLegendElement_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define DispHTMLLegendElement_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define DispHTMLLegendElement_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define DispHTMLLegendElement_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
extern CLSID_HTMLLegendElement as const CLSID
#define __IHTMLSpanFlow_INTERFACE_DEFINED__
extern IID_IHTMLSpanFlow as const IID
type IHTMLSpanFlow as IHTMLSpanFlow_

type IHTMLSpanFlowVtbl
	QueryInterface as function(byval This as IHTMLSpanFlow ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLSpanFlow ptr) as ULONG
	Release as function(byval This as IHTMLSpanFlow ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLSpanFlow ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLSpanFlow ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLSpanFlow ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLSpanFlow ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	put_align as function(byval This as IHTMLSpanFlow ptr, byval v as BSTR) as HRESULT
	get_align as function(byval This as IHTMLSpanFlow ptr, byval p as BSTR ptr) as HRESULT
end type

type IHTMLSpanFlow_
	lpVtbl as IHTMLSpanFlowVtbl ptr
end type

#define IHTMLSpanFlow_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLSpanFlow_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLSpanFlow_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLSpanFlow_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLSpanFlow_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLSpanFlow_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLSpanFlow_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLSpanFlow_put_align(This, v) (This)->lpVtbl->put_align(This, v)
#define IHTMLSpanFlow_get_align(This, p) (This)->lpVtbl->get_align(This, p)

declare function IHTMLSpanFlow_put_align_Proxy(byval This as IHTMLSpanFlow ptr, byval v as BSTR) as HRESULT
declare sub IHTMLSpanFlow_put_align_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLSpanFlow_get_align_Proxy(byval This as IHTMLSpanFlow ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLSpanFlow_get_align_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __DispHTMLSpanFlow_DISPINTERFACE_DEFINED__
extern DIID_DispHTMLSpanFlow as const IID
type DispHTMLSpanFlow as DispHTMLSpanFlow_

type DispHTMLSpanFlowVtbl
	QueryInterface as function(byval This as DispHTMLSpanFlow ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as DispHTMLSpanFlow ptr) as ULONG
	Release as function(byval This as DispHTMLSpanFlow ptr) as ULONG
	GetTypeInfoCount as function(byval This as DispHTMLSpanFlow ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as DispHTMLSpanFlow ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as DispHTMLSpanFlow ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as DispHTMLSpanFlow ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type DispHTMLSpanFlow_
	lpVtbl as DispHTMLSpanFlowVtbl ptr
end type

#define DispHTMLSpanFlow_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define DispHTMLSpanFlow_AddRef(This) (This)->lpVtbl->AddRef(This)
#define DispHTMLSpanFlow_Release(This) (This)->lpVtbl->Release(This)
#define DispHTMLSpanFlow_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define DispHTMLSpanFlow_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define DispHTMLSpanFlow_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define DispHTMLSpanFlow_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
extern CLSID_HTMLSpanFlow as const CLSID
#define __IHTMLFrameSetElement_INTERFACE_DEFINED__
extern IID_IHTMLFrameSetElement as const IID
type IHTMLFrameSetElement as IHTMLFrameSetElement_

type IHTMLFrameSetElementVtbl
	QueryInterface as function(byval This as IHTMLFrameSetElement ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLFrameSetElement ptr) as ULONG
	Release as function(byval This as IHTMLFrameSetElement ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLFrameSetElement ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLFrameSetElement ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLFrameSetElement ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLFrameSetElement ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	put_rows as function(byval This as IHTMLFrameSetElement ptr, byval v as BSTR) as HRESULT
	get_rows as function(byval This as IHTMLFrameSetElement ptr, byval p as BSTR ptr) as HRESULT
	put_cols as function(byval This as IHTMLFrameSetElement ptr, byval v as BSTR) as HRESULT
	get_cols as function(byval This as IHTMLFrameSetElement ptr, byval p as BSTR ptr) as HRESULT
	put_border as function(byval This as IHTMLFrameSetElement ptr, byval v as VARIANT) as HRESULT
	get_border as function(byval This as IHTMLFrameSetElement ptr, byval p as VARIANT ptr) as HRESULT
	put_borderColor as function(byval This as IHTMLFrameSetElement ptr, byval v as VARIANT) as HRESULT
	get_borderColor as function(byval This as IHTMLFrameSetElement ptr, byval p as VARIANT ptr) as HRESULT
	put_frameBorder as function(byval This as IHTMLFrameSetElement ptr, byval v as BSTR) as HRESULT
	get_frameBorder as function(byval This as IHTMLFrameSetElement ptr, byval p as BSTR ptr) as HRESULT
	put_frameSpacing as function(byval This as IHTMLFrameSetElement ptr, byval v as VARIANT) as HRESULT
	get_frameSpacing as function(byval This as IHTMLFrameSetElement ptr, byval p as VARIANT ptr) as HRESULT
	put_name as function(byval This as IHTMLFrameSetElement ptr, byval v as BSTR) as HRESULT
	get_name as function(byval This as IHTMLFrameSetElement ptr, byval p as BSTR ptr) as HRESULT
	put_onload as function(byval This as IHTMLFrameSetElement ptr, byval v as VARIANT) as HRESULT
	get_onload as function(byval This as IHTMLFrameSetElement ptr, byval p as VARIANT ptr) as HRESULT
	put_onunload as function(byval This as IHTMLFrameSetElement ptr, byval v as VARIANT) as HRESULT
	get_onunload as function(byval This as IHTMLFrameSetElement ptr, byval p as VARIANT ptr) as HRESULT
	put_onbeforeunload as function(byval This as IHTMLFrameSetElement ptr, byval v as VARIANT) as HRESULT
	get_onbeforeunload as function(byval This as IHTMLFrameSetElement ptr, byval p as VARIANT ptr) as HRESULT
end type

type IHTMLFrameSetElement_
	lpVtbl as IHTMLFrameSetElementVtbl ptr
end type

#define IHTMLFrameSetElement_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLFrameSetElement_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLFrameSetElement_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLFrameSetElement_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLFrameSetElement_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLFrameSetElement_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLFrameSetElement_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLFrameSetElement_put_rows(This, v) (This)->lpVtbl->put_rows(This, v)
#define IHTMLFrameSetElement_get_rows(This, p) (This)->lpVtbl->get_rows(This, p)
#define IHTMLFrameSetElement_put_cols(This, v) (This)->lpVtbl->put_cols(This, v)
#define IHTMLFrameSetElement_get_cols(This, p) (This)->lpVtbl->get_cols(This, p)
#define IHTMLFrameSetElement_put_border(This, v) (This)->lpVtbl->put_border(This, v)
#define IHTMLFrameSetElement_get_border(This, p) (This)->lpVtbl->get_border(This, p)
#define IHTMLFrameSetElement_put_borderColor(This, v) (This)->lpVtbl->put_borderColor(This, v)
#define IHTMLFrameSetElement_get_borderColor(This, p) (This)->lpVtbl->get_borderColor(This, p)
#define IHTMLFrameSetElement_put_frameBorder(This, v) (This)->lpVtbl->put_frameBorder(This, v)
#define IHTMLFrameSetElement_get_frameBorder(This, p) (This)->lpVtbl->get_frameBorder(This, p)
#define IHTMLFrameSetElement_put_frameSpacing(This, v) (This)->lpVtbl->put_frameSpacing(This, v)
#define IHTMLFrameSetElement_get_frameSpacing(This, p) (This)->lpVtbl->get_frameSpacing(This, p)
#define IHTMLFrameSetElement_put_name(This, v) (This)->lpVtbl->put_name(This, v)
#define IHTMLFrameSetElement_get_name(This, p) (This)->lpVtbl->get_name(This, p)
#define IHTMLFrameSetElement_put_onload(This, v) (This)->lpVtbl->put_onload(This, v)
#define IHTMLFrameSetElement_get_onload(This, p) (This)->lpVtbl->get_onload(This, p)
#define IHTMLFrameSetElement_put_onunload(This, v) (This)->lpVtbl->put_onunload(This, v)
#define IHTMLFrameSetElement_get_onunload(This, p) (This)->lpVtbl->get_onunload(This, p)
#define IHTMLFrameSetElement_put_onbeforeunload(This, v) (This)->lpVtbl->put_onbeforeunload(This, v)
#define IHTMLFrameSetElement_get_onbeforeunload(This, p) (This)->lpVtbl->get_onbeforeunload(This, p)

declare function IHTMLFrameSetElement_put_rows_Proxy(byval This as IHTMLFrameSetElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLFrameSetElement_put_rows_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLFrameSetElement_get_rows_Proxy(byval This as IHTMLFrameSetElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLFrameSetElement_get_rows_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLFrameSetElement_put_cols_Proxy(byval This as IHTMLFrameSetElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLFrameSetElement_put_cols_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLFrameSetElement_get_cols_Proxy(byval This as IHTMLFrameSetElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLFrameSetElement_get_cols_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLFrameSetElement_put_border_Proxy(byval This as IHTMLFrameSetElement ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLFrameSetElement_put_border_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLFrameSetElement_get_border_Proxy(byval This as IHTMLFrameSetElement ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLFrameSetElement_get_border_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLFrameSetElement_put_borderColor_Proxy(byval This as IHTMLFrameSetElement ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLFrameSetElement_put_borderColor_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLFrameSetElement_get_borderColor_Proxy(byval This as IHTMLFrameSetElement ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLFrameSetElement_get_borderColor_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLFrameSetElement_put_frameBorder_Proxy(byval This as IHTMLFrameSetElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLFrameSetElement_put_frameBorder_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLFrameSetElement_get_frameBorder_Proxy(byval This as IHTMLFrameSetElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLFrameSetElement_get_frameBorder_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLFrameSetElement_put_frameSpacing_Proxy(byval This as IHTMLFrameSetElement ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLFrameSetElement_put_frameSpacing_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLFrameSetElement_get_frameSpacing_Proxy(byval This as IHTMLFrameSetElement ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLFrameSetElement_get_frameSpacing_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLFrameSetElement_put_name_Proxy(byval This as IHTMLFrameSetElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLFrameSetElement_put_name_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLFrameSetElement_get_name_Proxy(byval This as IHTMLFrameSetElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLFrameSetElement_get_name_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLFrameSetElement_put_onload_Proxy(byval This as IHTMLFrameSetElement ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLFrameSetElement_put_onload_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLFrameSetElement_get_onload_Proxy(byval This as IHTMLFrameSetElement ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLFrameSetElement_get_onload_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLFrameSetElement_put_onunload_Proxy(byval This as IHTMLFrameSetElement ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLFrameSetElement_put_onunload_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLFrameSetElement_get_onunload_Proxy(byval This as IHTMLFrameSetElement ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLFrameSetElement_get_onunload_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLFrameSetElement_put_onbeforeunload_Proxy(byval This as IHTMLFrameSetElement ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLFrameSetElement_put_onbeforeunload_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLFrameSetElement_get_onbeforeunload_Proxy(byval This as IHTMLFrameSetElement ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLFrameSetElement_get_onbeforeunload_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLFrameSetElement2_INTERFACE_DEFINED__
extern IID_IHTMLFrameSetElement2 as const IID
type IHTMLFrameSetElement2 as IHTMLFrameSetElement2_

type IHTMLFrameSetElement2Vtbl
	QueryInterface as function(byval This as IHTMLFrameSetElement2 ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLFrameSetElement2 ptr) as ULONG
	Release as function(byval This as IHTMLFrameSetElement2 ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLFrameSetElement2 ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLFrameSetElement2 ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLFrameSetElement2 ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLFrameSetElement2 ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	put_onbeforeprint as function(byval This as IHTMLFrameSetElement2 ptr, byval v as VARIANT) as HRESULT
	get_onbeforeprint as function(byval This as IHTMLFrameSetElement2 ptr, byval p as VARIANT ptr) as HRESULT
	put_onafterprint as function(byval This as IHTMLFrameSetElement2 ptr, byval v as VARIANT) as HRESULT
	get_onafterprint as function(byval This as IHTMLFrameSetElement2 ptr, byval p as VARIANT ptr) as HRESULT
end type

type IHTMLFrameSetElement2_
	lpVtbl as IHTMLFrameSetElement2Vtbl ptr
end type

#define IHTMLFrameSetElement2_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLFrameSetElement2_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLFrameSetElement2_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLFrameSetElement2_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLFrameSetElement2_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLFrameSetElement2_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLFrameSetElement2_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLFrameSetElement2_put_onbeforeprint(This, v) (This)->lpVtbl->put_onbeforeprint(This, v)
#define IHTMLFrameSetElement2_get_onbeforeprint(This, p) (This)->lpVtbl->get_onbeforeprint(This, p)
#define IHTMLFrameSetElement2_put_onafterprint(This, v) (This)->lpVtbl->put_onafterprint(This, v)
#define IHTMLFrameSetElement2_get_onafterprint(This, p) (This)->lpVtbl->get_onafterprint(This, p)

declare function IHTMLFrameSetElement2_put_onbeforeprint_Proxy(byval This as IHTMLFrameSetElement2 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLFrameSetElement2_put_onbeforeprint_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLFrameSetElement2_get_onbeforeprint_Proxy(byval This as IHTMLFrameSetElement2 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLFrameSetElement2_get_onbeforeprint_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLFrameSetElement2_put_onafterprint_Proxy(byval This as IHTMLFrameSetElement2 ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLFrameSetElement2_put_onafterprint_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLFrameSetElement2_get_onafterprint_Proxy(byval This as IHTMLFrameSetElement2 ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLFrameSetElement2_get_onafterprint_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __DispHTMLFrameSetSite_DISPINTERFACE_DEFINED__
extern DIID_DispHTMLFrameSetSite as const IID
type DispHTMLFrameSetSite as DispHTMLFrameSetSite_

type DispHTMLFrameSetSiteVtbl
	QueryInterface as function(byval This as DispHTMLFrameSetSite ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as DispHTMLFrameSetSite ptr) as ULONG
	Release as function(byval This as DispHTMLFrameSetSite ptr) as ULONG
	GetTypeInfoCount as function(byval This as DispHTMLFrameSetSite ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as DispHTMLFrameSetSite ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as DispHTMLFrameSetSite ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as DispHTMLFrameSetSite ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type DispHTMLFrameSetSite_
	lpVtbl as DispHTMLFrameSetSiteVtbl ptr
end type

#define DispHTMLFrameSetSite_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define DispHTMLFrameSetSite_AddRef(This) (This)->lpVtbl->AddRef(This)
#define DispHTMLFrameSetSite_Release(This) (This)->lpVtbl->Release(This)
#define DispHTMLFrameSetSite_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define DispHTMLFrameSetSite_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define DispHTMLFrameSetSite_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define DispHTMLFrameSetSite_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
extern CLSID_HTMLFrameSetSite as const CLSID
#define __IHTMLBGsound_INTERFACE_DEFINED__
extern IID_IHTMLBGsound as const IID
type IHTMLBGsound as IHTMLBGsound_

type IHTMLBGsoundVtbl
	QueryInterface as function(byval This as IHTMLBGsound ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLBGsound ptr) as ULONG
	Release as function(byval This as IHTMLBGsound ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLBGsound ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLBGsound ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLBGsound ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLBGsound ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	put_src as function(byval This as IHTMLBGsound ptr, byval v as BSTR) as HRESULT
	get_src as function(byval This as IHTMLBGsound ptr, byval p as BSTR ptr) as HRESULT
	put_loop as function(byval This as IHTMLBGsound ptr, byval v as VARIANT) as HRESULT
	get_loop as function(byval This as IHTMLBGsound ptr, byval p as VARIANT ptr) as HRESULT
	put_volume as function(byval This as IHTMLBGsound ptr, byval v as VARIANT) as HRESULT
	get_volume as function(byval This as IHTMLBGsound ptr, byval p as VARIANT ptr) as HRESULT
	put_balance as function(byval This as IHTMLBGsound ptr, byval v as VARIANT) as HRESULT
	get_balance as function(byval This as IHTMLBGsound ptr, byval p as VARIANT ptr) as HRESULT
end type

type IHTMLBGsound_
	lpVtbl as IHTMLBGsoundVtbl ptr
end type

#define IHTMLBGsound_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLBGsound_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLBGsound_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLBGsound_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLBGsound_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLBGsound_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLBGsound_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLBGsound_put_src(This, v) (This)->lpVtbl->put_src(This, v)
#define IHTMLBGsound_get_src(This, p) (This)->lpVtbl->get_src(This, p)
#define IHTMLBGsound_put_loop(This, v) (This)->lpVtbl->put_loop(This, v)
#define IHTMLBGsound_get_loop(This, p) (This)->lpVtbl->get_loop(This, p)
#define IHTMLBGsound_put_volume(This, v) (This)->lpVtbl->put_volume(This, v)
#define IHTMLBGsound_get_volume(This, p) (This)->lpVtbl->get_volume(This, p)
#define IHTMLBGsound_put_balance(This, v) (This)->lpVtbl->put_balance(This, v)
#define IHTMLBGsound_get_balance(This, p) (This)->lpVtbl->get_balance(This, p)

declare function IHTMLBGsound_put_src_Proxy(byval This as IHTMLBGsound ptr, byval v as BSTR) as HRESULT
declare sub IHTMLBGsound_put_src_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLBGsound_get_src_Proxy(byval This as IHTMLBGsound ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLBGsound_get_src_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLBGsound_put_loop_Proxy(byval This as IHTMLBGsound ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLBGsound_put_loop_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLBGsound_get_loop_Proxy(byval This as IHTMLBGsound ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLBGsound_get_loop_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLBGsound_put_volume_Proxy(byval This as IHTMLBGsound ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLBGsound_put_volume_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLBGsound_get_volume_Proxy(byval This as IHTMLBGsound ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLBGsound_get_volume_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLBGsound_put_balance_Proxy(byval This as IHTMLBGsound ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLBGsound_put_balance_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLBGsound_get_balance_Proxy(byval This as IHTMLBGsound ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLBGsound_get_balance_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __DispHTMLBGsound_DISPINTERFACE_DEFINED__
extern DIID_DispHTMLBGsound as const IID
type DispHTMLBGsound as DispHTMLBGsound_

type DispHTMLBGsoundVtbl
	QueryInterface as function(byval This as DispHTMLBGsound ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as DispHTMLBGsound ptr) as ULONG
	Release as function(byval This as DispHTMLBGsound ptr) as ULONG
	GetTypeInfoCount as function(byval This as DispHTMLBGsound ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as DispHTMLBGsound ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as DispHTMLBGsound ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as DispHTMLBGsound ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type DispHTMLBGsound_
	lpVtbl as DispHTMLBGsoundVtbl ptr
end type

#define DispHTMLBGsound_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define DispHTMLBGsound_AddRef(This) (This)->lpVtbl->AddRef(This)
#define DispHTMLBGsound_Release(This) (This)->lpVtbl->Release(This)
#define DispHTMLBGsound_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define DispHTMLBGsound_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define DispHTMLBGsound_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define DispHTMLBGsound_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
extern CLSID_HTMLBGsound as const CLSID
#define __IHTMLFontNamesCollection_INTERFACE_DEFINED__
extern IID_IHTMLFontNamesCollection as const IID
type IHTMLFontNamesCollection as IHTMLFontNamesCollection_

type IHTMLFontNamesCollectionVtbl
	QueryInterface as function(byval This as IHTMLFontNamesCollection ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLFontNamesCollection ptr) as ULONG
	Release as function(byval This as IHTMLFontNamesCollection ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLFontNamesCollection ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLFontNamesCollection ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLFontNamesCollection ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLFontNamesCollection ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	get_length as function(byval This as IHTMLFontNamesCollection ptr, byval p as long ptr) as HRESULT
	get__newEnum as function(byval This as IHTMLFontNamesCollection ptr, byval p as IUnknown ptr ptr) as HRESULT
	item as function(byval This as IHTMLFontNamesCollection ptr, byval index as long, byval pBstr as BSTR ptr) as HRESULT
end type

type IHTMLFontNamesCollection_
	lpVtbl as IHTMLFontNamesCollectionVtbl ptr
end type

#define IHTMLFontNamesCollection_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLFontNamesCollection_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLFontNamesCollection_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLFontNamesCollection_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLFontNamesCollection_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLFontNamesCollection_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLFontNamesCollection_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLFontNamesCollection_get_length(This, p) (This)->lpVtbl->get_length(This, p)
#define IHTMLFontNamesCollection_get__newEnum(This, p) (This)->lpVtbl->get__newEnum(This, p)
#define IHTMLFontNamesCollection_item(This, index, pBstr) (This)->lpVtbl->item(This, index, pBstr)

declare function IHTMLFontNamesCollection_get_length_Proxy(byval This as IHTMLFontNamesCollection ptr, byval p as long ptr) as HRESULT
declare sub IHTMLFontNamesCollection_get_length_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLFontNamesCollection_get__newEnum_Proxy(byval This as IHTMLFontNamesCollection ptr, byval p as IUnknown ptr ptr) as HRESULT
declare sub IHTMLFontNamesCollection_get__newEnum_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLFontNamesCollection_item_Proxy(byval This as IHTMLFontNamesCollection ptr, byval index as long, byval pBstr as BSTR ptr) as HRESULT
declare sub IHTMLFontNamesCollection_item_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLFontSizesCollection_INTERFACE_DEFINED__
extern IID_IHTMLFontSizesCollection as const IID
type IHTMLFontSizesCollection as IHTMLFontSizesCollection_

type IHTMLFontSizesCollectionVtbl
	QueryInterface as function(byval This as IHTMLFontSizesCollection ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLFontSizesCollection ptr) as ULONG
	Release as function(byval This as IHTMLFontSizesCollection ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLFontSizesCollection ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLFontSizesCollection ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLFontSizesCollection ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLFontSizesCollection ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	get_length as function(byval This as IHTMLFontSizesCollection ptr, byval p as long ptr) as HRESULT
	get__newEnum as function(byval This as IHTMLFontSizesCollection ptr, byval p as IUnknown ptr ptr) as HRESULT
	get_forFont as function(byval This as IHTMLFontSizesCollection ptr, byval p as BSTR ptr) as HRESULT
	item as function(byval This as IHTMLFontSizesCollection ptr, byval index as long, byval plSize as long ptr) as HRESULT
end type

type IHTMLFontSizesCollection_
	lpVtbl as IHTMLFontSizesCollectionVtbl ptr
end type

#define IHTMLFontSizesCollection_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLFontSizesCollection_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLFontSizesCollection_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLFontSizesCollection_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLFontSizesCollection_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLFontSizesCollection_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLFontSizesCollection_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLFontSizesCollection_get_length(This, p) (This)->lpVtbl->get_length(This, p)
#define IHTMLFontSizesCollection_get__newEnum(This, p) (This)->lpVtbl->get__newEnum(This, p)
#define IHTMLFontSizesCollection_get_forFont(This, p) (This)->lpVtbl->get_forFont(This, p)
#define IHTMLFontSizesCollection_item(This, index, plSize) (This)->lpVtbl->item(This, index, plSize)

declare function IHTMLFontSizesCollection_get_length_Proxy(byval This as IHTMLFontSizesCollection ptr, byval p as long ptr) as HRESULT
declare sub IHTMLFontSizesCollection_get_length_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLFontSizesCollection_get__newEnum_Proxy(byval This as IHTMLFontSizesCollection ptr, byval p as IUnknown ptr ptr) as HRESULT
declare sub IHTMLFontSizesCollection_get__newEnum_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLFontSizesCollection_get_forFont_Proxy(byval This as IHTMLFontSizesCollection ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLFontSizesCollection_get_forFont_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLFontSizesCollection_item_Proxy(byval This as IHTMLFontSizesCollection ptr, byval index as long, byval plSize as long ptr) as HRESULT
declare sub IHTMLFontSizesCollection_item_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLOptionsHolder_INTERFACE_DEFINED__
extern IID_IHTMLOptionsHolder as const IID
type IHTMLOptionsHolder as IHTMLOptionsHolder_

type IHTMLOptionsHolderVtbl
	QueryInterface as function(byval This as IHTMLOptionsHolder ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLOptionsHolder ptr) as ULONG
	Release as function(byval This as IHTMLOptionsHolder ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLOptionsHolder ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLOptionsHolder ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLOptionsHolder ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLOptionsHolder ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	get_document as function(byval This as IHTMLOptionsHolder ptr, byval p as IHTMLDocument2 ptr ptr) as HRESULT
	get_fonts as function(byval This as IHTMLOptionsHolder ptr, byval p as IHTMLFontNamesCollection ptr ptr) as HRESULT
	put_execArg as function(byval This as IHTMLOptionsHolder ptr, byval v as VARIANT) as HRESULT
	get_execArg as function(byval This as IHTMLOptionsHolder ptr, byval p as VARIANT ptr) as HRESULT
	put_errorLine as function(byval This as IHTMLOptionsHolder ptr, byval v as long) as HRESULT
	get_errorLine as function(byval This as IHTMLOptionsHolder ptr, byval p as long ptr) as HRESULT
	put_errorCharacter as function(byval This as IHTMLOptionsHolder ptr, byval v as long) as HRESULT
	get_errorCharacter as function(byval This as IHTMLOptionsHolder ptr, byval p as long ptr) as HRESULT
	put_errorCode as function(byval This as IHTMLOptionsHolder ptr, byval v as long) as HRESULT
	get_errorCode as function(byval This as IHTMLOptionsHolder ptr, byval p as long ptr) as HRESULT
	put_errorMessage as function(byval This as IHTMLOptionsHolder ptr, byval v as BSTR) as HRESULT
	get_errorMessage as function(byval This as IHTMLOptionsHolder ptr, byval p as BSTR ptr) as HRESULT
	put_errorDebug as function(byval This as IHTMLOptionsHolder ptr, byval v as VARIANT_BOOL) as HRESULT
	get_errorDebug as function(byval This as IHTMLOptionsHolder ptr, byval p as VARIANT_BOOL ptr) as HRESULT
	get_unsecuredWindowOfDocument as function(byval This as IHTMLOptionsHolder ptr, byval p as IHTMLWindow2 ptr ptr) as HRESULT
	put_findText as function(byval This as IHTMLOptionsHolder ptr, byval v as BSTR) as HRESULT
	get_findText as function(byval This as IHTMLOptionsHolder ptr, byval p as BSTR ptr) as HRESULT
	put_anythingAfterFrameset as function(byval This as IHTMLOptionsHolder ptr, byval v as VARIANT_BOOL) as HRESULT
	get_anythingAfterFrameset as function(byval This as IHTMLOptionsHolder ptr, byval p as VARIANT_BOOL ptr) as HRESULT
	sizes as function(byval This as IHTMLOptionsHolder ptr, byval fontName as BSTR, byval pSizesCollection as IHTMLFontSizesCollection ptr ptr) as HRESULT
	openfiledlg as function(byval This as IHTMLOptionsHolder ptr, byval initFile as VARIANT, byval initDir as VARIANT, byval filter as VARIANT, byval title as VARIANT, byval pathName as BSTR ptr) as HRESULT
	savefiledlg as function(byval This as IHTMLOptionsHolder ptr, byval initFile as VARIANT, byval initDir as VARIANT, byval filter as VARIANT, byval title as VARIANT, byval pathName as BSTR ptr) as HRESULT
	choosecolordlg as function(byval This as IHTMLOptionsHolder ptr, byval initColor as VARIANT, byval rgbColor as long ptr) as HRESULT
	showSecurityInfo as function(byval This as IHTMLOptionsHolder ptr) as HRESULT
	isApartmentModel as function(byval This as IHTMLOptionsHolder ptr, byval object as IHTMLObjectElement ptr, byval fApartment as VARIANT_BOOL ptr) as HRESULT
	getCharset as function(byval This as IHTMLOptionsHolder ptr, byval fontName as BSTR, byval charset as long ptr) as HRESULT
	get_secureConnectionInfo as function(byval This as IHTMLOptionsHolder ptr, byval p as BSTR ptr) as HRESULT
end type

type IHTMLOptionsHolder_
	lpVtbl as IHTMLOptionsHolderVtbl ptr
end type

#define IHTMLOptionsHolder_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLOptionsHolder_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLOptionsHolder_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLOptionsHolder_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLOptionsHolder_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLOptionsHolder_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLOptionsHolder_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLOptionsHolder_get_document(This, p) (This)->lpVtbl->get_document(This, p)
#define IHTMLOptionsHolder_get_fonts(This, p) (This)->lpVtbl->get_fonts(This, p)
#define IHTMLOptionsHolder_put_execArg(This, v) (This)->lpVtbl->put_execArg(This, v)
#define IHTMLOptionsHolder_get_execArg(This, p) (This)->lpVtbl->get_execArg(This, p)
#define IHTMLOptionsHolder_put_errorLine(This, v) (This)->lpVtbl->put_errorLine(This, v)
#define IHTMLOptionsHolder_get_errorLine(This, p) (This)->lpVtbl->get_errorLine(This, p)
#define IHTMLOptionsHolder_put_errorCharacter(This, v) (This)->lpVtbl->put_errorCharacter(This, v)
#define IHTMLOptionsHolder_get_errorCharacter(This, p) (This)->lpVtbl->get_errorCharacter(This, p)
#define IHTMLOptionsHolder_put_errorCode(This, v) (This)->lpVtbl->put_errorCode(This, v)
#define IHTMLOptionsHolder_get_errorCode(This, p) (This)->lpVtbl->get_errorCode(This, p)
#define IHTMLOptionsHolder_put_errorMessage(This, v) (This)->lpVtbl->put_errorMessage(This, v)
#define IHTMLOptionsHolder_get_errorMessage(This, p) (This)->lpVtbl->get_errorMessage(This, p)
#define IHTMLOptionsHolder_put_errorDebug(This, v) (This)->lpVtbl->put_errorDebug(This, v)
#define IHTMLOptionsHolder_get_errorDebug(This, p) (This)->lpVtbl->get_errorDebug(This, p)
#define IHTMLOptionsHolder_get_unsecuredWindowOfDocument(This, p) (This)->lpVtbl->get_unsecuredWindowOfDocument(This, p)
#define IHTMLOptionsHolder_put_findText(This, v) (This)->lpVtbl->put_findText(This, v)
#define IHTMLOptionsHolder_get_findText(This, p) (This)->lpVtbl->get_findText(This, p)
#define IHTMLOptionsHolder_put_anythingAfterFrameset(This, v) (This)->lpVtbl->put_anythingAfterFrameset(This, v)
#define IHTMLOptionsHolder_get_anythingAfterFrameset(This, p) (This)->lpVtbl->get_anythingAfterFrameset(This, p)
#define IHTMLOptionsHolder_sizes(This, fontName, pSizesCollection) (This)->lpVtbl->sizes(This, fontName, pSizesCollection)
#define IHTMLOptionsHolder_openfiledlg(This, initFile, initDir, filter, title, pathName) (This)->lpVtbl->openfiledlg(This, initFile, initDir, filter, title, pathName)
#define IHTMLOptionsHolder_savefiledlg(This, initFile, initDir, filter, title, pathName) (This)->lpVtbl->savefiledlg(This, initFile, initDir, filter, title, pathName)
#define IHTMLOptionsHolder_choosecolordlg(This, initColor, rgbColor) (This)->lpVtbl->choosecolordlg(This, initColor, rgbColor)
#define IHTMLOptionsHolder_showSecurityInfo(This) (This)->lpVtbl->showSecurityInfo(This)
#define IHTMLOptionsHolder_isApartmentModel(This, object, fApartment) (This)->lpVtbl->isApartmentModel(This, object, fApartment)
#define IHTMLOptionsHolder_getCharset(This, fontName, charset) (This)->lpVtbl->getCharset(This, fontName, charset)
#define IHTMLOptionsHolder_get_secureConnectionInfo(This, p) (This)->lpVtbl->get_secureConnectionInfo(This, p)

declare function IHTMLOptionsHolder_get_document_Proxy(byval This as IHTMLOptionsHolder ptr, byval p as IHTMLDocument2 ptr ptr) as HRESULT
declare sub IHTMLOptionsHolder_get_document_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLOptionsHolder_get_fonts_Proxy(byval This as IHTMLOptionsHolder ptr, byval p as IHTMLFontNamesCollection ptr ptr) as HRESULT
declare sub IHTMLOptionsHolder_get_fonts_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLOptionsHolder_put_execArg_Proxy(byval This as IHTMLOptionsHolder ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLOptionsHolder_put_execArg_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLOptionsHolder_get_execArg_Proxy(byval This as IHTMLOptionsHolder ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLOptionsHolder_get_execArg_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLOptionsHolder_put_errorLine_Proxy(byval This as IHTMLOptionsHolder ptr, byval v as long) as HRESULT
declare sub IHTMLOptionsHolder_put_errorLine_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLOptionsHolder_get_errorLine_Proxy(byval This as IHTMLOptionsHolder ptr, byval p as long ptr) as HRESULT
declare sub IHTMLOptionsHolder_get_errorLine_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLOptionsHolder_put_errorCharacter_Proxy(byval This as IHTMLOptionsHolder ptr, byval v as long) as HRESULT
declare sub IHTMLOptionsHolder_put_errorCharacter_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLOptionsHolder_get_errorCharacter_Proxy(byval This as IHTMLOptionsHolder ptr, byval p as long ptr) as HRESULT
declare sub IHTMLOptionsHolder_get_errorCharacter_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLOptionsHolder_put_errorCode_Proxy(byval This as IHTMLOptionsHolder ptr, byval v as long) as HRESULT
declare sub IHTMLOptionsHolder_put_errorCode_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLOptionsHolder_get_errorCode_Proxy(byval This as IHTMLOptionsHolder ptr, byval p as long ptr) as HRESULT
declare sub IHTMLOptionsHolder_get_errorCode_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLOptionsHolder_put_errorMessage_Proxy(byval This as IHTMLOptionsHolder ptr, byval v as BSTR) as HRESULT
declare sub IHTMLOptionsHolder_put_errorMessage_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLOptionsHolder_get_errorMessage_Proxy(byval This as IHTMLOptionsHolder ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLOptionsHolder_get_errorMessage_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLOptionsHolder_put_errorDebug_Proxy(byval This as IHTMLOptionsHolder ptr, byval v as VARIANT_BOOL) as HRESULT
declare sub IHTMLOptionsHolder_put_errorDebug_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLOptionsHolder_get_errorDebug_Proxy(byval This as IHTMLOptionsHolder ptr, byval p as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLOptionsHolder_get_errorDebug_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLOptionsHolder_get_unsecuredWindowOfDocument_Proxy(byval This as IHTMLOptionsHolder ptr, byval p as IHTMLWindow2 ptr ptr) as HRESULT
declare sub IHTMLOptionsHolder_get_unsecuredWindowOfDocument_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLOptionsHolder_put_findText_Proxy(byval This as IHTMLOptionsHolder ptr, byval v as BSTR) as HRESULT
declare sub IHTMLOptionsHolder_put_findText_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLOptionsHolder_get_findText_Proxy(byval This as IHTMLOptionsHolder ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLOptionsHolder_get_findText_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLOptionsHolder_put_anythingAfterFrameset_Proxy(byval This as IHTMLOptionsHolder ptr, byval v as VARIANT_BOOL) as HRESULT
declare sub IHTMLOptionsHolder_put_anythingAfterFrameset_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLOptionsHolder_get_anythingAfterFrameset_Proxy(byval This as IHTMLOptionsHolder ptr, byval p as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLOptionsHolder_get_anythingAfterFrameset_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLOptionsHolder_sizes_Proxy(byval This as IHTMLOptionsHolder ptr, byval fontName as BSTR, byval pSizesCollection as IHTMLFontSizesCollection ptr ptr) as HRESULT
declare sub IHTMLOptionsHolder_sizes_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLOptionsHolder_openfiledlg_Proxy(byval This as IHTMLOptionsHolder ptr, byval initFile as VARIANT, byval initDir as VARIANT, byval filter as VARIANT, byval title as VARIANT, byval pathName as BSTR ptr) as HRESULT
declare sub IHTMLOptionsHolder_openfiledlg_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLOptionsHolder_savefiledlg_Proxy(byval This as IHTMLOptionsHolder ptr, byval initFile as VARIANT, byval initDir as VARIANT, byval filter as VARIANT, byval title as VARIANT, byval pathName as BSTR ptr) as HRESULT
declare sub IHTMLOptionsHolder_savefiledlg_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLOptionsHolder_choosecolordlg_Proxy(byval This as IHTMLOptionsHolder ptr, byval initColor as VARIANT, byval rgbColor as long ptr) as HRESULT
declare sub IHTMLOptionsHolder_choosecolordlg_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLOptionsHolder_showSecurityInfo_Proxy(byval This as IHTMLOptionsHolder ptr) as HRESULT
declare sub IHTMLOptionsHolder_showSecurityInfo_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLOptionsHolder_isApartmentModel_Proxy(byval This as IHTMLOptionsHolder ptr, byval object as IHTMLObjectElement ptr, byval fApartment as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLOptionsHolder_isApartmentModel_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLOptionsHolder_getCharset_Proxy(byval This as IHTMLOptionsHolder ptr, byval fontName as BSTR, byval charset as long ptr) as HRESULT
declare sub IHTMLOptionsHolder_getCharset_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLOptionsHolder_get_secureConnectionInfo_Proxy(byval This as IHTMLOptionsHolder ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLOptionsHolder_get_secureConnectionInfo_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __HTMLStyleElementEvents2_DISPINTERFACE_DEFINED__
extern DIID_HTMLStyleElementEvents2 as const IID
type HTMLStyleElementEvents2 as HTMLStyleElementEvents2_

type HTMLStyleElementEvents2Vtbl
	QueryInterface as function(byval This as HTMLStyleElementEvents2 ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as HTMLStyleElementEvents2 ptr) as ULONG
	Release as function(byval This as HTMLStyleElementEvents2 ptr) as ULONG
	GetTypeInfoCount as function(byval This as HTMLStyleElementEvents2 ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as HTMLStyleElementEvents2 ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as HTMLStyleElementEvents2 ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as HTMLStyleElementEvents2 ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type HTMLStyleElementEvents2_
	lpVtbl as HTMLStyleElementEvents2Vtbl ptr
end type

#define HTMLStyleElementEvents2_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define HTMLStyleElementEvents2_AddRef(This) (This)->lpVtbl->AddRef(This)
#define HTMLStyleElementEvents2_Release(This) (This)->lpVtbl->Release(This)
#define HTMLStyleElementEvents2_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define HTMLStyleElementEvents2_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define HTMLStyleElementEvents2_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define HTMLStyleElementEvents2_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define __HTMLStyleElementEvents_DISPINTERFACE_DEFINED__
extern DIID_HTMLStyleElementEvents as const IID
type HTMLStyleElementEvents as HTMLStyleElementEvents_

type HTMLStyleElementEventsVtbl
	QueryInterface as function(byval This as HTMLStyleElementEvents ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as HTMLStyleElementEvents ptr) as ULONG
	Release as function(byval This as HTMLStyleElementEvents ptr) as ULONG
	GetTypeInfoCount as function(byval This as HTMLStyleElementEvents ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as HTMLStyleElementEvents ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as HTMLStyleElementEvents ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as HTMLStyleElementEvents ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type HTMLStyleElementEvents_
	lpVtbl as HTMLStyleElementEventsVtbl ptr
end type

#define HTMLStyleElementEvents_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define HTMLStyleElementEvents_AddRef(This) (This)->lpVtbl->AddRef(This)
#define HTMLStyleElementEvents_Release(This) (This)->lpVtbl->Release(This)
#define HTMLStyleElementEvents_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define HTMLStyleElementEvents_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define HTMLStyleElementEvents_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define HTMLStyleElementEvents_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define __IHTMLStyleElement_INTERFACE_DEFINED__
extern IID_IHTMLStyleElement as const IID
type IHTMLStyleElement as IHTMLStyleElement_

type IHTMLStyleElementVtbl
	QueryInterface as function(byval This as IHTMLStyleElement ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLStyleElement ptr) as ULONG
	Release as function(byval This as IHTMLStyleElement ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLStyleElement ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLStyleElement ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLStyleElement ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLStyleElement ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	put_type as function(byval This as IHTMLStyleElement ptr, byval v as BSTR) as HRESULT
	get_type as function(byval This as IHTMLStyleElement ptr, byval p as BSTR ptr) as HRESULT
	get_readyState as function(byval This as IHTMLStyleElement ptr, byval p as BSTR ptr) as HRESULT
	put_onreadystatechange as function(byval This as IHTMLStyleElement ptr, byval v as VARIANT) as HRESULT
	get_onreadystatechange as function(byval This as IHTMLStyleElement ptr, byval p as VARIANT ptr) as HRESULT
	put_onload as function(byval This as IHTMLStyleElement ptr, byval v as VARIANT) as HRESULT
	get_onload as function(byval This as IHTMLStyleElement ptr, byval p as VARIANT ptr) as HRESULT
	put_onerror as function(byval This as IHTMLStyleElement ptr, byval v as VARIANT) as HRESULT
	get_onerror as function(byval This as IHTMLStyleElement ptr, byval p as VARIANT ptr) as HRESULT
	get_styleSheet as function(byval This as IHTMLStyleElement ptr, byval p as IHTMLStyleSheet ptr ptr) as HRESULT
	put_disabled as function(byval This as IHTMLStyleElement ptr, byval v as VARIANT_BOOL) as HRESULT
	get_disabled as function(byval This as IHTMLStyleElement ptr, byval p as VARIANT_BOOL ptr) as HRESULT
	put_media as function(byval This as IHTMLStyleElement ptr, byval v as BSTR) as HRESULT
	get_media as function(byval This as IHTMLStyleElement ptr, byval p as BSTR ptr) as HRESULT
end type

type IHTMLStyleElement_
	lpVtbl as IHTMLStyleElementVtbl ptr
end type

#define IHTMLStyleElement_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLStyleElement_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLStyleElement_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLStyleElement_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLStyleElement_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLStyleElement_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLStyleElement_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLStyleElement_put_type(This, v) (This)->lpVtbl->put_type(This, v)
#define IHTMLStyleElement_get_type(This, p) (This)->lpVtbl->get_type(This, p)
#define IHTMLStyleElement_get_readyState(This, p) (This)->lpVtbl->get_readyState(This, p)
#define IHTMLStyleElement_put_onreadystatechange(This, v) (This)->lpVtbl->put_onreadystatechange(This, v)
#define IHTMLStyleElement_get_onreadystatechange(This, p) (This)->lpVtbl->get_onreadystatechange(This, p)
#define IHTMLStyleElement_put_onload(This, v) (This)->lpVtbl->put_onload(This, v)
#define IHTMLStyleElement_get_onload(This, p) (This)->lpVtbl->get_onload(This, p)
#define IHTMLStyleElement_put_onerror(This, v) (This)->lpVtbl->put_onerror(This, v)
#define IHTMLStyleElement_get_onerror(This, p) (This)->lpVtbl->get_onerror(This, p)
#define IHTMLStyleElement_get_styleSheet(This, p) (This)->lpVtbl->get_styleSheet(This, p)
#define IHTMLStyleElement_put_disabled(This, v) (This)->lpVtbl->put_disabled(This, v)
#define IHTMLStyleElement_get_disabled(This, p) (This)->lpVtbl->get_disabled(This, p)
#define IHTMLStyleElement_put_media(This, v) (This)->lpVtbl->put_media(This, v)
#define IHTMLStyleElement_get_media(This, p) (This)->lpVtbl->get_media(This, p)

declare function IHTMLStyleElement_put_type_Proxy(byval This as IHTMLStyleElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLStyleElement_put_type_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyleElement_get_type_Proxy(byval This as IHTMLStyleElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLStyleElement_get_type_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyleElement_get_readyState_Proxy(byval This as IHTMLStyleElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLStyleElement_get_readyState_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyleElement_put_onreadystatechange_Proxy(byval This as IHTMLStyleElement ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLStyleElement_put_onreadystatechange_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyleElement_get_onreadystatechange_Proxy(byval This as IHTMLStyleElement ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLStyleElement_get_onreadystatechange_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyleElement_put_onload_Proxy(byval This as IHTMLStyleElement ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLStyleElement_put_onload_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyleElement_get_onload_Proxy(byval This as IHTMLStyleElement ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLStyleElement_get_onload_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyleElement_put_onerror_Proxy(byval This as IHTMLStyleElement ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLStyleElement_put_onerror_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyleElement_get_onerror_Proxy(byval This as IHTMLStyleElement ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLStyleElement_get_onerror_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyleElement_get_styleSheet_Proxy(byval This as IHTMLStyleElement ptr, byval p as IHTMLStyleSheet ptr ptr) as HRESULT
declare sub IHTMLStyleElement_get_styleSheet_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyleElement_put_disabled_Proxy(byval This as IHTMLStyleElement ptr, byval v as VARIANT_BOOL) as HRESULT
declare sub IHTMLStyleElement_put_disabled_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyleElement_get_disabled_Proxy(byval This as IHTMLStyleElement ptr, byval p as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLStyleElement_get_disabled_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyleElement_put_media_Proxy(byval This as IHTMLStyleElement ptr, byval v as BSTR) as HRESULT
declare sub IHTMLStyleElement_put_media_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyleElement_get_media_Proxy(byval This as IHTMLStyleElement ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLStyleElement_get_media_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __DispHTMLStyleElement_DISPINTERFACE_DEFINED__
extern DIID_DispHTMLStyleElement as const IID
type DispHTMLStyleElement as DispHTMLStyleElement_

type DispHTMLStyleElementVtbl
	QueryInterface as function(byval This as DispHTMLStyleElement ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as DispHTMLStyleElement ptr) as ULONG
	Release as function(byval This as DispHTMLStyleElement ptr) as ULONG
	GetTypeInfoCount as function(byval This as DispHTMLStyleElement ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as DispHTMLStyleElement ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as DispHTMLStyleElement ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as DispHTMLStyleElement ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type DispHTMLStyleElement_
	lpVtbl as DispHTMLStyleElementVtbl ptr
end type

#define DispHTMLStyleElement_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define DispHTMLStyleElement_AddRef(This) (This)->lpVtbl->AddRef(This)
#define DispHTMLStyleElement_Release(This) (This)->lpVtbl->Release(This)
#define DispHTMLStyleElement_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define DispHTMLStyleElement_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define DispHTMLStyleElement_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define DispHTMLStyleElement_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
extern CLSID_HTMLStyleElement as const CLSID
#define __IHTMLStyleFontFace_INTERFACE_DEFINED__
extern IID_IHTMLStyleFontFace as const IID
type IHTMLStyleFontFace as IHTMLStyleFontFace_

type IHTMLStyleFontFaceVtbl
	QueryInterface as function(byval This as IHTMLStyleFontFace ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLStyleFontFace ptr) as ULONG
	Release as function(byval This as IHTMLStyleFontFace ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLStyleFontFace ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLStyleFontFace ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLStyleFontFace ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLStyleFontFace ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	put_fontsrc as function(byval This as IHTMLStyleFontFace ptr, byval v as BSTR) as HRESULT
	get_fontsrc as function(byval This as IHTMLStyleFontFace ptr, byval p as BSTR ptr) as HRESULT
end type

type IHTMLStyleFontFace_
	lpVtbl as IHTMLStyleFontFaceVtbl ptr
end type

#define IHTMLStyleFontFace_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLStyleFontFace_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLStyleFontFace_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLStyleFontFace_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLStyleFontFace_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLStyleFontFace_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLStyleFontFace_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLStyleFontFace_put_fontsrc(This, v) (This)->lpVtbl->put_fontsrc(This, v)
#define IHTMLStyleFontFace_get_fontsrc(This, p) (This)->lpVtbl->get_fontsrc(This, p)

declare function IHTMLStyleFontFace_put_fontsrc_Proxy(byval This as IHTMLStyleFontFace ptr, byval v as BSTR) as HRESULT
declare sub IHTMLStyleFontFace_put_fontsrc_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLStyleFontFace_get_fontsrc_Proxy(byval This as IHTMLStyleFontFace ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLStyleFontFace_get_fontsrc_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
extern CLSID_HTMLStyleFontFace as const CLSID
#define __ICSSFilterSite_INTERFACE_DEFINED__
extern IID_ICSSFilterSite as const IID
type ICSSFilterSite as ICSSFilterSite_

type ICSSFilterSiteVtbl
	QueryInterface as function(byval This as ICSSFilterSite ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as ICSSFilterSite ptr) as ULONG
	Release as function(byval This as ICSSFilterSite ptr) as ULONG
	GetElement as function(byval This as ICSSFilterSite ptr, byval Element as IHTMLElement ptr ptr) as HRESULT
	FireOnFilterChangeEvent as function(byval This as ICSSFilterSite ptr) as HRESULT
end type

type ICSSFilterSite_
	lpVtbl as ICSSFilterSiteVtbl ptr
end type

#define ICSSFilterSite_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define ICSSFilterSite_AddRef(This) (This)->lpVtbl->AddRef(This)
#define ICSSFilterSite_Release(This) (This)->lpVtbl->Release(This)
#define ICSSFilterSite_GetElement(This, Element) (This)->lpVtbl->GetElement(This, Element)
#define ICSSFilterSite_FireOnFilterChangeEvent(This) (This)->lpVtbl->FireOnFilterChangeEvent(This)

declare function ICSSFilterSite_GetElement_Proxy(byval This as ICSSFilterSite ptr, byval Element as IHTMLElement ptr ptr) as HRESULT
declare sub ICSSFilterSite_GetElement_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function ICSSFilterSite_FireOnFilterChangeEvent_Proxy(byval This as ICSSFilterSite ptr) as HRESULT
declare sub ICSSFilterSite_FireOnFilterChangeEvent_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IMarkupPointer_INTERFACE_DEFINED__
extern IID_IMarkupPointer as const IID
type IMarkupPointer as IMarkupPointer_
type IMarkupContainer as IMarkupContainer_

type IMarkupPointerVtbl
	QueryInterface as function(byval This as IMarkupPointer ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IMarkupPointer ptr) as ULONG
	Release as function(byval This as IMarkupPointer ptr) as ULONG
	OwningDoc as function(byval This as IMarkupPointer ptr, byval ppDoc as IHTMLDocument2 ptr ptr) as HRESULT
	Gravity as function(byval This as IMarkupPointer ptr, byval pGravity as POINTER_GRAVITY ptr) as HRESULT
	SetGravity as function(byval This as IMarkupPointer ptr, byval Gravity as POINTER_GRAVITY) as HRESULT
	Cling as function(byval This as IMarkupPointer ptr, byval pfCling as WINBOOL ptr) as HRESULT
	SetCling as function(byval This as IMarkupPointer ptr, byval fCLing as WINBOOL) as HRESULT
	Unposition as function(byval This as IMarkupPointer ptr) as HRESULT
	IsPositioned as function(byval This as IMarkupPointer ptr, byval pfPositioned as WINBOOL ptr) as HRESULT
	GetContainer as function(byval This as IMarkupPointer ptr, byval ppContainer as IMarkupContainer ptr ptr) as HRESULT
	MoveAdjacentToElement as function(byval This as IMarkupPointer ptr, byval pElement as IHTMLElement ptr, byval eAdj as ELEMENT_ADJACENCY) as HRESULT
	MoveToPointer as function(byval This as IMarkupPointer ptr, byval pPointer as IMarkupPointer ptr) as HRESULT
	MoveToContainer as function(byval This as IMarkupPointer ptr, byval pContainer as IMarkupContainer ptr, byval fAtStart as WINBOOL) as HRESULT
	Left as function(byval This as IMarkupPointer ptr, byval fMove as WINBOOL, byval pContext as MARKUP_CONTEXT_TYPE ptr, byval ppElement as IHTMLElement ptr ptr, byval pcch as long ptr, byval pchText as OLECHAR ptr) as HRESULT
	Right as function(byval This as IMarkupPointer ptr, byval fMove as WINBOOL, byval pContext as MARKUP_CONTEXT_TYPE ptr, byval ppElement as IHTMLElement ptr ptr, byval pcch as long ptr, byval pchText as OLECHAR ptr) as HRESULT
	CurrentScope as function(byval This as IMarkupPointer ptr, byval ppElemCurrent as IHTMLElement ptr ptr) as HRESULT
	IsLeftOf as function(byval This as IMarkupPointer ptr, byval pPointerThat as IMarkupPointer ptr, byval pfResult as WINBOOL ptr) as HRESULT
	IsLeftOfOrEqualTo as function(byval This as IMarkupPointer ptr, byval pPointerThat as IMarkupPointer ptr, byval pfResult as WINBOOL ptr) as HRESULT
	IsRightOf as function(byval This as IMarkupPointer ptr, byval pPointerThat as IMarkupPointer ptr, byval pfResult as WINBOOL ptr) as HRESULT
	IsRightOfOrEqualTo as function(byval This as IMarkupPointer ptr, byval pPointerThat as IMarkupPointer ptr, byval pfResult as WINBOOL ptr) as HRESULT
	IsEqualTo as function(byval This as IMarkupPointer ptr, byval pPointerThat as IMarkupPointer ptr, byval pfAreEqual as WINBOOL ptr) as HRESULT
	MoveUnit as function(byval This as IMarkupPointer ptr, byval muAction as MOVEUNIT_ACTION) as HRESULT
	FindText as function(byval This as IMarkupPointer ptr, byval pchFindText as OLECHAR ptr, byval dwFlags as DWORD, byval pIEndMatch as IMarkupPointer ptr, byval pIEndSearch as IMarkupPointer ptr) as HRESULT
end type

type IMarkupPointer_
	lpVtbl as IMarkupPointerVtbl ptr
end type

#define IMarkupPointer_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IMarkupPointer_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IMarkupPointer_Release(This) (This)->lpVtbl->Release(This)
#define IMarkupPointer_OwningDoc(This, ppDoc) (This)->lpVtbl->OwningDoc(This, ppDoc)
#define IMarkupPointer_Gravity(This, pGravity) (This)->lpVtbl->Gravity(This, pGravity)
#define IMarkupPointer_SetGravity(This, Gravity) (This)->lpVtbl->SetGravity(This, Gravity)
#define IMarkupPointer_Cling(This, pfCling) (This)->lpVtbl->Cling(This, pfCling)
#define IMarkupPointer_SetCling(This, fCLing) (This)->lpVtbl->SetCling(This, fCLing)
#define IMarkupPointer_Unposition(This) (This)->lpVtbl->Unposition(This)
#define IMarkupPointer_IsPositioned(This, pfPositioned) (This)->lpVtbl->IsPositioned(This, pfPositioned)
#define IMarkupPointer_GetContainer(This, ppContainer) (This)->lpVtbl->GetContainer(This, ppContainer)
#define IMarkupPointer_MoveAdjacentToElement(This, pElement, eAdj) (This)->lpVtbl->MoveAdjacentToElement(This, pElement, eAdj)
#define IMarkupPointer_MoveToPointer(This, pPointer) (This)->lpVtbl->MoveToPointer(This, pPointer)
#define IMarkupPointer_MoveToContainer(This, pContainer, fAtStart) (This)->lpVtbl->MoveToContainer(This, pContainer, fAtStart)
#define IMarkupPointer_Left(This, fMove, pContext, ppElement, pcch, pchText) (This)->lpVtbl->Left(This, fMove, pContext, ppElement, pcch, pchText)
#define IMarkupPointer_Right(This, fMove, pContext, ppElement, pcch, pchText) (This)->lpVtbl->Right(This, fMove, pContext, ppElement, pcch, pchText)
#define IMarkupPointer_CurrentScope(This, ppElemCurrent) (This)->lpVtbl->CurrentScope(This, ppElemCurrent)
#define IMarkupPointer_IsLeftOf(This, pPointerThat, pfResult) (This)->lpVtbl->IsLeftOf(This, pPointerThat, pfResult)
#define IMarkupPointer_IsLeftOfOrEqualTo(This, pPointerThat, pfResult) (This)->lpVtbl->IsLeftOfOrEqualTo(This, pPointerThat, pfResult)
#define IMarkupPointer_IsRightOf(This, pPointerThat, pfResult) (This)->lpVtbl->IsRightOf(This, pPointerThat, pfResult)
#define IMarkupPointer_IsRightOfOrEqualTo(This, pPointerThat, pfResult) (This)->lpVtbl->IsRightOfOrEqualTo(This, pPointerThat, pfResult)
#define IMarkupPointer_IsEqualTo(This, pPointerThat, pfAreEqual) (This)->lpVtbl->IsEqualTo(This, pPointerThat, pfAreEqual)
#define IMarkupPointer_MoveUnit(This, muAction) (This)->lpVtbl->MoveUnit(This, muAction)
#define IMarkupPointer_FindText(This, pchFindText, dwFlags, pIEndMatch, pIEndSearch) (This)->lpVtbl->FindText(This, pchFindText, dwFlags, pIEndMatch, pIEndSearch)

declare function IMarkupPointer_OwningDoc_Proxy(byval This as IMarkupPointer ptr, byval ppDoc as IHTMLDocument2 ptr ptr) as HRESULT
declare sub IMarkupPointer_OwningDoc_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IMarkupPointer_Gravity_Proxy(byval This as IMarkupPointer ptr, byval pGravity as POINTER_GRAVITY ptr) as HRESULT
declare sub IMarkupPointer_Gravity_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IMarkupPointer_SetGravity_Proxy(byval This as IMarkupPointer ptr, byval Gravity as POINTER_GRAVITY) as HRESULT
declare sub IMarkupPointer_SetGravity_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IMarkupPointer_Cling_Proxy(byval This as IMarkupPointer ptr, byval pfCling as WINBOOL ptr) as HRESULT
declare sub IMarkupPointer_Cling_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IMarkupPointer_SetCling_Proxy(byval This as IMarkupPointer ptr, byval fCLing as WINBOOL) as HRESULT
declare sub IMarkupPointer_SetCling_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IMarkupPointer_Unposition_Proxy(byval This as IMarkupPointer ptr) as HRESULT
declare sub IMarkupPointer_Unposition_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IMarkupPointer_IsPositioned_Proxy(byval This as IMarkupPointer ptr, byval pfPositioned as WINBOOL ptr) as HRESULT
declare sub IMarkupPointer_IsPositioned_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IMarkupPointer_GetContainer_Proxy(byval This as IMarkupPointer ptr, byval ppContainer as IMarkupContainer ptr ptr) as HRESULT
declare sub IMarkupPointer_GetContainer_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IMarkupPointer_MoveAdjacentToElement_Proxy(byval This as IMarkupPointer ptr, byval pElement as IHTMLElement ptr, byval eAdj as ELEMENT_ADJACENCY) as HRESULT
declare sub IMarkupPointer_MoveAdjacentToElement_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IMarkupPointer_MoveToPointer_Proxy(byval This as IMarkupPointer ptr, byval pPointer as IMarkupPointer ptr) as HRESULT
declare sub IMarkupPointer_MoveToPointer_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IMarkupPointer_MoveToContainer_Proxy(byval This as IMarkupPointer ptr, byval pContainer as IMarkupContainer ptr, byval fAtStart as WINBOOL) as HRESULT
declare sub IMarkupPointer_MoveToContainer_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IMarkupPointer_Left_Proxy(byval This as IMarkupPointer ptr, byval fMove as WINBOOL, byval pContext as MARKUP_CONTEXT_TYPE ptr, byval ppElement as IHTMLElement ptr ptr, byval pcch as long ptr, byval pchText as OLECHAR ptr) as HRESULT
declare sub IMarkupPointer_Left_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IMarkupPointer_Right_Proxy(byval This as IMarkupPointer ptr, byval fMove as WINBOOL, byval pContext as MARKUP_CONTEXT_TYPE ptr, byval ppElement as IHTMLElement ptr ptr, byval pcch as long ptr, byval pchText as OLECHAR ptr) as HRESULT
declare sub IMarkupPointer_Right_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IMarkupPointer_CurrentScope_Proxy(byval This as IMarkupPointer ptr, byval ppElemCurrent as IHTMLElement ptr ptr) as HRESULT
declare sub IMarkupPointer_CurrentScope_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IMarkupPointer_IsLeftOf_Proxy(byval This as IMarkupPointer ptr, byval pPointerThat as IMarkupPointer ptr, byval pfResult as WINBOOL ptr) as HRESULT
declare sub IMarkupPointer_IsLeftOf_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IMarkupPointer_IsLeftOfOrEqualTo_Proxy(byval This as IMarkupPointer ptr, byval pPointerThat as IMarkupPointer ptr, byval pfResult as WINBOOL ptr) as HRESULT
declare sub IMarkupPointer_IsLeftOfOrEqualTo_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IMarkupPointer_IsRightOf_Proxy(byval This as IMarkupPointer ptr, byval pPointerThat as IMarkupPointer ptr, byval pfResult as WINBOOL ptr) as HRESULT
declare sub IMarkupPointer_IsRightOf_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IMarkupPointer_IsRightOfOrEqualTo_Proxy(byval This as IMarkupPointer ptr, byval pPointerThat as IMarkupPointer ptr, byval pfResult as WINBOOL ptr) as HRESULT
declare sub IMarkupPointer_IsRightOfOrEqualTo_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IMarkupPointer_IsEqualTo_Proxy(byval This as IMarkupPointer ptr, byval pPointerThat as IMarkupPointer ptr, byval pfAreEqual as WINBOOL ptr) as HRESULT
declare sub IMarkupPointer_IsEqualTo_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IMarkupPointer_MoveUnit_Proxy(byval This as IMarkupPointer ptr, byval muAction as MOVEUNIT_ACTION) as HRESULT
declare sub IMarkupPointer_MoveUnit_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IMarkupPointer_FindText_Proxy(byval This as IMarkupPointer ptr, byval pchFindText as OLECHAR ptr, byval dwFlags as DWORD, byval pIEndMatch as IMarkupPointer ptr, byval pIEndSearch as IMarkupPointer ptr) as HRESULT
declare sub IMarkupPointer_FindText_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IMarkupContainer_INTERFACE_DEFINED__
extern IID_IMarkupContainer as const IID

type IMarkupContainerVtbl
	QueryInterface as function(byval This as IMarkupContainer ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IMarkupContainer ptr) as ULONG
	Release as function(byval This as IMarkupContainer ptr) as ULONG
	OwningDoc as function(byval This as IMarkupContainer ptr, byval ppDoc as IHTMLDocument2 ptr ptr) as HRESULT
end type

type IMarkupContainer_
	lpVtbl as IMarkupContainerVtbl ptr
end type

#define IMarkupContainer_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IMarkupContainer_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IMarkupContainer_Release(This) (This)->lpVtbl->Release(This)
#define IMarkupContainer_OwningDoc(This, ppDoc) (This)->lpVtbl->OwningDoc(This, ppDoc)
declare function IMarkupContainer_OwningDoc_Proxy(byval This as IMarkupContainer ptr, byval ppDoc as IHTMLDocument2 ptr ptr) as HRESULT
declare sub IMarkupContainer_OwningDoc_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IMarkupContainer2_INTERFACE_DEFINED__
extern IID_IMarkupContainer2 as const IID

type IMarkupContainer2 as IMarkupContainer2_
type IHTMLChangeSink as IHTMLChangeSink_
type IHTMLChangeLog as IHTMLChangeLog_

type IMarkupContainer2Vtbl
	QueryInterface as function(byval This as IMarkupContainer2 ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IMarkupContainer2 ptr) as ULONG
	Release as function(byval This as IMarkupContainer2 ptr) as ULONG
	OwningDoc as function(byval This as IMarkupContainer2 ptr, byval ppDoc as IHTMLDocument2 ptr ptr) as HRESULT
	CreateChangeLog as function(byval This as IMarkupContainer2 ptr, byval pChangeSink as IHTMLChangeSink ptr, byval ppChangeLog as IHTMLChangeLog ptr ptr, byval fForward as WINBOOL, byval fBackward as WINBOOL) as HRESULT
	RegisterForDirtyRange as function(byval This as IMarkupContainer2 ptr, byval pChangeSink as IHTMLChangeSink ptr, byval pdwCookie as DWORD ptr) as HRESULT
	UnRegisterForDirtyRange as function(byval This as IMarkupContainer2 ptr, byval dwCookie as DWORD) as HRESULT
	GetAndClearDirtyRange as function(byval This as IMarkupContainer2 ptr, byval dwCookie as DWORD, byval pIPointerBegin as IMarkupPointer ptr, byval pIPointerEnd as IMarkupPointer ptr) as HRESULT
	GetVersionNumber as function(byval This as IMarkupContainer2 ptr) as long
	GetMasterElement as function(byval This as IMarkupContainer2 ptr, byval ppElementMaster as IHTMLElement ptr ptr) as HRESULT
end type

type IMarkupContainer2_
	lpVtbl as IMarkupContainer2Vtbl ptr
end type

#define IMarkupContainer2_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IMarkupContainer2_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IMarkupContainer2_Release(This) (This)->lpVtbl->Release(This)
#define IMarkupContainer2_OwningDoc(This, ppDoc) (This)->lpVtbl->OwningDoc(This, ppDoc)
#define IMarkupContainer2_CreateChangeLog(This, pChangeSink, ppChangeLog, fForward, fBackward) (This)->lpVtbl->CreateChangeLog(This, pChangeSink, ppChangeLog, fForward, fBackward)
#define IMarkupContainer2_RegisterForDirtyRange(This, pChangeSink, pdwCookie) (This)->lpVtbl->RegisterForDirtyRange(This, pChangeSink, pdwCookie)
#define IMarkupContainer2_UnRegisterForDirtyRange(This, dwCookie) (This)->lpVtbl->UnRegisterForDirtyRange(This, dwCookie)
#define IMarkupContainer2_GetAndClearDirtyRange(This, dwCookie, pIPointerBegin, pIPointerEnd) (This)->lpVtbl->GetAndClearDirtyRange(This, dwCookie, pIPointerBegin, pIPointerEnd)
#define IMarkupContainer2_GetVersionNumber(This) (This)->lpVtbl->GetVersionNumber(This)
#define IMarkupContainer2_GetMasterElement(This, ppElementMaster) (This)->lpVtbl->GetMasterElement(This, ppElementMaster)

declare function IMarkupContainer2_CreateChangeLog_Proxy(byval This as IMarkupContainer2 ptr, byval pChangeSink as IHTMLChangeSink ptr, byval ppChangeLog as IHTMLChangeLog ptr ptr, byval fForward as WINBOOL, byval fBackward as WINBOOL) as HRESULT
declare sub IMarkupContainer2_CreateChangeLog_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IMarkupContainer2_RegisterForDirtyRange_Proxy(byval This as IMarkupContainer2 ptr, byval pChangeSink as IHTMLChangeSink ptr, byval pdwCookie as DWORD ptr) as HRESULT
declare sub IMarkupContainer2_RegisterForDirtyRange_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IMarkupContainer2_UnRegisterForDirtyRange_Proxy(byval This as IMarkupContainer2 ptr, byval dwCookie as DWORD) as HRESULT
declare sub IMarkupContainer2_UnRegisterForDirtyRange_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IMarkupContainer2_GetAndClearDirtyRange_Proxy(byval This as IMarkupContainer2 ptr, byval dwCookie as DWORD, byval pIPointerBegin as IMarkupPointer ptr, byval pIPointerEnd as IMarkupPointer ptr) as HRESULT
declare sub IMarkupContainer2_GetAndClearDirtyRange_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IMarkupContainer2_GetVersionNumber_Proxy(byval This as IMarkupContainer2 ptr) as long
declare sub IMarkupContainer2_GetVersionNumber_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IMarkupContainer2_GetMasterElement_Proxy(byval This as IMarkupContainer2 ptr, byval ppElementMaster as IHTMLElement ptr ptr) as HRESULT
declare sub IMarkupContainer2_GetMasterElement_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLChangeLog_INTERFACE_DEFINED__
extern IID_IHTMLChangeLog as const IID

type IHTMLChangeLogVtbl
	QueryInterface as function(byval This as IHTMLChangeLog ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLChangeLog ptr) as ULONG
	Release as function(byval This as IHTMLChangeLog ptr) as ULONG
	GetNextChange as function(byval This as IHTMLChangeLog ptr, byval pbBuffer as UBYTE ptr, byval nBufferSize as long, byval pnRecordLength as long ptr) as HRESULT
end type

type IHTMLChangeLog_
	lpVtbl as IHTMLChangeLogVtbl ptr
end type

#define IHTMLChangeLog_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLChangeLog_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLChangeLog_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLChangeLog_GetNextChange(This, pbBuffer, nBufferSize, pnRecordLength) (This)->lpVtbl->GetNextChange(This, pbBuffer, nBufferSize, pnRecordLength)
declare function IHTMLChangeLog_GetNextChange_Proxy(byval This as IHTMLChangeLog ptr, byval pbBuffer as UBYTE ptr, byval nBufferSize as long, byval pnRecordLength as long ptr) as HRESULT
declare sub IHTMLChangeLog_GetNextChange_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLChangeSink_INTERFACE_DEFINED__
extern IID_IHTMLChangeSink as const IID

type IHTMLChangeSinkVtbl
	QueryInterface as function(byval This as IHTMLChangeSink ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLChangeSink ptr) as ULONG
	Release as function(byval This as IHTMLChangeSink ptr) as ULONG
	Notify as function(byval This as IHTMLChangeSink ptr) as HRESULT
end type

type IHTMLChangeSink_
	lpVtbl as IHTMLChangeSinkVtbl ptr
end type

#define IHTMLChangeSink_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLChangeSink_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLChangeSink_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLChangeSink_Notify(This) (This)->lpVtbl->Notify(This)
declare function IHTMLChangeSink_Notify_Proxy(byval This as IHTMLChangeSink ptr) as HRESULT
declare sub IHTMLChangeSink_Notify_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __ISegmentList_INTERFACE_DEFINED__
extern IID_ISegmentList as const IID
type ISegmentList as ISegmentList_
type ISegmentListIterator as ISegmentListIterator_

type ISegmentListVtbl
	QueryInterface as function(byval This as ISegmentList ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as ISegmentList ptr) as ULONG
	Release as function(byval This as ISegmentList ptr) as ULONG
	CreateIterator as function(byval This as ISegmentList ptr, byval ppIIter as ISegmentListIterator ptr ptr) as HRESULT
	GetType as function(byval This as ISegmentList ptr, byval peType as SELECTION_TYPE ptr) as HRESULT
	IsEmpty as function(byval This as ISegmentList ptr, byval pfEmpty as WINBOOL ptr) as HRESULT
end type

type ISegmentList_
	lpVtbl as ISegmentListVtbl ptr
end type

#define ISegmentList_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define ISegmentList_AddRef(This) (This)->lpVtbl->AddRef(This)
#define ISegmentList_Release(This) (This)->lpVtbl->Release(This)
#define ISegmentList_CreateIterator(This, ppIIter) (This)->lpVtbl->CreateIterator(This, ppIIter)
#define ISegmentList_GetType(This, peType) (This)->lpVtbl->GetType(This, peType)
#define ISegmentList_IsEmpty(This, pfEmpty) (This)->lpVtbl->IsEmpty(This, pfEmpty)

declare function ISegmentList_CreateIterator_Proxy(byval This as ISegmentList ptr, byval ppIIter as ISegmentListIterator ptr ptr) as HRESULT
declare sub ISegmentList_CreateIterator_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function ISegmentList_GetType_Proxy(byval This as ISegmentList ptr, byval peType as SELECTION_TYPE ptr) as HRESULT
declare sub ISegmentList_GetType_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function ISegmentList_IsEmpty_Proxy(byval This as ISegmentList ptr, byval pfEmpty as WINBOOL ptr) as HRESULT
declare sub ISegmentList_IsEmpty_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __ISegmentListIterator_INTERFACE_DEFINED__
extern IID_ISegmentListIterator as const IID
type ISegment as ISegment_

type ISegmentListIteratorVtbl
	QueryInterface as function(byval This as ISegmentListIterator ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as ISegmentListIterator ptr) as ULONG
	Release as function(byval This as ISegmentListIterator ptr) as ULONG
	Current as function(byval This as ISegmentListIterator ptr, byval ppISegment as ISegment ptr ptr) as HRESULT
	First as function(byval This as ISegmentListIterator ptr) as HRESULT
	IsDone as function(byval This as ISegmentListIterator ptr) as HRESULT
	Advance as function(byval This as ISegmentListIterator ptr) as HRESULT
end type

type ISegmentListIterator_
	lpVtbl as ISegmentListIteratorVtbl ptr
end type

#define ISegmentListIterator_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define ISegmentListIterator_AddRef(This) (This)->lpVtbl->AddRef(This)
#define ISegmentListIterator_Release(This) (This)->lpVtbl->Release(This)
#define ISegmentListIterator_Current(This, ppISegment) (This)->lpVtbl->Current(This, ppISegment)
#define ISegmentListIterator_First(This) (This)->lpVtbl->First(This)
#define ISegmentListIterator_IsDone(This) (This)->lpVtbl->IsDone(This)
#define ISegmentListIterator_Advance(This) (This)->lpVtbl->Advance(This)

declare function ISegmentListIterator_Current_Proxy(byval This as ISegmentListIterator ptr, byval ppISegment as ISegment ptr ptr) as HRESULT
declare sub ISegmentListIterator_Current_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function ISegmentListIterator_First_Proxy(byval This as ISegmentListIterator ptr) as HRESULT
declare sub ISegmentListIterator_First_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function ISegmentListIterator_IsDone_Proxy(byval This as ISegmentListIterator ptr) as HRESULT
declare sub ISegmentListIterator_IsDone_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function ISegmentListIterator_Advance_Proxy(byval This as ISegmentListIterator ptr) as HRESULT
declare sub ISegmentListIterator_Advance_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLCaret_INTERFACE_DEFINED__
extern IID_IHTMLCaret as const IID
type IHTMLCaret as IHTMLCaret_
type IDisplayPointer as IDisplayPointer_

type IHTMLCaretVtbl
	QueryInterface as function(byval This as IHTMLCaret ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLCaret ptr) as ULONG
	Release as function(byval This as IHTMLCaret ptr) as ULONG
	MoveCaretToPointer as function(byval This as IHTMLCaret ptr, byval pDispPointer as IDisplayPointer ptr, byval fScrollIntoView as WINBOOL, byval eDir as CARET_DIRECTION) as HRESULT
	MoveCaretToPointerEx as function(byval This as IHTMLCaret ptr, byval pDispPointer as IDisplayPointer ptr, byval fVisible as WINBOOL, byval fScrollIntoView as WINBOOL, byval eDir as CARET_DIRECTION) as HRESULT
	MoveMarkupPointerToCaret as function(byval This as IHTMLCaret ptr, byval pIMarkupPointer as IMarkupPointer ptr) as HRESULT
	MoveDisplayPointerToCaret as function(byval This as IHTMLCaret ptr, byval pDispPointer as IDisplayPointer ptr) as HRESULT
	IsVisible as function(byval This as IHTMLCaret ptr, byval pIsVisible as WINBOOL ptr) as HRESULT
	Show as function(byval This as IHTMLCaret ptr, byval fScrollIntoView as WINBOOL) as HRESULT
	Hide as function(byval This as IHTMLCaret ptr) as HRESULT
	InsertText as function(byval This as IHTMLCaret ptr, byval pText as OLECHAR ptr, byval lLen as LONG) as HRESULT
	ScrollIntoView as function(byval This as IHTMLCaret ptr) as HRESULT
	GetLocation as function(byval This as IHTMLCaret ptr, byval pPoint as POINT ptr, byval fTranslate as WINBOOL) as HRESULT
	GetCaretDirection as function(byval This as IHTMLCaret ptr, byval peDir as CARET_DIRECTION ptr) as HRESULT
	SetCaretDirection as function(byval This as IHTMLCaret ptr, byval eDir as CARET_DIRECTION) as HRESULT
end type

type IHTMLCaret_
	lpVtbl as IHTMLCaretVtbl ptr
end type

#define IHTMLCaret_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLCaret_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLCaret_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLCaret_MoveCaretToPointer(This, pDispPointer, fScrollIntoView, eDir) (This)->lpVtbl->MoveCaretToPointer(This, pDispPointer, fScrollIntoView, eDir)
#define IHTMLCaret_MoveCaretToPointerEx(This, pDispPointer, fVisible, fScrollIntoView, eDir) (This)->lpVtbl->MoveCaretToPointerEx(This, pDispPointer, fVisible, fScrollIntoView, eDir)
#define IHTMLCaret_MoveMarkupPointerToCaret(This, pIMarkupPointer) (This)->lpVtbl->MoveMarkupPointerToCaret(This, pIMarkupPointer)
#define IHTMLCaret_MoveDisplayPointerToCaret(This, pDispPointer) (This)->lpVtbl->MoveDisplayPointerToCaret(This, pDispPointer)
#define IHTMLCaret_IsVisible(This, pIsVisible) (This)->lpVtbl->IsVisible(This, pIsVisible)
#define IHTMLCaret_Show(This, fScrollIntoView) (This)->lpVtbl->Show(This, fScrollIntoView)
#define IHTMLCaret_Hide(This) (This)->lpVtbl->Hide(This)
#define IHTMLCaret_InsertText(This, pText, lLen) (This)->lpVtbl->InsertText(This, pText, lLen)
#define IHTMLCaret_ScrollIntoView(This) (This)->lpVtbl->ScrollIntoView(This)
#define IHTMLCaret_GetLocation(This, pPoint, fTranslate) (This)->lpVtbl->GetLocation(This, pPoint, fTranslate)
#define IHTMLCaret_GetCaretDirection(This, peDir) (This)->lpVtbl->GetCaretDirection(This, peDir)
#define IHTMLCaret_SetCaretDirection(This, eDir) (This)->lpVtbl->SetCaretDirection(This, eDir)

declare function IHTMLCaret_MoveCaretToPointer_Proxy(byval This as IHTMLCaret ptr, byval pDispPointer as IDisplayPointer ptr, byval fScrollIntoView as WINBOOL, byval eDir as CARET_DIRECTION) as HRESULT
declare sub IHTMLCaret_MoveCaretToPointer_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLCaret_MoveCaretToPointerEx_Proxy(byval This as IHTMLCaret ptr, byval pDispPointer as IDisplayPointer ptr, byval fVisible as WINBOOL, byval fScrollIntoView as WINBOOL, byval eDir as CARET_DIRECTION) as HRESULT
declare sub IHTMLCaret_MoveCaretToPointerEx_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLCaret_MoveMarkupPointerToCaret_Proxy(byval This as IHTMLCaret ptr, byval pIMarkupPointer as IMarkupPointer ptr) as HRESULT
declare sub IHTMLCaret_MoveMarkupPointerToCaret_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLCaret_MoveDisplayPointerToCaret_Proxy(byval This as IHTMLCaret ptr, byval pDispPointer as IDisplayPointer ptr) as HRESULT
declare sub IHTMLCaret_MoveDisplayPointerToCaret_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLCaret_IsVisible_Proxy(byval This as IHTMLCaret ptr, byval pIsVisible as WINBOOL ptr) as HRESULT
declare sub IHTMLCaret_IsVisible_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLCaret_Show_Proxy(byval This as IHTMLCaret ptr, byval fScrollIntoView as WINBOOL) as HRESULT
declare sub IHTMLCaret_Show_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLCaret_Hide_Proxy(byval This as IHTMLCaret ptr) as HRESULT
declare sub IHTMLCaret_Hide_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLCaret_InsertText_Proxy(byval This as IHTMLCaret ptr, byval pText as OLECHAR ptr, byval lLen as LONG) as HRESULT
declare sub IHTMLCaret_InsertText_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLCaret_ScrollIntoView_Proxy(byval This as IHTMLCaret ptr) as HRESULT
declare sub IHTMLCaret_ScrollIntoView_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLCaret_GetLocation_Proxy(byval This as IHTMLCaret ptr, byval pPoint as POINT ptr, byval fTranslate as WINBOOL) as HRESULT
declare sub IHTMLCaret_GetLocation_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLCaret_GetCaretDirection_Proxy(byval This as IHTMLCaret ptr, byval peDir as CARET_DIRECTION ptr) as HRESULT
declare sub IHTMLCaret_GetCaretDirection_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLCaret_SetCaretDirection_Proxy(byval This as IHTMLCaret ptr, byval eDir as CARET_DIRECTION) as HRESULT
declare sub IHTMLCaret_SetCaretDirection_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __ISegment_INTERFACE_DEFINED__
extern IID_ISegment as const IID

type ISegmentVtbl
	QueryInterface as function(byval This as ISegment ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as ISegment ptr) as ULONG
	Release as function(byval This as ISegment ptr) as ULONG
	GetPointers as function(byval This as ISegment ptr, byval pIStart as IMarkupPointer ptr, byval pIEnd as IMarkupPointer ptr) as HRESULT
end type

type ISegment_
	lpVtbl as ISegmentVtbl ptr
end type

#define ISegment_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define ISegment_AddRef(This) (This)->lpVtbl->AddRef(This)
#define ISegment_Release(This) (This)->lpVtbl->Release(This)
#define ISegment_GetPointers(This, pIStart, pIEnd) (This)->lpVtbl->GetPointers(This, pIStart, pIEnd)
declare function ISegment_GetPointers_Proxy(byval This as ISegment ptr, byval pIStart as IMarkupPointer ptr, byval pIEnd as IMarkupPointer ptr) as HRESULT
declare sub ISegment_GetPointers_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IElementSegment_INTERFACE_DEFINED__
extern IID_IElementSegment as const IID
type IElementSegment as IElementSegment_

type IElementSegmentVtbl
	QueryInterface as function(byval This as IElementSegment ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IElementSegment ptr) as ULONG
	Release as function(byval This as IElementSegment ptr) as ULONG
	GetPointers as function(byval This as IElementSegment ptr, byval pIStart as IMarkupPointer ptr, byval pIEnd as IMarkupPointer ptr) as HRESULT
	GetElement as function(byval This as IElementSegment ptr, byval ppIElement as IHTMLElement ptr ptr) as HRESULT
	SetPrimary as function(byval This as IElementSegment ptr, byval fPrimary as WINBOOL) as HRESULT
	IsPrimary as function(byval This as IElementSegment ptr, byval pfPrimary as WINBOOL ptr) as HRESULT
end type

type IElementSegment_
	lpVtbl as IElementSegmentVtbl ptr
end type

#define IElementSegment_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IElementSegment_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IElementSegment_Release(This) (This)->lpVtbl->Release(This)
#define IElementSegment_GetPointers(This, pIStart, pIEnd) (This)->lpVtbl->GetPointers(This, pIStart, pIEnd)
#define IElementSegment_GetElement(This, ppIElement) (This)->lpVtbl->GetElement(This, ppIElement)
#define IElementSegment_SetPrimary(This, fPrimary) (This)->lpVtbl->SetPrimary(This, fPrimary)
#define IElementSegment_IsPrimary(This, pfPrimary) (This)->lpVtbl->IsPrimary(This, pfPrimary)

declare function IElementSegment_GetElement_Proxy(byval This as IElementSegment ptr, byval ppIElement as IHTMLElement ptr ptr) as HRESULT
declare sub IElementSegment_GetElement_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IElementSegment_SetPrimary_Proxy(byval This as IElementSegment ptr, byval fPrimary as WINBOOL) as HRESULT
declare sub IElementSegment_SetPrimary_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IElementSegment_IsPrimary_Proxy(byval This as IElementSegment ptr, byval pfPrimary as WINBOOL ptr) as HRESULT
declare sub IElementSegment_IsPrimary_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHighlightSegment_INTERFACE_DEFINED__
extern IID_IHighlightSegment as const IID
type IHighlightSegment as IHighlightSegment_

type IHighlightSegmentVtbl
	QueryInterface as function(byval This as IHighlightSegment ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHighlightSegment ptr) as ULONG
	Release as function(byval This as IHighlightSegment ptr) as ULONG
	GetPointers as function(byval This as IHighlightSegment ptr, byval pIStart as IMarkupPointer ptr, byval pIEnd as IMarkupPointer ptr) as HRESULT
end type

type IHighlightSegment_
	lpVtbl as IHighlightSegmentVtbl ptr
end type

#define IHighlightSegment_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHighlightSegment_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHighlightSegment_Release(This) (This)->lpVtbl->Release(This)
#define IHighlightSegment_GetPointers(This, pIStart, pIEnd) (This)->lpVtbl->GetPointers(This, pIStart, pIEnd)
#define __IHighlightRenderingServices_INTERFACE_DEFINED__
extern IID_IHighlightRenderingServices as const IID
type IHighlightRenderingServices as IHighlightRenderingServices_

type IHighlightRenderingServicesVtbl
	QueryInterface as function(byval This as IHighlightRenderingServices ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHighlightRenderingServices ptr) as ULONG
	Release as function(byval This as IHighlightRenderingServices ptr) as ULONG
	AddSegment as function(byval This as IHighlightRenderingServices ptr, byval pDispPointerStart as IDisplayPointer ptr, byval pDispPointerEnd as IDisplayPointer ptr, byval pIRenderStyle as IHTMLRenderStyle ptr, byval ppISegment as IHighlightSegment ptr ptr) as HRESULT
	MoveSegmentToPointers as function(byval This as IHighlightRenderingServices ptr, byval pISegment as IHighlightSegment ptr, byval pDispPointerStart as IDisplayPointer ptr, byval pDispPointerEnd as IDisplayPointer ptr) as HRESULT
	RemoveSegment as function(byval This as IHighlightRenderingServices ptr, byval pISegment as IHighlightSegment ptr) as HRESULT
end type

type IHighlightRenderingServices_
	lpVtbl as IHighlightRenderingServicesVtbl ptr
end type

#define IHighlightRenderingServices_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHighlightRenderingServices_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHighlightRenderingServices_Release(This) (This)->lpVtbl->Release(This)
#define IHighlightRenderingServices_AddSegment(This, pDispPointerStart, pDispPointerEnd, pIRenderStyle, ppISegment) (This)->lpVtbl->AddSegment(This, pDispPointerStart, pDispPointerEnd, pIRenderStyle, ppISegment)
#define IHighlightRenderingServices_MoveSegmentToPointers(This, pISegment, pDispPointerStart, pDispPointerEnd) (This)->lpVtbl->MoveSegmentToPointers(This, pISegment, pDispPointerStart, pDispPointerEnd)
#define IHighlightRenderingServices_RemoveSegment(This, pISegment) (This)->lpVtbl->RemoveSegment(This, pISegment)

declare function IHighlightRenderingServices_AddSegment_Proxy(byval This as IHighlightRenderingServices ptr, byval pDispPointerStart as IDisplayPointer ptr, byval pDispPointerEnd as IDisplayPointer ptr, byval pIRenderStyle as IHTMLRenderStyle ptr, byval ppISegment as IHighlightSegment ptr ptr) as HRESULT
declare sub IHighlightRenderingServices_AddSegment_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHighlightRenderingServices_MoveSegmentToPointers_Proxy(byval This as IHighlightRenderingServices ptr, byval pISegment as IHighlightSegment ptr, byval pDispPointerStart as IDisplayPointer ptr, byval pDispPointerEnd as IDisplayPointer ptr) as HRESULT
declare sub IHighlightRenderingServices_MoveSegmentToPointers_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHighlightRenderingServices_RemoveSegment_Proxy(byval This as IHighlightRenderingServices ptr, byval pISegment as IHighlightSegment ptr) as HRESULT
declare sub IHighlightRenderingServices_RemoveSegment_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __ILineInfo_INTERFACE_DEFINED__
extern IID_ILineInfo as const IID
type ILineInfo as ILineInfo_

type ILineInfoVtbl
	QueryInterface as function(byval This as ILineInfo ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as ILineInfo ptr) as ULONG
	Release as function(byval This as ILineInfo ptr) as ULONG
	get_x as function(byval This as ILineInfo ptr, byval p as long ptr) as HRESULT
	get_baseLine as function(byval This as ILineInfo ptr, byval p as long ptr) as HRESULT
	get_textDescent as function(byval This as ILineInfo ptr, byval p as long ptr) as HRESULT
	get_textHeight as function(byval This as ILineInfo ptr, byval p as long ptr) as HRESULT
	get_lineDirection as function(byval This as ILineInfo ptr, byval p as LONG ptr) as HRESULT
end type

type ILineInfo_
	lpVtbl as ILineInfoVtbl ptr
end type

#define ILineInfo_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define ILineInfo_AddRef(This) (This)->lpVtbl->AddRef(This)
#define ILineInfo_Release(This) (This)->lpVtbl->Release(This)
#define ILineInfo_get_x(This, p) (This)->lpVtbl->get_x(This, p)
#define ILineInfo_get_baseLine(This, p) (This)->lpVtbl->get_baseLine(This, p)
#define ILineInfo_get_textDescent(This, p) (This)->lpVtbl->get_textDescent(This, p)
#define ILineInfo_get_textHeight(This, p) (This)->lpVtbl->get_textHeight(This, p)
#define ILineInfo_get_lineDirection(This, p) (This)->lpVtbl->get_lineDirection(This, p)

declare function ILineInfo_get_x_Proxy(byval This as ILineInfo ptr, byval p as long ptr) as HRESULT
declare sub ILineInfo_get_x_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function ILineInfo_get_baseLine_Proxy(byval This as ILineInfo ptr, byval p as long ptr) as HRESULT
declare sub ILineInfo_get_baseLine_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function ILineInfo_get_textDescent_Proxy(byval This as ILineInfo ptr, byval p as long ptr) as HRESULT
declare sub ILineInfo_get_textDescent_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function ILineInfo_get_textHeight_Proxy(byval This as ILineInfo ptr, byval p as long ptr) as HRESULT
declare sub ILineInfo_get_textHeight_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function ILineInfo_get_lineDirection_Proxy(byval This as ILineInfo ptr, byval p as LONG ptr) as HRESULT
declare sub ILineInfo_get_lineDirection_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IDisplayPointer_INTERFACE_DEFINED__
extern IID_IDisplayPointer as const IID

type IDisplayPointerVtbl
	QueryInterface as function(byval This as IDisplayPointer ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IDisplayPointer ptr) as ULONG
	Release as function(byval This as IDisplayPointer ptr) as ULONG
	MoveToPoint as function(byval This as IDisplayPointer ptr, byval ptPoint as POINT, byval eCoordSystem as COORD_SYSTEM, byval pElementContext as IHTMLElement ptr, byval dwHitTestOptions as DWORD, byval pdwHitTestResults as DWORD ptr) as HRESULT
	MoveUnit as function(byval This as IDisplayPointer ptr, byval eMoveUnit as DISPLAY_MOVEUNIT, byval lXPos as LONG) as HRESULT
	PositionMarkupPointer as function(byval This as IDisplayPointer ptr, byval pMarkupPointer as IMarkupPointer ptr) as HRESULT
	MoveToPointer as function(byval This as IDisplayPointer ptr, byval pDispPointer as IDisplayPointer ptr) as HRESULT
	SetPointerGravity as function(byval This as IDisplayPointer ptr, byval eGravity as POINTER_GRAVITY) as HRESULT
	GetPointerGravity as function(byval This as IDisplayPointer ptr, byval peGravity as POINTER_GRAVITY ptr) as HRESULT
	SetDisplayGravity as function(byval This as IDisplayPointer ptr, byval eGravity as DISPLAY_GRAVITY) as HRESULT
	GetDisplayGravity as function(byval This as IDisplayPointer ptr, byval peGravity as DISPLAY_GRAVITY ptr) as HRESULT
	IsPositioned as function(byval This as IDisplayPointer ptr, byval pfPositioned as WINBOOL ptr) as HRESULT
	Unposition as function(byval This as IDisplayPointer ptr) as HRESULT
	IsEqualTo as function(byval This as IDisplayPointer ptr, byval pDispPointer as IDisplayPointer ptr, byval pfIsEqual as WINBOOL ptr) as HRESULT
	IsLeftOf as function(byval This as IDisplayPointer ptr, byval pDispPointer as IDisplayPointer ptr, byval pfIsLeftOf as WINBOOL ptr) as HRESULT
	IsRightOf as function(byval This as IDisplayPointer ptr, byval pDispPointer as IDisplayPointer ptr, byval pfIsRightOf as WINBOOL ptr) as HRESULT
	IsAtBOL as function(byval This as IDisplayPointer ptr, byval pfBOL as WINBOOL ptr) as HRESULT
	MoveToMarkupPointer as function(byval This as IDisplayPointer ptr, byval pPointer as IMarkupPointer ptr, byval pDispLineContext as IDisplayPointer ptr) as HRESULT
	ScrollIntoView as function(byval This as IDisplayPointer ptr) as HRESULT
	GetLineInfo as function(byval This as IDisplayPointer ptr, byval ppLineInfo as ILineInfo ptr ptr) as HRESULT
	GetFlowElement as function(byval This as IDisplayPointer ptr, byval ppLayoutElement as IHTMLElement ptr ptr) as HRESULT
	QueryBreaks as function(byval This as IDisplayPointer ptr, byval pdwBreaks as DWORD ptr) as HRESULT
end type

type IDisplayPointer_
	lpVtbl as IDisplayPointerVtbl ptr
end type

#define IDisplayPointer_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IDisplayPointer_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IDisplayPointer_Release(This) (This)->lpVtbl->Release(This)
#define IDisplayPointer_MoveToPoint(This, ptPoint, eCoordSystem, pElementContext, dwHitTestOptions, pdwHitTestResults) (This)->lpVtbl->MoveToPoint(This, ptPoint, eCoordSystem, pElementContext, dwHitTestOptions, pdwHitTestResults)
#define IDisplayPointer_MoveUnit(This, eMoveUnit, lXPos) (This)->lpVtbl->MoveUnit(This, eMoveUnit, lXPos)
#define IDisplayPointer_PositionMarkupPointer(This, pMarkupPointer) (This)->lpVtbl->PositionMarkupPointer(This, pMarkupPointer)
#define IDisplayPointer_MoveToPointer(This, pDispPointer) (This)->lpVtbl->MoveToPointer(This, pDispPointer)
#define IDisplayPointer_SetPointerGravity(This, eGravity) (This)->lpVtbl->SetPointerGravity(This, eGravity)
#define IDisplayPointer_GetPointerGravity(This, peGravity) (This)->lpVtbl->GetPointerGravity(This, peGravity)
#define IDisplayPointer_SetDisplayGravity(This, eGravity) (This)->lpVtbl->SetDisplayGravity(This, eGravity)
#define IDisplayPointer_GetDisplayGravity(This, peGravity) (This)->lpVtbl->GetDisplayGravity(This, peGravity)
#define IDisplayPointer_IsPositioned(This, pfPositioned) (This)->lpVtbl->IsPositioned(This, pfPositioned)
#define IDisplayPointer_Unposition(This) (This)->lpVtbl->Unposition(This)
#define IDisplayPointer_IsEqualTo(This, pDispPointer, pfIsEqual) (This)->lpVtbl->IsEqualTo(This, pDispPointer, pfIsEqual)
#define IDisplayPointer_IsLeftOf(This, pDispPointer, pfIsLeftOf) (This)->lpVtbl->IsLeftOf(This, pDispPointer, pfIsLeftOf)
#define IDisplayPointer_IsRightOf(This, pDispPointer, pfIsRightOf) (This)->lpVtbl->IsRightOf(This, pDispPointer, pfIsRightOf)
#define IDisplayPointer_IsAtBOL(This, pfBOL) (This)->lpVtbl->IsAtBOL(This, pfBOL)
#define IDisplayPointer_MoveToMarkupPointer(This, pPointer, pDispLineContext) (This)->lpVtbl->MoveToMarkupPointer(This, pPointer, pDispLineContext)
#define IDisplayPointer_ScrollIntoView(This) (This)->lpVtbl->ScrollIntoView(This)
#define IDisplayPointer_GetLineInfo(This, ppLineInfo) (This)->lpVtbl->GetLineInfo(This, ppLineInfo)
#define IDisplayPointer_GetFlowElement(This, ppLayoutElement) (This)->lpVtbl->GetFlowElement(This, ppLayoutElement)
#define IDisplayPointer_QueryBreaks(This, pdwBreaks) (This)->lpVtbl->QueryBreaks(This, pdwBreaks)

declare function IDisplayPointer_MoveToPoint_Proxy(byval This as IDisplayPointer ptr, byval ptPoint as POINT, byval eCoordSystem as COORD_SYSTEM, byval pElementContext as IHTMLElement ptr, byval dwHitTestOptions as DWORD, byval pdwHitTestResults as DWORD ptr) as HRESULT
declare sub IDisplayPointer_MoveToPoint_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IDisplayPointer_MoveUnit_Proxy(byval This as IDisplayPointer ptr, byval eMoveUnit as DISPLAY_MOVEUNIT, byval lXPos as LONG) as HRESULT
declare sub IDisplayPointer_MoveUnit_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IDisplayPointer_PositionMarkupPointer_Proxy(byval This as IDisplayPointer ptr, byval pMarkupPointer as IMarkupPointer ptr) as HRESULT
declare sub IDisplayPointer_PositionMarkupPointer_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IDisplayPointer_MoveToPointer_Proxy(byval This as IDisplayPointer ptr, byval pDispPointer as IDisplayPointer ptr) as HRESULT
declare sub IDisplayPointer_MoveToPointer_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IDisplayPointer_SetPointerGravity_Proxy(byval This as IDisplayPointer ptr, byval eGravity as POINTER_GRAVITY) as HRESULT
declare sub IDisplayPointer_SetPointerGravity_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IDisplayPointer_GetPointerGravity_Proxy(byval This as IDisplayPointer ptr, byval peGravity as POINTER_GRAVITY ptr) as HRESULT
declare sub IDisplayPointer_GetPointerGravity_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IDisplayPointer_SetDisplayGravity_Proxy(byval This as IDisplayPointer ptr, byval eGravity as DISPLAY_GRAVITY) as HRESULT
declare sub IDisplayPointer_SetDisplayGravity_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IDisplayPointer_GetDisplayGravity_Proxy(byval This as IDisplayPointer ptr, byval peGravity as DISPLAY_GRAVITY ptr) as HRESULT
declare sub IDisplayPointer_GetDisplayGravity_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IDisplayPointer_IsPositioned_Proxy(byval This as IDisplayPointer ptr, byval pfPositioned as WINBOOL ptr) as HRESULT
declare sub IDisplayPointer_IsPositioned_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IDisplayPointer_Unposition_Proxy(byval This as IDisplayPointer ptr) as HRESULT
declare sub IDisplayPointer_Unposition_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IDisplayPointer_IsEqualTo_Proxy(byval This as IDisplayPointer ptr, byval pDispPointer as IDisplayPointer ptr, byval pfIsEqual as WINBOOL ptr) as HRESULT
declare sub IDisplayPointer_IsEqualTo_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IDisplayPointer_IsLeftOf_Proxy(byval This as IDisplayPointer ptr, byval pDispPointer as IDisplayPointer ptr, byval pfIsLeftOf as WINBOOL ptr) as HRESULT
declare sub IDisplayPointer_IsLeftOf_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IDisplayPointer_IsRightOf_Proxy(byval This as IDisplayPointer ptr, byval pDispPointer as IDisplayPointer ptr, byval pfIsRightOf as WINBOOL ptr) as HRESULT
declare sub IDisplayPointer_IsRightOf_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IDisplayPointer_IsAtBOL_Proxy(byval This as IDisplayPointer ptr, byval pfBOL as WINBOOL ptr) as HRESULT
declare sub IDisplayPointer_IsAtBOL_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IDisplayPointer_MoveToMarkupPointer_Proxy(byval This as IDisplayPointer ptr, byval pPointer as IMarkupPointer ptr, byval pDispLineContext as IDisplayPointer ptr) as HRESULT
declare sub IDisplayPointer_MoveToMarkupPointer_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IDisplayPointer_ScrollIntoView_Proxy(byval This as IDisplayPointer ptr) as HRESULT
declare sub IDisplayPointer_ScrollIntoView_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IDisplayPointer_GetLineInfo_Proxy(byval This as IDisplayPointer ptr, byval ppLineInfo as ILineInfo ptr ptr) as HRESULT
declare sub IDisplayPointer_GetLineInfo_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IDisplayPointer_GetFlowElement_Proxy(byval This as IDisplayPointer ptr, byval ppLayoutElement as IHTMLElement ptr ptr) as HRESULT
declare sub IDisplayPointer_GetFlowElement_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IDisplayPointer_QueryBreaks_Proxy(byval This as IDisplayPointer ptr, byval pdwBreaks as DWORD ptr) as HRESULT
declare sub IDisplayPointer_QueryBreaks_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IDisplayServices_INTERFACE_DEFINED__
extern IID_IDisplayServices as const IID
type IDisplayServices as IDisplayServices_
type IHTMLComputedStyle as IHTMLComputedStyle_

type IDisplayServicesVtbl
	QueryInterface as function(byval This as IDisplayServices ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IDisplayServices ptr) as ULONG
	Release as function(byval This as IDisplayServices ptr) as ULONG
	CreateDisplayPointer as function(byval This as IDisplayServices ptr, byval ppDispPointer as IDisplayPointer ptr ptr) as HRESULT
	TransformRect as function(byval This as IDisplayServices ptr, byval pRect as RECT ptr, byval eSource as COORD_SYSTEM, byval eDestination as COORD_SYSTEM, byval pIElement as IHTMLElement ptr) as HRESULT
	TransformPoint as function(byval This as IDisplayServices ptr, byval pPoint as POINT ptr, byval eSource as COORD_SYSTEM, byval eDestination as COORD_SYSTEM, byval pIElement as IHTMLElement ptr) as HRESULT
	GetCaret as function(byval This as IDisplayServices ptr, byval ppCaret as IHTMLCaret ptr ptr) as HRESULT
	GetComputedStyle as function(byval This as IDisplayServices ptr, byval pPointer as IMarkupPointer ptr, byval ppComputedStyle as IHTMLComputedStyle ptr ptr) as HRESULT
	ScrollRectIntoView as function(byval This as IDisplayServices ptr, byval pIElement as IHTMLElement ptr, byval rect as RECT) as HRESULT
	HasFlowLayout as function(byval This as IDisplayServices ptr, byval pIElement as IHTMLElement ptr, byval pfHasFlowLayout as WINBOOL ptr) as HRESULT
end type

type IDisplayServices_
	lpVtbl as IDisplayServicesVtbl ptr
end type

#define IDisplayServices_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IDisplayServices_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IDisplayServices_Release(This) (This)->lpVtbl->Release(This)
#define IDisplayServices_CreateDisplayPointer(This, ppDispPointer) (This)->lpVtbl->CreateDisplayPointer(This, ppDispPointer)
#define IDisplayServices_TransformRect(This, pRect, eSource, eDestination, pIElement) (This)->lpVtbl->TransformRect(This, pRect, eSource, eDestination, pIElement)
#define IDisplayServices_TransformPoint(This, pPoint, eSource, eDestination, pIElement) (This)->lpVtbl->TransformPoint(This, pPoint, eSource, eDestination, pIElement)
#define IDisplayServices_GetCaret(This, ppCaret) (This)->lpVtbl->GetCaret(This, ppCaret)
#define IDisplayServices_GetComputedStyle(This, pPointer, ppComputedStyle) (This)->lpVtbl->GetComputedStyle(This, pPointer, ppComputedStyle)
#define IDisplayServices_ScrollRectIntoView(This, pIElement, rect) (This)->lpVtbl->ScrollRectIntoView(This, pIElement, rect)
#define IDisplayServices_HasFlowLayout(This, pIElement, pfHasFlowLayout) (This)->lpVtbl->HasFlowLayout(This, pIElement, pfHasFlowLayout)

declare function IDisplayServices_CreateDisplayPointer_Proxy(byval This as IDisplayServices ptr, byval ppDispPointer as IDisplayPointer ptr ptr) as HRESULT
declare sub IDisplayServices_CreateDisplayPointer_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IDisplayServices_TransformRect_Proxy(byval This as IDisplayServices ptr, byval pRect as RECT ptr, byval eSource as COORD_SYSTEM, byval eDestination as COORD_SYSTEM, byval pIElement as IHTMLElement ptr) as HRESULT
declare sub IDisplayServices_TransformRect_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IDisplayServices_TransformPoint_Proxy(byval This as IDisplayServices ptr, byval pPoint as POINT ptr, byval eSource as COORD_SYSTEM, byval eDestination as COORD_SYSTEM, byval pIElement as IHTMLElement ptr) as HRESULT
declare sub IDisplayServices_TransformPoint_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IDisplayServices_GetCaret_Proxy(byval This as IDisplayServices ptr, byval ppCaret as IHTMLCaret ptr ptr) as HRESULT
declare sub IDisplayServices_GetCaret_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IDisplayServices_GetComputedStyle_Proxy(byval This as IDisplayServices ptr, byval pPointer as IMarkupPointer ptr, byval ppComputedStyle as IHTMLComputedStyle ptr ptr) as HRESULT
declare sub IDisplayServices_GetComputedStyle_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IDisplayServices_ScrollRectIntoView_Proxy(byval This as IDisplayServices ptr, byval pIElement as IHTMLElement ptr, byval rect as RECT) as HRESULT
declare sub IDisplayServices_ScrollRectIntoView_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IDisplayServices_HasFlowLayout_Proxy(byval This as IDisplayServices ptr, byval pIElement as IHTMLElement ptr, byval pfHasFlowLayout as WINBOOL ptr) as HRESULT
declare sub IDisplayServices_HasFlowLayout_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHtmlDlgSafeHelper_INTERFACE_DEFINED__
extern IID_IHtmlDlgSafeHelper as const IID
type IHtmlDlgSafeHelper as IHtmlDlgSafeHelper_

type IHtmlDlgSafeHelperVtbl
	QueryInterface as function(byval This as IHtmlDlgSafeHelper ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHtmlDlgSafeHelper ptr) as ULONG
	Release as function(byval This as IHtmlDlgSafeHelper ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHtmlDlgSafeHelper ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHtmlDlgSafeHelper ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHtmlDlgSafeHelper ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHtmlDlgSafeHelper ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	choosecolordlg as function(byval This as IHtmlDlgSafeHelper ptr, byval initColor as VARIANT, byval rgbColor as VARIANT ptr) as HRESULT
	getCharset as function(byval This as IHtmlDlgSafeHelper ptr, byval fontName as BSTR, byval charset as VARIANT ptr) as HRESULT
	get_Fonts as function(byval This as IHtmlDlgSafeHelper ptr, byval p as IDispatch ptr ptr) as HRESULT
	get_BlockFormats as function(byval This as IHtmlDlgSafeHelper ptr, byval p as IDispatch ptr ptr) as HRESULT
end type

type IHtmlDlgSafeHelper_
	lpVtbl as IHtmlDlgSafeHelperVtbl ptr
end type

#define IHtmlDlgSafeHelper_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHtmlDlgSafeHelper_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHtmlDlgSafeHelper_Release(This) (This)->lpVtbl->Release(This)
#define IHtmlDlgSafeHelper_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHtmlDlgSafeHelper_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHtmlDlgSafeHelper_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHtmlDlgSafeHelper_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHtmlDlgSafeHelper_choosecolordlg(This, initColor, rgbColor) (This)->lpVtbl->choosecolordlg(This, initColor, rgbColor)
#define IHtmlDlgSafeHelper_getCharset(This, fontName, charset) (This)->lpVtbl->getCharset(This, fontName, charset)
#define IHtmlDlgSafeHelper_get_Fonts(This, p) (This)->lpVtbl->get_Fonts(This, p)
#define IHtmlDlgSafeHelper_get_BlockFormats(This, p) (This)->lpVtbl->get_BlockFormats(This, p)

declare function IHtmlDlgSafeHelper_choosecolordlg_Proxy(byval This as IHtmlDlgSafeHelper ptr, byval initColor as VARIANT, byval rgbColor as VARIANT ptr) as HRESULT
declare sub IHtmlDlgSafeHelper_choosecolordlg_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHtmlDlgSafeHelper_getCharset_Proxy(byval This as IHtmlDlgSafeHelper ptr, byval fontName as BSTR, byval charset as VARIANT ptr) as HRESULT
declare sub IHtmlDlgSafeHelper_getCharset_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHtmlDlgSafeHelper_get_Fonts_Proxy(byval This as IHtmlDlgSafeHelper ptr, byval p as IDispatch ptr ptr) as HRESULT
declare sub IHtmlDlgSafeHelper_get_Fonts_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHtmlDlgSafeHelper_get_BlockFormats_Proxy(byval This as IHtmlDlgSafeHelper ptr, byval p as IDispatch ptr ptr) as HRESULT
declare sub IHtmlDlgSafeHelper_get_BlockFormats_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IBlockFormats_INTERFACE_DEFINED__
extern IID_IBlockFormats as const IID
type IBlockFormats as IBlockFormats_

type IBlockFormatsVtbl
	QueryInterface as function(byval This as IBlockFormats ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IBlockFormats ptr) as ULONG
	Release as function(byval This as IBlockFormats ptr) as ULONG
	GetTypeInfoCount as function(byval This as IBlockFormats ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IBlockFormats ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IBlockFormats ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IBlockFormats ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	get__NewEnum as function(byval This as IBlockFormats ptr, byval p as IUnknown ptr ptr) as HRESULT
	get_Count as function(byval This as IBlockFormats ptr, byval p as long ptr) as HRESULT
	Item as function(byval This as IBlockFormats ptr, byval pvarIndex as VARIANT ptr, byval pbstrBlockFormat as BSTR ptr) as HRESULT
end type

type IBlockFormats_
	lpVtbl as IBlockFormatsVtbl ptr
end type

#define IBlockFormats_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IBlockFormats_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IBlockFormats_Release(This) (This)->lpVtbl->Release(This)
#define IBlockFormats_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IBlockFormats_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IBlockFormats_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IBlockFormats_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IBlockFormats_get__NewEnum(This, p) (This)->lpVtbl->get__NewEnum(This, p)
#define IBlockFormats_get_Count(This, p) (This)->lpVtbl->get_Count(This, p)
#define IBlockFormats_Item(This, pvarIndex, pbstrBlockFormat) (This)->lpVtbl->Item(This, pvarIndex, pbstrBlockFormat)

declare function IBlockFormats_get__NewEnum_Proxy(byval This as IBlockFormats ptr, byval p as IUnknown ptr ptr) as HRESULT
declare sub IBlockFormats_get__NewEnum_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IBlockFormats_get_Count_Proxy(byval This as IBlockFormats ptr, byval p as long ptr) as HRESULT
declare sub IBlockFormats_get_Count_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IBlockFormats_Item_Proxy(byval This as IBlockFormats ptr, byval pvarIndex as VARIANT ptr, byval pbstrBlockFormat as BSTR ptr) as HRESULT
declare sub IBlockFormats_Item_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IFontNames_INTERFACE_DEFINED__
extern IID_IFontNames as const IID
type IFontNames as IFontNames_

type IFontNamesVtbl
	QueryInterface as function(byval This as IFontNames ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IFontNames ptr) as ULONG
	Release as function(byval This as IFontNames ptr) as ULONG
	GetTypeInfoCount as function(byval This as IFontNames ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IFontNames ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IFontNames ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IFontNames ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	get__NewEnum as function(byval This as IFontNames ptr, byval p as IUnknown ptr ptr) as HRESULT
	get_Count as function(byval This as IFontNames ptr, byval p as long ptr) as HRESULT
	Item as function(byval This as IFontNames ptr, byval pvarIndex as VARIANT ptr, byval pbstrFontName as BSTR ptr) as HRESULT
end type

type IFontNames_
	lpVtbl as IFontNamesVtbl ptr
end type

#define IFontNames_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IFontNames_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IFontNames_Release(This) (This)->lpVtbl->Release(This)
#define IFontNames_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IFontNames_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IFontNames_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IFontNames_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IFontNames_get__NewEnum(This, p) (This)->lpVtbl->get__NewEnum(This, p)
#define IFontNames_get_Count(This, p) (This)->lpVtbl->get_Count(This, p)
#define IFontNames_Item(This, pvarIndex, pbstrFontName) (This)->lpVtbl->Item(This, pvarIndex, pbstrFontName)

declare function IFontNames_get__NewEnum_Proxy(byval This as IFontNames ptr, byval p as IUnknown ptr ptr) as HRESULT
declare sub IFontNames_get__NewEnum_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IFontNames_get_Count_Proxy(byval This as IFontNames ptr, byval p as long ptr) as HRESULT
declare sub IFontNames_get_Count_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IFontNames_Item_Proxy(byval This as IFontNames ptr, byval pvarIndex as VARIANT ptr, byval pbstrFontName as BSTR ptr) as HRESULT
declare sub IFontNames_Item_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __ICSSFilter_INTERFACE_DEFINED__
extern IID_ICSSFilter as const IID
type ICSSFilter as ICSSFilter_

type ICSSFilterVtbl
	QueryInterface as function(byval This as ICSSFilter ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as ICSSFilter ptr) as ULONG
	Release as function(byval This as ICSSFilter ptr) as ULONG
	SetSite as function(byval This as ICSSFilter ptr, byval pSink as ICSSFilterSite ptr) as HRESULT
	OnAmbientPropertyChange as function(byval This as ICSSFilter ptr, byval dispid as LONG) as HRESULT
end type

type ICSSFilter_
	lpVtbl as ICSSFilterVtbl ptr
end type

#define ICSSFilter_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define ICSSFilter_AddRef(This) (This)->lpVtbl->AddRef(This)
#define ICSSFilter_Release(This) (This)->lpVtbl->Release(This)
#define ICSSFilter_SetSite(This, pSink) (This)->lpVtbl->SetSite(This, pSink)
#define ICSSFilter_OnAmbientPropertyChange(This, dispid) (This)->lpVtbl->OnAmbientPropertyChange(This, dispid)

declare function ICSSFilter_SetSite_Proxy(byval This as ICSSFilter ptr, byval pSink as ICSSFilterSite ptr) as HRESULT
declare sub ICSSFilter_SetSite_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function ICSSFilter_OnAmbientPropertyChange_Proxy(byval This as ICSSFilter ptr, byval dispid as LONG) as HRESULT
declare sub ICSSFilter_OnAmbientPropertyChange_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __ISecureUrlHost_INTERFACE_DEFINED__
extern IID_ISecureUrlHost as const IID
type ISecureUrlHost as ISecureUrlHost_

type ISecureUrlHostVtbl
	QueryInterface as function(byval This as ISecureUrlHost ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as ISecureUrlHost ptr) as ULONG
	Release as function(byval This as ISecureUrlHost ptr) as ULONG
	ValidateSecureUrl as function(byval This as ISecureUrlHost ptr, byval pfAllow as WINBOOL ptr, byval pchUrlInQuestion as OLECHAR ptr, byval dwFlags as DWORD) as HRESULT
end type

type ISecureUrlHost_
	lpVtbl as ISecureUrlHostVtbl ptr
end type

#define ISecureUrlHost_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define ISecureUrlHost_AddRef(This) (This)->lpVtbl->AddRef(This)
#define ISecureUrlHost_Release(This) (This)->lpVtbl->Release(This)
#define ISecureUrlHost_ValidateSecureUrl(This, pfAllow, pchUrlInQuestion, dwFlags) (This)->lpVtbl->ValidateSecureUrl(This, pfAllow, pchUrlInQuestion, dwFlags)
declare function ISecureUrlHost_ValidateSecureUrl_Proxy(byval This as ISecureUrlHost ptr, byval pfAllow as WINBOOL ptr, byval pchUrlInQuestion as OLECHAR ptr, byval dwFlags as DWORD) as HRESULT
declare sub ISecureUrlHost_ValidateSecureUrl_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IMarkupServices_INTERFACE_DEFINED__
extern IID_IMarkupServices as const IID
type IMarkupServices as IMarkupServices_

type IMarkupServicesVtbl
	QueryInterface as function(byval This as IMarkupServices ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IMarkupServices ptr) as ULONG
	Release as function(byval This as IMarkupServices ptr) as ULONG
	CreateMarkupPointer as function(byval This as IMarkupServices ptr, byval ppPointer as IMarkupPointer ptr ptr) as HRESULT
	CreateMarkupContainer as function(byval This as IMarkupServices ptr, byval ppMarkupContainer as IMarkupContainer ptr ptr) as HRESULT
	CreateElement as function(byval This as IMarkupServices ptr, byval tagID as ELEMENT_TAG_ID, byval pchAttributes as OLECHAR ptr, byval ppElement as IHTMLElement ptr ptr) as HRESULT
	CloneElement as function(byval This as IMarkupServices ptr, byval pElemCloneThis as IHTMLElement ptr, byval ppElementTheClone as IHTMLElement ptr ptr) as HRESULT
	InsertElement as function(byval This as IMarkupServices ptr, byval pElementInsert as IHTMLElement ptr, byval pPointerStart as IMarkupPointer ptr, byval pPointerFinish as IMarkupPointer ptr) as HRESULT
	RemoveElement as function(byval This as IMarkupServices ptr, byval pElementRemove as IHTMLElement ptr) as HRESULT
	Remove as function(byval This as IMarkupServices ptr, byval pPointerStart as IMarkupPointer ptr, byval pPointerFinish as IMarkupPointer ptr) as HRESULT
	Copy as function(byval This as IMarkupServices ptr, byval pPointerSourceStart as IMarkupPointer ptr, byval pPointerSourceFinish as IMarkupPointer ptr, byval pPointerTarget as IMarkupPointer ptr) as HRESULT
	Move as function(byval This as IMarkupServices ptr, byval pPointerSourceStart as IMarkupPointer ptr, byval pPointerSourceFinish as IMarkupPointer ptr, byval pPointerTarget as IMarkupPointer ptr) as HRESULT
	InsertText as function(byval This as IMarkupServices ptr, byval pchText as OLECHAR ptr, byval cch as long, byval pPointerTarget as IMarkupPointer ptr) as HRESULT
	ParseString as function(byval This as IMarkupServices ptr, byval pchHTML as OLECHAR ptr, byval dwFlags as DWORD, byval ppContainerResult as IMarkupContainer ptr ptr, byval ppPointerStart as IMarkupPointer ptr, byval ppPointerFinish as IMarkupPointer ptr) as HRESULT
	ParseGlobal as function(byval This as IMarkupServices ptr, byval hglobalHTML as HGLOBAL, byval dwFlags as DWORD, byval ppContainerResult as IMarkupContainer ptr ptr, byval pPointerStart as IMarkupPointer ptr, byval pPointerFinish as IMarkupPointer ptr) as HRESULT
	IsScopedElement as function(byval This as IMarkupServices ptr, byval pElement as IHTMLElement ptr, byval pfScoped as WINBOOL ptr) as HRESULT
	GetElementTagId as function(byval This as IMarkupServices ptr, byval pElement as IHTMLElement ptr, byval ptagId as ELEMENT_TAG_ID ptr) as HRESULT
	GetTagIDForName as function(byval This as IMarkupServices ptr, byval bstrName as BSTR, byval ptagId as ELEMENT_TAG_ID ptr) as HRESULT
	GetNameForTagID as function(byval This as IMarkupServices ptr, byval tagId as ELEMENT_TAG_ID, byval pbstrName as BSTR ptr) as HRESULT
	MovePointersToRange as function(byval This as IMarkupServices ptr, byval pIRange as IHTMLTxtRange ptr, byval pPointerStart as IMarkupPointer ptr, byval pPointerFinish as IMarkupPointer ptr) as HRESULT
	MoveRangeToPointers as function(byval This as IMarkupServices ptr, byval pPointerStart as IMarkupPointer ptr, byval pPointerFinish as IMarkupPointer ptr, byval pIRange as IHTMLTxtRange ptr) as HRESULT
	BeginUndoUnit as function(byval This as IMarkupServices ptr, byval pchTitle as OLECHAR ptr) as HRESULT
	EndUndoUnit as function(byval This as IMarkupServices ptr) as HRESULT
end type

type IMarkupServices_
	lpVtbl as IMarkupServicesVtbl ptr
end type

#define IMarkupServices_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IMarkupServices_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IMarkupServices_Release(This) (This)->lpVtbl->Release(This)
#define IMarkupServices_CreateMarkupPointer(This, ppPointer) (This)->lpVtbl->CreateMarkupPointer(This, ppPointer)
#define IMarkupServices_CreateMarkupContainer(This, ppMarkupContainer) (This)->lpVtbl->CreateMarkupContainer(This, ppMarkupContainer)
#define IMarkupServices_CreateElement(This, tagID, pchAttributes, ppElement) (This)->lpVtbl->CreateElement(This, tagID, pchAttributes, ppElement)
#define IMarkupServices_CloneElement(This, pElemCloneThis, ppElementTheClone) (This)->lpVtbl->CloneElement(This, pElemCloneThis, ppElementTheClone)
#define IMarkupServices_InsertElement(This, pElementInsert, pPointerStart, pPointerFinish) (This)->lpVtbl->InsertElement(This, pElementInsert, pPointerStart, pPointerFinish)
#define IMarkupServices_RemoveElement(This, pElementRemove) (This)->lpVtbl->RemoveElement(This, pElementRemove)
#define IMarkupServices_Remove(This, pPointerStart, pPointerFinish) (This)->lpVtbl->Remove(This, pPointerStart, pPointerFinish)
#define IMarkupServices_Copy(This, pPointerSourceStart, pPointerSourceFinish, pPointerTarget) (This)->lpVtbl->Copy(This, pPointerSourceStart, pPointerSourceFinish, pPointerTarget)
#define IMarkupServices_Move(This, pPointerSourceStart, pPointerSourceFinish, pPointerTarget) (This)->lpVtbl->Move(This, pPointerSourceStart, pPointerSourceFinish, pPointerTarget)
#define IMarkupServices_InsertText(This, pchText, cch, pPointerTarget) (This)->lpVtbl->InsertText(This, pchText, cch, pPointerTarget)
#define IMarkupServices_ParseString(This, pchHTML, dwFlags, ppContainerResult, ppPointerStart, ppPointerFinish) (This)->lpVtbl->ParseString(This, pchHTML, dwFlags, ppContainerResult, ppPointerStart, ppPointerFinish)
#define IMarkupServices_ParseGlobal(This, hglobalHTML, dwFlags, ppContainerResult, pPointerStart, pPointerFinish) (This)->lpVtbl->ParseGlobal(This, hglobalHTML, dwFlags, ppContainerResult, pPointerStart, pPointerFinish)
#define IMarkupServices_IsScopedElement(This, pElement, pfScoped) (This)->lpVtbl->IsScopedElement(This, pElement, pfScoped)
#define IMarkupServices_GetElementTagId(This, pElement, ptagId) (This)->lpVtbl->GetElementTagId(This, pElement, ptagId)
#define IMarkupServices_GetTagIDForName(This, bstrName, ptagId) (This)->lpVtbl->GetTagIDForName(This, bstrName, ptagId)
#define IMarkupServices_GetNameForTagID(This, tagId, pbstrName) (This)->lpVtbl->GetNameForTagID(This, tagId, pbstrName)
#define IMarkupServices_MovePointersToRange(This, pIRange, pPointerStart, pPointerFinish) (This)->lpVtbl->MovePointersToRange(This, pIRange, pPointerStart, pPointerFinish)
#define IMarkupServices_MoveRangeToPointers(This, pPointerStart, pPointerFinish, pIRange) (This)->lpVtbl->MoveRangeToPointers(This, pPointerStart, pPointerFinish, pIRange)
#define IMarkupServices_BeginUndoUnit(This, pchTitle) (This)->lpVtbl->BeginUndoUnit(This, pchTitle)
#define IMarkupServices_EndUndoUnit(This) (This)->lpVtbl->EndUndoUnit(This)

declare function IMarkupServices_CreateMarkupPointer_Proxy(byval This as IMarkupServices ptr, byval ppPointer as IMarkupPointer ptr ptr) as HRESULT
declare sub IMarkupServices_CreateMarkupPointer_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IMarkupServices_CreateMarkupContainer_Proxy(byval This as IMarkupServices ptr, byval ppMarkupContainer as IMarkupContainer ptr ptr) as HRESULT
declare sub IMarkupServices_CreateMarkupContainer_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IMarkupServices_CreateElement_Proxy(byval This as IMarkupServices ptr, byval tagID as ELEMENT_TAG_ID, byval pchAttributes as OLECHAR ptr, byval ppElement as IHTMLElement ptr ptr) as HRESULT
declare sub IMarkupServices_CreateElement_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IMarkupServices_CloneElement_Proxy(byval This as IMarkupServices ptr, byval pElemCloneThis as IHTMLElement ptr, byval ppElementTheClone as IHTMLElement ptr ptr) as HRESULT
declare sub IMarkupServices_CloneElement_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IMarkupServices_InsertElement_Proxy(byval This as IMarkupServices ptr, byval pElementInsert as IHTMLElement ptr, byval pPointerStart as IMarkupPointer ptr, byval pPointerFinish as IMarkupPointer ptr) as HRESULT
declare sub IMarkupServices_InsertElement_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IMarkupServices_RemoveElement_Proxy(byval This as IMarkupServices ptr, byval pElementRemove as IHTMLElement ptr) as HRESULT
declare sub IMarkupServices_RemoveElement_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IMarkupServices_Remove_Proxy(byval This as IMarkupServices ptr, byval pPointerStart as IMarkupPointer ptr, byval pPointerFinish as IMarkupPointer ptr) as HRESULT
declare sub IMarkupServices_Remove_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IMarkupServices_Copy_Proxy(byval This as IMarkupServices ptr, byval pPointerSourceStart as IMarkupPointer ptr, byval pPointerSourceFinish as IMarkupPointer ptr, byval pPointerTarget as IMarkupPointer ptr) as HRESULT
declare sub IMarkupServices_Copy_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IMarkupServices_Move_Proxy(byval This as IMarkupServices ptr, byval pPointerSourceStart as IMarkupPointer ptr, byval pPointerSourceFinish as IMarkupPointer ptr, byval pPointerTarget as IMarkupPointer ptr) as HRESULT
declare sub IMarkupServices_Move_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IMarkupServices_InsertText_Proxy(byval This as IMarkupServices ptr, byval pchText as OLECHAR ptr, byval cch as long, byval pPointerTarget as IMarkupPointer ptr) as HRESULT
declare sub IMarkupServices_InsertText_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IMarkupServices_ParseString_Proxy(byval This as IMarkupServices ptr, byval pchHTML as OLECHAR ptr, byval dwFlags as DWORD, byval ppContainerResult as IMarkupContainer ptr ptr, byval ppPointerStart as IMarkupPointer ptr, byval ppPointerFinish as IMarkupPointer ptr) as HRESULT
declare sub IMarkupServices_ParseString_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IMarkupServices_ParseGlobal_Proxy(byval This as IMarkupServices ptr, byval hglobalHTML as HGLOBAL, byval dwFlags as DWORD, byval ppContainerResult as IMarkupContainer ptr ptr, byval pPointerStart as IMarkupPointer ptr, byval pPointerFinish as IMarkupPointer ptr) as HRESULT
declare sub IMarkupServices_ParseGlobal_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IMarkupServices_IsScopedElement_Proxy(byval This as IMarkupServices ptr, byval pElement as IHTMLElement ptr, byval pfScoped as WINBOOL ptr) as HRESULT
declare sub IMarkupServices_IsScopedElement_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IMarkupServices_GetElementTagId_Proxy(byval This as IMarkupServices ptr, byval pElement as IHTMLElement ptr, byval ptagId as ELEMENT_TAG_ID ptr) as HRESULT
declare sub IMarkupServices_GetElementTagId_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IMarkupServices_GetTagIDForName_Proxy(byval This as IMarkupServices ptr, byval bstrName as BSTR, byval ptagId as ELEMENT_TAG_ID ptr) as HRESULT
declare sub IMarkupServices_GetTagIDForName_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IMarkupServices_GetNameForTagID_Proxy(byval This as IMarkupServices ptr, byval tagId as ELEMENT_TAG_ID, byval pbstrName as BSTR ptr) as HRESULT
declare sub IMarkupServices_GetNameForTagID_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IMarkupServices_MovePointersToRange_Proxy(byval This as IMarkupServices ptr, byval pIRange as IHTMLTxtRange ptr, byval pPointerStart as IMarkupPointer ptr, byval pPointerFinish as IMarkupPointer ptr) as HRESULT
declare sub IMarkupServices_MovePointersToRange_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IMarkupServices_MoveRangeToPointers_Proxy(byval This as IMarkupServices ptr, byval pPointerStart as IMarkupPointer ptr, byval pPointerFinish as IMarkupPointer ptr, byval pIRange as IHTMLTxtRange ptr) as HRESULT
declare sub IMarkupServices_MoveRangeToPointers_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IMarkupServices_BeginUndoUnit_Proxy(byval This as IMarkupServices ptr, byval pchTitle as OLECHAR ptr) as HRESULT
declare sub IMarkupServices_BeginUndoUnit_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IMarkupServices_EndUndoUnit_Proxy(byval This as IMarkupServices ptr) as HRESULT
declare sub IMarkupServices_EndUndoUnit_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IMarkupServices2_INTERFACE_DEFINED__
extern IID_IMarkupServices2 as const IID
type IMarkupServices2 as IMarkupServices2_

type IMarkupServices2Vtbl
	QueryInterface as function(byval This as IMarkupServices2 ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IMarkupServices2 ptr) as ULONG
	Release as function(byval This as IMarkupServices2 ptr) as ULONG
	CreateMarkupPointer as function(byval This as IMarkupServices2 ptr, byval ppPointer as IMarkupPointer ptr ptr) as HRESULT
	CreateMarkupContainer as function(byval This as IMarkupServices2 ptr, byval ppMarkupContainer as IMarkupContainer ptr ptr) as HRESULT
	CreateElement as function(byval This as IMarkupServices2 ptr, byval tagID as ELEMENT_TAG_ID, byval pchAttributes as OLECHAR ptr, byval ppElement as IHTMLElement ptr ptr) as HRESULT
	CloneElement as function(byval This as IMarkupServices2 ptr, byval pElemCloneThis as IHTMLElement ptr, byval ppElementTheClone as IHTMLElement ptr ptr) as HRESULT
	InsertElement as function(byval This as IMarkupServices2 ptr, byval pElementInsert as IHTMLElement ptr, byval pPointerStart as IMarkupPointer ptr, byval pPointerFinish as IMarkupPointer ptr) as HRESULT
	RemoveElement as function(byval This as IMarkupServices2 ptr, byval pElementRemove as IHTMLElement ptr) as HRESULT
	Remove as function(byval This as IMarkupServices2 ptr, byval pPointerStart as IMarkupPointer ptr, byval pPointerFinish as IMarkupPointer ptr) as HRESULT
	Copy as function(byval This as IMarkupServices2 ptr, byval pPointerSourceStart as IMarkupPointer ptr, byval pPointerSourceFinish as IMarkupPointer ptr, byval pPointerTarget as IMarkupPointer ptr) as HRESULT
	Move as function(byval This as IMarkupServices2 ptr, byval pPointerSourceStart as IMarkupPointer ptr, byval pPointerSourceFinish as IMarkupPointer ptr, byval pPointerTarget as IMarkupPointer ptr) as HRESULT
	InsertText as function(byval This as IMarkupServices2 ptr, byval pchText as OLECHAR ptr, byval cch as long, byval pPointerTarget as IMarkupPointer ptr) as HRESULT
	ParseString as function(byval This as IMarkupServices2 ptr, byval pchHTML as OLECHAR ptr, byval dwFlags as DWORD, byval ppContainerResult as IMarkupContainer ptr ptr, byval ppPointerStart as IMarkupPointer ptr, byval ppPointerFinish as IMarkupPointer ptr) as HRESULT
	ParseGlobal as function(byval This as IMarkupServices2 ptr, byval hglobalHTML as HGLOBAL, byval dwFlags as DWORD, byval ppContainerResult as IMarkupContainer ptr ptr, byval pPointerStart as IMarkupPointer ptr, byval pPointerFinish as IMarkupPointer ptr) as HRESULT
	IsScopedElement as function(byval This as IMarkupServices2 ptr, byval pElement as IHTMLElement ptr, byval pfScoped as WINBOOL ptr) as HRESULT
	GetElementTagId as function(byval This as IMarkupServices2 ptr, byval pElement as IHTMLElement ptr, byval ptagId as ELEMENT_TAG_ID ptr) as HRESULT
	GetTagIDForName as function(byval This as IMarkupServices2 ptr, byval bstrName as BSTR, byval ptagId as ELEMENT_TAG_ID ptr) as HRESULT
	GetNameForTagID as function(byval This as IMarkupServices2 ptr, byval tagId as ELEMENT_TAG_ID, byval pbstrName as BSTR ptr) as HRESULT
	MovePointersToRange as function(byval This as IMarkupServices2 ptr, byval pIRange as IHTMLTxtRange ptr, byval pPointerStart as IMarkupPointer ptr, byval pPointerFinish as IMarkupPointer ptr) as HRESULT
	MoveRangeToPointers as function(byval This as IMarkupServices2 ptr, byval pPointerStart as IMarkupPointer ptr, byval pPointerFinish as IMarkupPointer ptr, byval pIRange as IHTMLTxtRange ptr) as HRESULT
	BeginUndoUnit as function(byval This as IMarkupServices2 ptr, byval pchTitle as OLECHAR ptr) as HRESULT
	EndUndoUnit as function(byval This as IMarkupServices2 ptr) as HRESULT
	ParseGlobalEx as function(byval This as IMarkupServices2 ptr, byval hglobalHTML as HGLOBAL, byval dwFlags as DWORD, byval pContext as IMarkupContainer ptr, byval ppContainerResult as IMarkupContainer ptr ptr, byval pPointerStart as IMarkupPointer ptr, byval pPointerFinish as IMarkupPointer ptr) as HRESULT
	ValidateElements as function(byval This as IMarkupServices2 ptr, byval pPointerStart as IMarkupPointer ptr, byval pPointerFinish as IMarkupPointer ptr, byval pPointerTarget as IMarkupPointer ptr, byval pPointerStatus as IMarkupPointer ptr, byval ppElemFailBottom as IHTMLElement ptr ptr, byval ppElemFailTop as IHTMLElement ptr ptr) as HRESULT
	SaveSegmentsToClipboard as function(byval This as IMarkupServices2 ptr, byval pSegmentList as ISegmentList ptr, byval dwFlags as DWORD) as HRESULT
end type

type IMarkupServices2_
	lpVtbl as IMarkupServices2Vtbl ptr
end type

#define IMarkupServices2_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IMarkupServices2_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IMarkupServices2_Release(This) (This)->lpVtbl->Release(This)
#define IMarkupServices2_CreateMarkupPointer(This, ppPointer) (This)->lpVtbl->CreateMarkupPointer(This, ppPointer)
#define IMarkupServices2_CreateMarkupContainer(This, ppMarkupContainer) (This)->lpVtbl->CreateMarkupContainer(This, ppMarkupContainer)
#define IMarkupServices2_CreateElement(This, tagID, pchAttributes, ppElement) (This)->lpVtbl->CreateElement(This, tagID, pchAttributes, ppElement)
#define IMarkupServices2_CloneElement(This, pElemCloneThis, ppElementTheClone) (This)->lpVtbl->CloneElement(This, pElemCloneThis, ppElementTheClone)
#define IMarkupServices2_InsertElement(This, pElementInsert, pPointerStart, pPointerFinish) (This)->lpVtbl->InsertElement(This, pElementInsert, pPointerStart, pPointerFinish)
#define IMarkupServices2_RemoveElement(This, pElementRemove) (This)->lpVtbl->RemoveElement(This, pElementRemove)
#define IMarkupServices2_Remove(This, pPointerStart, pPointerFinish) (This)->lpVtbl->Remove(This, pPointerStart, pPointerFinish)
#define IMarkupServices2_Copy(This, pPointerSourceStart, pPointerSourceFinish, pPointerTarget) (This)->lpVtbl->Copy(This, pPointerSourceStart, pPointerSourceFinish, pPointerTarget)
#define IMarkupServices2_Move(This, pPointerSourceStart, pPointerSourceFinish, pPointerTarget) (This)->lpVtbl->Move(This, pPointerSourceStart, pPointerSourceFinish, pPointerTarget)
#define IMarkupServices2_InsertText(This, pchText, cch, pPointerTarget) (This)->lpVtbl->InsertText(This, pchText, cch, pPointerTarget)
#define IMarkupServices2_ParseString(This, pchHTML, dwFlags, ppContainerResult, ppPointerStart, ppPointerFinish) (This)->lpVtbl->ParseString(This, pchHTML, dwFlags, ppContainerResult, ppPointerStart, ppPointerFinish)
#define IMarkupServices2_ParseGlobal(This, hglobalHTML, dwFlags, ppContainerResult, pPointerStart, pPointerFinish) (This)->lpVtbl->ParseGlobal(This, hglobalHTML, dwFlags, ppContainerResult, pPointerStart, pPointerFinish)
#define IMarkupServices2_IsScopedElement(This, pElement, pfScoped) (This)->lpVtbl->IsScopedElement(This, pElement, pfScoped)
#define IMarkupServices2_GetElementTagId(This, pElement, ptagId) (This)->lpVtbl->GetElementTagId(This, pElement, ptagId)
#define IMarkupServices2_GetTagIDForName(This, bstrName, ptagId) (This)->lpVtbl->GetTagIDForName(This, bstrName, ptagId)
#define IMarkupServices2_GetNameForTagID(This, tagId, pbstrName) (This)->lpVtbl->GetNameForTagID(This, tagId, pbstrName)
#define IMarkupServices2_MovePointersToRange(This, pIRange, pPointerStart, pPointerFinish) (This)->lpVtbl->MovePointersToRange(This, pIRange, pPointerStart, pPointerFinish)
#define IMarkupServices2_MoveRangeToPointers(This, pPointerStart, pPointerFinish, pIRange) (This)->lpVtbl->MoveRangeToPointers(This, pPointerStart, pPointerFinish, pIRange)
#define IMarkupServices2_BeginUndoUnit(This, pchTitle) (This)->lpVtbl->BeginUndoUnit(This, pchTitle)
#define IMarkupServices2_EndUndoUnit(This) (This)->lpVtbl->EndUndoUnit(This)
#define IMarkupServices2_ParseGlobalEx(This, hglobalHTML, dwFlags, pContext, ppContainerResult, pPointerStart, pPointerFinish) (This)->lpVtbl->ParseGlobalEx(This, hglobalHTML, dwFlags, pContext, ppContainerResult, pPointerStart, pPointerFinish)
#define IMarkupServices2_ValidateElements(This, pPointerStart, pPointerFinish, pPointerTarget, pPointerStatus, ppElemFailBottom, ppElemFailTop) (This)->lpVtbl->ValidateElements(This, pPointerStart, pPointerFinish, pPointerTarget, pPointerStatus, ppElemFailBottom, ppElemFailTop)
#define IMarkupServices2_SaveSegmentsToClipboard(This, pSegmentList, dwFlags) (This)->lpVtbl->SaveSegmentsToClipboard(This, pSegmentList, dwFlags)

declare function IMarkupServices2_ParseGlobalEx_Proxy(byval This as IMarkupServices2 ptr, byval hglobalHTML as HGLOBAL, byval dwFlags as DWORD, byval pContext as IMarkupContainer ptr, byval ppContainerResult as IMarkupContainer ptr ptr, byval pPointerStart as IMarkupPointer ptr, byval pPointerFinish as IMarkupPointer ptr) as HRESULT
declare sub IMarkupServices2_ParseGlobalEx_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IMarkupServices2_ValidateElements_Proxy(byval This as IMarkupServices2 ptr, byval pPointerStart as IMarkupPointer ptr, byval pPointerFinish as IMarkupPointer ptr, byval pPointerTarget as IMarkupPointer ptr, byval pPointerStatus as IMarkupPointer ptr, byval ppElemFailBottom as IHTMLElement ptr ptr, byval ppElemFailTop as IHTMLElement ptr ptr) as HRESULT
declare sub IMarkupServices2_ValidateElements_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IMarkupServices2_SaveSegmentsToClipboard_Proxy(byval This as IMarkupServices2 ptr, byval pSegmentList as ISegmentList ptr, byval dwFlags as DWORD) as HRESULT
declare sub IMarkupServices2_SaveSegmentsToClipboard_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLChangePlayback_INTERFACE_DEFINED__
extern IID_IHTMLChangePlayback as const IID
type IHTMLChangePlayback as IHTMLChangePlayback_

type IHTMLChangePlaybackVtbl
	QueryInterface as function(byval This as IHTMLChangePlayback ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLChangePlayback ptr) as ULONG
	Release as function(byval This as IHTMLChangePlayback ptr) as ULONG
	ExecChange as function(byval This as IHTMLChangePlayback ptr, byval pbRecord as UBYTE ptr, byval fForward as WINBOOL) as HRESULT
end type

type IHTMLChangePlayback_
	lpVtbl as IHTMLChangePlaybackVtbl ptr
end type

#define IHTMLChangePlayback_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLChangePlayback_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLChangePlayback_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLChangePlayback_ExecChange(This, pbRecord, fForward) (This)->lpVtbl->ExecChange(This, pbRecord, fForward)
declare function IHTMLChangePlayback_ExecChange_Proxy(byval This as IHTMLChangePlayback ptr, byval pbRecord as UBYTE ptr, byval fForward as WINBOOL) as HRESULT
declare sub IHTMLChangePlayback_ExecChange_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IMarkupPointer2_INTERFACE_DEFINED__
extern IID_IMarkupPointer2 as const IID
type IMarkupPointer2 as IMarkupPointer2_

type IMarkupPointer2Vtbl
	QueryInterface as function(byval This as IMarkupPointer2 ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IMarkupPointer2 ptr) as ULONG
	Release as function(byval This as IMarkupPointer2 ptr) as ULONG
	OwningDoc as function(byval This as IMarkupPointer2 ptr, byval ppDoc as IHTMLDocument2 ptr ptr) as HRESULT
	Gravity as function(byval This as IMarkupPointer2 ptr, byval pGravity as POINTER_GRAVITY ptr) as HRESULT
	SetGravity as function(byval This as IMarkupPointer2 ptr, byval Gravity as POINTER_GRAVITY) as HRESULT
	Cling as function(byval This as IMarkupPointer2 ptr, byval pfCling as WINBOOL ptr) as HRESULT
	SetCling as function(byval This as IMarkupPointer2 ptr, byval fCLing as WINBOOL) as HRESULT
	Unposition as function(byval This as IMarkupPointer2 ptr) as HRESULT
	IsPositioned as function(byval This as IMarkupPointer2 ptr, byval pfPositioned as WINBOOL ptr) as HRESULT
	GetContainer as function(byval This as IMarkupPointer2 ptr, byval ppContainer as IMarkupContainer ptr ptr) as HRESULT
	MoveAdjacentToElement as function(byval This as IMarkupPointer2 ptr, byval pElement as IHTMLElement ptr, byval eAdj as ELEMENT_ADJACENCY) as HRESULT
	MoveToPointer as function(byval This as IMarkupPointer2 ptr, byval pPointer as IMarkupPointer ptr) as HRESULT
	MoveToContainer as function(byval This as IMarkupPointer2 ptr, byval pContainer as IMarkupContainer ptr, byval fAtStart as WINBOOL) as HRESULT
	Left as function(byval This as IMarkupPointer2 ptr, byval fMove as WINBOOL, byval pContext as MARKUP_CONTEXT_TYPE ptr, byval ppElement as IHTMLElement ptr ptr, byval pcch as long ptr, byval pchText as OLECHAR ptr) as HRESULT
	Right as function(byval This as IMarkupPointer2 ptr, byval fMove as WINBOOL, byval pContext as MARKUP_CONTEXT_TYPE ptr, byval ppElement as IHTMLElement ptr ptr, byval pcch as long ptr, byval pchText as OLECHAR ptr) as HRESULT
	CurrentScope as function(byval This as IMarkupPointer2 ptr, byval ppElemCurrent as IHTMLElement ptr ptr) as HRESULT
	IsLeftOf as function(byval This as IMarkupPointer2 ptr, byval pPointerThat as IMarkupPointer ptr, byval pfResult as WINBOOL ptr) as HRESULT
	IsLeftOfOrEqualTo as function(byval This as IMarkupPointer2 ptr, byval pPointerThat as IMarkupPointer ptr, byval pfResult as WINBOOL ptr) as HRESULT
	IsRightOf as function(byval This as IMarkupPointer2 ptr, byval pPointerThat as IMarkupPointer ptr, byval pfResult as WINBOOL ptr) as HRESULT
	IsRightOfOrEqualTo as function(byval This as IMarkupPointer2 ptr, byval pPointerThat as IMarkupPointer ptr, byval pfResult as WINBOOL ptr) as HRESULT
	IsEqualTo as function(byval This as IMarkupPointer2 ptr, byval pPointerThat as IMarkupPointer ptr, byval pfAreEqual as WINBOOL ptr) as HRESULT
	MoveUnit as function(byval This as IMarkupPointer2 ptr, byval muAction as MOVEUNIT_ACTION) as HRESULT
	FindText as function(byval This as IMarkupPointer2 ptr, byval pchFindText as OLECHAR ptr, byval dwFlags as DWORD, byval pIEndMatch as IMarkupPointer ptr, byval pIEndSearch as IMarkupPointer ptr) as HRESULT
	IsAtWordBreak as function(byval This as IMarkupPointer2 ptr, byval pfAtBreak as WINBOOL ptr) as HRESULT
	GetMarkupPosition as function(byval This as IMarkupPointer2 ptr, byval plMP as long ptr) as HRESULT
	MoveToMarkupPosition as function(byval This as IMarkupPointer2 ptr, byval pContainer as IMarkupContainer ptr, byval lMP as long) as HRESULT
	MoveUnitBounded as function(byval This as IMarkupPointer2 ptr, byval muAction as MOVEUNIT_ACTION, byval pIBoundary as IMarkupPointer ptr) as HRESULT
	IsInsideURL as function(byval This as IMarkupPointer2 ptr, byval pRight as IMarkupPointer ptr, byval pfResult as WINBOOL ptr) as HRESULT
	MoveToContent as function(byval This as IMarkupPointer2 ptr, byval pIElement as IHTMLElement ptr, byval fAtStart as WINBOOL) as HRESULT
end type

type IMarkupPointer2_
	lpVtbl as IMarkupPointer2Vtbl ptr
end type

#define IMarkupPointer2_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IMarkupPointer2_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IMarkupPointer2_Release(This) (This)->lpVtbl->Release(This)
#define IMarkupPointer2_OwningDoc(This, ppDoc) (This)->lpVtbl->OwningDoc(This, ppDoc)
#define IMarkupPointer2_Gravity(This, pGravity) (This)->lpVtbl->Gravity(This, pGravity)
#define IMarkupPointer2_SetGravity(This, Gravity) (This)->lpVtbl->SetGravity(This, Gravity)
#define IMarkupPointer2_Cling(This, pfCling) (This)->lpVtbl->Cling(This, pfCling)
#define IMarkupPointer2_SetCling(This, fCLing) (This)->lpVtbl->SetCling(This, fCLing)
#define IMarkupPointer2_Unposition(This) (This)->lpVtbl->Unposition(This)
#define IMarkupPointer2_IsPositioned(This, pfPositioned) (This)->lpVtbl->IsPositioned(This, pfPositioned)
#define IMarkupPointer2_GetContainer(This, ppContainer) (This)->lpVtbl->GetContainer(This, ppContainer)
#define IMarkupPointer2_MoveAdjacentToElement(This, pElement, eAdj) (This)->lpVtbl->MoveAdjacentToElement(This, pElement, eAdj)
#define IMarkupPointer2_MoveToPointer(This, pPointer) (This)->lpVtbl->MoveToPointer(This, pPointer)
#define IMarkupPointer2_MoveToContainer(This, pContainer, fAtStart) (This)->lpVtbl->MoveToContainer(This, pContainer, fAtStart)
#define IMarkupPointer2_Left(This, fMove, pContext, ppElement, pcch, pchText) (This)->lpVtbl->Left(This, fMove, pContext, ppElement, pcch, pchText)
#define IMarkupPointer2_Right(This, fMove, pContext, ppElement, pcch, pchText) (This)->lpVtbl->Right(This, fMove, pContext, ppElement, pcch, pchText)
#define IMarkupPointer2_CurrentScope(This, ppElemCurrent) (This)->lpVtbl->CurrentScope(This, ppElemCurrent)
#define IMarkupPointer2_IsLeftOf(This, pPointerThat, pfResult) (This)->lpVtbl->IsLeftOf(This, pPointerThat, pfResult)
#define IMarkupPointer2_IsLeftOfOrEqualTo(This, pPointerThat, pfResult) (This)->lpVtbl->IsLeftOfOrEqualTo(This, pPointerThat, pfResult)
#define IMarkupPointer2_IsRightOf(This, pPointerThat, pfResult) (This)->lpVtbl->IsRightOf(This, pPointerThat, pfResult)
#define IMarkupPointer2_IsRightOfOrEqualTo(This, pPointerThat, pfResult) (This)->lpVtbl->IsRightOfOrEqualTo(This, pPointerThat, pfResult)
#define IMarkupPointer2_IsEqualTo(This, pPointerThat, pfAreEqual) (This)->lpVtbl->IsEqualTo(This, pPointerThat, pfAreEqual)
#define IMarkupPointer2_MoveUnit(This, muAction) (This)->lpVtbl->MoveUnit(This, muAction)
#define IMarkupPointer2_FindText(This, pchFindText, dwFlags, pIEndMatch, pIEndSearch) (This)->lpVtbl->FindText(This, pchFindText, dwFlags, pIEndMatch, pIEndSearch)
#define IMarkupPointer2_IsAtWordBreak(This, pfAtBreak) (This)->lpVtbl->IsAtWordBreak(This, pfAtBreak)
#define IMarkupPointer2_GetMarkupPosition(This, plMP) (This)->lpVtbl->GetMarkupPosition(This, plMP)
#define IMarkupPointer2_MoveToMarkupPosition(This, pContainer, lMP) (This)->lpVtbl->MoveToMarkupPosition(This, pContainer, lMP)
#define IMarkupPointer2_MoveUnitBounded(This, muAction, pIBoundary) (This)->lpVtbl->MoveUnitBounded(This, muAction, pIBoundary)
#define IMarkupPointer2_IsInsideURL(This, pRight, pfResult) (This)->lpVtbl->IsInsideURL(This, pRight, pfResult)
#define IMarkupPointer2_MoveToContent(This, pIElement, fAtStart) (This)->lpVtbl->MoveToContent(This, pIElement, fAtStart)

declare function IMarkupPointer2_IsAtWordBreak_Proxy(byval This as IMarkupPointer2 ptr, byval pfAtBreak as WINBOOL ptr) as HRESULT
declare sub IMarkupPointer2_IsAtWordBreak_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IMarkupPointer2_GetMarkupPosition_Proxy(byval This as IMarkupPointer2 ptr, byval plMP as long ptr) as HRESULT
declare sub IMarkupPointer2_GetMarkupPosition_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IMarkupPointer2_MoveToMarkupPosition_Proxy(byval This as IMarkupPointer2 ptr, byval pContainer as IMarkupContainer ptr, byval lMP as long) as HRESULT
declare sub IMarkupPointer2_MoveToMarkupPosition_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IMarkupPointer2_MoveUnitBounded_Proxy(byval This as IMarkupPointer2 ptr, byval muAction as MOVEUNIT_ACTION, byval pIBoundary as IMarkupPointer ptr) as HRESULT
declare sub IMarkupPointer2_MoveUnitBounded_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IMarkupPointer2_IsInsideURL_Proxy(byval This as IMarkupPointer2 ptr, byval pRight as IMarkupPointer ptr, byval pfResult as WINBOOL ptr) as HRESULT
declare sub IMarkupPointer2_IsInsideURL_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IMarkupPointer2_MoveToContent_Proxy(byval This as IMarkupPointer2 ptr, byval pIElement as IHTMLElement ptr, byval fAtStart as WINBOOL) as HRESULT
declare sub IMarkupPointer2_MoveToContent_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IMarkupTextFrags_INTERFACE_DEFINED__
extern IID_IMarkupTextFrags as const IID
type IMarkupTextFrags as IMarkupTextFrags_

type IMarkupTextFragsVtbl
	QueryInterface as function(byval This as IMarkupTextFrags ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IMarkupTextFrags ptr) as ULONG
	Release as function(byval This as IMarkupTextFrags ptr) as ULONG
	GetTextFragCount as function(byval This as IMarkupTextFrags ptr, byval pcFrags as long ptr) as HRESULT
	GetTextFrag as function(byval This as IMarkupTextFrags ptr, byval iFrag as long, byval pbstrFrag as BSTR ptr, byval pPointerFrag as IMarkupPointer ptr) as HRESULT
	RemoveTextFrag as function(byval This as IMarkupTextFrags ptr, byval iFrag as long) as HRESULT
	InsertTextFrag as function(byval This as IMarkupTextFrags ptr, byval iFrag as long, byval bstrInsert as BSTR, byval pPointerInsert as IMarkupPointer ptr) as HRESULT
	FindTextFragFromMarkupPointer as function(byval This as IMarkupTextFrags ptr, byval pPointerFind as IMarkupPointer ptr, byval piFrag as long ptr, byval pfFragFound as WINBOOL ptr) as HRESULT
end type

type IMarkupTextFrags_
	lpVtbl as IMarkupTextFragsVtbl ptr
end type

#define IMarkupTextFrags_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IMarkupTextFrags_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IMarkupTextFrags_Release(This) (This)->lpVtbl->Release(This)
#define IMarkupTextFrags_GetTextFragCount(This, pcFrags) (This)->lpVtbl->GetTextFragCount(This, pcFrags)
#define IMarkupTextFrags_GetTextFrag(This, iFrag, pbstrFrag, pPointerFrag) (This)->lpVtbl->GetTextFrag(This, iFrag, pbstrFrag, pPointerFrag)
#define IMarkupTextFrags_RemoveTextFrag(This, iFrag) (This)->lpVtbl->RemoveTextFrag(This, iFrag)
#define IMarkupTextFrags_InsertTextFrag(This, iFrag, bstrInsert, pPointerInsert) (This)->lpVtbl->InsertTextFrag(This, iFrag, bstrInsert, pPointerInsert)
#define IMarkupTextFrags_FindTextFragFromMarkupPointer(This, pPointerFind, piFrag, pfFragFound) (This)->lpVtbl->FindTextFragFromMarkupPointer(This, pPointerFind, piFrag, pfFragFound)

declare function IMarkupTextFrags_GetTextFragCount_Proxy(byval This as IMarkupTextFrags ptr, byval pcFrags as long ptr) as HRESULT
declare sub IMarkupTextFrags_GetTextFragCount_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IMarkupTextFrags_GetTextFrag_Proxy(byval This as IMarkupTextFrags ptr, byval iFrag as long, byval pbstrFrag as BSTR ptr, byval pPointerFrag as IMarkupPointer ptr) as HRESULT
declare sub IMarkupTextFrags_GetTextFrag_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IMarkupTextFrags_RemoveTextFrag_Proxy(byval This as IMarkupTextFrags ptr, byval iFrag as long) as HRESULT
declare sub IMarkupTextFrags_RemoveTextFrag_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IMarkupTextFrags_InsertTextFrag_Proxy(byval This as IMarkupTextFrags ptr, byval iFrag as long, byval bstrInsert as BSTR, byval pPointerInsert as IMarkupPointer ptr) as HRESULT
declare sub IMarkupTextFrags_InsertTextFrag_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IMarkupTextFrags_FindTextFragFromMarkupPointer_Proxy(byval This as IMarkupTextFrags ptr, byval pPointerFind as IMarkupPointer ptr, byval piFrag as long ptr, byval pfFragFound as WINBOOL ptr) as HRESULT
declare sub IMarkupTextFrags_FindTextFragFromMarkupPointer_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IXMLGenericParse_INTERFACE_DEFINED__
extern IID_IXMLGenericParse as const IID
type IXMLGenericParse as IXMLGenericParse_

type IXMLGenericParseVtbl
	QueryInterface as function(byval This as IXMLGenericParse ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IXMLGenericParse ptr) as ULONG
	Release as function(byval This as IXMLGenericParse ptr) as ULONG
	SetGenericParse as function(byval This as IXMLGenericParse ptr, byval fDoGeneric as VARIANT_BOOL) as HRESULT
end type

type IXMLGenericParse_
	lpVtbl as IXMLGenericParseVtbl ptr
end type

#define IXMLGenericParse_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IXMLGenericParse_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IXMLGenericParse_Release(This) (This)->lpVtbl->Release(This)
#define IXMLGenericParse_SetGenericParse(This, fDoGeneric) (This)->lpVtbl->SetGenericParse(This, fDoGeneric)
declare function IXMLGenericParse_SetGenericParse_Proxy(byval This as IXMLGenericParse ptr, byval fDoGeneric as VARIANT_BOOL) as HRESULT
declare sub IXMLGenericParse_SetGenericParse_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLEditHost_INTERFACE_DEFINED__
extern IID_IHTMLEditHost as const IID
type IHTMLEditHost as IHTMLEditHost_

type IHTMLEditHostVtbl
	QueryInterface as function(byval This as IHTMLEditHost ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLEditHost ptr) as ULONG
	Release as function(byval This as IHTMLEditHost ptr) as ULONG
	SnapRect as function(byval This as IHTMLEditHost ptr, byval pIElement as IHTMLElement ptr, byval prcNew as RECT ptr, byval eHandle as ELEMENT_CORNER) as HRESULT
end type

type IHTMLEditHost_
	lpVtbl as IHTMLEditHostVtbl ptr
end type

#define IHTMLEditHost_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLEditHost_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLEditHost_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLEditHost_SnapRect(This, pIElement, prcNew, eHandle) (This)->lpVtbl->SnapRect(This, pIElement, prcNew, eHandle)
declare function IHTMLEditHost_SnapRect_Proxy(byval This as IHTMLEditHost ptr, byval pIElement as IHTMLElement ptr, byval prcNew as RECT ptr, byval eHandle as ELEMENT_CORNER) as HRESULT
declare sub IHTMLEditHost_SnapRect_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLEditHost2_INTERFACE_DEFINED__
extern IID_IHTMLEditHost2 as const IID
type IHTMLEditHost2 as IHTMLEditHost2_

type IHTMLEditHost2Vtbl
	QueryInterface as function(byval This as IHTMLEditHost2 ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLEditHost2 ptr) as ULONG
	Release as function(byval This as IHTMLEditHost2 ptr) as ULONG
	SnapRect as function(byval This as IHTMLEditHost2 ptr, byval pIElement as IHTMLElement ptr, byval prcNew as RECT ptr, byval eHandle as ELEMENT_CORNER) as HRESULT
	PreDrag as function(byval This as IHTMLEditHost2 ptr) as HRESULT
end type

type IHTMLEditHost2_
	lpVtbl as IHTMLEditHost2Vtbl ptr
end type

#define IHTMLEditHost2_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLEditHost2_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLEditHost2_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLEditHost2_SnapRect(This, pIElement, prcNew, eHandle) (This)->lpVtbl->SnapRect(This, pIElement, prcNew, eHandle)
#define IHTMLEditHost2_PreDrag(This) (This)->lpVtbl->PreDrag(This)
declare function IHTMLEditHost2_PreDrag_Proxy(byval This as IHTMLEditHost2 ptr) as HRESULT
declare sub IHTMLEditHost2_PreDrag_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __ISequenceNumber_INTERFACE_DEFINED__
extern IID_ISequenceNumber as const IID
type ISequenceNumber as ISequenceNumber_

type ISequenceNumberVtbl
	QueryInterface as function(byval This as ISequenceNumber ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as ISequenceNumber ptr) as ULONG
	Release as function(byval This as ISequenceNumber ptr) as ULONG
	GetSequenceNumber as function(byval This as ISequenceNumber ptr, byval nCurrent as long, byval pnNew as long ptr) as HRESULT
end type

type ISequenceNumber_
	lpVtbl as ISequenceNumberVtbl ptr
end type

#define ISequenceNumber_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define ISequenceNumber_AddRef(This) (This)->lpVtbl->AddRef(This)
#define ISequenceNumber_Release(This) (This)->lpVtbl->Release(This)
#define ISequenceNumber_GetSequenceNumber(This, nCurrent, pnNew) (This)->lpVtbl->GetSequenceNumber(This, nCurrent, pnNew)
declare function ISequenceNumber_GetSequenceNumber_Proxy(byval This as ISequenceNumber ptr, byval nCurrent as long, byval pnNew as long ptr) as HRESULT
declare sub ISequenceNumber_GetSequenceNumber_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IIMEServices_INTERFACE_DEFINED__
extern IID_IIMEServices as const IID
type IIMEServices as IIMEServices_

type IIMEServicesVtbl
	QueryInterface as function(byval This as IIMEServices ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IIMEServices ptr) as ULONG
	Release as function(byval This as IIMEServices ptr) as ULONG
	GetActiveIMM as function(byval This as IIMEServices ptr, byval ppActiveIMM as IActiveIMMApp ptr ptr) as HRESULT
end type

type IIMEServices_
	lpVtbl as IIMEServicesVtbl ptr
end type

#define IIMEServices_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IIMEServices_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IIMEServices_Release(This) (This)->lpVtbl->Release(This)
#define IIMEServices_GetActiveIMM(This, ppActiveIMM) (This)->lpVtbl->GetActiveIMM(This, ppActiveIMM)
declare function IIMEServices_GetActiveIMM_Proxy(byval This as IIMEServices ptr, byval ppActiveIMM as IActiveIMMApp ptr ptr) as HRESULT
declare sub IIMEServices_GetActiveIMM_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __ISelectionServicesListener_INTERFACE_DEFINED__
extern IID_ISelectionServicesListener as const IID
type ISelectionServicesListener as ISelectionServicesListener_

type ISelectionServicesListenerVtbl
	QueryInterface as function(byval This as ISelectionServicesListener ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as ISelectionServicesListener ptr) as ULONG
	Release as function(byval This as ISelectionServicesListener ptr) as ULONG
	BeginSelectionUndo as function(byval This as ISelectionServicesListener ptr) as HRESULT
	EndSelectionUndo as function(byval This as ISelectionServicesListener ptr) as HRESULT
	OnSelectedElementExit as function(byval This as ISelectionServicesListener ptr, byval pIElementStart as IMarkupPointer ptr, byval pIElementEnd as IMarkupPointer ptr, byval pIElementContentStart as IMarkupPointer ptr, byval pIElementContentEnd as IMarkupPointer ptr) as HRESULT
	OnChangeType as function(byval This as ISelectionServicesListener ptr, byval eType as SELECTION_TYPE, byval pIListener as ISelectionServicesListener ptr) as HRESULT
	GetTypeDetail as function(byval This as ISelectionServicesListener ptr, byval pTypeDetail as BSTR ptr) as HRESULT
end type

type ISelectionServicesListener_
	lpVtbl as ISelectionServicesListenerVtbl ptr
end type

#define ISelectionServicesListener_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define ISelectionServicesListener_AddRef(This) (This)->lpVtbl->AddRef(This)
#define ISelectionServicesListener_Release(This) (This)->lpVtbl->Release(This)
#define ISelectionServicesListener_BeginSelectionUndo(This) (This)->lpVtbl->BeginSelectionUndo(This)
#define ISelectionServicesListener_EndSelectionUndo(This) (This)->lpVtbl->EndSelectionUndo(This)
#define ISelectionServicesListener_OnSelectedElementExit(This, pIElementStart, pIElementEnd, pIElementContentStart, pIElementContentEnd) (This)->lpVtbl->OnSelectedElementExit(This, pIElementStart, pIElementEnd, pIElementContentStart, pIElementContentEnd)
#define ISelectionServicesListener_OnChangeType(This, eType, pIListener) (This)->lpVtbl->OnChangeType(This, eType, pIListener)
#define ISelectionServicesListener_GetTypeDetail(This, pTypeDetail) (This)->lpVtbl->GetTypeDetail(This, pTypeDetail)

declare function ISelectionServicesListener_BeginSelectionUndo_Proxy(byval This as ISelectionServicesListener ptr) as HRESULT
declare sub ISelectionServicesListener_BeginSelectionUndo_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function ISelectionServicesListener_EndSelectionUndo_Proxy(byval This as ISelectionServicesListener ptr) as HRESULT
declare sub ISelectionServicesListener_EndSelectionUndo_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function ISelectionServicesListener_OnSelectedElementExit_Proxy(byval This as ISelectionServicesListener ptr, byval pIElementStart as IMarkupPointer ptr, byval pIElementEnd as IMarkupPointer ptr, byval pIElementContentStart as IMarkupPointer ptr, byval pIElementContentEnd as IMarkupPointer ptr) as HRESULT
declare sub ISelectionServicesListener_OnSelectedElementExit_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function ISelectionServicesListener_OnChangeType_Proxy(byval This as ISelectionServicesListener ptr, byval eType as SELECTION_TYPE, byval pIListener as ISelectionServicesListener ptr) as HRESULT
declare sub ISelectionServicesListener_OnChangeType_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function ISelectionServicesListener_GetTypeDetail_Proxy(byval This as ISelectionServicesListener ptr, byval pTypeDetail as BSTR ptr) as HRESULT
declare sub ISelectionServicesListener_GetTypeDetail_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __ISelectionServices_INTERFACE_DEFINED__
extern IID_ISelectionServices as const IID
type ISelectionServices as ISelectionServices_

type ISelectionServicesVtbl
	QueryInterface as function(byval This as ISelectionServices ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as ISelectionServices ptr) as ULONG
	Release as function(byval This as ISelectionServices ptr) as ULONG
	SetSelectionType as function(byval This as ISelectionServices ptr, byval eType as SELECTION_TYPE, byval pIListener as ISelectionServicesListener ptr) as HRESULT
	GetMarkupContainer as function(byval This as ISelectionServices ptr, byval ppIContainer as IMarkupContainer ptr ptr) as HRESULT
	AddSegment as function(byval This as ISelectionServices ptr, byval pIStart as IMarkupPointer ptr, byval pIEnd as IMarkupPointer ptr, byval ppISegmentAdded as ISegment ptr ptr) as HRESULT
	AddElementSegment as function(byval This as ISelectionServices ptr, byval pIElement as IHTMLElement ptr, byval ppISegmentAdded as IElementSegment ptr ptr) as HRESULT
	RemoveSegment as function(byval This as ISelectionServices ptr, byval pISegment as ISegment ptr) as HRESULT
	GetSelectionServicesListener as function(byval This as ISelectionServices ptr, byval ppISelectionServicesListener as ISelectionServicesListener ptr ptr) as HRESULT
end type

type ISelectionServices_
	lpVtbl as ISelectionServicesVtbl ptr
end type

#define ISelectionServices_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define ISelectionServices_AddRef(This) (This)->lpVtbl->AddRef(This)
#define ISelectionServices_Release(This) (This)->lpVtbl->Release(This)
#define ISelectionServices_SetSelectionType(This, eType, pIListener) (This)->lpVtbl->SetSelectionType(This, eType, pIListener)
#define ISelectionServices_GetMarkupContainer(This, ppIContainer) (This)->lpVtbl->GetMarkupContainer(This, ppIContainer)
#define ISelectionServices_AddSegment(This, pIStart, pIEnd, ppISegmentAdded) (This)->lpVtbl->AddSegment(This, pIStart, pIEnd, ppISegmentAdded)
#define ISelectionServices_AddElementSegment(This, pIElement, ppISegmentAdded) (This)->lpVtbl->AddElementSegment(This, pIElement, ppISegmentAdded)
#define ISelectionServices_RemoveSegment(This, pISegment) (This)->lpVtbl->RemoveSegment(This, pISegment)
#define ISelectionServices_GetSelectionServicesListener(This, ppISelectionServicesListener) (This)->lpVtbl->GetSelectionServicesListener(This, ppISelectionServicesListener)

declare function ISelectionServices_SetSelectionType_Proxy(byval This as ISelectionServices ptr, byval eType as SELECTION_TYPE, byval pIListener as ISelectionServicesListener ptr) as HRESULT
declare sub ISelectionServices_SetSelectionType_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function ISelectionServices_GetMarkupContainer_Proxy(byval This as ISelectionServices ptr, byval ppIContainer as IMarkupContainer ptr ptr) as HRESULT
declare sub ISelectionServices_GetMarkupContainer_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function ISelectionServices_AddSegment_Proxy(byval This as ISelectionServices ptr, byval pIStart as IMarkupPointer ptr, byval pIEnd as IMarkupPointer ptr, byval ppISegmentAdded as ISegment ptr ptr) as HRESULT
declare sub ISelectionServices_AddSegment_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function ISelectionServices_AddElementSegment_Proxy(byval This as ISelectionServices ptr, byval pIElement as IHTMLElement ptr, byval ppISegmentAdded as IElementSegment ptr ptr) as HRESULT
declare sub ISelectionServices_AddElementSegment_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function ISelectionServices_RemoveSegment_Proxy(byval This as ISelectionServices ptr, byval pISegment as ISegment ptr) as HRESULT
declare sub ISelectionServices_RemoveSegment_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function ISelectionServices_GetSelectionServicesListener_Proxy(byval This as ISelectionServices ptr, byval ppISelectionServicesListener as ISelectionServicesListener ptr ptr) as HRESULT
declare sub ISelectionServices_GetSelectionServicesListener_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLEditDesigner_INTERFACE_DEFINED__
extern IID_IHTMLEditDesigner as const IID
type IHTMLEditDesigner as IHTMLEditDesigner_

type IHTMLEditDesignerVtbl
	QueryInterface as function(byval This as IHTMLEditDesigner ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLEditDesigner ptr) as ULONG
	Release as function(byval This as IHTMLEditDesigner ptr) as ULONG
	PreHandleEvent as function(byval This as IHTMLEditDesigner ptr, byval inEvtDispId as DISPID, byval pIEventObj as IHTMLEventObj ptr) as HRESULT
	PostHandleEvent as function(byval This as IHTMLEditDesigner ptr, byval inEvtDispId as DISPID, byval pIEventObj as IHTMLEventObj ptr) as HRESULT
	TranslateAccelerator as function(byval This as IHTMLEditDesigner ptr, byval inEvtDispId as DISPID, byval pIEventObj as IHTMLEventObj ptr) as HRESULT
	PostEditorEventNotify as function(byval This as IHTMLEditDesigner ptr, byval inEvtDispId as DISPID, byval pIEventObj as IHTMLEventObj ptr) as HRESULT
end type

type IHTMLEditDesigner_
	lpVtbl as IHTMLEditDesignerVtbl ptr
end type

#define IHTMLEditDesigner_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLEditDesigner_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLEditDesigner_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLEditDesigner_PreHandleEvent(This, inEvtDispId, pIEventObj) (This)->lpVtbl->PreHandleEvent(This, inEvtDispId, pIEventObj)
#define IHTMLEditDesigner_PostHandleEvent(This, inEvtDispId, pIEventObj) (This)->lpVtbl->PostHandleEvent(This, inEvtDispId, pIEventObj)
#define IHTMLEditDesigner_TranslateAccelerator(This, inEvtDispId, pIEventObj) (This)->lpVtbl->TranslateAccelerator(This, inEvtDispId, pIEventObj)
#define IHTMLEditDesigner_PostEditorEventNotify(This, inEvtDispId, pIEventObj) (This)->lpVtbl->PostEditorEventNotify(This, inEvtDispId, pIEventObj)

declare function IHTMLEditDesigner_PreHandleEvent_Proxy(byval This as IHTMLEditDesigner ptr, byval inEvtDispId as DISPID, byval pIEventObj as IHTMLEventObj ptr) as HRESULT
declare sub IHTMLEditDesigner_PreHandleEvent_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLEditDesigner_PostHandleEvent_Proxy(byval This as IHTMLEditDesigner ptr, byval inEvtDispId as DISPID, byval pIEventObj as IHTMLEventObj ptr) as HRESULT
declare sub IHTMLEditDesigner_PostHandleEvent_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLEditDesigner_TranslateAccelerator_Proxy(byval This as IHTMLEditDesigner ptr, byval inEvtDispId as DISPID, byval pIEventObj as IHTMLEventObj ptr) as HRESULT
declare sub IHTMLEditDesigner_TranslateAccelerator_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLEditDesigner_PostEditorEventNotify_Proxy(byval This as IHTMLEditDesigner ptr, byval inEvtDispId as DISPID, byval pIEventObj as IHTMLEventObj ptr) as HRESULT
declare sub IHTMLEditDesigner_PostEditorEventNotify_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLEditServices_INTERFACE_DEFINED__
extern IID_IHTMLEditServices as const IID
type IHTMLEditServices as IHTMLEditServices_

type IHTMLEditServicesVtbl
	QueryInterface as function(byval This as IHTMLEditServices ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLEditServices ptr) as ULONG
	Release as function(byval This as IHTMLEditServices ptr) as ULONG
	AddDesigner as function(byval This as IHTMLEditServices ptr, byval pIDesigner as IHTMLEditDesigner ptr) as HRESULT
	RemoveDesigner as function(byval This as IHTMLEditServices ptr, byval pIDesigner as IHTMLEditDesigner ptr) as HRESULT
	GetSelectionServices as function(byval This as IHTMLEditServices ptr, byval pIContainer as IMarkupContainer ptr, byval ppSelSvc as ISelectionServices ptr ptr) as HRESULT
	MoveToSelectionAnchor as function(byval This as IHTMLEditServices ptr, byval pIStartAnchor as IMarkupPointer ptr) as HRESULT
	MoveToSelectionEnd as function(byval This as IHTMLEditServices ptr, byval pIEndAnchor as IMarkupPointer ptr) as HRESULT
	SelectRange as function(byval This as IHTMLEditServices ptr, byval pStart as IMarkupPointer ptr, byval pEnd as IMarkupPointer ptr, byval eType as SELECTION_TYPE) as HRESULT
end type

type IHTMLEditServices_
	lpVtbl as IHTMLEditServicesVtbl ptr
end type

#define IHTMLEditServices_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLEditServices_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLEditServices_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLEditServices_AddDesigner(This, pIDesigner) (This)->lpVtbl->AddDesigner(This, pIDesigner)
#define IHTMLEditServices_RemoveDesigner(This, pIDesigner) (This)->lpVtbl->RemoveDesigner(This, pIDesigner)
#define IHTMLEditServices_GetSelectionServices(This, pIContainer, ppSelSvc) (This)->lpVtbl->GetSelectionServices(This, pIContainer, ppSelSvc)
#define IHTMLEditServices_MoveToSelectionAnchor(This, pIStartAnchor) (This)->lpVtbl->MoveToSelectionAnchor(This, pIStartAnchor)
#define IHTMLEditServices_MoveToSelectionEnd(This, pIEndAnchor) (This)->lpVtbl->MoveToSelectionEnd(This, pIEndAnchor)
#define IHTMLEditServices_SelectRange(This, pStart, pEnd, eType) (This)->lpVtbl->SelectRange(This, pStart, pEnd, eType)

declare function IHTMLEditServices_AddDesigner_Proxy(byval This as IHTMLEditServices ptr, byval pIDesigner as IHTMLEditDesigner ptr) as HRESULT
declare sub IHTMLEditServices_AddDesigner_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLEditServices_RemoveDesigner_Proxy(byval This as IHTMLEditServices ptr, byval pIDesigner as IHTMLEditDesigner ptr) as HRESULT
declare sub IHTMLEditServices_RemoveDesigner_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLEditServices_GetSelectionServices_Proxy(byval This as IHTMLEditServices ptr, byval pIContainer as IMarkupContainer ptr, byval ppSelSvc as ISelectionServices ptr ptr) as HRESULT
declare sub IHTMLEditServices_GetSelectionServices_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLEditServices_MoveToSelectionAnchor_Proxy(byval This as IHTMLEditServices ptr, byval pIStartAnchor as IMarkupPointer ptr) as HRESULT
declare sub IHTMLEditServices_MoveToSelectionAnchor_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLEditServices_MoveToSelectionEnd_Proxy(byval This as IHTMLEditServices ptr, byval pIEndAnchor as IMarkupPointer ptr) as HRESULT
declare sub IHTMLEditServices_MoveToSelectionEnd_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLEditServices_SelectRange_Proxy(byval This as IHTMLEditServices ptr, byval pStart as IMarkupPointer ptr, byval pEnd as IMarkupPointer ptr, byval eType as SELECTION_TYPE) as HRESULT
declare sub IHTMLEditServices_SelectRange_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLEditServices2_INTERFACE_DEFINED__
extern IID_IHTMLEditServices2 as const IID
type IHTMLEditServices2 as IHTMLEditServices2_

type IHTMLEditServices2Vtbl
	QueryInterface as function(byval This as IHTMLEditServices2 ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLEditServices2 ptr) as ULONG
	Release as function(byval This as IHTMLEditServices2 ptr) as ULONG
	AddDesigner as function(byval This as IHTMLEditServices2 ptr, byval pIDesigner as IHTMLEditDesigner ptr) as HRESULT
	RemoveDesigner as function(byval This as IHTMLEditServices2 ptr, byval pIDesigner as IHTMLEditDesigner ptr) as HRESULT
	GetSelectionServices as function(byval This as IHTMLEditServices2 ptr, byval pIContainer as IMarkupContainer ptr, byval ppSelSvc as ISelectionServices ptr ptr) as HRESULT
	MoveToSelectionAnchor as function(byval This as IHTMLEditServices2 ptr, byval pIStartAnchor as IMarkupPointer ptr) as HRESULT
	MoveToSelectionEnd as function(byval This as IHTMLEditServices2 ptr, byval pIEndAnchor as IMarkupPointer ptr) as HRESULT
	SelectRange as function(byval This as IHTMLEditServices2 ptr, byval pStart as IMarkupPointer ptr, byval pEnd as IMarkupPointer ptr, byval eType as SELECTION_TYPE) as HRESULT
	MoveToSelectionAnchorEx as function(byval This as IHTMLEditServices2 ptr, byval pIStartAnchor as IDisplayPointer ptr) as HRESULT
	MoveToSelectionEndEx as function(byval This as IHTMLEditServices2 ptr, byval pIEndAnchor as IDisplayPointer ptr) as HRESULT
	FreezeVirtualCaretPos as function(byval This as IHTMLEditServices2 ptr, byval fReCompute as WINBOOL) as HRESULT
	UnFreezeVirtualCaretPos as function(byval This as IHTMLEditServices2 ptr, byval fReset as WINBOOL) as HRESULT
end type

type IHTMLEditServices2_
	lpVtbl as IHTMLEditServices2Vtbl ptr
end type

#define IHTMLEditServices2_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLEditServices2_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLEditServices2_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLEditServices2_AddDesigner(This, pIDesigner) (This)->lpVtbl->AddDesigner(This, pIDesigner)
#define IHTMLEditServices2_RemoveDesigner(This, pIDesigner) (This)->lpVtbl->RemoveDesigner(This, pIDesigner)
#define IHTMLEditServices2_GetSelectionServices(This, pIContainer, ppSelSvc) (This)->lpVtbl->GetSelectionServices(This, pIContainer, ppSelSvc)
#define IHTMLEditServices2_MoveToSelectionAnchor(This, pIStartAnchor) (This)->lpVtbl->MoveToSelectionAnchor(This, pIStartAnchor)
#define IHTMLEditServices2_MoveToSelectionEnd(This, pIEndAnchor) (This)->lpVtbl->MoveToSelectionEnd(This, pIEndAnchor)
#define IHTMLEditServices2_SelectRange(This, pStart, pEnd, eType) (This)->lpVtbl->SelectRange(This, pStart, pEnd, eType)
#define IHTMLEditServices2_MoveToSelectionAnchorEx(This, pIStartAnchor) (This)->lpVtbl->MoveToSelectionAnchorEx(This, pIStartAnchor)
#define IHTMLEditServices2_MoveToSelectionEndEx(This, pIEndAnchor) (This)->lpVtbl->MoveToSelectionEndEx(This, pIEndAnchor)
#define IHTMLEditServices2_FreezeVirtualCaretPos(This, fReCompute) (This)->lpVtbl->FreezeVirtualCaretPos(This, fReCompute)
#define IHTMLEditServices2_UnFreezeVirtualCaretPos(This, fReset) (This)->lpVtbl->UnFreezeVirtualCaretPos(This, fReset)

declare function IHTMLEditServices2_MoveToSelectionAnchorEx_Proxy(byval This as IHTMLEditServices2 ptr, byval pIStartAnchor as IDisplayPointer ptr) as HRESULT
declare sub IHTMLEditServices2_MoveToSelectionAnchorEx_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLEditServices2_MoveToSelectionEndEx_Proxy(byval This as IHTMLEditServices2 ptr, byval pIEndAnchor as IDisplayPointer ptr) as HRESULT
declare sub IHTMLEditServices2_MoveToSelectionEndEx_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLEditServices2_FreezeVirtualCaretPos_Proxy(byval This as IHTMLEditServices2 ptr, byval fReCompute as WINBOOL) as HRESULT
declare sub IHTMLEditServices2_FreezeVirtualCaretPos_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLEditServices2_UnFreezeVirtualCaretPos_Proxy(byval This as IHTMLEditServices2 ptr, byval fReset as WINBOOL) as HRESULT
declare sub IHTMLEditServices2_UnFreezeVirtualCaretPos_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLComputedStyle_INTERFACE_DEFINED__
extern IID_IHTMLComputedStyle as const IID

type IHTMLComputedStyleVtbl
	QueryInterface as function(byval This as IHTMLComputedStyle ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLComputedStyle ptr) as ULONG
	Release as function(byval This as IHTMLComputedStyle ptr) as ULONG
	get_bold as function(byval This as IHTMLComputedStyle ptr, byval p as VARIANT_BOOL ptr) as HRESULT
	get_italic as function(byval This as IHTMLComputedStyle ptr, byval p as VARIANT_BOOL ptr) as HRESULT
	get_underline as function(byval This as IHTMLComputedStyle ptr, byval p as VARIANT_BOOL ptr) as HRESULT
	get_overline as function(byval This as IHTMLComputedStyle ptr, byval p as VARIANT_BOOL ptr) as HRESULT
	get_strikeOut as function(byval This as IHTMLComputedStyle ptr, byval p as VARIANT_BOOL ptr) as HRESULT
	get_subScript as function(byval This as IHTMLComputedStyle ptr, byval p as VARIANT_BOOL ptr) as HRESULT
	get_superScript as function(byval This as IHTMLComputedStyle ptr, byval p as VARIANT_BOOL ptr) as HRESULT
	get_explicitFace as function(byval This as IHTMLComputedStyle ptr, byval p as VARIANT_BOOL ptr) as HRESULT
	get_fontWeight as function(byval This as IHTMLComputedStyle ptr, byval p as long ptr) as HRESULT
	get_fontSize as function(byval This as IHTMLComputedStyle ptr, byval p as long ptr) as HRESULT
	get_fontName as function(byval This as IHTMLComputedStyle ptr, byval p as TCHAR ptr) as HRESULT
	get_hasBgColor as function(byval This as IHTMLComputedStyle ptr, byval p as VARIANT_BOOL ptr) as HRESULT
	get_textColor as function(byval This as IHTMLComputedStyle ptr, byval p as DWORD ptr) as HRESULT
	get_backgroundColor as function(byval This as IHTMLComputedStyle ptr, byval p as DWORD ptr) as HRESULT
	get_preFormatted as function(byval This as IHTMLComputedStyle ptr, byval p as VARIANT_BOOL ptr) as HRESULT
	get_direction as function(byval This as IHTMLComputedStyle ptr, byval p as VARIANT_BOOL ptr) as HRESULT
	get_blockDirection as function(byval This as IHTMLComputedStyle ptr, byval p as VARIANT_BOOL ptr) as HRESULT
	get_OL as function(byval This as IHTMLComputedStyle ptr, byval p as VARIANT_BOOL ptr) as HRESULT
	IsEqual as function(byval This as IHTMLComputedStyle ptr, byval pComputedStyle as IHTMLComputedStyle ptr, byval pfEqual as VARIANT_BOOL ptr) as HRESULT
end type

type IHTMLComputedStyle_
	lpVtbl as IHTMLComputedStyleVtbl ptr
end type

#define IHTMLComputedStyle_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLComputedStyle_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLComputedStyle_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLComputedStyle_get_bold(This, p) (This)->lpVtbl->get_bold(This, p)
#define IHTMLComputedStyle_get_italic(This, p) (This)->lpVtbl->get_italic(This, p)
#define IHTMLComputedStyle_get_underline(This, p) (This)->lpVtbl->get_underline(This, p)
#define IHTMLComputedStyle_get_overline(This, p) (This)->lpVtbl->get_overline(This, p)
#define IHTMLComputedStyle_get_strikeOut(This, p) (This)->lpVtbl->get_strikeOut(This, p)
#define IHTMLComputedStyle_get_subScript(This, p) (This)->lpVtbl->get_subScript(This, p)
#define IHTMLComputedStyle_get_superScript(This, p) (This)->lpVtbl->get_superScript(This, p)
#define IHTMLComputedStyle_get_explicitFace(This, p) (This)->lpVtbl->get_explicitFace(This, p)
#define IHTMLComputedStyle_get_fontWeight(This, p) (This)->lpVtbl->get_fontWeight(This, p)
#define IHTMLComputedStyle_get_fontSize(This, p) (This)->lpVtbl->get_fontSize(This, p)
#define IHTMLComputedStyle_get_fontName(This, p) (This)->lpVtbl->get_fontName(This, p)
#define IHTMLComputedStyle_get_hasBgColor(This, p) (This)->lpVtbl->get_hasBgColor(This, p)
#define IHTMLComputedStyle_get_textColor(This, p) (This)->lpVtbl->get_textColor(This, p)
#define IHTMLComputedStyle_get_backgroundColor(This, p) (This)->lpVtbl->get_backgroundColor(This, p)
#define IHTMLComputedStyle_get_preFormatted(This, p) (This)->lpVtbl->get_preFormatted(This, p)
#define IHTMLComputedStyle_get_direction(This, p) (This)->lpVtbl->get_direction(This, p)
#define IHTMLComputedStyle_get_blockDirection(This, p) (This)->lpVtbl->get_blockDirection(This, p)
#define IHTMLComputedStyle_get_OL(This, p) (This)->lpVtbl->get_OL(This, p)
#define IHTMLComputedStyle_IsEqual(This, pComputedStyle, pfEqual) (This)->lpVtbl->IsEqual(This, pComputedStyle, pfEqual)

declare function IHTMLComputedStyle_get_bold_Proxy(byval This as IHTMLComputedStyle ptr, byval p as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLComputedStyle_get_bold_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLComputedStyle_get_italic_Proxy(byval This as IHTMLComputedStyle ptr, byval p as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLComputedStyle_get_italic_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLComputedStyle_get_underline_Proxy(byval This as IHTMLComputedStyle ptr, byval p as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLComputedStyle_get_underline_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLComputedStyle_get_overline_Proxy(byval This as IHTMLComputedStyle ptr, byval p as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLComputedStyle_get_overline_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLComputedStyle_get_strikeOut_Proxy(byval This as IHTMLComputedStyle ptr, byval p as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLComputedStyle_get_strikeOut_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLComputedStyle_get_subScript_Proxy(byval This as IHTMLComputedStyle ptr, byval p as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLComputedStyle_get_subScript_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLComputedStyle_get_superScript_Proxy(byval This as IHTMLComputedStyle ptr, byval p as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLComputedStyle_get_superScript_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLComputedStyle_get_explicitFace_Proxy(byval This as IHTMLComputedStyle ptr, byval p as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLComputedStyle_get_explicitFace_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLComputedStyle_get_fontWeight_Proxy(byval This as IHTMLComputedStyle ptr, byval p as long ptr) as HRESULT
declare sub IHTMLComputedStyle_get_fontWeight_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLComputedStyle_get_fontSize_Proxy(byval This as IHTMLComputedStyle ptr, byval p as long ptr) as HRESULT
declare sub IHTMLComputedStyle_get_fontSize_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLComputedStyle_get_fontName_Proxy(byval This as IHTMLComputedStyle ptr, byval p as TCHAR ptr) as HRESULT
declare sub IHTMLComputedStyle_get_fontName_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLComputedStyle_get_hasBgColor_Proxy(byval This as IHTMLComputedStyle ptr, byval p as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLComputedStyle_get_hasBgColor_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLComputedStyle_get_textColor_Proxy(byval This as IHTMLComputedStyle ptr, byval p as DWORD ptr) as HRESULT
declare sub IHTMLComputedStyle_get_textColor_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLComputedStyle_get_backgroundColor_Proxy(byval This as IHTMLComputedStyle ptr, byval p as DWORD ptr) as HRESULT
declare sub IHTMLComputedStyle_get_backgroundColor_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLComputedStyle_get_preFormatted_Proxy(byval This as IHTMLComputedStyle ptr, byval p as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLComputedStyle_get_preFormatted_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLComputedStyle_get_direction_Proxy(byval This as IHTMLComputedStyle ptr, byval p as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLComputedStyle_get_direction_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLComputedStyle_get_blockDirection_Proxy(byval This as IHTMLComputedStyle ptr, byval p as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLComputedStyle_get_blockDirection_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLComputedStyle_get_OL_Proxy(byval This as IHTMLComputedStyle ptr, byval p as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLComputedStyle_get_OL_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLComputedStyle_IsEqual_Proxy(byval This as IHTMLComputedStyle ptr, byval pComputedStyle as IHTMLComputedStyle ptr, byval pfEqual as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLComputedStyle_IsEqual_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)

extern CLSID_HtmlDlgSafeHelper as const CLSID
extern CLSID_BlockFormats as const CLSID
extern CLSID_FontNames as const CLSID
#define __HTMLNamespaceEvents_DISPINTERFACE_DEFINED__
extern DIID_HTMLNamespaceEvents as const IID
type HTMLNamespaceEvents as HTMLNamespaceEvents_

type HTMLNamespaceEventsVtbl
	QueryInterface as function(byval This as HTMLNamespaceEvents ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as HTMLNamespaceEvents ptr) as ULONG
	Release as function(byval This as HTMLNamespaceEvents ptr) as ULONG
	GetTypeInfoCount as function(byval This as HTMLNamespaceEvents ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as HTMLNamespaceEvents ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as HTMLNamespaceEvents ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as HTMLNamespaceEvents ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type HTMLNamespaceEvents_
	lpVtbl as HTMLNamespaceEventsVtbl ptr
end type

#define HTMLNamespaceEvents_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define HTMLNamespaceEvents_AddRef(This) (This)->lpVtbl->AddRef(This)
#define HTMLNamespaceEvents_Release(This) (This)->lpVtbl->Release(This)
#define HTMLNamespaceEvents_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define HTMLNamespaceEvents_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define HTMLNamespaceEvents_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define HTMLNamespaceEvents_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define __IHTMLNamespace_INTERFACE_DEFINED__
extern IID_IHTMLNamespace as const IID
type IHTMLNamespace as IHTMLNamespace_

type IHTMLNamespaceVtbl
	QueryInterface as function(byval This as IHTMLNamespace ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLNamespace ptr) as ULONG
	Release as function(byval This as IHTMLNamespace ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLNamespace ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLNamespace ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLNamespace ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLNamespace ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	get_name as function(byval This as IHTMLNamespace ptr, byval p as BSTR ptr) as HRESULT
	get_urn as function(byval This as IHTMLNamespace ptr, byval p as BSTR ptr) as HRESULT
	get_tagNames as function(byval This as IHTMLNamespace ptr, byval p as IDispatch ptr ptr) as HRESULT
	get_readyState as function(byval This as IHTMLNamespace ptr, byval p as VARIANT ptr) as HRESULT
	put_onreadystatechange as function(byval This as IHTMLNamespace ptr, byval v as VARIANT) as HRESULT
	get_onreadystatechange as function(byval This as IHTMLNamespace ptr, byval p as VARIANT ptr) as HRESULT
	doImport as function(byval This as IHTMLNamespace ptr, byval bstrImplementationUrl as BSTR) as HRESULT
	attachEvent as function(byval This as IHTMLNamespace ptr, byval event as BSTR, byval pDisp as IDispatch ptr, byval pfResult as VARIANT_BOOL ptr) as HRESULT
	detachEvent as function(byval This as IHTMLNamespace ptr, byval event as BSTR, byval pDisp as IDispatch ptr) as HRESULT
end type

type IHTMLNamespace_
	lpVtbl as IHTMLNamespaceVtbl ptr
end type

#define IHTMLNamespace_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLNamespace_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLNamespace_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLNamespace_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLNamespace_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLNamespace_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLNamespace_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLNamespace_get_name(This, p) (This)->lpVtbl->get_name(This, p)
#define IHTMLNamespace_get_urn(This, p) (This)->lpVtbl->get_urn(This, p)
#define IHTMLNamespace_get_tagNames(This, p) (This)->lpVtbl->get_tagNames(This, p)
#define IHTMLNamespace_get_readyState(This, p) (This)->lpVtbl->get_readyState(This, p)
#define IHTMLNamespace_put_onreadystatechange(This, v) (This)->lpVtbl->put_onreadystatechange(This, v)
#define IHTMLNamespace_get_onreadystatechange(This, p) (This)->lpVtbl->get_onreadystatechange(This, p)
#define IHTMLNamespace_doImport(This, bstrImplementationUrl) (This)->lpVtbl->doImport(This, bstrImplementationUrl)
#define IHTMLNamespace_attachEvent(This, event, pDisp, pfResult) (This)->lpVtbl->attachEvent(This, event, pDisp, pfResult)
#define IHTMLNamespace_detachEvent(This, event, pDisp) (This)->lpVtbl->detachEvent(This, event, pDisp)

declare function IHTMLNamespace_get_name_Proxy(byval This as IHTMLNamespace ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLNamespace_get_name_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLNamespace_get_urn_Proxy(byval This as IHTMLNamespace ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLNamespace_get_urn_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLNamespace_get_tagNames_Proxy(byval This as IHTMLNamespace ptr, byval p as IDispatch ptr ptr) as HRESULT
declare sub IHTMLNamespace_get_tagNames_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLNamespace_get_readyState_Proxy(byval This as IHTMLNamespace ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLNamespace_get_readyState_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLNamespace_put_onreadystatechange_Proxy(byval This as IHTMLNamespace ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLNamespace_put_onreadystatechange_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLNamespace_get_onreadystatechange_Proxy(byval This as IHTMLNamespace ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLNamespace_get_onreadystatechange_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLNamespace_doImport_Proxy(byval This as IHTMLNamespace ptr, byval bstrImplementationUrl as BSTR) as HRESULT
declare sub IHTMLNamespace_doImport_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLNamespace_attachEvent_Proxy(byval This as IHTMLNamespace ptr, byval event as BSTR, byval pDisp as IDispatch ptr, byval pfResult as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLNamespace_attachEvent_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLNamespace_detachEvent_Proxy(byval This as IHTMLNamespace ptr, byval event as BSTR, byval pDisp as IDispatch ptr) as HRESULT
declare sub IHTMLNamespace_detachEvent_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLNamespaceCollection_INTERFACE_DEFINED__
extern IID_IHTMLNamespaceCollection as const IID
type IHTMLNamespaceCollection as IHTMLNamespaceCollection_

type IHTMLNamespaceCollectionVtbl
	QueryInterface as function(byval This as IHTMLNamespaceCollection ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLNamespaceCollection ptr) as ULONG
	Release as function(byval This as IHTMLNamespaceCollection ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLNamespaceCollection ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLNamespaceCollection ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLNamespaceCollection ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLNamespaceCollection ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	get_length as function(byval This as IHTMLNamespaceCollection ptr, byval p as long ptr) as HRESULT
	item as function(byval This as IHTMLNamespaceCollection ptr, byval index as VARIANT, byval ppNamespace as IDispatch ptr ptr) as HRESULT
	add as function(byval This as IHTMLNamespaceCollection ptr, byval bstrNamespace as BSTR, byval bstrUrn as BSTR, byval implementationUrl as VARIANT, byval ppNamespace as IDispatch ptr ptr) as HRESULT
end type

type IHTMLNamespaceCollection_
	lpVtbl as IHTMLNamespaceCollectionVtbl ptr
end type

#define IHTMLNamespaceCollection_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLNamespaceCollection_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLNamespaceCollection_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLNamespaceCollection_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLNamespaceCollection_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLNamespaceCollection_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLNamespaceCollection_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLNamespaceCollection_get_length(This, p) (This)->lpVtbl->get_length(This, p)
#define IHTMLNamespaceCollection_item(This, index, ppNamespace) (This)->lpVtbl->item(This, index, ppNamespace)
#define IHTMLNamespaceCollection_add(This, bstrNamespace, bstrUrn, implementationUrl, ppNamespace) (This)->lpVtbl->add(This, bstrNamespace, bstrUrn, implementationUrl, ppNamespace)

declare function IHTMLNamespaceCollection_get_length_Proxy(byval This as IHTMLNamespaceCollection ptr, byval p as long ptr) as HRESULT
declare sub IHTMLNamespaceCollection_get_length_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLNamespaceCollection_item_Proxy(byval This as IHTMLNamespaceCollection ptr, byval index as VARIANT, byval ppNamespace as IDispatch ptr ptr) as HRESULT
declare sub IHTMLNamespaceCollection_item_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLNamespaceCollection_add_Proxy(byval This as IHTMLNamespaceCollection ptr, byval bstrNamespace as BSTR, byval bstrUrn as BSTR, byval implementationUrl as VARIANT, byval ppNamespace as IDispatch ptr ptr) as HRESULT
declare sub IHTMLNamespaceCollection_add_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
extern CLSID_HTMLNamespace as const CLSID
extern CLSID_HTMLNamespaceCollection as const CLSID
#define __IHTMLPainter_INTERFACE_DEFINED__
extern IID_IHTMLPainter as const IID
type IHTMLPainter as IHTMLPainter_

type IHTMLPainterVtbl
	QueryInterface as function(byval This as IHTMLPainter ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLPainter ptr) as ULONG
	Release as function(byval This as IHTMLPainter ptr) as ULONG
	Draw as function(byval This as IHTMLPainter ptr, byval rcBounds as RECT, byval rcUpdate as RECT, byval lDrawFlags as LONG, byval hdc as HDC, byval pvDrawObject as LPVOID) as HRESULT
	OnResize as function(byval This as IHTMLPainter ptr, byval size as SIZE) as HRESULT
	GetPainterInfo as function(byval This as IHTMLPainter ptr, byval pInfo as HTML_PAINTER_INFO ptr) as HRESULT
	HitTestPoint as function(byval This as IHTMLPainter ptr, byval pt as POINT, byval pbHit as WINBOOL ptr, byval plPartID as LONG ptr) as HRESULT
end type

type IHTMLPainter_
	lpVtbl as IHTMLPainterVtbl ptr
end type

#define IHTMLPainter_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLPainter_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLPainter_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLPainter_Draw(This, rcBounds, rcUpdate, lDrawFlags, hdc, pvDrawObject) (This)->lpVtbl->Draw(This, rcBounds, rcUpdate, lDrawFlags, hdc, pvDrawObject)
#define IHTMLPainter_OnResize(This, size) (This)->lpVtbl->OnResize(This, size)
#define IHTMLPainter_GetPainterInfo(This, pInfo) (This)->lpVtbl->GetPainterInfo(This, pInfo)
#define IHTMLPainter_HitTestPoint(This, pt, pbHit, plPartID) (This)->lpVtbl->HitTestPoint(This, pt, pbHit, plPartID)

declare function IHTMLPainter_Draw_Proxy(byval This as IHTMLPainter ptr, byval rcBounds as RECT, byval rcUpdate as RECT, byval lDrawFlags as LONG, byval hdc as HDC, byval pvDrawObject as LPVOID) as HRESULT
declare sub IHTMLPainter_Draw_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLPainter_OnResize_Proxy(byval This as IHTMLPainter ptr, byval size as SIZE) as HRESULT
declare sub IHTMLPainter_OnResize_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLPainter_GetPainterInfo_Proxy(byval This as IHTMLPainter ptr, byval pInfo as HTML_PAINTER_INFO ptr) as HRESULT
declare sub IHTMLPainter_GetPainterInfo_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLPainter_HitTestPoint_Proxy(byval This as IHTMLPainter ptr, byval pt as POINT, byval pbHit as WINBOOL ptr, byval plPartID as LONG ptr) as HRESULT
declare sub IHTMLPainter_HitTestPoint_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLPaintSite_INTERFACE_DEFINED__
extern IID_IHTMLPaintSite as const IID
type IHTMLPaintSite as IHTMLPaintSite_

type IHTMLPaintSiteVtbl
	QueryInterface as function(byval This as IHTMLPaintSite ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLPaintSite ptr) as ULONG
	Release as function(byval This as IHTMLPaintSite ptr) as ULONG
	InvalidatePainterInfo as function(byval This as IHTMLPaintSite ptr) as HRESULT
	InvalidateRect as function(byval This as IHTMLPaintSite ptr, byval prcInvalid as RECT ptr) as HRESULT
	InvalidateRegion as function(byval This as IHTMLPaintSite ptr, byval rgnInvalid as HRGN) as HRESULT
	GetDrawInfo as function(byval This as IHTMLPaintSite ptr, byval lFlags as LONG, byval pDrawInfo as HTML_PAINT_DRAW_INFO ptr) as HRESULT
	TransformGlobalToLocal as function(byval This as IHTMLPaintSite ptr, byval ptGlobal as POINT, byval pptLocal as POINT ptr) as HRESULT
	TransformLocalToGlobal as function(byval This as IHTMLPaintSite ptr, byval ptLocal as POINT, byval pptGlobal as POINT ptr) as HRESULT
	GetHitTestCookie as function(byval This as IHTMLPaintSite ptr, byval plCookie as LONG ptr) as HRESULT
end type

type IHTMLPaintSite_
	lpVtbl as IHTMLPaintSiteVtbl ptr
end type

#define IHTMLPaintSite_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLPaintSite_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLPaintSite_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLPaintSite_InvalidatePainterInfo(This) (This)->lpVtbl->InvalidatePainterInfo(This)
#define IHTMLPaintSite_InvalidateRect(This, prcInvalid) (This)->lpVtbl->InvalidateRect(This, prcInvalid)
#define IHTMLPaintSite_InvalidateRegion(This, rgnInvalid) (This)->lpVtbl->InvalidateRegion(This, rgnInvalid)
#define IHTMLPaintSite_GetDrawInfo(This, lFlags, pDrawInfo) (This)->lpVtbl->GetDrawInfo(This, lFlags, pDrawInfo)
#define IHTMLPaintSite_TransformGlobalToLocal(This, ptGlobal, pptLocal) (This)->lpVtbl->TransformGlobalToLocal(This, ptGlobal, pptLocal)
#define IHTMLPaintSite_TransformLocalToGlobal(This, ptLocal, pptGlobal) (This)->lpVtbl->TransformLocalToGlobal(This, ptLocal, pptGlobal)
#define IHTMLPaintSite_GetHitTestCookie(This, plCookie) (This)->lpVtbl->GetHitTestCookie(This, plCookie)

declare function IHTMLPaintSite_InvalidatePainterInfo_Proxy(byval This as IHTMLPaintSite ptr) as HRESULT
declare sub IHTMLPaintSite_InvalidatePainterInfo_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLPaintSite_InvalidateRect_Proxy(byval This as IHTMLPaintSite ptr, byval prcInvalid as RECT ptr) as HRESULT
declare sub IHTMLPaintSite_InvalidateRect_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLPaintSite_InvalidateRegion_Proxy(byval This as IHTMLPaintSite ptr, byval rgnInvalid as HRGN) as HRESULT
declare sub IHTMLPaintSite_InvalidateRegion_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLPaintSite_GetDrawInfo_Proxy(byval This as IHTMLPaintSite ptr, byval lFlags as LONG, byval pDrawInfo as HTML_PAINT_DRAW_INFO ptr) as HRESULT
declare sub IHTMLPaintSite_GetDrawInfo_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLPaintSite_TransformGlobalToLocal_Proxy(byval This as IHTMLPaintSite ptr, byval ptGlobal as POINT, byval pptLocal as POINT ptr) as HRESULT
declare sub IHTMLPaintSite_TransformGlobalToLocal_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLPaintSite_TransformLocalToGlobal_Proxy(byval This as IHTMLPaintSite ptr, byval ptLocal as POINT, byval pptGlobal as POINT ptr) as HRESULT
declare sub IHTMLPaintSite_TransformLocalToGlobal_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLPaintSite_GetHitTestCookie_Proxy(byval This as IHTMLPaintSite ptr, byval plCookie as LONG ptr) as HRESULT
declare sub IHTMLPaintSite_GetHitTestCookie_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLPainterEventInfo_INTERFACE_DEFINED__
extern IID_IHTMLPainterEventInfo as const IID
type IHTMLPainterEventInfo as IHTMLPainterEventInfo_

type IHTMLPainterEventInfoVtbl
	QueryInterface as function(byval This as IHTMLPainterEventInfo ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLPainterEventInfo ptr) as ULONG
	Release as function(byval This as IHTMLPainterEventInfo ptr) as ULONG
	GetEventInfoFlags as function(byval This as IHTMLPainterEventInfo ptr, byval plEventInfoFlags as long ptr) as HRESULT
	GetEventTarget as function(byval This as IHTMLPainterEventInfo ptr, byval ppElement as IHTMLElement ptr ptr) as HRESULT
	SetCursor as function(byval This as IHTMLPainterEventInfo ptr, byval lPartID as LONG) as HRESULT
	StringFromPartID as function(byval This as IHTMLPainterEventInfo ptr, byval lPartID as LONG, byval pbstrPart as BSTR ptr) as HRESULT
end type

type IHTMLPainterEventInfo_
	lpVtbl as IHTMLPainterEventInfoVtbl ptr
end type

#define IHTMLPainterEventInfo_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLPainterEventInfo_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLPainterEventInfo_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLPainterEventInfo_GetEventInfoFlags(This, plEventInfoFlags) (This)->lpVtbl->GetEventInfoFlags(This, plEventInfoFlags)
#define IHTMLPainterEventInfo_GetEventTarget(This, ppElement) (This)->lpVtbl->GetEventTarget(This, ppElement)
#define IHTMLPainterEventInfo_SetCursor(This, lPartID) (This)->lpVtbl->SetCursor(This, lPartID)
#define IHTMLPainterEventInfo_StringFromPartID(This, lPartID, pbstrPart) (This)->lpVtbl->StringFromPartID(This, lPartID, pbstrPart)

declare function IHTMLPainterEventInfo_GetEventInfoFlags_Proxy(byval This as IHTMLPainterEventInfo ptr, byval plEventInfoFlags as long ptr) as HRESULT
declare sub IHTMLPainterEventInfo_GetEventInfoFlags_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLPainterEventInfo_GetEventTarget_Proxy(byval This as IHTMLPainterEventInfo ptr, byval ppElement as IHTMLElement ptr ptr) as HRESULT
declare sub IHTMLPainterEventInfo_GetEventTarget_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLPainterEventInfo_SetCursor_Proxy(byval This as IHTMLPainterEventInfo ptr, byval lPartID as LONG) as HRESULT
declare sub IHTMLPainterEventInfo_SetCursor_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLPainterEventInfo_StringFromPartID_Proxy(byval This as IHTMLPainterEventInfo ptr, byval lPartID as LONG, byval pbstrPart as BSTR ptr) as HRESULT
declare sub IHTMLPainterEventInfo_StringFromPartID_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLPainterOverlay_INTERFACE_DEFINED__
extern IID_IHTMLPainterOverlay as const IID
type IHTMLPainterOverlay as IHTMLPainterOverlay_

type IHTMLPainterOverlayVtbl
	QueryInterface as function(byval This as IHTMLPainterOverlay ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLPainterOverlay ptr) as ULONG
	Release as function(byval This as IHTMLPainterOverlay ptr) as ULONG
	OnMove as function(byval This as IHTMLPainterOverlay ptr, byval rcDevice as RECT) as HRESULT
end type

type IHTMLPainterOverlay_
	lpVtbl as IHTMLPainterOverlayVtbl ptr
end type

#define IHTMLPainterOverlay_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLPainterOverlay_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLPainterOverlay_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLPainterOverlay_OnMove(This, rcDevice) (This)->lpVtbl->OnMove(This, rcDevice)
declare function IHTMLPainterOverlay_OnMove_Proxy(byval This as IHTMLPainterOverlay ptr, byval rcDevice as RECT) as HRESULT
declare sub IHTMLPainterOverlay_OnMove_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLIPrintCollection_INTERFACE_DEFINED__
extern IID_IHTMLIPrintCollection as const IID
type IHTMLIPrintCollection as IHTMLIPrintCollection_

type IHTMLIPrintCollectionVtbl
	QueryInterface as function(byval This as IHTMLIPrintCollection ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLIPrintCollection ptr) as ULONG
	Release as function(byval This as IHTMLIPrintCollection ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLIPrintCollection ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLIPrintCollection ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLIPrintCollection ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLIPrintCollection ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	get_length as function(byval This as IHTMLIPrintCollection ptr, byval p as long ptr) as HRESULT
	get__newEnum as function(byval This as IHTMLIPrintCollection ptr, byval p as IUnknown ptr ptr) as HRESULT
	item as function(byval This as IHTMLIPrintCollection ptr, byval index as long, byval ppIPrint as IUnknown ptr ptr) as HRESULT
end type

type IHTMLIPrintCollection_
	lpVtbl as IHTMLIPrintCollectionVtbl ptr
end type

#define IHTMLIPrintCollection_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLIPrintCollection_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLIPrintCollection_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLIPrintCollection_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLIPrintCollection_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLIPrintCollection_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLIPrintCollection_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLIPrintCollection_get_length(This, p) (This)->lpVtbl->get_length(This, p)
#define IHTMLIPrintCollection_get__newEnum(This, p) (This)->lpVtbl->get__newEnum(This, p)
#define IHTMLIPrintCollection_item(This, index, ppIPrint) (This)->lpVtbl->item(This, index, ppIPrint)

declare function IHTMLIPrintCollection_get_length_Proxy(byval This as IHTMLIPrintCollection ptr, byval p as long ptr) as HRESULT
declare sub IHTMLIPrintCollection_get_length_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLIPrintCollection_get__newEnum_Proxy(byval This as IHTMLIPrintCollection ptr, byval p as IUnknown ptr ptr) as HRESULT
declare sub IHTMLIPrintCollection_get__newEnum_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLIPrintCollection_item_Proxy(byval This as IHTMLIPrintCollection ptr, byval index as long, byval ppIPrint as IUnknown ptr ptr) as HRESULT
declare sub IHTMLIPrintCollection_item_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IEnumPrivacyRecords_INTERFACE_DEFINED__
extern IID_IEnumPrivacyRecords as const IID
type IEnumPrivacyRecords as IEnumPrivacyRecords_

type IEnumPrivacyRecordsVtbl
	QueryInterface as function(byval This as IEnumPrivacyRecords ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IEnumPrivacyRecords ptr) as ULONG
	Release as function(byval This as IEnumPrivacyRecords ptr) as ULONG
	Reset as function(byval This as IEnumPrivacyRecords ptr) as HRESULT
	GetSize as function(byval This as IEnumPrivacyRecords ptr, byval pSize as ULONG ptr) as HRESULT
	GetPrivacyImpacted as function(byval This as IEnumPrivacyRecords ptr, byval pState as WINBOOL ptr) as HRESULT
	Next as function(byval This as IEnumPrivacyRecords ptr, byval pbstrUrl as BSTR ptr, byval pbstrPolicyRef as BSTR ptr, byval pdwReserved as LONG ptr, byval pdwPrivacyFlags as DWORD ptr) as HRESULT
end type

type IEnumPrivacyRecords_
	lpVtbl as IEnumPrivacyRecordsVtbl ptr
end type

#define IEnumPrivacyRecords_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IEnumPrivacyRecords_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IEnumPrivacyRecords_Release(This) (This)->lpVtbl->Release(This)
#define IEnumPrivacyRecords_Reset(This) (This)->lpVtbl->Reset(This)
#define IEnumPrivacyRecords_GetSize(This, pSize) (This)->lpVtbl->GetSize(This, pSize)
#define IEnumPrivacyRecords_GetPrivacyImpacted(This, pState) (This)->lpVtbl->GetPrivacyImpacted(This, pState)
#define IEnumPrivacyRecords_Next(This, pbstrUrl, pbstrPolicyRef, pdwReserved, pdwPrivacyFlags) (This)->lpVtbl->Next(This, pbstrUrl, pbstrPolicyRef, pdwReserved, pdwPrivacyFlags)

declare function IEnumPrivacyRecords_Reset_Proxy(byval This as IEnumPrivacyRecords ptr) as HRESULT
declare sub IEnumPrivacyRecords_Reset_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IEnumPrivacyRecords_GetSize_Proxy(byval This as IEnumPrivacyRecords ptr, byval pSize as ULONG ptr) as HRESULT
declare sub IEnumPrivacyRecords_GetSize_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IEnumPrivacyRecords_GetPrivacyImpacted_Proxy(byval This as IEnumPrivacyRecords ptr, byval pState as WINBOOL ptr) as HRESULT
declare sub IEnumPrivacyRecords_GetPrivacyImpacted_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IEnumPrivacyRecords_Next_Proxy(byval This as IEnumPrivacyRecords ptr, byval pbstrUrl as BSTR ptr, byval pbstrPolicyRef as BSTR ptr, byval pdwReserved as LONG ptr, byval pdwPrivacyFlags as DWORD ptr) as HRESULT
declare sub IEnumPrivacyRecords_Next_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLDialog_INTERFACE_DEFINED__
extern IID_IHTMLDialog as const IID
type IHTMLDialog as IHTMLDialog_

type IHTMLDialogVtbl
	QueryInterface as function(byval This as IHTMLDialog ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLDialog ptr) as ULONG
	Release as function(byval This as IHTMLDialog ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLDialog ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLDialog ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLDialog ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLDialog ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	put_dialogTop as function(byval This as IHTMLDialog ptr, byval v as VARIANT) as HRESULT
	get_dialogTop as function(byval This as IHTMLDialog ptr, byval p as VARIANT ptr) as HRESULT
	put_dialogLeft as function(byval This as IHTMLDialog ptr, byval v as VARIANT) as HRESULT
	get_dialogLeft as function(byval This as IHTMLDialog ptr, byval p as VARIANT ptr) as HRESULT
	put_dialogWidth as function(byval This as IHTMLDialog ptr, byval v as VARIANT) as HRESULT
	get_dialogWidth as function(byval This as IHTMLDialog ptr, byval p as VARIANT ptr) as HRESULT
	put_dialogHeight as function(byval This as IHTMLDialog ptr, byval v as VARIANT) as HRESULT
	get_dialogHeight as function(byval This as IHTMLDialog ptr, byval p as VARIANT ptr) as HRESULT
	get_dialogArguments as function(byval This as IHTMLDialog ptr, byval p as VARIANT ptr) as HRESULT
	get_menuArguments as function(byval This as IHTMLDialog ptr, byval p as VARIANT ptr) as HRESULT
	put_returnValue as function(byval This as IHTMLDialog ptr, byval v as VARIANT) as HRESULT
	get_returnValue as function(byval This as IHTMLDialog ptr, byval p as VARIANT ptr) as HRESULT
	close as function(byval This as IHTMLDialog ptr) as HRESULT
	toString as function(byval This as IHTMLDialog ptr, byval String as BSTR ptr) as HRESULT
end type

type IHTMLDialog_
	lpVtbl as IHTMLDialogVtbl ptr
end type

#define IHTMLDialog_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLDialog_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLDialog_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLDialog_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLDialog_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLDialog_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLDialog_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLDialog_put_dialogTop(This, v) (This)->lpVtbl->put_dialogTop(This, v)
#define IHTMLDialog_get_dialogTop(This, p) (This)->lpVtbl->get_dialogTop(This, p)
#define IHTMLDialog_put_dialogLeft(This, v) (This)->lpVtbl->put_dialogLeft(This, v)
#define IHTMLDialog_get_dialogLeft(This, p) (This)->lpVtbl->get_dialogLeft(This, p)
#define IHTMLDialog_put_dialogWidth(This, v) (This)->lpVtbl->put_dialogWidth(This, v)
#define IHTMLDialog_get_dialogWidth(This, p) (This)->lpVtbl->get_dialogWidth(This, p)
#define IHTMLDialog_put_dialogHeight(This, v) (This)->lpVtbl->put_dialogHeight(This, v)
#define IHTMLDialog_get_dialogHeight(This, p) (This)->lpVtbl->get_dialogHeight(This, p)
#define IHTMLDialog_get_dialogArguments(This, p) (This)->lpVtbl->get_dialogArguments(This, p)
#define IHTMLDialog_get_menuArguments(This, p) (This)->lpVtbl->get_menuArguments(This, p)
#define IHTMLDialog_put_returnValue(This, v) (This)->lpVtbl->put_returnValue(This, v)
#define IHTMLDialog_get_returnValue(This, p) (This)->lpVtbl->get_returnValue(This, p)
#define IHTMLDialog_close(This) (This)->lpVtbl->close(This)
#define IHTMLDialog_toString(This, String) (This)->lpVtbl->toString(This, String)

declare function IHTMLDialog_put_dialogTop_Proxy(byval This as IHTMLDialog ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLDialog_put_dialogTop_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDialog_get_dialogTop_Proxy(byval This as IHTMLDialog ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLDialog_get_dialogTop_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDialog_put_dialogLeft_Proxy(byval This as IHTMLDialog ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLDialog_put_dialogLeft_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDialog_get_dialogLeft_Proxy(byval This as IHTMLDialog ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLDialog_get_dialogLeft_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDialog_put_dialogWidth_Proxy(byval This as IHTMLDialog ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLDialog_put_dialogWidth_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDialog_get_dialogWidth_Proxy(byval This as IHTMLDialog ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLDialog_get_dialogWidth_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDialog_put_dialogHeight_Proxy(byval This as IHTMLDialog ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLDialog_put_dialogHeight_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDialog_get_dialogHeight_Proxy(byval This as IHTMLDialog ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLDialog_get_dialogHeight_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDialog_get_dialogArguments_Proxy(byval This as IHTMLDialog ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLDialog_get_dialogArguments_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDialog_get_menuArguments_Proxy(byval This as IHTMLDialog ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLDialog_get_menuArguments_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDialog_put_returnValue_Proxy(byval This as IHTMLDialog ptr, byval v as VARIANT) as HRESULT
declare sub IHTMLDialog_put_returnValue_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDialog_get_returnValue_Proxy(byval This as IHTMLDialog ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLDialog_get_returnValue_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDialog_close_Proxy(byval This as IHTMLDialog ptr) as HRESULT
declare sub IHTMLDialog_close_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDialog_toString_Proxy(byval This as IHTMLDialog ptr, byval String as BSTR ptr) as HRESULT
declare sub IHTMLDialog_toString_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLDialog2_INTERFACE_DEFINED__
extern IID_IHTMLDialog2 as const IID
type IHTMLDialog2 as IHTMLDialog2_

type IHTMLDialog2Vtbl
	QueryInterface as function(byval This as IHTMLDialog2 ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLDialog2 ptr) as ULONG
	Release as function(byval This as IHTMLDialog2 ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLDialog2 ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLDialog2 ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLDialog2 ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLDialog2 ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	put_status as function(byval This as IHTMLDialog2 ptr, byval v as BSTR) as HRESULT
	get_status as function(byval This as IHTMLDialog2 ptr, byval p as BSTR ptr) as HRESULT
	put_resizable as function(byval This as IHTMLDialog2 ptr, byval v as BSTR) as HRESULT
	get_resizable as function(byval This as IHTMLDialog2 ptr, byval p as BSTR ptr) as HRESULT
end type

type IHTMLDialog2_
	lpVtbl as IHTMLDialog2Vtbl ptr
end type

#define IHTMLDialog2_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLDialog2_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLDialog2_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLDialog2_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLDialog2_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLDialog2_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLDialog2_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLDialog2_put_status(This, v) (This)->lpVtbl->put_status(This, v)
#define IHTMLDialog2_get_status(This, p) (This)->lpVtbl->get_status(This, p)
#define IHTMLDialog2_put_resizable(This, v) (This)->lpVtbl->put_resizable(This, v)
#define IHTMLDialog2_get_resizable(This, p) (This)->lpVtbl->get_resizable(This, p)

declare function IHTMLDialog2_put_status_Proxy(byval This as IHTMLDialog2 ptr, byval v as BSTR) as HRESULT
declare sub IHTMLDialog2_put_status_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDialog2_get_status_Proxy(byval This as IHTMLDialog2 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLDialog2_get_status_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDialog2_put_resizable_Proxy(byval This as IHTMLDialog2 ptr, byval v as BSTR) as HRESULT
declare sub IHTMLDialog2_put_resizable_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDialog2_get_resizable_Proxy(byval This as IHTMLDialog2 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLDialog2_get_resizable_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLDialog3_INTERFACE_DEFINED__
extern IID_IHTMLDialog3 as const IID
type IHTMLDialog3 as IHTMLDialog3_

type IHTMLDialog3Vtbl
	QueryInterface as function(byval This as IHTMLDialog3 ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLDialog3 ptr) as ULONG
	Release as function(byval This as IHTMLDialog3 ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLDialog3 ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLDialog3 ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLDialog3 ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLDialog3 ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	put_unadorned as function(byval This as IHTMLDialog3 ptr, byval v as BSTR) as HRESULT
	get_unadorned as function(byval This as IHTMLDialog3 ptr, byval p as BSTR ptr) as HRESULT
	put_dialogHide as function(byval This as IHTMLDialog3 ptr, byval v as BSTR) as HRESULT
	get_dialogHide as function(byval This as IHTMLDialog3 ptr, byval p as BSTR ptr) as HRESULT
end type

type IHTMLDialog3_
	lpVtbl as IHTMLDialog3Vtbl ptr
end type

#define IHTMLDialog3_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLDialog3_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLDialog3_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLDialog3_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLDialog3_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLDialog3_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLDialog3_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLDialog3_put_unadorned(This, v) (This)->lpVtbl->put_unadorned(This, v)
#define IHTMLDialog3_get_unadorned(This, p) (This)->lpVtbl->get_unadorned(This, p)
#define IHTMLDialog3_put_dialogHide(This, v) (This)->lpVtbl->put_dialogHide(This, v)
#define IHTMLDialog3_get_dialogHide(This, p) (This)->lpVtbl->get_dialogHide(This, p)

declare function IHTMLDialog3_put_unadorned_Proxy(byval This as IHTMLDialog3 ptr, byval v as BSTR) as HRESULT
declare sub IHTMLDialog3_put_unadorned_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDialog3_get_unadorned_Proxy(byval This as IHTMLDialog3 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLDialog3_get_unadorned_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDialog3_put_dialogHide_Proxy(byval This as IHTMLDialog3 ptr, byval v as BSTR) as HRESULT
declare sub IHTMLDialog3_put_dialogHide_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLDialog3_get_dialogHide_Proxy(byval This as IHTMLDialog3 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLDialog3_get_dialogHide_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLModelessInit_INTERFACE_DEFINED__
extern IID_IHTMLModelessInit as const IID
type IHTMLModelessInit as IHTMLModelessInit_

type IHTMLModelessInitVtbl
	QueryInterface as function(byval This as IHTMLModelessInit ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLModelessInit ptr) as ULONG
	Release as function(byval This as IHTMLModelessInit ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLModelessInit ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLModelessInit ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLModelessInit ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLModelessInit ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	get_parameters as function(byval This as IHTMLModelessInit ptr, byval p as VARIANT ptr) as HRESULT
	get_optionString as function(byval This as IHTMLModelessInit ptr, byval p as VARIANT ptr) as HRESULT
	get_moniker as function(byval This as IHTMLModelessInit ptr, byval p as IUnknown ptr ptr) as HRESULT
	get_document as function(byval This as IHTMLModelessInit ptr, byval p as IUnknown ptr ptr) as HRESULT
end type

type IHTMLModelessInit_
	lpVtbl as IHTMLModelessInitVtbl ptr
end type

#define IHTMLModelessInit_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLModelessInit_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLModelessInit_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLModelessInit_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLModelessInit_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLModelessInit_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLModelessInit_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLModelessInit_get_parameters(This, p) (This)->lpVtbl->get_parameters(This, p)
#define IHTMLModelessInit_get_optionString(This, p) (This)->lpVtbl->get_optionString(This, p)
#define IHTMLModelessInit_get_moniker(This, p) (This)->lpVtbl->get_moniker(This, p)
#define IHTMLModelessInit_get_document(This, p) (This)->lpVtbl->get_document(This, p)

declare function IHTMLModelessInit_get_parameters_Proxy(byval This as IHTMLModelessInit ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLModelessInit_get_parameters_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLModelessInit_get_optionString_Proxy(byval This as IHTMLModelessInit ptr, byval p as VARIANT ptr) as HRESULT
declare sub IHTMLModelessInit_get_optionString_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLModelessInit_get_moniker_Proxy(byval This as IHTMLModelessInit ptr, byval p as IUnknown ptr ptr) as HRESULT
declare sub IHTMLModelessInit_get_moniker_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLModelessInit_get_document_Proxy(byval This as IHTMLModelessInit ptr, byval p as IUnknown ptr ptr) as HRESULT
declare sub IHTMLModelessInit_get_document_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
extern CLSID_ThreadDialogProcParam as const CLSID
extern CLSID_HTMLDialog as const CLSID
#define __IHTMLPopup_INTERFACE_DEFINED__
extern IID_IHTMLPopup as const IID
type IHTMLPopup as IHTMLPopup_

type IHTMLPopupVtbl
	QueryInterface as function(byval This as IHTMLPopup ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLPopup ptr) as ULONG
	Release as function(byval This as IHTMLPopup ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLPopup ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLPopup ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLPopup ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLPopup ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	show as function(byval This as IHTMLPopup ptr, byval x as long, byval y as long, byval w as long, byval h as long, byval pElement as VARIANT ptr) as HRESULT
	hide as function(byval This as IHTMLPopup ptr) as HRESULT
	get_document as function(byval This as IHTMLPopup ptr, byval p as IHTMLDocument ptr ptr) as HRESULT
	get_isOpen as function(byval This as IHTMLPopup ptr, byval p as VARIANT_BOOL ptr) as HRESULT
end type

type IHTMLPopup_
	lpVtbl as IHTMLPopupVtbl ptr
end type

#define IHTMLPopup_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLPopup_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLPopup_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLPopup_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLPopup_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLPopup_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLPopup_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLPopup_show(This, x, y, w, h, pElement) (This)->lpVtbl->show(This, x, y, w, h, pElement)
#define IHTMLPopup_hide(This) (This)->lpVtbl->hide(This)
#define IHTMLPopup_get_document(This, p) (This)->lpVtbl->get_document(This, p)
#define IHTMLPopup_get_isOpen(This, p) (This)->lpVtbl->get_isOpen(This, p)

declare function IHTMLPopup_show_Proxy(byval This as IHTMLPopup ptr, byval x as long, byval y as long, byval w as long, byval h as long, byval pElement as VARIANT ptr) as HRESULT
declare sub IHTMLPopup_show_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLPopup_hide_Proxy(byval This as IHTMLPopup ptr) as HRESULT
declare sub IHTMLPopup_hide_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLPopup_get_document_Proxy(byval This as IHTMLPopup ptr, byval p as IHTMLDocument ptr ptr) as HRESULT
declare sub IHTMLPopup_get_document_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLPopup_get_isOpen_Proxy(byval This as IHTMLPopup ptr, byval p as VARIANT_BOOL ptr) as HRESULT
declare sub IHTMLPopup_get_isOpen_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __DispHTMLPopup_DISPINTERFACE_DEFINED__
extern DIID_DispHTMLPopup as const IID
type DispHTMLPopup as DispHTMLPopup_

type DispHTMLPopupVtbl
	QueryInterface as function(byval This as DispHTMLPopup ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as DispHTMLPopup ptr) as ULONG
	Release as function(byval This as DispHTMLPopup ptr) as ULONG
	GetTypeInfoCount as function(byval This as DispHTMLPopup ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as DispHTMLPopup ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as DispHTMLPopup ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as DispHTMLPopup ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type DispHTMLPopup_
	lpVtbl as DispHTMLPopupVtbl ptr
end type

#define DispHTMLPopup_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define DispHTMLPopup_AddRef(This) (This)->lpVtbl->AddRef(This)
#define DispHTMLPopup_Release(This) (This)->lpVtbl->Release(This)
#define DispHTMLPopup_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define DispHTMLPopup_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define DispHTMLPopup_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define DispHTMLPopup_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
extern CLSID_HTMLPopup as const CLSID
#define __IHTMLAppBehavior_INTERFACE_DEFINED__
extern IID_IHTMLAppBehavior as const IID
type IHTMLAppBehavior as IHTMLAppBehavior_

type IHTMLAppBehaviorVtbl
	QueryInterface as function(byval This as IHTMLAppBehavior ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLAppBehavior ptr) as ULONG
	Release as function(byval This as IHTMLAppBehavior ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLAppBehavior ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLAppBehavior ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLAppBehavior ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLAppBehavior ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	put_applicationName as function(byval This as IHTMLAppBehavior ptr, byval v as BSTR) as HRESULT
	get_applicationName as function(byval This as IHTMLAppBehavior ptr, byval p as BSTR ptr) as HRESULT
	put_version as function(byval This as IHTMLAppBehavior ptr, byval v as BSTR) as HRESULT
	get_version as function(byval This as IHTMLAppBehavior ptr, byval p as BSTR ptr) as HRESULT
	put_icon as function(byval This as IHTMLAppBehavior ptr, byval v as BSTR) as HRESULT
	get_icon as function(byval This as IHTMLAppBehavior ptr, byval p as BSTR ptr) as HRESULT
	put_singleInstance as function(byval This as IHTMLAppBehavior ptr, byval v as BSTR) as HRESULT
	get_singleInstance as function(byval This as IHTMLAppBehavior ptr, byval p as BSTR ptr) as HRESULT
	put_minimizeButton as function(byval This as IHTMLAppBehavior ptr, byval v as BSTR) as HRESULT
	get_minimizeButton as function(byval This as IHTMLAppBehavior ptr, byval p as BSTR ptr) as HRESULT
	put_maximizeButton as function(byval This as IHTMLAppBehavior ptr, byval v as BSTR) as HRESULT
	get_maximizeButton as function(byval This as IHTMLAppBehavior ptr, byval p as BSTR ptr) as HRESULT
	put_border as function(byval This as IHTMLAppBehavior ptr, byval v as BSTR) as HRESULT
	get_border as function(byval This as IHTMLAppBehavior ptr, byval p as BSTR ptr) as HRESULT
	put_borderStyle as function(byval This as IHTMLAppBehavior ptr, byval v as BSTR) as HRESULT
	get_borderStyle as function(byval This as IHTMLAppBehavior ptr, byval p as BSTR ptr) as HRESULT
	put_sysMenu as function(byval This as IHTMLAppBehavior ptr, byval v as BSTR) as HRESULT
	get_sysMenu as function(byval This as IHTMLAppBehavior ptr, byval p as BSTR ptr) as HRESULT
	put_caption as function(byval This as IHTMLAppBehavior ptr, byval v as BSTR) as HRESULT
	get_caption as function(byval This as IHTMLAppBehavior ptr, byval p as BSTR ptr) as HRESULT
	put_windowState as function(byval This as IHTMLAppBehavior ptr, byval v as BSTR) as HRESULT
	get_windowState as function(byval This as IHTMLAppBehavior ptr, byval p as BSTR ptr) as HRESULT
	put_showInTaskBar as function(byval This as IHTMLAppBehavior ptr, byval v as BSTR) as HRESULT
	get_showInTaskBar as function(byval This as IHTMLAppBehavior ptr, byval p as BSTR ptr) as HRESULT
	get_commandLine as function(byval This as IHTMLAppBehavior ptr, byval p as BSTR ptr) as HRESULT
end type

type IHTMLAppBehavior_
	lpVtbl as IHTMLAppBehaviorVtbl ptr
end type

#define IHTMLAppBehavior_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLAppBehavior_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLAppBehavior_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLAppBehavior_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLAppBehavior_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLAppBehavior_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLAppBehavior_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLAppBehavior_put_applicationName(This, v) (This)->lpVtbl->put_applicationName(This, v)
#define IHTMLAppBehavior_get_applicationName(This, p) (This)->lpVtbl->get_applicationName(This, p)
#define IHTMLAppBehavior_put_version(This, v) (This)->lpVtbl->put_version(This, v)
#define IHTMLAppBehavior_get_version(This, p) (This)->lpVtbl->get_version(This, p)
#define IHTMLAppBehavior_put_icon(This, v) (This)->lpVtbl->put_icon(This, v)
#define IHTMLAppBehavior_get_icon(This, p) (This)->lpVtbl->get_icon(This, p)
#define IHTMLAppBehavior_put_singleInstance(This, v) (This)->lpVtbl->put_singleInstance(This, v)
#define IHTMLAppBehavior_get_singleInstance(This, p) (This)->lpVtbl->get_singleInstance(This, p)
#define IHTMLAppBehavior_put_minimizeButton(This, v) (This)->lpVtbl->put_minimizeButton(This, v)
#define IHTMLAppBehavior_get_minimizeButton(This, p) (This)->lpVtbl->get_minimizeButton(This, p)
#define IHTMLAppBehavior_put_maximizeButton(This, v) (This)->lpVtbl->put_maximizeButton(This, v)
#define IHTMLAppBehavior_get_maximizeButton(This, p) (This)->lpVtbl->get_maximizeButton(This, p)
#define IHTMLAppBehavior_put_border(This, v) (This)->lpVtbl->put_border(This, v)
#define IHTMLAppBehavior_get_border(This, p) (This)->lpVtbl->get_border(This, p)
#define IHTMLAppBehavior_put_borderStyle(This, v) (This)->lpVtbl->put_borderStyle(This, v)
#define IHTMLAppBehavior_get_borderStyle(This, p) (This)->lpVtbl->get_borderStyle(This, p)
#define IHTMLAppBehavior_put_sysMenu(This, v) (This)->lpVtbl->put_sysMenu(This, v)
#define IHTMLAppBehavior_get_sysMenu(This, p) (This)->lpVtbl->get_sysMenu(This, p)
#define IHTMLAppBehavior_put_caption(This, v) (This)->lpVtbl->put_caption(This, v)
#define IHTMLAppBehavior_get_caption(This, p) (This)->lpVtbl->get_caption(This, p)
#define IHTMLAppBehavior_put_windowState(This, v) (This)->lpVtbl->put_windowState(This, v)
#define IHTMLAppBehavior_get_windowState(This, p) (This)->lpVtbl->get_windowState(This, p)
#define IHTMLAppBehavior_put_showInTaskBar(This, v) (This)->lpVtbl->put_showInTaskBar(This, v)
#define IHTMLAppBehavior_get_showInTaskBar(This, p) (This)->lpVtbl->get_showInTaskBar(This, p)
#define IHTMLAppBehavior_get_commandLine(This, p) (This)->lpVtbl->get_commandLine(This, p)

declare function IHTMLAppBehavior_put_applicationName_Proxy(byval This as IHTMLAppBehavior ptr, byval v as BSTR) as HRESULT
declare sub IHTMLAppBehavior_put_applicationName_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLAppBehavior_get_applicationName_Proxy(byval This as IHTMLAppBehavior ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLAppBehavior_get_applicationName_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLAppBehavior_put_version_Proxy(byval This as IHTMLAppBehavior ptr, byval v as BSTR) as HRESULT
declare sub IHTMLAppBehavior_put_version_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLAppBehavior_get_version_Proxy(byval This as IHTMLAppBehavior ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLAppBehavior_get_version_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLAppBehavior_put_icon_Proxy(byval This as IHTMLAppBehavior ptr, byval v as BSTR) as HRESULT
declare sub IHTMLAppBehavior_put_icon_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLAppBehavior_get_icon_Proxy(byval This as IHTMLAppBehavior ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLAppBehavior_get_icon_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLAppBehavior_put_singleInstance_Proxy(byval This as IHTMLAppBehavior ptr, byval v as BSTR) as HRESULT
declare sub IHTMLAppBehavior_put_singleInstance_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLAppBehavior_get_singleInstance_Proxy(byval This as IHTMLAppBehavior ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLAppBehavior_get_singleInstance_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLAppBehavior_put_minimizeButton_Proxy(byval This as IHTMLAppBehavior ptr, byval v as BSTR) as HRESULT
declare sub IHTMLAppBehavior_put_minimizeButton_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLAppBehavior_get_minimizeButton_Proxy(byval This as IHTMLAppBehavior ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLAppBehavior_get_minimizeButton_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLAppBehavior_put_maximizeButton_Proxy(byval This as IHTMLAppBehavior ptr, byval v as BSTR) as HRESULT
declare sub IHTMLAppBehavior_put_maximizeButton_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLAppBehavior_get_maximizeButton_Proxy(byval This as IHTMLAppBehavior ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLAppBehavior_get_maximizeButton_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLAppBehavior_put_border_Proxy(byval This as IHTMLAppBehavior ptr, byval v as BSTR) as HRESULT
declare sub IHTMLAppBehavior_put_border_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLAppBehavior_get_border_Proxy(byval This as IHTMLAppBehavior ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLAppBehavior_get_border_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLAppBehavior_put_borderStyle_Proxy(byval This as IHTMLAppBehavior ptr, byval v as BSTR) as HRESULT
declare sub IHTMLAppBehavior_put_borderStyle_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLAppBehavior_get_borderStyle_Proxy(byval This as IHTMLAppBehavior ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLAppBehavior_get_borderStyle_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLAppBehavior_put_sysMenu_Proxy(byval This as IHTMLAppBehavior ptr, byval v as BSTR) as HRESULT
declare sub IHTMLAppBehavior_put_sysMenu_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLAppBehavior_get_sysMenu_Proxy(byval This as IHTMLAppBehavior ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLAppBehavior_get_sysMenu_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLAppBehavior_put_caption_Proxy(byval This as IHTMLAppBehavior ptr, byval v as BSTR) as HRESULT
declare sub IHTMLAppBehavior_put_caption_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLAppBehavior_get_caption_Proxy(byval This as IHTMLAppBehavior ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLAppBehavior_get_caption_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLAppBehavior_put_windowState_Proxy(byval This as IHTMLAppBehavior ptr, byval v as BSTR) as HRESULT
declare sub IHTMLAppBehavior_put_windowState_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLAppBehavior_get_windowState_Proxy(byval This as IHTMLAppBehavior ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLAppBehavior_get_windowState_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLAppBehavior_put_showInTaskBar_Proxy(byval This as IHTMLAppBehavior ptr, byval v as BSTR) as HRESULT
declare sub IHTMLAppBehavior_put_showInTaskBar_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLAppBehavior_get_showInTaskBar_Proxy(byval This as IHTMLAppBehavior ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLAppBehavior_get_showInTaskBar_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLAppBehavior_get_commandLine_Proxy(byval This as IHTMLAppBehavior ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLAppBehavior_get_commandLine_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLAppBehavior2_INTERFACE_DEFINED__
extern IID_IHTMLAppBehavior2 as const IID
type IHTMLAppBehavior2 as IHTMLAppBehavior2_

type IHTMLAppBehavior2Vtbl
	QueryInterface as function(byval This as IHTMLAppBehavior2 ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLAppBehavior2 ptr) as ULONG
	Release as function(byval This as IHTMLAppBehavior2 ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLAppBehavior2 ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLAppBehavior2 ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLAppBehavior2 ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLAppBehavior2 ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	put_contextMenu as function(byval This as IHTMLAppBehavior2 ptr, byval v as BSTR) as HRESULT
	get_contextMenu as function(byval This as IHTMLAppBehavior2 ptr, byval p as BSTR ptr) as HRESULT
	put_innerBorder as function(byval This as IHTMLAppBehavior2 ptr, byval v as BSTR) as HRESULT
	get_innerBorder as function(byval This as IHTMLAppBehavior2 ptr, byval p as BSTR ptr) as HRESULT
	put_scroll as function(byval This as IHTMLAppBehavior2 ptr, byval v as BSTR) as HRESULT
	get_scroll as function(byval This as IHTMLAppBehavior2 ptr, byval p as BSTR ptr) as HRESULT
	put_scrollFlat as function(byval This as IHTMLAppBehavior2 ptr, byval v as BSTR) as HRESULT
	get_scrollFlat as function(byval This as IHTMLAppBehavior2 ptr, byval p as BSTR ptr) as HRESULT
	put_selection as function(byval This as IHTMLAppBehavior2 ptr, byval v as BSTR) as HRESULT
	get_selection as function(byval This as IHTMLAppBehavior2 ptr, byval p as BSTR ptr) as HRESULT
end type

type IHTMLAppBehavior2_
	lpVtbl as IHTMLAppBehavior2Vtbl ptr
end type

#define IHTMLAppBehavior2_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLAppBehavior2_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLAppBehavior2_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLAppBehavior2_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLAppBehavior2_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLAppBehavior2_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLAppBehavior2_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLAppBehavior2_put_contextMenu(This, v) (This)->lpVtbl->put_contextMenu(This, v)
#define IHTMLAppBehavior2_get_contextMenu(This, p) (This)->lpVtbl->get_contextMenu(This, p)
#define IHTMLAppBehavior2_put_innerBorder(This, v) (This)->lpVtbl->put_innerBorder(This, v)
#define IHTMLAppBehavior2_get_innerBorder(This, p) (This)->lpVtbl->get_innerBorder(This, p)
#define IHTMLAppBehavior2_put_scroll(This, v) (This)->lpVtbl->put_scroll(This, v)
#define IHTMLAppBehavior2_get_scroll(This, p) (This)->lpVtbl->get_scroll(This, p)
#define IHTMLAppBehavior2_put_scrollFlat(This, v) (This)->lpVtbl->put_scrollFlat(This, v)
#define IHTMLAppBehavior2_get_scrollFlat(This, p) (This)->lpVtbl->get_scrollFlat(This, p)
#define IHTMLAppBehavior2_put_selection(This, v) (This)->lpVtbl->put_selection(This, v)
#define IHTMLAppBehavior2_get_selection(This, p) (This)->lpVtbl->get_selection(This, p)

declare function IHTMLAppBehavior2_put_contextMenu_Proxy(byval This as IHTMLAppBehavior2 ptr, byval v as BSTR) as HRESULT
declare sub IHTMLAppBehavior2_put_contextMenu_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLAppBehavior2_get_contextMenu_Proxy(byval This as IHTMLAppBehavior2 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLAppBehavior2_get_contextMenu_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLAppBehavior2_put_innerBorder_Proxy(byval This as IHTMLAppBehavior2 ptr, byval v as BSTR) as HRESULT
declare sub IHTMLAppBehavior2_put_innerBorder_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLAppBehavior2_get_innerBorder_Proxy(byval This as IHTMLAppBehavior2 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLAppBehavior2_get_innerBorder_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLAppBehavior2_put_scroll_Proxy(byval This as IHTMLAppBehavior2 ptr, byval v as BSTR) as HRESULT
declare sub IHTMLAppBehavior2_put_scroll_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLAppBehavior2_get_scroll_Proxy(byval This as IHTMLAppBehavior2 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLAppBehavior2_get_scroll_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLAppBehavior2_put_scrollFlat_Proxy(byval This as IHTMLAppBehavior2 ptr, byval v as BSTR) as HRESULT
declare sub IHTMLAppBehavior2_put_scrollFlat_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLAppBehavior2_get_scrollFlat_Proxy(byval This as IHTMLAppBehavior2 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLAppBehavior2_get_scrollFlat_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLAppBehavior2_put_selection_Proxy(byval This as IHTMLAppBehavior2 ptr, byval v as BSTR) as HRESULT
declare sub IHTMLAppBehavior2_put_selection_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLAppBehavior2_get_selection_Proxy(byval This as IHTMLAppBehavior2 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLAppBehavior2_get_selection_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHTMLAppBehavior3_INTERFACE_DEFINED__
extern IID_IHTMLAppBehavior3 as const IID
type IHTMLAppBehavior3 as IHTMLAppBehavior3_

type IHTMLAppBehavior3Vtbl
	QueryInterface as function(byval This as IHTMLAppBehavior3 ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHTMLAppBehavior3 ptr) as ULONG
	Release as function(byval This as IHTMLAppBehavior3 ptr) as ULONG
	GetTypeInfoCount as function(byval This as IHTMLAppBehavior3 ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as IHTMLAppBehavior3 ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as IHTMLAppBehavior3 ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as IHTMLAppBehavior3 ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
	put_navigable as function(byval This as IHTMLAppBehavior3 ptr, byval v as BSTR) as HRESULT
	get_navigable as function(byval This as IHTMLAppBehavior3 ptr, byval p as BSTR ptr) as HRESULT
end type

type IHTMLAppBehavior3_
	lpVtbl as IHTMLAppBehavior3Vtbl ptr
end type

#define IHTMLAppBehavior3_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHTMLAppBehavior3_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHTMLAppBehavior3_Release(This) (This)->lpVtbl->Release(This)
#define IHTMLAppBehavior3_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define IHTMLAppBehavior3_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define IHTMLAppBehavior3_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define IHTMLAppBehavior3_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
#define IHTMLAppBehavior3_put_navigable(This, v) (This)->lpVtbl->put_navigable(This, v)
#define IHTMLAppBehavior3_get_navigable(This, p) (This)->lpVtbl->get_navigable(This, p)

declare function IHTMLAppBehavior3_put_navigable_Proxy(byval This as IHTMLAppBehavior3 ptr, byval v as BSTR) as HRESULT
declare sub IHTMLAppBehavior3_put_navigable_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IHTMLAppBehavior3_get_navigable_Proxy(byval This as IHTMLAppBehavior3 ptr, byval p as BSTR ptr) as HRESULT
declare sub IHTMLAppBehavior3_get_navigable_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __DispHTMLAppBehavior_DISPINTERFACE_DEFINED__
extern DIID_DispHTMLAppBehavior as const IID
type DispHTMLAppBehavior as DispHTMLAppBehavior_

type DispHTMLAppBehaviorVtbl
	QueryInterface as function(byval This as DispHTMLAppBehavior ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as DispHTMLAppBehavior ptr) as ULONG
	Release as function(byval This as DispHTMLAppBehavior ptr) as ULONG
	GetTypeInfoCount as function(byval This as DispHTMLAppBehavior ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as DispHTMLAppBehavior ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as DispHTMLAppBehavior ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as DispHTMLAppBehavior ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type DispHTMLAppBehavior_
	lpVtbl as DispHTMLAppBehaviorVtbl ptr
end type

#define DispHTMLAppBehavior_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define DispHTMLAppBehavior_AddRef(This) (This)->lpVtbl->AddRef(This)
#define DispHTMLAppBehavior_Release(This) (This)->lpVtbl->Release(This)
#define DispHTMLAppBehavior_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define DispHTMLAppBehavior_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define DispHTMLAppBehavior_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define DispHTMLAppBehavior_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)

extern CLSID_HTMLAppBehavior as const CLSID
extern CLSID_OldHTMLDocument as const CLSID
extern CLSID_OldHTMLFormElement as const CLSID
#define __DispIHTMLInputButtonElement_DISPINTERFACE_DEFINED__
extern DIID_DispIHTMLInputButtonElement as const IID
type DispIHTMLInputButtonElement as DispIHTMLInputButtonElement_

type DispIHTMLInputButtonElementVtbl
	QueryInterface as function(byval This as DispIHTMLInputButtonElement ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as DispIHTMLInputButtonElement ptr) as ULONG
	Release as function(byval This as DispIHTMLInputButtonElement ptr) as ULONG
	GetTypeInfoCount as function(byval This as DispIHTMLInputButtonElement ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as DispIHTMLInputButtonElement ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as DispIHTMLInputButtonElement ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as DispIHTMLInputButtonElement ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type DispIHTMLInputButtonElement_
	lpVtbl as DispIHTMLInputButtonElementVtbl ptr
end type

#define DispIHTMLInputButtonElement_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define DispIHTMLInputButtonElement_AddRef(This) (This)->lpVtbl->AddRef(This)
#define DispIHTMLInputButtonElement_Release(This) (This)->lpVtbl->Release(This)
#define DispIHTMLInputButtonElement_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define DispIHTMLInputButtonElement_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define DispIHTMLInputButtonElement_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define DispIHTMLInputButtonElement_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
extern CLSID_HTMLInputButtonElement as const CLSID
#define __DispIHTMLInputTextElement_DISPINTERFACE_DEFINED__
extern DIID_DispIHTMLInputTextElement as const IID
type DispIHTMLInputTextElement as DispIHTMLInputTextElement_

type DispIHTMLInputTextElementVtbl
	QueryInterface as function(byval This as DispIHTMLInputTextElement ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as DispIHTMLInputTextElement ptr) as ULONG
	Release as function(byval This as DispIHTMLInputTextElement ptr) as ULONG
	GetTypeInfoCount as function(byval This as DispIHTMLInputTextElement ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as DispIHTMLInputTextElement ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as DispIHTMLInputTextElement ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as DispIHTMLInputTextElement ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type DispIHTMLInputTextElement_
	lpVtbl as DispIHTMLInputTextElementVtbl ptr
end type

#define DispIHTMLInputTextElement_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define DispIHTMLInputTextElement_AddRef(This) (This)->lpVtbl->AddRef(This)
#define DispIHTMLInputTextElement_Release(This) (This)->lpVtbl->Release(This)
#define DispIHTMLInputTextElement_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define DispIHTMLInputTextElement_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define DispIHTMLInputTextElement_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define DispIHTMLInputTextElement_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
extern CLSID_HTMLInputTextElement as const CLSID
#define __DispIHTMLInputFileElement_DISPINTERFACE_DEFINED__
extern DIID_DispIHTMLInputFileElement as const IID
type DispIHTMLInputFileElement as DispIHTMLInputFileElement_

type DispIHTMLInputFileElementVtbl
	QueryInterface as function(byval This as DispIHTMLInputFileElement ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as DispIHTMLInputFileElement ptr) as ULONG
	Release as function(byval This as DispIHTMLInputFileElement ptr) as ULONG
	GetTypeInfoCount as function(byval This as DispIHTMLInputFileElement ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as DispIHTMLInputFileElement ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as DispIHTMLInputFileElement ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as DispIHTMLInputFileElement ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type DispIHTMLInputFileElement_
	lpVtbl as DispIHTMLInputFileElementVtbl ptr
end type

#define DispIHTMLInputFileElement_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define DispIHTMLInputFileElement_AddRef(This) (This)->lpVtbl->AddRef(This)
#define DispIHTMLInputFileElement_Release(This) (This)->lpVtbl->Release(This)
#define DispIHTMLInputFileElement_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define DispIHTMLInputFileElement_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define DispIHTMLInputFileElement_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define DispIHTMLInputFileElement_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
extern CLSID_HTMLInputFileElement as const CLSID
#define __DispIHTMLOptionButtonElement_DISPINTERFACE_DEFINED__
extern DIID_DispIHTMLOptionButtonElement as const IID
type DispIHTMLOptionButtonElement as DispIHTMLOptionButtonElement_

type DispIHTMLOptionButtonElementVtbl
	QueryInterface as function(byval This as DispIHTMLOptionButtonElement ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as DispIHTMLOptionButtonElement ptr) as ULONG
	Release as function(byval This as DispIHTMLOptionButtonElement ptr) as ULONG
	GetTypeInfoCount as function(byval This as DispIHTMLOptionButtonElement ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as DispIHTMLOptionButtonElement ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as DispIHTMLOptionButtonElement ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as DispIHTMLOptionButtonElement ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type DispIHTMLOptionButtonElement_
	lpVtbl as DispIHTMLOptionButtonElementVtbl ptr
end type

#define DispIHTMLOptionButtonElement_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define DispIHTMLOptionButtonElement_AddRef(This) (This)->lpVtbl->AddRef(This)
#define DispIHTMLOptionButtonElement_Release(This) (This)->lpVtbl->Release(This)
#define DispIHTMLOptionButtonElement_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define DispIHTMLOptionButtonElement_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define DispIHTMLOptionButtonElement_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define DispIHTMLOptionButtonElement_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
extern CLSID_HTMLOptionButtonElement as const CLSID
#define __DispIHTMLInputImage_DISPINTERFACE_DEFINED__
extern DIID_DispIHTMLInputImage as const IID
type DispIHTMLInputImage as DispIHTMLInputImage_

type DispIHTMLInputImageVtbl
	QueryInterface as function(byval This as DispIHTMLInputImage ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as DispIHTMLInputImage ptr) as ULONG
	Release as function(byval This as DispIHTMLInputImage ptr) as ULONG
	GetTypeInfoCount as function(byval This as DispIHTMLInputImage ptr, byval pctinfo as UINT ptr) as HRESULT
	GetTypeInfo as function(byval This as DispIHTMLInputImage ptr, byval iTInfo as UINT, byval lcid as LCID, byval ppTInfo as ITypeInfo ptr ptr) as HRESULT
	GetIDsOfNames as function(byval This as DispIHTMLInputImage ptr, byval riid as const IID const ptr, byval rgszNames as LPOLESTR ptr, byval cNames as UINT, byval lcid as LCID, byval rgDispId as DISPID ptr) as HRESULT
	Invoke as function(byval This as DispIHTMLInputImage ptr, byval dispIdMember as DISPID, byval riid as const IID const ptr, byval lcid as LCID, byval wFlags as WORD, byval pDispParams as DISPPARAMS ptr, byval pVarResult as VARIANT ptr, byval pExcepInfo as EXCEPINFO ptr, byval puArgErr as UINT ptr) as HRESULT
end type

type DispIHTMLInputImage_
	lpVtbl as DispIHTMLInputImageVtbl ptr
end type

#define DispIHTMLInputImage_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define DispIHTMLInputImage_AddRef(This) (This)->lpVtbl->AddRef(This)
#define DispIHTMLInputImage_Release(This) (This)->lpVtbl->Release(This)
#define DispIHTMLInputImage_GetTypeInfoCount(This, pctinfo) (This)->lpVtbl->GetTypeInfoCount(This, pctinfo)
#define DispIHTMLInputImage_GetTypeInfo(This, iTInfo, lcid, ppTInfo) (This)->lpVtbl->GetTypeInfo(This, iTInfo, lcid, ppTInfo)
#define DispIHTMLInputImage_GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId) (This)->lpVtbl->GetIDsOfNames(This, riid, rgszNames, cNames, lcid, rgDispId)
#define DispIHTMLInputImage_Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr) (This)->lpVtbl->Invoke(This, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)
extern CLSID_HTMLInputImage as const CLSID
#define __IElementNamespace_INTERFACE_DEFINED__
extern IID_IElementNamespace as const IID
type IElementNamespace as IElementNamespace_

type IElementNamespaceVtbl
	QueryInterface as function(byval This as IElementNamespace ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IElementNamespace ptr) as ULONG
	Release as function(byval This as IElementNamespace ptr) as ULONG
	AddTag as function(byval This as IElementNamespace ptr, byval bstrTagName as BSTR, byval lFlags as LONG) as HRESULT
end type

type IElementNamespace_
	lpVtbl as IElementNamespaceVtbl ptr
end type

#define IElementNamespace_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IElementNamespace_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IElementNamespace_Release(This) (This)->lpVtbl->Release(This)
#define IElementNamespace_AddTag(This, bstrTagName, lFlags) (This)->lpVtbl->AddTag(This, bstrTagName, lFlags)
declare function IElementNamespace_AddTag_Proxy(byval This as IElementNamespace ptr, byval bstrTagName as BSTR, byval lFlags as LONG) as HRESULT
declare sub IElementNamespace_AddTag_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IElementNamespaceTable_INTERFACE_DEFINED__
extern IID_IElementNamespaceTable as const IID
type IElementNamespaceTable as IElementNamespaceTable_

type IElementNamespaceTableVtbl
	QueryInterface as function(byval This as IElementNamespaceTable ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IElementNamespaceTable ptr) as ULONG
	Release as function(byval This as IElementNamespaceTable ptr) as ULONG
	AddNamespace as function(byval This as IElementNamespaceTable ptr, byval bstrNamespace as BSTR, byval bstrUrn as BSTR, byval lFlags as LONG, byval pvarFactory as VARIANT ptr) as HRESULT
end type

type IElementNamespaceTable_
	lpVtbl as IElementNamespaceTableVtbl ptr
end type

#define IElementNamespaceTable_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IElementNamespaceTable_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IElementNamespaceTable_Release(This) (This)->lpVtbl->Release(This)
#define IElementNamespaceTable_AddNamespace(This, bstrNamespace, bstrUrn, lFlags, pvarFactory) (This)->lpVtbl->AddNamespace(This, bstrNamespace, bstrUrn, lFlags, pvarFactory)
declare function IElementNamespaceTable_AddNamespace_Proxy(byval This as IElementNamespaceTable ptr, byval bstrNamespace as BSTR, byval bstrUrn as BSTR, byval lFlags as LONG, byval pvarFactory as VARIANT ptr) as HRESULT
declare sub IElementNamespaceTable_AddNamespace_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IElementNamespaceFactory_INTERFACE_DEFINED__
extern IID_IElementNamespaceFactory as const IID
type IElementNamespaceFactory as IElementNamespaceFactory_

type IElementNamespaceFactoryVtbl
	QueryInterface as function(byval This as IElementNamespaceFactory ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IElementNamespaceFactory ptr) as ULONG
	Release as function(byval This as IElementNamespaceFactory ptr) as ULONG
	Create as function(byval This as IElementNamespaceFactory ptr, byval pNamespace as IElementNamespace ptr) as HRESULT
end type

type IElementNamespaceFactory_
	lpVtbl as IElementNamespaceFactoryVtbl ptr
end type

#define IElementNamespaceFactory_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IElementNamespaceFactory_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IElementNamespaceFactory_Release(This) (This)->lpVtbl->Release(This)
#define IElementNamespaceFactory_Create(This, pNamespace) (This)->lpVtbl->Create(This, pNamespace)
declare function IElementNamespaceFactory_Create_Proxy(byval This as IElementNamespaceFactory ptr, byval pNamespace as IElementNamespace ptr) as HRESULT
declare sub IElementNamespaceFactory_Create_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IElementNamespaceFactory2_INTERFACE_DEFINED__
extern IID_IElementNamespaceFactory2 as const IID
type IElementNamespaceFactory2 as IElementNamespaceFactory2_

type IElementNamespaceFactory2Vtbl
	QueryInterface as function(byval This as IElementNamespaceFactory2 ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IElementNamespaceFactory2 ptr) as ULONG
	Release as function(byval This as IElementNamespaceFactory2 ptr) as ULONG
	Create as function(byval This as IElementNamespaceFactory2 ptr, byval pNamespace as IElementNamespace ptr) as HRESULT
	CreateWithImplementation as function(byval This as IElementNamespaceFactory2 ptr, byval pNamespace as IElementNamespace ptr, byval bstrImplementation as BSTR) as HRESULT
end type

type IElementNamespaceFactory2_
	lpVtbl as IElementNamespaceFactory2Vtbl ptr
end type

#define IElementNamespaceFactory2_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IElementNamespaceFactory2_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IElementNamespaceFactory2_Release(This) (This)->lpVtbl->Release(This)
#define IElementNamespaceFactory2_Create(This, pNamespace) (This)->lpVtbl->Create(This, pNamespace)
#define IElementNamespaceFactory2_CreateWithImplementation(This, pNamespace, bstrImplementation) (This)->lpVtbl->CreateWithImplementation(This, pNamespace, bstrImplementation)
declare function IElementNamespaceFactory2_CreateWithImplementation_Proxy(byval This as IElementNamespaceFactory2 ptr, byval pNamespace as IElementNamespace ptr, byval bstrImplementation as BSTR) as HRESULT
declare sub IElementNamespaceFactory2_CreateWithImplementation_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IElementNamespaceFactoryCallback_INTERFACE_DEFINED__
extern IID_IElementNamespaceFactoryCallback as const IID
type IElementNamespaceFactoryCallback as IElementNamespaceFactoryCallback_

type IElementNamespaceFactoryCallbackVtbl
	QueryInterface as function(byval This as IElementNamespaceFactoryCallback ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IElementNamespaceFactoryCallback ptr) as ULONG
	Release as function(byval This as IElementNamespaceFactoryCallback ptr) as ULONG
	Resolve as function(byval This as IElementNamespaceFactoryCallback ptr, byval bstrNamespace as BSTR, byval bstrTagName as BSTR, byval bstrAttrs as BSTR, byval pNamespace as IElementNamespace ptr) as HRESULT
end type

type IElementNamespaceFactoryCallback_
	lpVtbl as IElementNamespaceFactoryCallbackVtbl ptr
end type

#define IElementNamespaceFactoryCallback_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IElementNamespaceFactoryCallback_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IElementNamespaceFactoryCallback_Release(This) (This)->lpVtbl->Release(This)
#define IElementNamespaceFactoryCallback_Resolve(This, bstrNamespace, bstrTagName, bstrAttrs, pNamespace) (This)->lpVtbl->Resolve(This, bstrNamespace, bstrTagName, bstrAttrs, pNamespace)
declare function IElementNamespaceFactoryCallback_Resolve_Proxy(byval This as IElementNamespaceFactoryCallback ptr, byval bstrNamespace as BSTR, byval bstrTagName as BSTR, byval bstrAttrs as BSTR, byval pNamespace as IElementNamespace ptr) as HRESULT
declare sub IElementNamespaceFactoryCallback_Resolve_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IElementBehaviorSiteOM2_INTERFACE_DEFINED__
extern IID_IElementBehaviorSiteOM2 as const IID
type IElementBehaviorSiteOM2 as IElementBehaviorSiteOM2_

type IElementBehaviorSiteOM2Vtbl
	QueryInterface as function(byval This as IElementBehaviorSiteOM2 ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IElementBehaviorSiteOM2 ptr) as ULONG
	Release as function(byval This as IElementBehaviorSiteOM2 ptr) as ULONG
	RegisterEvent as function(byval This as IElementBehaviorSiteOM2 ptr, byval pchEvent as LPOLESTR, byval lFlags as LONG, byval plCookie as LONG ptr) as HRESULT
	GetEventCookie as function(byval This as IElementBehaviorSiteOM2 ptr, byval pchEvent as LPOLESTR, byval plCookie as LONG ptr) as HRESULT
	FireEvent as function(byval This as IElementBehaviorSiteOM2 ptr, byval lCookie as LONG, byval pEventObject as IHTMLEventObj ptr) as HRESULT
	CreateEventObject as function(byval This as IElementBehaviorSiteOM2 ptr, byval ppEventObject as IHTMLEventObj ptr ptr) as HRESULT
	RegisterName as function(byval This as IElementBehaviorSiteOM2 ptr, byval pchName as LPOLESTR) as HRESULT
	RegisterUrn as function(byval This as IElementBehaviorSiteOM2 ptr, byval pchUrn as LPOLESTR) as HRESULT
	GetDefaults as function(byval This as IElementBehaviorSiteOM2 ptr, byval ppDefaults as IHTMLElementDefaults ptr ptr) as HRESULT
end type

type IElementBehaviorSiteOM2_
	lpVtbl as IElementBehaviorSiteOM2Vtbl ptr
end type

#define IElementBehaviorSiteOM2_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IElementBehaviorSiteOM2_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IElementBehaviorSiteOM2_Release(This) (This)->lpVtbl->Release(This)
#define IElementBehaviorSiteOM2_RegisterEvent(This, pchEvent, lFlags, plCookie) (This)->lpVtbl->RegisterEvent(This, pchEvent, lFlags, plCookie)
#define IElementBehaviorSiteOM2_GetEventCookie(This, pchEvent, plCookie) (This)->lpVtbl->GetEventCookie(This, pchEvent, plCookie)
#define IElementBehaviorSiteOM2_FireEvent(This, lCookie, pEventObject) (This)->lpVtbl->FireEvent(This, lCookie, pEventObject)
#define IElementBehaviorSiteOM2_CreateEventObject(This, ppEventObject) (This)->lpVtbl->CreateEventObject(This, ppEventObject)
#define IElementBehaviorSiteOM2_RegisterName(This, pchName) (This)->lpVtbl->RegisterName(This, pchName)
#define IElementBehaviorSiteOM2_RegisterUrn(This, pchUrn) (This)->lpVtbl->RegisterUrn(This, pchUrn)
#define IElementBehaviorSiteOM2_GetDefaults(This, ppDefaults) (This)->lpVtbl->GetDefaults(This, ppDefaults)
declare function IElementBehaviorSiteOM2_GetDefaults_Proxy(byval This as IElementBehaviorSiteOM2 ptr, byval ppDefaults as IHTMLElementDefaults ptr ptr) as HRESULT
declare sub IElementBehaviorSiteOM2_GetDefaults_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IElementBehaviorCategory_INTERFACE_DEFINED__
extern IID_IElementBehaviorCategory as const IID
type IElementBehaviorCategory as IElementBehaviorCategory_

type IElementBehaviorCategoryVtbl
	QueryInterface as function(byval This as IElementBehaviorCategory ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IElementBehaviorCategory ptr) as ULONG
	Release as function(byval This as IElementBehaviorCategory ptr) as ULONG
	GetCategory as function(byval This as IElementBehaviorCategory ptr, byval ppchCategory as LPOLESTR ptr) as HRESULT
end type

type IElementBehaviorCategory_
	lpVtbl as IElementBehaviorCategoryVtbl ptr
end type

#define IElementBehaviorCategory_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IElementBehaviorCategory_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IElementBehaviorCategory_Release(This) (This)->lpVtbl->Release(This)
#define IElementBehaviorCategory_GetCategory(This, ppchCategory) (This)->lpVtbl->GetCategory(This, ppchCategory)
declare function IElementBehaviorCategory_GetCategory_Proxy(byval This as IElementBehaviorCategory ptr, byval ppchCategory as LPOLESTR ptr) as HRESULT
declare sub IElementBehaviorCategory_GetCategory_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IElementBehaviorSiteCategory_INTERFACE_DEFINED__
extern IID_IElementBehaviorSiteCategory as const IID
type IElementBehaviorSiteCategory as IElementBehaviorSiteCategory_

type IElementBehaviorSiteCategoryVtbl
	QueryInterface as function(byval This as IElementBehaviorSiteCategory ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IElementBehaviorSiteCategory ptr) as ULONG
	Release as function(byval This as IElementBehaviorSiteCategory ptr) as ULONG
	GetRelatedBehaviors as function(byval This as IElementBehaviorSiteCategory ptr, byval lDirection as LONG, byval pchCategory as LPOLESTR, byval ppEnumerator as IEnumUnknown ptr ptr) as HRESULT
end type

type IElementBehaviorSiteCategory_
	lpVtbl as IElementBehaviorSiteCategoryVtbl ptr
end type

#define IElementBehaviorSiteCategory_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IElementBehaviorSiteCategory_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IElementBehaviorSiteCategory_Release(This) (This)->lpVtbl->Release(This)
#define IElementBehaviorSiteCategory_GetRelatedBehaviors(This, lDirection, pchCategory, ppEnumerator) (This)->lpVtbl->GetRelatedBehaviors(This, lDirection, pchCategory, ppEnumerator)
declare function IElementBehaviorSiteCategory_GetRelatedBehaviors_Proxy(byval This as IElementBehaviorSiteCategory ptr, byval lDirection as LONG, byval pchCategory as LPOLESTR, byval ppEnumerator as IEnumUnknown ptr ptr) as HRESULT
declare sub IElementBehaviorSiteCategory_GetRelatedBehaviors_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IElementBehaviorSubmit_INTERFACE_DEFINED__
extern IID_IElementBehaviorSubmit as const IID
type IElementBehaviorSubmit as IElementBehaviorSubmit_

type IElementBehaviorSubmitVtbl
	QueryInterface as function(byval This as IElementBehaviorSubmit ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IElementBehaviorSubmit ptr) as ULONG
	Release as function(byval This as IElementBehaviorSubmit ptr) as ULONG
	GetSubmitInfo as function(byval This as IElementBehaviorSubmit ptr, byval pSubmitData as IHTMLSubmitData ptr) as HRESULT
	Reset as function(byval This as IElementBehaviorSubmit ptr) as HRESULT
end type

type IElementBehaviorSubmit_
	lpVtbl as IElementBehaviorSubmitVtbl ptr
end type

#define IElementBehaviorSubmit_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IElementBehaviorSubmit_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IElementBehaviorSubmit_Release(This) (This)->lpVtbl->Release(This)
#define IElementBehaviorSubmit_GetSubmitInfo(This, pSubmitData) (This)->lpVtbl->GetSubmitInfo(This, pSubmitData)
#define IElementBehaviorSubmit_Reset(This) (This)->lpVtbl->Reset(This)

declare function IElementBehaviorSubmit_GetSubmitInfo_Proxy(byval This as IElementBehaviorSubmit ptr, byval pSubmitData as IHTMLSubmitData ptr) as HRESULT
declare sub IElementBehaviorSubmit_GetSubmitInfo_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IElementBehaviorSubmit_Reset_Proxy(byval This as IElementBehaviorSubmit ptr) as HRESULT
declare sub IElementBehaviorSubmit_Reset_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IElementBehaviorFocus_INTERFACE_DEFINED__
extern IID_IElementBehaviorFocus as const IID
type IElementBehaviorFocus as IElementBehaviorFocus_

type IElementBehaviorFocusVtbl
	QueryInterface as function(byval This as IElementBehaviorFocus ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IElementBehaviorFocus ptr) as ULONG
	Release as function(byval This as IElementBehaviorFocus ptr) as ULONG
	GetFocusRect as function(byval This as IElementBehaviorFocus ptr, byval pRect as RECT ptr) as HRESULT
end type

type IElementBehaviorFocus_
	lpVtbl as IElementBehaviorFocusVtbl ptr
end type

#define IElementBehaviorFocus_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IElementBehaviorFocus_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IElementBehaviorFocus_Release(This) (This)->lpVtbl->Release(This)
#define IElementBehaviorFocus_GetFocusRect(This, pRect) (This)->lpVtbl->GetFocusRect(This, pRect)
declare function IElementBehaviorFocus_GetFocusRect_Proxy(byval This as IElementBehaviorFocus ptr, byval pRect as RECT ptr) as HRESULT
declare sub IElementBehaviorFocus_GetFocusRect_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IElementBehaviorLayout_INTERFACE_DEFINED__
extern IID_IElementBehaviorLayout as const IID
type IElementBehaviorLayout as IElementBehaviorLayout_

type IElementBehaviorLayoutVtbl
	QueryInterface as function(byval This as IElementBehaviorLayout ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IElementBehaviorLayout ptr) as ULONG
	Release as function(byval This as IElementBehaviorLayout ptr) as ULONG
	GetSize as function(byval This as IElementBehaviorLayout ptr, byval dwFlags as LONG, byval sizeContent as SIZE, byval pptTranslateBy as POINT ptr, byval pptTopLeft as POINT ptr, byval psizeProposed as SIZE ptr) as HRESULT
	GetLayoutInfo as function(byval This as IElementBehaviorLayout ptr, byval plLayoutInfo as LONG ptr) as HRESULT
	GetPosition as function(byval This as IElementBehaviorLayout ptr, byval lFlags as LONG, byval pptTopLeft as POINT ptr) as HRESULT
	MapSize as function(byval This as IElementBehaviorLayout ptr, byval psizeIn as SIZE ptr, byval prcOut as RECT ptr) as HRESULT
end type

type IElementBehaviorLayout_
	lpVtbl as IElementBehaviorLayoutVtbl ptr
end type

#define IElementBehaviorLayout_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IElementBehaviorLayout_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IElementBehaviorLayout_Release(This) (This)->lpVtbl->Release(This)
#define IElementBehaviorLayout_GetSize(This, dwFlags, sizeContent, pptTranslateBy, pptTopLeft, psizeProposed) (This)->lpVtbl->GetSize(This, dwFlags, sizeContent, pptTranslateBy, pptTopLeft, psizeProposed)
#define IElementBehaviorLayout_GetLayoutInfo(This, plLayoutInfo) (This)->lpVtbl->GetLayoutInfo(This, plLayoutInfo)
#define IElementBehaviorLayout_GetPosition(This, lFlags, pptTopLeft) (This)->lpVtbl->GetPosition(This, lFlags, pptTopLeft)
#define IElementBehaviorLayout_MapSize(This, psizeIn, prcOut) (This)->lpVtbl->MapSize(This, psizeIn, prcOut)

declare function IElementBehaviorLayout_GetSize_Proxy(byval This as IElementBehaviorLayout ptr, byval dwFlags as LONG, byval sizeContent as SIZE, byval pptTranslateBy as POINT ptr, byval pptTopLeft as POINT ptr, byval psizeProposed as SIZE ptr) as HRESULT
declare sub IElementBehaviorLayout_GetSize_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IElementBehaviorLayout_GetLayoutInfo_Proxy(byval This as IElementBehaviorLayout ptr, byval plLayoutInfo as LONG ptr) as HRESULT
declare sub IElementBehaviorLayout_GetLayoutInfo_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IElementBehaviorLayout_GetPosition_Proxy(byval This as IElementBehaviorLayout ptr, byval lFlags as LONG, byval pptTopLeft as POINT ptr) as HRESULT
declare sub IElementBehaviorLayout_GetPosition_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IElementBehaviorLayout_MapSize_Proxy(byval This as IElementBehaviorLayout ptr, byval psizeIn as SIZE ptr, byval prcOut as RECT ptr) as HRESULT
declare sub IElementBehaviorLayout_MapSize_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IElementBehaviorLayout2_INTERFACE_DEFINED__
extern IID_IElementBehaviorLayout2 as const IID
type IElementBehaviorLayout2 as IElementBehaviorLayout2_

type IElementBehaviorLayout2Vtbl
	QueryInterface as function(byval This as IElementBehaviorLayout2 ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IElementBehaviorLayout2 ptr) as ULONG
	Release as function(byval This as IElementBehaviorLayout2 ptr) as ULONG
	GetTextDescent as function(byval This as IElementBehaviorLayout2 ptr, byval plDescent as LONG ptr) as HRESULT
end type

type IElementBehaviorLayout2_
	lpVtbl as IElementBehaviorLayout2Vtbl ptr
end type

#define IElementBehaviorLayout2_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IElementBehaviorLayout2_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IElementBehaviorLayout2_Release(This) (This)->lpVtbl->Release(This)
#define IElementBehaviorLayout2_GetTextDescent(This, plDescent) (This)->lpVtbl->GetTextDescent(This, plDescent)
declare function IElementBehaviorLayout2_GetTextDescent_Proxy(byval This as IElementBehaviorLayout2 ptr, byval plDescent as LONG ptr) as HRESULT
declare sub IElementBehaviorLayout2_GetTextDescent_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IElementBehaviorSiteLayout_INTERFACE_DEFINED__
extern IID_IElementBehaviorSiteLayout as const IID
type IElementBehaviorSiteLayout as IElementBehaviorSiteLayout_

type IElementBehaviorSiteLayoutVtbl
	QueryInterface as function(byval This as IElementBehaviorSiteLayout ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IElementBehaviorSiteLayout ptr) as ULONG
	Release as function(byval This as IElementBehaviorSiteLayout ptr) as ULONG
	InvalidateLayoutInfo as function(byval This as IElementBehaviorSiteLayout ptr) as HRESULT
	InvalidateSize as function(byval This as IElementBehaviorSiteLayout ptr) as HRESULT
	GetMediaResolution as function(byval This as IElementBehaviorSiteLayout ptr, byval psizeResolution as SIZE ptr) as HRESULT
end type

type IElementBehaviorSiteLayout_
	lpVtbl as IElementBehaviorSiteLayoutVtbl ptr
end type

#define IElementBehaviorSiteLayout_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IElementBehaviorSiteLayout_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IElementBehaviorSiteLayout_Release(This) (This)->lpVtbl->Release(This)
#define IElementBehaviorSiteLayout_InvalidateLayoutInfo(This) (This)->lpVtbl->InvalidateLayoutInfo(This)
#define IElementBehaviorSiteLayout_InvalidateSize(This) (This)->lpVtbl->InvalidateSize(This)
#define IElementBehaviorSiteLayout_GetMediaResolution(This, psizeResolution) (This)->lpVtbl->GetMediaResolution(This, psizeResolution)

declare function IElementBehaviorSiteLayout_InvalidateLayoutInfo_Proxy(byval This as IElementBehaviorSiteLayout ptr) as HRESULT
declare sub IElementBehaviorSiteLayout_InvalidateLayoutInfo_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IElementBehaviorSiteLayout_InvalidateSize_Proxy(byval This as IElementBehaviorSiteLayout ptr) as HRESULT
declare sub IElementBehaviorSiteLayout_InvalidateSize_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
declare function IElementBehaviorSiteLayout_GetMediaResolution_Proxy(byval This as IElementBehaviorSiteLayout ptr, byval psizeResolution as SIZE ptr) as HRESULT
declare sub IElementBehaviorSiteLayout_GetMediaResolution_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IElementBehaviorSiteLayout2_INTERFACE_DEFINED__
extern IID_IElementBehaviorSiteLayout2 as const IID
type IElementBehaviorSiteLayout2 as IElementBehaviorSiteLayout2_

type IElementBehaviorSiteLayout2Vtbl
	QueryInterface as function(byval This as IElementBehaviorSiteLayout2 ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IElementBehaviorSiteLayout2 ptr) as ULONG
	Release as function(byval This as IElementBehaviorSiteLayout2 ptr) as ULONG
	GetFontInfo as function(byval This as IElementBehaviorSiteLayout2 ptr, byval plf as LOGFONTW ptr) as HRESULT
end type

type IElementBehaviorSiteLayout2_
	lpVtbl as IElementBehaviorSiteLayout2Vtbl ptr
end type

#define IElementBehaviorSiteLayout2_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IElementBehaviorSiteLayout2_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IElementBehaviorSiteLayout2_Release(This) (This)->lpVtbl->Release(This)
#define IElementBehaviorSiteLayout2_GetFontInfo(This, plf) (This)->lpVtbl->GetFontInfo(This, plf)
declare function IElementBehaviorSiteLayout2_GetFontInfo_Proxy(byval This as IElementBehaviorSiteLayout2 ptr, byval plf as LOGFONTW ptr) as HRESULT
declare sub IElementBehaviorSiteLayout2_GetFontInfo_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)
#define __IHostBehaviorInit_INTERFACE_DEFINED__
extern IID_IHostBehaviorInit as const IID
type IHostBehaviorInit as IHostBehaviorInit_

type IHostBehaviorInitVtbl
	QueryInterface as function(byval This as IHostBehaviorInit ptr, byval riid as const IID const ptr, byval ppvObject as any ptr ptr) as HRESULT
	AddRef as function(byval This as IHostBehaviorInit ptr) as ULONG
	Release as function(byval This as IHostBehaviorInit ptr) as ULONG
	PopulateNamespaceTable as function(byval This as IHostBehaviorInit ptr) as HRESULT
end type

type IHostBehaviorInit_
	lpVtbl as IHostBehaviorInitVtbl ptr
end type

#define IHostBehaviorInit_QueryInterface(This, riid, ppvObject) (This)->lpVtbl->QueryInterface(This, riid, ppvObject)
#define IHostBehaviorInit_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IHostBehaviorInit_Release(This) (This)->lpVtbl->Release(This)
#define IHostBehaviorInit_PopulateNamespaceTable(This) (This)->lpVtbl->PopulateNamespaceTable(This)

declare function IHostBehaviorInit_PopulateNamespaceTable_Proxy(byval This as IHostBehaviorInit ptr) as HRESULT
declare sub IHostBehaviorInit_PopulateNamespaceTable_Stub(byval This as IRpcStubBuffer ptr, byval _pRpcChannelBuffer as IRpcChannelBuffer ptr, byval _pRpcMessage as PRPC_MESSAGE, byval _pdwStubPhase as DWORD ptr)

end extern

#include once "ole-common.bi"
